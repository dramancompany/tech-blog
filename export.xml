<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

	
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>Remember &#38; Company</title>
	<link>https://blog.dramancompany.com</link>
	<description>일하는 사람과 기회를 연결하여 성공으로! 프로페셔널 네트워크 서비스 &#039;리멤버&#039;를 만듭니다</description>
	<pubDate>Mon, 21 Oct 2024 07:42:56 +0000</pubDate>
	<language>ko-KR</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>https://blog.dramancompany.com</wp:base_site_url>
	<wp:base_blog_url>https://blog.dramancompany.com</wp:base_blog_url>

		<wp:author><wp:author_id>2</wp:author_id><wp:author_login><![CDATA[Jaden]]></wp:author_login><wp:author_email><![CDATA[jaden.oh@dramancompany.com]]></wp:author_email><wp:author_display_name><![CDATA[오 일승]]></wp:author_display_name><wp:author_first_name><![CDATA[일승]]></wp:author_first_name><wp:author_last_name><![CDATA[오]]></wp:author_last_name></wp:author>
	<wp:author><wp:author_id>7</wp:author_id><wp:author_login><![CDATA[jade]]></wp:author_login><wp:author_email><![CDATA[hd2@dramancompany.com]]></wp:author_email><wp:author_display_name><![CDATA[jade]]></wp:author_display_name><wp:author_first_name><![CDATA[]]></wp:author_first_name><wp:author_last_name><![CDATA[]]></wp:author_last_name></wp:author>
	<wp:author><wp:author_id>8</wp:author_id><wp:author_login><![CDATA[sid]]></wp:author_login><wp:author_email><![CDATA[sj.lim@dramancompany.com]]></wp:author_email><wp:author_display_name><![CDATA[Sejoon Lim]]></wp:author_display_name><wp:author_first_name><![CDATA[Sejoon]]></wp:author_first_name><wp:author_last_name><![CDATA[Lim]]></wp:author_last_name></wp:author>
	<wp:author><wp:author_id>5</wp:author_id><wp:author_login><![CDATA[rfrost]]></wp:author_login><wp:author_email><![CDATA[min@dramancompany.com]]></wp:author_email><wp:author_display_name><![CDATA[rfrost]]></wp:author_display_name><wp:author_first_name><![CDATA[Seungmin]]></wp:author_first_name><wp:author_last_name><![CDATA[Lee]]></wp:author_last_name></wp:author>
	<wp:author><wp:author_id>4</wp:author_id><wp:author_login><![CDATA[tom]]></wp:author_login><wp:author_email><![CDATA[tom.kim@dramancompany.com]]></wp:author_email><wp:author_display_name><![CDATA[Tom Kim]]></wp:author_display_name><wp:author_first_name><![CDATA[Tom]]></wp:author_first_name><wp:author_last_name><![CDATA[Kim]]></wp:author_last_name></wp:author>
	<wp:author><wp:author_id>9</wp:author_id><wp:author_login><![CDATA[devyrlee]]></wp:author_login><wp:author_email><![CDATA[devyrlee@dramancompany.com]]></wp:author_email><wp:author_display_name><![CDATA[YoungRae Lee]]></wp:author_display_name><wp:author_first_name><![CDATA[YoungRae]]></wp:author_first_name><wp:author_last_name><![CDATA[Lee]]></wp:author_last_name></wp:author>
	<wp:author><wp:author_id>13</wp:author_id><wp:author_login><![CDATA[jo.kim]]></wp:author_login><wp:author_email><![CDATA[jo.kim@dramancompany.com]]></wp:author_email><wp:author_display_name><![CDATA[김 종옥]]></wp:author_display_name><wp:author_first_name><![CDATA[종옥]]></wp:author_first_name><wp:author_last_name><![CDATA[김]]></wp:author_last_name></wp:author>
	<wp:author><wp:author_id>20</wp:author_id><wp:author_login><![CDATA[sumin]]></wp:author_login><wp:author_email><![CDATA[sm.kwak@dramancompany.com]]></wp:author_email><wp:author_display_name><![CDATA[sumin]]></wp:author_display_name><wp:author_first_name><![CDATA[수민]]></wp:author_first_name><wp:author_last_name><![CDATA[곽]]></wp:author_last_name></wp:author>
	<wp:author><wp:author_id>16</wp:author_id><wp:author_login><![CDATA[sm.im]]></wp:author_login><wp:author_email><![CDATA[sm.im@dramancompany.com]]></wp:author_email><wp:author_display_name><![CDATA[임 성민]]></wp:author_display_name><wp:author_first_name><![CDATA[성민]]></wp:author_first_name><wp:author_last_name><![CDATA[임]]></wp:author_last_name></wp:author>
	<wp:author><wp:author_id>21</wp:author_id><wp:author_login><![CDATA[qkraudghgh]]></wp:author_login><wp:author_email><![CDATA[myoungho.pak@dramancompany.com]]></wp:author_email><wp:author_display_name><![CDATA[박 명호]]></wp:author_display_name><wp:author_first_name><![CDATA[명호]]></wp:author_first_name><wp:author_last_name><![CDATA[박]]></wp:author_last_name></wp:author>
	<wp:author><wp:author_id>24</wp:author_id><wp:author_login><![CDATA[hb.lee]]></wp:author_login><wp:author_email><![CDATA[hanbyul.lee@dramancompany.com]]></wp:author_email><wp:author_display_name><![CDATA[이 한별]]></wp:author_display_name><wp:author_first_name><![CDATA[한별]]></wp:author_first_name><wp:author_last_name><![CDATA[이]]></wp:author_last_name></wp:author>
	<wp:author><wp:author_id>30</wp:author_id><wp:author_login><![CDATA[jiseop.han]]></wp:author_login><wp:author_email><![CDATA[jiseop.han@dramancompany.com]]></wp:author_email><wp:author_display_name><![CDATA[지섭 한]]></wp:author_display_name><wp:author_first_name><![CDATA[지섭]]></wp:author_first_name><wp:author_last_name><![CDATA[한]]></wp:author_last_name></wp:author>
	<wp:author><wp:author_id>41</wp:author_id><wp:author_login><![CDATA[pyeongho]]></wp:author_login><wp:author_email><![CDATA[pyeongho@dramancompany.com]]></wp:author_email><wp:author_display_name><![CDATA[평호 김]]></wp:author_display_name><wp:author_first_name><![CDATA[평호]]></wp:author_first_name><wp:author_last_name><![CDATA[김]]></wp:author_last_name></wp:author>
	<wp:author><wp:author_id>40</wp:author_id><wp:author_login><![CDATA[s.sunyoung]]></wp:author_login><wp:author_email><![CDATA[s.sunyoung@dramancompany.com]]></wp:author_email><wp:author_display_name><![CDATA[선영 신]]></wp:author_display_name><wp:author_first_name><![CDATA[선영]]></wp:author_first_name><wp:author_last_name><![CDATA[신]]></wp:author_last_name></wp:author>
	<wp:author><wp:author_id>29</wp:author_id><wp:author_login><![CDATA[sj.sa]]></wp:author_login><wp:author_email><![CDATA[seungjun.sa@dramancompany.com]]></wp:author_email><wp:author_display_name><![CDATA[승준 사]]></wp:author_display_name><wp:author_first_name><![CDATA[승준]]></wp:author_first_name><wp:author_last_name><![CDATA[사]]></wp:author_last_name></wp:author>
	<wp:author><wp:author_id>44</wp:author_id><wp:author_login><![CDATA[wr.kwon]]></wp:author_login><wp:author_email><![CDATA[wr.kwon@dramancompany.com]]></wp:author_email><wp:author_display_name><![CDATA[권 우리]]></wp:author_display_name><wp:author_first_name><![CDATA[우리]]></wp:author_first_name><wp:author_last_name><![CDATA[권]]></wp:author_last_name></wp:author>
	<wp:author><wp:author_id>50</wp:author_id><wp:author_login><![CDATA[sunny.moon]]></wp:author_login><wp:author_email><![CDATA[sunny.moon@dramancompany.com]]></wp:author_email><wp:author_display_name><![CDATA[문 지선]]></wp:author_display_name><wp:author_first_name><![CDATA[지선]]></wp:author_first_name><wp:author_last_name><![CDATA[문]]></wp:author_last_name></wp:author>
	<wp:author><wp:author_id>46</wp:author_id><wp:author_login><![CDATA[ms.kang]]></wp:author_login><wp:author_email><![CDATA[ms.kang@dramancompany.com]]></wp:author_email><wp:author_display_name><![CDATA[강 민석]]></wp:author_display_name><wp:author_first_name><![CDATA[민석]]></wp:author_first_name><wp:author_last_name><![CDATA[강]]></wp:author_last_name></wp:author>
	<wp:author><wp:author_id>51</wp:author_id><wp:author_login><![CDATA[hh.jeong]]></wp:author_login><wp:author_email><![CDATA[hh.jeong@dramancompany.com]]></wp:author_email><wp:author_display_name><![CDATA[정 현호]]></wp:author_display_name><wp:author_first_name><![CDATA[현호]]></wp:author_first_name><wp:author_last_name><![CDATA[정]]></wp:author_last_name></wp:author>
	<wp:author><wp:author_id>52</wp:author_id><wp:author_login><![CDATA[minseokkang]]></wp:author_login><wp:author_email><![CDATA[minseokkang@dramancompany.com]]></wp:author_email><wp:author_display_name><![CDATA[민석 강]]></wp:author_display_name><wp:author_first_name><![CDATA[민석]]></wp:author_first_name><wp:author_last_name><![CDATA[강]]></wp:author_last_name></wp:author>
	<wp:author><wp:author_id>53</wp:author_id><wp:author_login><![CDATA[mgpark]]></wp:author_login><wp:author_email><![CDATA[mgpark@dramancompany.com]]></wp:author_email><wp:author_display_name><![CDATA[민규 박]]></wp:author_display_name><wp:author_first_name><![CDATA[민규]]></wp:author_first_name><wp:author_last_name><![CDATA[박]]></wp:author_last_name></wp:author>
	<wp:author><wp:author_id>49</wp:author_id><wp:author_login><![CDATA[soo.ahn]]></wp:author_login><wp:author_email><![CDATA[soo.ahn@dramancompany.com]]></wp:author_email><wp:author_display_name><![CDATA[안 수경]]></wp:author_display_name><wp:author_first_name><![CDATA[수경]]></wp:author_first_name><wp:author_last_name><![CDATA[안]]></wp:author_last_name></wp:author>
	<wp:author><wp:author_id>55</wp:author_id><wp:author_login><![CDATA[gyholee]]></wp:author_login><wp:author_email><![CDATA[gyholee@dramancompany.com]]></wp:author_email><wp:author_display_name><![CDATA[경호 이]]></wp:author_display_name><wp:author_first_name><![CDATA[경호]]></wp:author_first_name><wp:author_last_name><![CDATA[이]]></wp:author_last_name></wp:author>
	<wp:author><wp:author_id>57</wp:author_id><wp:author_login><![CDATA[horimpark]]></wp:author_login><wp:author_email><![CDATA[horimpark@dramancompany.com]]></wp:author_email><wp:author_display_name><![CDATA[호림 박]]></wp:author_display_name><wp:author_first_name><![CDATA[호림]]></wp:author_first_name><wp:author_last_name><![CDATA[박]]></wp:author_last_name></wp:author>
	<wp:author><wp:author_id>60</wp:author_id><wp:author_login><![CDATA[aaronroh]]></wp:author_login><wp:author_email><![CDATA[aaronroh@dramancompany.com]]></wp:author_email><wp:author_display_name><![CDATA[노아론]]></wp:author_display_name><wp:author_first_name><![CDATA[아론]]></wp:author_first_name><wp:author_last_name><![CDATA[노]]></wp:author_last_name></wp:author>
	<wp:author><wp:author_id>61</wp:author_id><wp:author_login><![CDATA[hh.hwang]]></wp:author_login><wp:author_email><![CDATA[hh.hwang@dramancompany.com]]></wp:author_email><wp:author_display_name><![CDATA[호현 황]]></wp:author_display_name><wp:author_first_name><![CDATA[호현]]></wp:author_first_name><wp:author_last_name><![CDATA[황]]></wp:author_last_name></wp:author>
	<wp:author><wp:author_id>56</wp:author_id><wp:author_login><![CDATA[jongtaek.oh]]></wp:author_login><wp:author_email><![CDATA[jongtaek.oh@dramancompany.com]]></wp:author_email><wp:author_display_name><![CDATA[종택 오]]></wp:author_display_name><wp:author_first_name><![CDATA[종택]]></wp:author_first_name><wp:author_last_name><![CDATA[오]]></wp:author_last_name></wp:author>
	<wp:author><wp:author_id>67</wp:author_id><wp:author_login><![CDATA[heekk]]></wp:author_login><wp:author_email><![CDATA[heekk@dramancompany.com]]></wp:author_email><wp:author_display_name><![CDATA[희경 김]]></wp:author_display_name><wp:author_first_name><![CDATA[희경]]></wp:author_first_name><wp:author_last_name><![CDATA[김]]></wp:author_last_name></wp:author>




<image>
	<url>https://blog.dramancompany.com/wp-content/uploads/2022/10/cropped-remember-appIcon-32x32.png</url>
	<title>Remember &amp; Company</title>
	<link>https://blog.dramancompany.com</link>
	<width>32</width>
	<height>32</height>
</image>
<site xmlns="com-wordpress:feed-additions:1">167555839</site>
		<item>
		<title><![CDATA[Amazon Web Services, Capistrano 그리고 리멤버]]></title>
		<link>https://blog.dramancompany.com/2015/10/amazon-web-services-capistrano-%ea%b7%b8%eb%a6%ac%ea%b3%a0-%eb%a6%ac%eb%a9%a4%eb%b2%84/</link>
		<pubDate>Wed, 14 Oct 2015 02:25:12 +0000</pubDate>
		<dc:creator><![CDATA[Jaden]]></dc:creator>
		<creator><![CDATA[Jaden]]></creator>
		<author><![CDATA[Jaden]]></author>
		<guid isPermaLink="false">http://developer.dramancompany.com/?p=19</guid>
		<description></description>
		<content:encoded><![CDATA[안녕하세요. 드라마앤컴퍼니 개발팀 Jaden입니다. 얼마전 리멤버 서버 배포과정을 개발팀 내에서 공유하는 시간이 있었습니다. 이때 소개했던 Capistrano와 Amazon Web Services(이하 AWS) 에서의 배포 과정을 공유 드리고자 합니다.
<h3>개발자와 피할 수 없는 숙명, 배포</h3>
모든 개발자에게 있어 개발과 배포는 떼려야 뗄 수 없는 관계입니다. 특히 서버의 경우엔 서비스 규모가 커짐에 따라 배포에 대한 부담이 커지기 마련입니다.&nbsp;그리고 플랫폼에 따라, 사용하는 언어에 따라 배포 방법도 천차만별입니다. 리멤버 서버는 Ruby on Rails(이하 ROR) 기반으로 개발되었는데요. ROR에서는 Capistrano라는 아주 유용한 배포툴이 있습니다. 이에 대해 자세히 알아보기 전에 먼저 다음 배포 시나리오를 보셨으면 합니다.

지금 우리가 배포하려는 서버는 다음과 같은 구조를 가지고 있다고 가정합니다.

<a href="https://blog.dramancompany.com/wp-content/uploads/2015/09/스크린샷-2015-09-25-14.42.22.png"><img class="size-full wp-image-25 aligncenter" src="https://blog.dramancompany.com/wp-content/uploads/2015/09/스크린샷-2015-09-25-14.42.22.png" alt="서버구조" width="438" height="289"></a>

이와같은 구조에서 배포를 할 경우 일단 ELB 구성이 되어 있으므로 다음과 같은 순서로 무중단 배포는 가능합니다.
<ol>
 	<li>instance-1을 LoadBalancer에서 제외</li>
 	<li>제외한 서버에서 서비스 종료</li>
 	<li>업데이트된 코드 배포 및 필요 할 경우 추가 작업</li>
 	<li>서비스 재시작</li>
 	<li>다시 instance-1을 LoadBalancer에 추가</li>
 	<li>이와 같은 과정을 나머지 인스턴스에 대해 반복</li>
</ol>
1대의 인스턴스에 배포하는 과정은 그다지 어렵지 않지만, 배포 할 인스턴스 수가 증가 할 수록 실수에 대한 위험과 배포하는 사람에 있어서도 부담과 피로도가 증가 합니다. 그리고 만일 하나 배포에 문제가 생겼을 경우 다시 롤백하는데도 어려움이 있습니다.

그래서 좀더 안정적이고 쉬운 배포를 위해 다음과 같이 구성을 해봅시다.

<a href="https://blog.dramancompany.com/wp-content/uploads/2015/09/스크린샷-2015-09-25-16.17.37.png"><img class="aligncenter wp-image-34 size-full" src="https://blog.dramancompany.com/wp-content/uploads/2015/09/스크린샷-2015-09-25-16.17.37.png" alt="" width="489" height="444"></a>

AWS에서는 훌륭한 Auto Scaling 서비스를 무료로 제공하고 있습니다. Auto Scaling은 쉽게말해 <strong>Amazon Machine Image(이하 AMI)</strong>를 설정한 조건에 따라 인스턴스를 늘리거나 줄이는 일을 합니다. 여기서 제가 주목하는 점은 'AMI'입니다. AMI는 말 그대로 머신 이미지를 말하는데 이를 이용하면 AMI를 생성하기 위한 서버 1대만 있으면 이를 이용해 이미지를 생성한 후 똑같은 서버를 원하는 만큼 생성할 수 있습니다.

이를 이용하면 만약 신규 배포 후 문제가 생겼을 경우 바로 이전에 사용하던 AMI 이미지로 교체만 해주면 되기 때문에 롤백에 대한 대처도 쉬워집니다.

&nbsp;
<h3>쉬운 배포, Capistrano</h3>
<blockquote>
<h4 style="text-align: left;">Capistrano is a remote server automation tool.</h4>
</blockquote>
<p style="text-align: left;">공식 문서에 적혀 있는데로 Capistrano는 원격 서버 자동화 도구입니다. 이에 대해 알아보기 전에 제가 리멤버 서비스를 오픈하기 위해 처음으로 배포 했을때를 이야기 해 드려야 할 것 같습니다. 저희는 코드관리를 처음부터 github을 이용했습니다. (그리고 좀 더 쉽고 효과적인 branch 관리를 위해 <a href="http://nvie.com/posts/a-successful-git-branching-model/" target="_blank" rel="noopener noreferrer">git flow</a>를 사용했습니다.) 테스트가 끝난 최종 코드를 master에 merge를 하고, 미리 세팅 해 놓은 서버에 git pull을 받은 후 설정을 마치고 1차로 전 직원이 다시한번 내부 테스트를 진행하였습니다. 모두 테스트에 문제가 없다고 생각한 후 미리 등록해둔 안드로이드 앱을 Google Play Console에서 릴리즈 하였는데요. 다시 생각해도 이때의 감정은 말로 다 표현 할 수 없을 것 같습니다.</p>
<p style="text-align: left;">여담이 좀 섞였지만, 핵심은 서비스 오픈 초반만 해도 배포할 서버가 1대였고 접속자가 많지 않았기 때문에 이와 같은 방법에 큰 불편함이 없었습니다. 하지만 점차 이용자가 많아짐에 따라 서버 대수가 늘어나가 되었고 이에 따라 배포할 때 매번 각 서버에 접속해서 똑같은 작업을 해야 했고, 혹시라도 문제가 생겼을 경우 다시 각 서버에 들어가 수정 또는 롤백을 해야 했습니다. 그리고&nbsp;가능한 무중단 배포를 지향 하면서 더 이상은 이 방법으로 안되겠다는 결론이 났고, 많은 ROR 개발자들이&nbsp;추천하는 Capistrano를 이용하기로 결정했습니다.</p>
<p style="text-align: left;">아래는 현재 리멤버 서버 배포시 구성을 간략히 그려보았습니다.</p>
<p style="text-align: left;"><a href="https://blog.dramancompany.com/wp-content/uploads/2015/09/스크린샷-2015-09-30-12.14.13.png"><img class="aligncenter wp-image-43 size-full" src="https://blog.dramancompany.com/wp-content/uploads/2015/09/스크린샷-2015-09-30-12.14.13.png" alt="" width="444" height="390"></a></p>
<p style="text-align: left;">AMI 생성용 서버에 Capistrano를 이용해 배포 후 AWS web console에서 설정만 해주면 쉽게 모든 서버 업데이트를 마칠 수 있도록 되어 있습니다. 그럼 Capistrano를 어떻게 설치하고 설정 하는지 알아보도록 하겠습니다.</p>

<h3 style="text-align: left;">Capistrano 설치부터 배포까지</h3>
설치는 독립 Gem으로 설치하여 사용하거나 Rails project Gemfile에 추가한 후 <strong>bundle install</strong>&nbsp;명령어로 설치 할 수 있습니다. 사용 방법은 두가지 모두 같으니 여기서는 독립 Gem 설치 기준으로 알려드리겠습니다.
<pre class="toolbar:2 show-title:false nums:false lang:default decode:true">$ gem install capistrano</pre>
간단하죠? 그 다음 아래 명령어를 실행하면 관련 파일들이 추가됩니다.
<pre class="toolbar:2 show-title:false nums:false lang:default decode:true">$ cap install</pre>
<pre class="toolbar:2 striped:false marking:false nums:false tab-convert:true tab-size:2 lang:default decode:true">├── Capfile
├── config
│   ├── deploy
│   │   ├── production.rb
│   │   └── staging.rb
│   └── deploy.rb
└── lib
    └── capistrano
            └── tasks</pre>
아래 2개의 파일은 배포하는데 있어 반드시 설정이 필요합니다.
<pre class="lang:ruby decode:true" title="config/deploy.rb"># config valid only for current version of Capistrano
lock '3.4.0'

set :application, 'remember' # 프로젝트 이름
set :repo_url, 'git@dramancompany.com:jaden/remember.git' # 저장소 주소

# 브랜치, 기본값 :master
# ask :branch, `git rev-parse --abbrev-ref HEAD`.chomp

# 배포 경로, 기본값 /var/www/my_app_name
# set :deploy_to, '/var/www/my_app_name'

# 소스코드관리, 기본값 :git
# set :scm, :git

# 포맷, 기본값 :pretty
# set :format, :pretty

# 로그 레벨, 기본값 :debug
# set :log_level, :debug

# Pseudoterminal, 기본값 false
# set :pty, true

# Default value for :linked_files is []
# set :linked_files, fetch(:linked_files, []).push('config/database.yml', 'config/secrets.yml')

# Default value for linked_dirs is []
# set :linked_dirs, fetch(:linked_dirs, []).push('log', 'tmp/pids', 'tmp/cache', 'tmp/sockets', 'vendor/bundle', 'public/system')

# Default value for default_env is {}
# set :default_env, { path: "/opt/ruby/bin:$PATH" }

# Default value for keep_releases is 5
# set :keep_releases, 5

namespace :deploy do

  after :restart, :clear_cache do
    on roles(:web), in: :groups, limit: 3, wait: 10 do
      # Here we can do anything such as:
      # within release_path do
      #   execute :rake, 'cache:clear'
      # end
    end
  end

end
</pre>
<pre class="lang:ruby decode:true" title="config/deploy/production.rb">set :branch, :master
set :rails_env, :production
set :deploy_to, '/home/ec2-user/server'

server '0.0.0.0',
  user: 'ec2-user',
  roles: %w{app},
  ssh_options: {
    user: 'ec2-user',
    keys: %w(~/.ssh/id_rsa ~/cert/aws.pem),
    auth_methods: %w(publickey)
  }</pre>
저장소 주소, 서버 IP등 세부 설정 항목은 사용 환경에 따라 수정해 주셔야 합니다. 저희같은 경우 서버가 test, stage, final, production 이렇게 4개의 서버가 있어 공통 설정은 <strong>config/deploy.rb</strong> 파일에서 해주었고, IP, branch, 배포경로 등 서버마다 값이 다른 것들은 <strong>config/deploy/[STAGE].rb</strong> 파일에서 설정해주었습니다.

이렇게 해서 Capistrano를 사용하기 위한 최소한의 설정이 끝났습니다. 그럼 이제 서버에 배포해 봐야 되겠죠? 일단 다음 명령어를 통해 지금까지 설정한 사항들이 이상 없는지 확인 해봅니다.
<pre class="toolbar:2 nums:false lang:sh decode:true">$ cap production deploy:check
INFO [fd7165b1] Running /usr/bin/env mkdir -p /tmp/remember/ as ec2-user@0.0.0.0
...
INFO [18830886] Finished in 0.240 seconds with exit status 0 (successful).
</pre>
이상이 없으면 실제로 배포를 합니다.
<pre class="toolbar:2 nums:false lang:sh decode:true">$ cap production deploy
INFO [f93823c2] Running /usr/bin/env mkdir -p /tmp/remember/ as ec2-user@0.0.0.0
...
INFO [4856654e] Finished in 0.265 seconds with exit status 0 (successful).</pre>
맨 마지막에 sucessful을 보셨나요? 그렇다면 배포에 성공한 것입니다. log_level을 debug로 했을 경우 좀더 상세한 로그를 볼 수 있습니다. Capistrano가 실행하는 명령어가 모두 표시되니 무슨 작업이 현재 진행되고 있는지도 알기 쉽습니다. 이제 배포된 서버에 접속해서 보시면 다음과 같은 구조로 배포가 이루어 졌음을 확인할 수 있습니다.
<pre class="toolbar:2 striped:false marking:false nums:false lang:default decode:true">├── current -&gt; /home/ec2-user/server/releases/20150120114500/
├── releases
│   ├── 20150080072500
│   ├── 20150090083000
│   ├── 20150100093500
│   ├── 20150110104000
│   └── 20150120114500
├── repo
│   └── &lt;VCS related data&gt;
├── revisions.log
└── shared
    └── &lt;linked_files and linked_dirs&gt;</pre>
<ul>
 	<li><strong>current </strong>: 최근 릴리즈를 가리키고 있는 symlink입니다. 배포에 성공될 경우에만 해당 릴리즈로 갱신됩니다.</li>
 	<li><strong>releases</strong> : 배포되었던 모든 버전이 저장되어 있습니다. rollback 실행시 current는 이곳에 있는 이전 버전의 릴리즈를 가리키게 됩니다.</li>
 	<li><strong>repo</strong> : 저장소와 관련된 설정들이 저장되어 있습니다.</li>
 	<li><strong>revisions.log</strong> : 모든 배포 또는 롤백에 대한 로그입니다.</li>
 	<li><strong>shared</strong> : 설정파일에서 linked_files와 linked_dirs를 추가했다면 이곳에 해당 파일들이 있어야 합니다. 이곳에 있는 파일들이 symlink 됩니다.</li>
</ul>
그러나 아무리 배포 준비를 열심히 했다고해서 문제가 없을 수는 없습니다. 문제가 생겼을때 우리는 배포 했던 코드를 빠르게 이전 버전으로 복구해야 합니다. capistrano 역시 rollback 기능을 제공합니다. rollback 역시 간단히 아래 명령어로 할 수 있습니다.
<pre class="toolbar:2 striped:false marking:false nums:false lang:sh decode:true ">$ cap production deploy:rollback
INFO [a0b8018a] Running /usr/bin/env mkdir -p /tmp/Remember/ as ec2-user@0.0.0.0
...
INFO [c1d94609] Finished in 0.343 seconds with exit status 0 (successful).
</pre>
rollback 되는 코드는 배포 경로에 tar 파일로 저장되고 기본적으로 직전 릴리즈 코드로 복구 되며 옵션을 통해 특정 리비전으로 복구할 수 도 있습니다.

여기까지 배포와 롤백하는 방법에 대해서 알아 보았습니다. 하지만 Capistrano는 이뿐만 아니라 다른 많은 작업이 가능합니다. 예를 들어 다음 코드는 배포 후 자동으로 <strong>bundle install</strong>을 실행하는 코드입니다.
<pre class="toolbar:2 nums:false lang:ruby decode:true " title="config/deploy.rb">task :bundle do
  on roles(:app) do
    within release_path do
      execute :bundle, 'install'
    end
  end
end

after :deploy, :bundle</pre>
이 코드를 추가하면 배포 후 자동으로 배포경로에서 <strong>bundle install</strong>을 실행하게 됩니다. 물론 bundle install 같은 것은 이렇게 직접 구현하지 않고&nbsp;<a href="https://github.com/capistrano/bundler/" target="_blank" rel="noopener noreferrer">capistrano-bundler</a>와 같은 gem을 이용하셔도 됩니다. ruby 답게 capistrano와 관련된 유용한 gem들도 많으니 미리 찾아보고 사용한다면 직접 구현하는 수고를 덜 수 있습니다.
<h3>마지막으로</h3>
여기까지 AWS 구성부터 Capistrano를 이용한 배포방법을 소개해 드렸습니다. 더욱 자세한 사용 방법은 capistrano documentation에 자세히 설명되어 있습니다. 앞으로 Docker 또는 이를 지원하는&nbsp;Amazon EC2 Container Service(ECS)를 이용하여 배포하는 방법도 고려 중입니다. 그럼 여기서 마치며 이 글이 배포에 대해 고민하시는 분들께 조금이라도 도움이 되었으면 좋겠습니다.
<h3>참고링크</h3>
<a href="http://capistranorb.com/" target="_blank" rel="noopener noreferrer">Capistrano</a>

<a href="http://docs.aws.amazon.com/ko_kr/AutoScaling/latest/DeveloperGuide/WhatIsAutoScaling.html" target="_blank" rel="noopener noreferrer">AWS AutoScaling</a>

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>19</wp:post_id>
		<wp:post_date><![CDATA[2015-10-14 11:25:12]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-10-14 02:25:12]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-02-24 00:31:02]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-02-23 15:31:02]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[amazon-web-services-capistrano-%ea%b7%b8%eb%a6%ac%ea%b3%a0-%eb%a6%ac%eb%a9%a4%eb%b2%84]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="autoscaling"><![CDATA[AutoScaling]]></category>
		<category domain="post_tag" nicename="aws"><![CDATA[AWS]]></category>
		<category domain="post_tag" nicename="capistrano"><![CDATA[Capistrano]]></category>
		<category domain="post_tag" nicename="deploy"><![CDATA[deploy]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="post_tag" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
		<category domain="category" nicename="develop"><![CDATA[Tech]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[4]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_f121dbf93f7c261fe8ce7b739e5c9524]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729471206;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:770;}i:1;a:1:{s:2:"id";i:1081;}i:2;a:1:{s:2:"id";i:2174;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_single_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:17:{s:8:"subtitle";s:0:"";s:6:"format";s:8:"standard";s:5:"video";s:0:"";s:7:"gallery";s:0:"";s:11:"source_name";s:0:"";s:10:"source_url";s:0:"";s:8:"via_name";s:0:"";s:7:"via_url";s:0:"";s:8:"override";a:1:{i:0;a:11:{s:18:"single_blog_custom";s:0:"";s:7:"sidebar";s:0:"";s:14:"second_sidebar";s:0:"";s:14:"share_position";s:0:"";s:17:"share_float_style";s:0:"";s:16:"post_date_format";s:0:"";s:23:"post_date_format_custom";s:0:"";s:21:"post_reading_time_wpm";s:0:"";s:20:"zoom_button_out_step";s:1:"1";s:19:"zoom_button_in_step";s:1:"1";s:17:"number_popup_post";s:1:"1";}}s:14:"image_override";a:1:{i:0;a:2:{s:26:"single_post_thumbnail_size";s:0:"";s:24:"single_post_gallery_size";s:0:"";}}s:22:"trending_post_position";s:0:"";s:19:"trending_post_label";s:0:"";s:20:"sponsored_post_label";s:0:"";s:19:"sponsored_post_name";s:0:"";s:18:"sponsored_post_url";s:0:"";s:19:"sponsored_post_logo";s:0:"";s:19:"sponsored_post_desc";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle_flag]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[25]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_format_gallery_images]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:2:"id";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[30]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>3</wp:comment_id>
			<wp:comment_author><![CDATA[doraemon]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[doraemon@naver.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[222.107.64.4]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-10-17 15:25:42]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-10-17 06:25:42]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[it's pretty good!! thank you!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>38</wp:comment_id>
			<wp:comment_author><![CDATA[Flowkater]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[kater102@naver.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[222.112.28.160]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-01-28 11:50:50]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-01-28 02:50:50]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[안녕하세요. Capistrano 와 AWS 오토스케일링을 이용하고 있는데요. AMI 로 이미지를 변경했을시 초기 오토스케일링 그룹의 이미지와 달라 AMI 이미지를 교체하게되면 처음 Policy 에서 설정된 이미지로 다시 되돌리려고 기존에 동작하던 (AMI 이미지가 교체된) 인스턴스를 삭제해버리고 새로 생성하더군요.

Capistrano 로 deploy 후 해당 인스턴스 이미지를 오토스케일링 그룹에 어떻게 운영을 유지(제로다운타임)하면서 동작시키는지 프로세스가 궁금합니다.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>39</wp:comment_id>
			<wp:comment_author><![CDATA[Jaden]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[jaden@dramancompany.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[106.250.181.163]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-01-28 13:54:43]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-01-28 04:54:43]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[안녕하세요 Flowkater님. 배포 과정에 대해서는 추후 AWS에서 Jenkins, Docker를 이용한 배포 방법을 소개하면서 자세히 다룰 예정 이어서 이 글에서는 간단히 소개해 드렸어요. 현재 리멤버는 Blue/Green 배포방식을 이용하고 있습니다.

<img src="http://developer.dramancompany.com/wp-content/uploads/2015/09/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7-2015-09-25-16.17.37.png" alt="리멤버 서버 구성 간략도" style="max-width: 350px;" />
위 그림을 보시면 AutoScalingGroup-1과 AutoScalingGroup-2가 있습니다. 이를 각각 Bule와 Green이라고 명명 한다면, 현재 LoadBalancer에 연결된 EC2 인스턴스를 블루에서 생성된 인스턴스라고 가정합니다. 즉 운영 서버는 블루에서 생성된 인스턴스 서버들이죠. 이 상태에서 배포가 필요할 경우 배포 이미지를 Green에 설정 합니다. 그리고 Green에서 생성된 인스턴스들을 LoadBalancer에 연결시킵니다. 그런 후 배포 서버에서 아무런 문제가 없다면 Blue에서 생성된 인스턴스를 LoadBalancer에서 제외 시킨 후 삭제합니다. 이렇게 하면 제로타임을 유지하면서 배포를 할 수 있습니다.

배포 방법에는 각각의 상황에 따라 조금씩 바뀔 수 있으므로 현재 서비스 운영 형태나 규모에 따라 좋은 배포 방법을 찾으셔야 할 것 같습니다. 더 궁금하신게 있다면 언제든지 물어봐주세요^^]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>38</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>41</wp:comment_id>
			<wp:comment_author><![CDATA[Flowkater]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[kater102@naver.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[222.112.28.160]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-02-02 21:31:44]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-02-02 12:31:44]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[감사합니다. 큰 도움이 되었네요.
아직은 실제 인스턴스가 스케일링을 통해서 2개 이상인 경우가 거의 없어서 고민했는데 같은 로드밸런스에 Group 두개 만들어놓고 하나에 최신 이미지로 그룹 하나를 교체해서 말씀하신것처럼 Blue/Green 배포 방식을 이용하니 제로타임 유지가 되는군요. 감동입니다.
Group 을 로드밸런스에 두개 이상 붙일수있다는 걸 몰라서 생긴 무지네요 ㅠㅠ
저희는 빠르게 구축한다고 Travic-CI 로 말그대로 배포전 최종 테스트 정도로만 CI 를 쓰는데 Jenkins, Docker 로 배포하는 방식도 궁금하네요! 아직 도커까진 필요성을 못느끼는데 (잘알지도못하구요 ;) 어쨋든 기다려봅니다.
리멤버 서비스 잘 쓰고 있습니다. 서비스 개발에 기술 블로그 운영까지 바쁘실텐데 항상 화이팅하세요~]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>60</wp:comment_id>
			<wp:comment_author><![CDATA[이형주]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[course@inflearn.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://inflearn.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[223.62.172.35]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-02-21 11:56:17]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-02-21 02:56:17]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[우왕. 감사합니다!!
정말 좋은 참조가 될거같아요!!!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[리멤버 앱의 명함인식 기능]]></title>
		<link>https://blog.dramancompany.com/2016/04/crop/</link>
		<pubDate>Wed, 27 Apr 2016 02:24:04 +0000</pubDate>
		<dc:creator><![CDATA[jade]]></dc:creator>
		<guid isPermaLink="false">http://developer.dramancompany.com/?p=64</guid>
		<description></description>
		<content:encoded><![CDATA[안녕하세요. 이번 포스팅에서는 리멤버 앱에 포함된 명함인식 기능에 관한 내용을 소개하려 합니다. 아래에서 그 내용을 간략히 소개해 드리려 합니다.
<h1></h1>
<h1>리멤버 iOS 앱에서 명함 영역 인식하기</h1>
Apple의 iOS SDK는 "<a href="https://developer.apple.com/library/prerelease/ios/documentation/GraphicsImaging/Conceptual/CoreImaging/ci_intro/ci_intro.html#//apple_ref/doc/uid/TP30001185-CH1-TPXREF101">CoreImage Framework</a>"를 기본으로 제공해 주고 있는데요, 이것은 이미지 처리와 관련된 다양한 기능을 제공하고 있습니다. 저희 리멤버 iOS 앱도 이를 사용하여 명함 영역을 인식해 보기로 했습니다.
<h3>사각형 영역 찾기</h3>
종이명함은 기본적으로 직사각형의 형태를 지니고 있기 때문에, 주어진 이미지에서 사각형 형태를 찾아야 합니다. 이것은 CoreImage의 CIDetector를 통해&nbsp;쉽게 구현할 수 있었습니다. CIDetector는 이미지 내의 Feature를 찾아주는 기능을 가지고 있는데, 현재 iOS9을 기준으로 얼굴, 사각형, QR코드, 문자열을&nbsp;지원하고 있습니다.
<pre class="lang:swift decode:true">// Specifies a detector type for face recognition.
@available(iOS 5.0, *)
public let CIDetectorTypeFace: String

// Specifies a detector type for rectangle detection.
@available(iOS 8.0, *)
public let CIDetectorTypeRectangle: String

// Specifies a detector type for barcode detection.
@available(iOS 8.0, *)
public let CIDetectorTypeQRCode: String

// Specifies a detector type for text detection.
@available(iOS 9.0, *)
public let CIDetectorTypeText: String</pre>
리멤버에서는 "CIDetectorTypeRectangle" Type의 CIDetector를 사용하여 이미지 내에서 사각형 영역들을 찾아 보도록 하겠습니다.
<pre class="lang:swift decode:true">let detector = CIDetector(
    ofType: CIDetectorTypeRectangle,
    context: nil,
    options: [
        CIDetectorAccuracy: CIDetectorAccuracyHigh,
        CIDetectorMinFeatureSize: NSNumber(float: 0.2)
    ])

let options = [CIDetectorAspectRatio: NSNumber(float: 1.8)]
if let rectangles = detector.featuresInImage(image, options: options) {
    var maxWidth: CGFloat = 0
    var maxHeight: CGFloat = 0
    var biggestRect: CIRectangleFeature?
    for rect in rectangles as! [CIRectangleFeature] {
        let minX = min(rect.topLeft.x, rect.bottomLeft.x)
        let minY = min(rect.bottomLeft.y, rect.bottomRight.y)
        let maxX = max(rect.bottomRight.x, rect.topRight.x)
        let maxY = max(rect.topLeft.y, rect.topRight.y)

        if (maxX - minX &gt; maxWidth &amp;&amp; maxY - minY &gt; maxHeight) {
            maxWidth = maxX - minX
            maxHeight = maxY - minY
            biggestRect = rect
        }
    }
    ...
}</pre>
위와 같이 CIDetector를 'CIDetectorTypeRectangle'으로 초기화한 뒤, featuresInImage 함수를 이용하면 이미지 내에서 간단하게 사각형 영역을 추출할 수 있습니다.

또한, CIDetector는 사용자가 원하는 특성에 맞는 형테를 찾을 수 있도록 여러가지 옵션을 제공하고 있습니다. 이중에서 리멤버 앱에서 중요한 옵션은 CIDetectorAspectRatio 였습니다. 일반적인 종이 명함의 가로/세로 비율이 1.8 정도인 것을 감안해, 이 옵션을 설정해 주면, CIDetector는 이미지 내에서 가로/세로 비율이 1.8에 근접한 사각형들을 찾아주게 됩니다.

[caption id="attachment_365" align="aligncenter" width="250"]<a href="https://blog.dramancompany.com/wp-content/uploads/2015/10/resize_IMG_2983.png"><img class="wp-image-365" src="https://blog.dramancompany.com/wp-content/uploads/2015/10/resize_IMG_2983-576x1024.png" alt="resize_IMG_2983" width="250" height="444"></a> CIDetector를 사용해 찾아낸 사각형 영역[/caption]

이렇게 원하는 Target의 특성을 고려하여 여러가지 옵션을 설정해 주면 더 정확한 결과를 얻을 수 있습니다.
<h3>사각형 영역 보정하기</h3>
위에서 찾은 사각형 영역은 불특정 좌표 네개로 구성되어있기 때문에, 'Perspective correction' 라는 과정을 거쳐 직사각형 형태로 변환되어야 합니다. 이를 위해 CoreImage의 CIFilter를&nbsp;사용합니다.

CIFilter는 이미지를 보정하거나 조작하기 위한 기능을 담고 있는 추상화된 클래스입니다. CIFilter는 다양한 이름의 filter를 제공하고 있으며&nbsp;<a href="https://developer.apple.com/library/prerelease/ios/documentation/GraphicsImaging/Conceptual/CoreImaging/ci_intro/ci_intro.html#//apple_ref/doc/uid/TP30001185-CH1-TPXREF101">Core Image Programming Guide</a>에서 확인하실 수 있습니다.

사각형 영역을 보정하기 위해선 "CIPerspectiveCorrection"이라는 이름의 CIFilter를 사용합니다. 해당 filter에 원본 이미지와 CIDetector로 찾은 사각형 영역의 각 모서리 좌표를 입력해 주면 간단하게 직사각형 형태로 변환된 이미지를 얻을 수 있습니다.
<pre class="lang:swift decode:true">let perspectiveCorrection = CIFilter(name: "CIPerspectiveCorrection")

perspectiveCorrection?.setValue(image, forKey: "inputImage")
perspectiveCorrection?.setValue(CIVector(CGPoint: foundRect.topLeft), forKey: "inputTopLeft")
perspectiveCorrection?.setValue(CIVector(CGPoint: foundRect.topRight), forKey: "inputTopRight")
perspectiveCorrection?.setValue(CIVector(CGPoint: foundRect.bottomLeft), forKey: "inputBottomLeft")
perspectiveCorrection?.setValue(CIVector(CGPoint: foundRect.bottomRight), forKey: "inputBottomRight")

let outputImage = perspectiveCorrection?.outputImage
</pre>
[caption id="attachment_364" align="aligncenter" width="250"]<a href="https://blog.dramancompany.com/wp-content/uploads/2015/10/IMG_2965.png"><img class="wp-image-364" src="https://blog.dramancompany.com/wp-content/uploads/2015/10/IMG_2965-576x1024.png" alt="IMG_2965" width="250" height="444"></a> Perspective correction이 적용된 이미지[/caption]

이와 같이 iOS에서는 CoreImage를 통해 수월하게 명함 영역을 찾을 수 있었습니다.
<h1>리멤버 Android 앱에서 명함 인식하기</h1>
Android에서는 위와 같이 이미지 처리와 관련된 공개된 SDK를 제공하고 있지 않아서, 외부 라이브러리를 활용하여 이미지 내의 명함을 인식하도록 Algorithm을 구현해야 했습니다. 그 내용을 아래에 간략히 소개해 드립니다.
<h3>Prerequisites</h3>
저희는 실제 명함 인식을 구현하기에 앞서, 몇가지 전제를 정의했습니다.
<ul>
 	<li>이미지 내에 비스듬하게 놓인 명함은 인식하지 않는다.</li>
 	<li>기준이하 크기의 명함은 인식하지 않는다.</li>
 	<li>세로명함은 추후 고려하도록 한다.</li>
</ul>
처음부터 광범위한 상황에 대처하기 보다는, 일부 상황에 대한 처리를 우선 진행하기로 한 것 입니다.
<h3>Brief algorithm</h3>
일단 저희는, 이미지 내의 직사각형 모양의 명함을 인식하기 위해 여러가지 방식을 시도해 보았습니다. 그 결과 저희가 주목한 방식은 'Line detection'을 이용한 것이었습니다. 'Line detection'을 이용하여, 명함의 네 변을 찾아 적절히 조합할 수 있다면, 쉽게 명함 영역을 찾을 수 있겠다는 생각이었습니다.

간략히 Algorithm을 소개해 드리자면, 아래와 같습니다.
<ul>
 	<li>Simplify image data</li>
 	<li>Edge detection</li>
 	<li>Line detection</li>
 	<li>Find largest rectangle</li>
</ul>
<h3>Library 선택</h3>
저희에게 Image processing Library&nbsp;선택은 중요한 문제였습니다. 처음에는 많은 Image processing algorithm을 지원하고 많은 reference를 가진 <a href="http://opencv.org/">OpenCV</a>를 사용하는것은 당연했습니다.

그러나 저희는 기능을 개발하면서 난관에 부딪히게 되었는데, 그 문제는 바로 성능이었습니다. 카메라를 통해 들어오는 이미지에서&nbsp;실시간으로 명함 영역을 찾아야 하는데, 그 속도를 맞춰주지 못하고 있었습니다. 특히 'Line detection' 부분에서 Resource를 많이 사용하고 있었습니다.

그래서 저희는 대안이 필요했고, 더 가벼운 라이브러리를 찾던중 <a href="http://boofcv.org/index.php?title=Main_Page">BoofCV</a>라는 Library를 찾게 되었습니다. BoofCV는 Play Store에 <a href="https://play.google.com/store/apps/details?id=org.boofcv.android">Demo App</a>을 배포하고 있었는데요. 해당 앱을 다운받아 Line Detection관련 기능을 테스트 해보니 상당히 빠른 속도를 보여줬습니다. 아래 차트는 BoofCV에서 제공하는 OpenCV와 BoofCV의 몇가지 기능의 성능을 비교한 것인데요, 보시는 바와 같이 저희가 Line detection을 위해 사용하는 'Hough Line'에서 BoofCV가 훨씬 빠른 성능을 보이고 있었습니다.

[caption id="attachment_369" align="aligncenter" width="490"]<a href="http://boofcv.org/index.php?title=Performance:OpenCV:BoofCV"><img class="wp-image-369 size-full" src="https://blog.dramancompany.com/wp-content/uploads/2015/10/benchmark_opencv_boofcv.png" alt="benchmark_opencv_boofcv" width="490" height="304"></a> <a href="http://boofcv.org/index.php?title=Performance:OpenCV:BoofCV">Relative Speed of BoofCV and OpenCV</a>[/caption]

위의 BoofCV를 적용하여 다시 테스트 해본 결과, 충분한 성능을 보여 BoofCV를 사용하기로 결정하게 되었습니다.
<h4></h4>
<h3>이미지 데이터 단순화 하기</h3>
이미지 처리는 많은 연산을 필요로 하기 때문에, 연산의 대상이 되는 데이터를 최소화 하는 것이 중요합니다. 이미지의 데이터가 큰 경우(이미지의 품질이 좋거나 크기가 큰)에는, 작은 경우에 비해 같은 연산을 수행해도, 훨씬 큰 리소스를 필요로 할 것입니다. 그래서 비디오 프레임에서 실시간으로 사각형 영역을 찾아야 하는 리멤버 앱에서도 연산의 대상이 되는 이미지의 데이터를 최소화해야 합니다.

컬러이미지를 흑백이미지로, 원본 크기의 이미지를 작은 크기의 이미지로 변환하여, 연산의 대상이 되는 이미지 데이터를 줄이도록 하였습니다. 그러나 이미지 데이터를 줄일 때에는 이미지의 특징이 사라지지 않도록 적절한 방식을 선택해야 합니다.
<pre class="lang:java decode:true">// 이미지 준비
ImageUInt8 cropUint = new ImageUInt8(bitmap.getWidth(), bitmap.getHeight());
ImageUInt8 scaleImg = new ImageUInt8(width, height);

// Bitmap -&gt; ImageUint8
ConvertBitmap.bitmapToGray(bitmap, cropUint, null);

// 이미지 축소
AverageDownSampleOps.down(cropUint, scaleImg);
</pre>
<h4></h4>
<h3>Edge Detecting</h3>
<a href="https://en.wikipedia.org/wiki/Edge_detection">Edge detection</a>을 통해 Line detection을 효율적으로 진행하려 했습니다. 이미지 내의 Edge라는 것은 이미지 내에서 색상의 변화가 두드러지게 큰 지점이라고 볼 수 있습니다.&nbsp;이러한 두드러진 색상의 변화는 이미지 내의 특정 Feature의 윤곽을 단순하게 보여 주기 때문에 명함과 같은 사각형 형태를 찾는데 도움을 줍니다.

저희는 <a href="https://en.wikipedia.org/wiki/Sobel_operator">Sobel operator</a>를 활용해서 Line detection을 준비했습니다. Sobel operator는 x-axis, y-axis의 색상변화를 별도로 계산하여 조합한다는 점에서, 저희가 목표로하는 명함의 horizontal line 두개와 vertical line 두개를 찾는데 도움이 될 것이라 판단했습니다.
<pre class="lang:java decode:true">ImageUInt8 grayProcX = new ImageUInt8(width, height);
ImageUInt8 grayProcY = new ImageUInt8(width, height);

ImageGradient&lt;ImageUInt8, ImageSInt16&gt; gradient = FactoryDerivative.sobel(ImageUInt8.class, ImageSInt16.class);
ImageSInt16 derivX = new ImageSInt16(width, height);
ImageSInt16 derivY = new ImageSInt16(width, height);
gradient.process(scaleImg, derivX, derivY);

Bitmap outputGradient = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_8888);
VisualizeImageData.colorizeGradient(derivX, derivX, -1, outputGradient, null);
ConvertBitmap.bitmapToGray(outputGradient, grayProcX, null);

VisualizeImageData.colorizeGradient(derivY, derivY, -1, outputGradient, null);
ConvertBitmap.bitmapToGray(outputGradient, grayProcY, null);</pre>
[caption id="attachment_545" align="aligncenter" width="449"]<a href="https://blog.dramancompany.com/wp-content/uploads/2015/10/test-x-crop.png" rel="attachment wp-att-545"><img class="wp-image-545 size-large" src="https://blog.dramancompany.com/wp-content/uploads/2015/10/test-x-crop-449x304.png" alt="x-axis sobel operation 결과" width="449" height="304"></a> x-axis sobel operation 결과[/caption]

[caption id="attachment_546" align="aligncenter" width="449"]<a href="https://blog.dramancompany.com/wp-content/uploads/2015/10/test-y-crop.png" rel="attachment wp-att-546"><img class="size-large wp-image-546" src="https://blog.dramancompany.com/wp-content/uploads/2015/10/test-y-crop-449x304.png" alt="y-axis sobel operation 결과" width="449" height="304"></a> y-axis sobel operation 결과[/caption]
<h4></h4>
<h4>Line detection</h4>
앞서 sobel operator의 결과물을 통해 <a href="https://en.wikipedia.org/wiki/Hough_transform">Hough transform</a>을 이용하여 선을 검출합니다. x-axis의 결과물을 vertical line을 검출하는데 사용하고, &nbsp;y-axis의 결과물은 horizontal line을 검출하는데 사용합니다.
<pre class="lang:java decode:true">DetectLine&lt;ImageUInt8&gt; detectorX = FactoryDetectLineAlgs.houghFoot(configHoughFootX, ImageUInt8.class, ImageSInt16.class);
List&lt;LineParametric2D_F32&gt; foundLinesX = detectorX.detect(grayProcX);
FastQueue&lt;LineSegment2D_F32&gt; linesX = new FastQueue&lt;&gt;(LineSegment2D_F32.class, true);
for (LineParametric2D_F32 p : foundLinesX) {
    LineSegment2D_F32 ls = LineImageOps.convert(p, grayProcX.width, grayProcX.height);
    linesX.grow().set(ls.a, ls.b);
}

DetectLine&lt;ImageUInt8&gt; detectorY = FactoryDetectLineAlgs.houghFoot(configHoughFootY, ImageUInt8.class, ImageSInt16.class);
List&lt;LineParametric2D_F32&gt; foundLinesY = detectorY.detect(grayProcY);
FastQueue&lt;LineSegment2D_F32&gt; linesY = new FastQueue&lt;&gt;(LineSegment2D_F32.class, true);
for (LineParametric2D_F32 p : foundLinesY) {
    LineSegment2D_F32 ls = LineImageOps.convert(p, grayProcY.width, grayProcY.height);
    linesY.grow().set(ls.a, ls.b);
}</pre>
<h4></h4>
<h4>Detect largest rectangle</h4>
이제 검출된 선들을 이용하여, 사각형의 네변을 찾는 것만이 남았습니다. 우선, 이미지 내의 중심을 기준으로 horizontal line, vertical line들을 상, 하, 좌, 우로 분류합니다. 이 때, 각각의 기준에서 벗어난 선들은 생략합니다. 그 후 각각에서 중심에서 가장 떨어져 있는 선을 선택하여, 이미지 내의 가장 큰 사각형을 찾아 냅니다.
<pre class="lang:java decode:true">// 좌, 우, 위, 아래 라인 분리
List&lt;LineSegment2D_F32&gt; upper = new ArrayList&lt;&gt;();
List&lt;LineSegment2D_F32&gt; bottom = new ArrayList&lt;&gt;();
List&lt;LineSegment2D_F32&gt; left = new ArrayList&lt;&gt;();
List&lt;LineSegment2D_F32&gt; right = new ArrayList&lt;&gt;();

for (LineSegment2D_F32 s : linesX.toList()) {
    double degree = CropUtil.computeDegree(s);
    if (degree &lt;= 10) {
        if ((s.a.y + s.b.y) / 2 &gt; width / 2) {
            right.add(s);
        } else {
            left.add(s);
        }
    }
}

for (LineSegment2D_F32 s : linesY.toList()) {
    double degree = CropUtil.computeDegree(s);
    if (degree &gt;= 80) {
        if ((s.a.y + s.b.y) / 2 &gt; H / 2) {
            upper.add(s);
        } else {
            bottom.add(s);
        }
    }
}

// 좌표 정렬
Collections.sort(upper, new YDESCComprator());
Collections.sort(bottom, new YASCComprator());
Collections.sort(left, new XASCComprator());
Collections.sort(right, new XDESCComprator());

// 가장 외곽라인 추출
LineSegment2D_F32 upperLine = upper.size() &gt; 0 ? upper.get(0) : null;
LineSegment2D_F32 bottomLine = bottom.size() &gt; 0 ? bottom.get(0) : null;
LineSegment2D_F32 leftLine = left.size() &gt; 0 ? left.get(0) : null;
LineSegment2D_F32 rightLine = right.size() &gt; 0 ? right.get(0) : null;</pre>
<h3></h3>
<h3>Perspective correction</h3>
iOS에서와 마찬가지로, 위에서 찾은 불특정 좌표 네개를, perspective correction 과정을 거쳐 직사각형 형태로 변환시켜 주어야 합니다. 아래와 같은 방식으로 간단하게, 변환을 할 수 있습니다.
<pre class="lang:java decode:true">Matrix matrix = PerspectiveTransformation.matrix(coordinates, bitmap, bitmap.getWidth(), bitmap.getHeight());
Bitmap output = PerspectiveTransformation.transform(pool, bitmap, matrix);</pre>
<h2></h2>
<h3>마무리</h3>
지금까지 리멤버 앱의 명함인식 기능에 대해 소개해 드렸습니다. 명함인식 기능은 많은 시행착오를 통해 구현되었지만, 아직 부족한 점이 많습니다. 앞으로 개선될 기능을 기대해 주세요.

그럼 이 글이 많은 분들께, 도움이 되었길 바라며 글을 마치도록 하겠습니다.

감사합니다.
<h3>Reference</h3>
<a href="https://developer.apple.com/library/ios/documentation/GraphicsImaging/Conceptual/CoreImaging/ci_intro/ci_intro.html#//apple_ref/doc/uid/TP30001185-CH1-TPXREF101">About Core Image</a>

<a href="http://boofcv.org/index.php?title=Main_Page">BoofCV</a>

<a href="https://play.google.com/store/apps/details?id=org.boofcv.android">BoofCV DemoApp</a>

<a href="http://docs.opencv.org/2.4.11/doc/tutorials/tutorials.html">OpenCV</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>64</wp:post_id>
		<wp:post_date><![CDATA[2016-04-27 11:24:04]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-04-27 02:24:04]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-02-23 23:35:31]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-02-23 14:35:31]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[crop]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="develop"><![CDATA[Tech]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[4]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_4b9db1867285ff6970298dad24811eae]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[right-sidebar]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_slogan]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_subslogan]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_header_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_scroll_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_bottom_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_footer_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_view_post_info]]></wp:meta_key>
		<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_post_icons]]></wp:meta_key>
		<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729530237;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:3374;}i:1;a:1:{s:2:"id";i:1016;}i:2;a:1:{s:2:"id";i:3447;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_0a3cc3cac2ac2d4120067632f88691de]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_single_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:17:{s:8:"subtitle";s:0:"";s:6:"format";s:8:"standard";s:5:"video";s:0:"";s:7:"gallery";s:0:"";s:11:"source_name";s:0:"";s:10:"source_url";s:0:"";s:8:"via_name";s:0:"";s:7:"via_url";s:0:"";s:8:"override";a:1:{i:0;a:11:{s:18:"single_blog_custom";s:0:"";s:7:"sidebar";s:0:"";s:14:"second_sidebar";s:0:"";s:14:"share_position";s:0:"";s:17:"share_float_style";s:0:"";s:16:"post_date_format";s:0:"";s:23:"post_date_format_custom";s:0:"";s:21:"post_reading_time_wpm";s:0:"";s:20:"zoom_button_out_step";s:1:"1";s:19:"zoom_button_in_step";s:1:"1";s:17:"number_popup_post";s:1:"1";}}s:14:"image_override";a:1:{i:0;a:2:{s:26:"single_post_thumbnail_size";s:0:"";s:24:"single_post_gallery_size";s:0:"";}}s:22:"trending_post_position";s:0:"";s:19:"trending_post_label";s:0:"";s:20:"sponsored_post_label";s:0:"";s:19:"sponsored_post_name";s:0:"";s:18:"sponsored_post_url";s:0:"";s:19:"sponsored_post_logo";s:0:"";s:19:"sponsored_post_desc";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle_flag]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1916]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_format_gallery_images]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:2:"id";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>778</wp:comment_id>
			<wp:comment_author><![CDATA[통신공학도]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[sdg2760@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[61.34.177.7]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-08-05 17:47:13]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-08-05 08:47:13]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[안녕하세요. 리멤버 명함인식 관련 글을 보면서 샘플 코드를 따라 만드는 중에
CropUtil.computeDegree(s) 이부분이 어떤걸 의미 하는지 어떤역할을 하는지 궁금해서 글을 남깁니다.
답변이 가능하시다면 답변 부탁드립니다.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1470386833.497191;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>2013</wp:comment_id>
			<wp:comment_author><![CDATA[홍성준]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[virgo0910a@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[121.141.75.103]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2018-03-28 09:41:20]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2018-03-28 00:41:20]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[좋은 글 감사합니다.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1522197680.39825;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>13342</wp:comment_id>
			<wp:comment_author><![CDATA[unknown]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[test@test.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://test.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.9.229]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-01-31 14:11:37]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-01-31 05:11:37]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[역시 행님들 믿고있었습네다]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1706677897.928512;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[드라마앤컴퍼니 기술 블로그에 오신 것을 환영합니다.]]></title>
		<link>https://blog.dramancompany.com/2015/10/%eb%93%9c%eb%9d%bc%eb%a7%88%ec%95%a4%ec%bb%b4%ed%8d%bc%eb%8b%88-%ea%b8%b0%ec%88%a0-%eb%b8%94%eb%a1%9c%ea%b7%b8%ec%97%90-%ec%98%a4%ec%8b%a0-%ea%b2%83%ec%9d%84-%ed%99%98%ec%98%81%ed%95%a9%eb%8b%88/</link>
		<pubDate>Mon, 05 Oct 2015 02:55:30 +0000</pubDate>
		<dc:creator><![CDATA[sid]]></dc:creator>
		<guid isPermaLink="false">http://developer.dramancompany.com/?p=89</guid>
		<description></description>
		<content:encoded><![CDATA[드라마앤컴퍼니는 DReam And MAke it happen을 모토로 국민 명함관리 앱 리멤버(<a href="http://rememberapp.co.kr/" target="_blank" rel="noreferrer">rememberapp.co.kr</a>)를 서비스하고 있으며, 더 나아가 명함이라는 매개체로 한국형 business networking platform을 완성시키는 것을 꿈꾸고 있습니다.

리멤버는 사용자가 명함 이미지를 업로드하면 이를 타이피스트가 보고 수기로 입력을 해주는 서비스입니다. 따라서, 뭔가 엄청난 고도의 기술이 사용되었다기보다, 사람이 일일이 작업하는 노가다 서비스라는 인식이 강한 것도 사실입니다.

솔직히 노가다 서비스가 맞습니다.^^ 하지만 그 이면을 들여다보면, 기술적으로 고민해야 하는 부분들도 상당히 많이 있었습니다. 사용자가 누구냐에 따라 업로드한 명함을 할당하는 우선순위가 달라지고, 하루에 쏟아지는 대량의 명함 요청을 안정적으로 타이피스트에게 분배를 해야 합니다. 사용자가 보기 편하게 이미지를 크랍하고 보정하는 등 이미지 처리 기술도 필요하고, 2천만 건이 넘는 명함 데이터를 사용자에게 보다 빠른 속도로 서비스할 수 있도록 성능에도 신경써야 합니다.

본 블로그에서는 2년여 동안 리멤버 서비스를 운영해오면서 고민했던 흔적들을 같이 공유하고자 합니다. 저희는 아직 기술적으로 부족하고 배워야 할 것들이 훨씬 더 많습니다. 따라서 여러 고수님들께 냉정한 비판과 따뜻한 격려를 부탁 드립니다. 많은 분들의 의견을 겸허히 수용하여 좀 더 발전하고 노력하는 리멤버가 되겠습니다.

앞으로도 리멤버의 성장을 계속 지켜봐 주시고 많은 관심과 격려 부탁 드립니다.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>89</wp:post_id>
		<wp:post_date><![CDATA[2015-10-05 11:55:30]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-10-05 02:55:30]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2016-01-04 16:21:14]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2016-01-04 07:21:14]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%eb%93%9c%eb%9d%bc%eb%a7%88%ec%95%a4%ec%bb%b4%ed%8d%bc%eb%8b%88-%ea%b8%b0%ec%88%a0-%eb%b8%94%eb%a1%9c%ea%b7%b8%ec%97%90-%ec%98%a4%ec%8b%a0-%ea%b2%83%ec%9d%84-%ed%99%98%ec%98%81%ed%95%a9%eb%8b%88]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>2</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="develop"><![CDATA[Tech]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[4]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729475521;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:966;}i:1;a:1:{s:2:"id";i:312;}i:2;a:1:{s:2:"id";i:2174;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_single_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:2:{s:8:"subtitle";s:0:"";s:6:"format";s:8:"standard";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle_flag]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>11296</wp:comment_id>
			<wp:comment_author><![CDATA[안녕하세요]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[test@test.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.7.109]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2021-08-30 17:40:03]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2021-08-30 08:40:03]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[안녕하세요&gt;&lt;]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1630312803.447538;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[리멤버의 안드로이드 6.0 M버전 대응기]]></title>
		<link>https://blog.dramancompany.com/2015/11/%eb%a6%ac%eb%a9%a4%eb%b2%84%ec%9d%98-%ec%95%88%eb%93%9c%eb%a1%9c%ec%9d%b4%eb%93%9c-6-0-m%eb%b2%84%ec%a0%84-%eb%8c%80%ec%9d%91%ea%b8%b0/</link>
		<pubDate>Wed, 25 Nov 2015 11:00:47 +0000</pubDate>
		<dc:creator><![CDATA[rfrost]]></dc:creator>
		<guid isPermaLink="false">http://developer.dramancompany.com/?p=176</guid>
		<description></description>
		<content:encoded><![CDATA[<p class="p1" style="text-align: left;">2015년 10월 20일, 넥서스 5x 출시를 시작으로 안드로이드 6.0 마시멜로우(이하 M버전)가 정식으로 시장에 풀렸습니다. M버전은 고객의 입장에서는 체감할만한 큰 변화가 없지만, 개발자들에게는 매우 많은 변화가 있던 업데이트 였습니다. 그만큼 구글에서는 정식으로 출시하기 전부터 3차례에 걸쳐 프리뷰를 발표하면서 많은 개발자들이 변화에 대응할 수 있는 시간을 주었습니다. (심지어 targetSdkVersion을 23으로 올리지 않아도 M버전 기기에서 앱이 잘 돌아갑니다. 권장되는 방법은 아닙니다.)</p>
<p class="p1"><span class="s1">리멤버 또한 구글이 준 유예기간 동안 프리뷰 이미지 및 오픈 테스트 랩 등을 활용해 새로운 안드로이드 M버전에 대응하였습니다. 그 과정을 공유드리고자 합니다.</span></p>


[caption id="attachment_267" align="aligncenter" width="300"]<a href="https://blog.dramancompany.com/wp-content/uploads/2015/11/pv9AcTqS-gotB5ply6js6SgqwcMrXcvbZlicenbfWh5Q-iW7cf6RrGM-TR7dSM0Z2BbVGAs2048.png"><img class="wp-image-267 size-medium" src="https://blog.dramancompany.com/wp-content/uploads/2015/11/pv9AcTqS-gotB5ply6js6SgqwcMrXcvbZlicenbfWh5Q-iW7cf6RrGM-TR7dSM0Z2BbVGAs2048-300x300.png" alt="pv9AcTqS-gotB5ply6js6SgqwcMrXcvbZlicenbfWh5Q-iW7cf6RrGM-TR7dSM0Z2BbVGA=s2048" width="300" height="300"></a> 안드로이드 6.0 마시맬로우 마스코트. 필자는 이 그림과 똑같은 피규어가 있습니다.[/caption]
<h2 class="p1"><strong><span class="s1">M버전, 무엇을 대응해야 하나?</span></strong></h2>
<p class="p1"><span class="s1">참고링크 : <a href="http://googledevkr.blogspot.kr/2015/08/testyourapponandroid60.html" target="_blank" rel="noopener noreferrer"><span class="s2">http://googledevkr.blogspot.kr/2015/08/testyourapponandroid60.html</span></a></span></p>
<p class="p1"><span class="s1">구글에서 내세우는 M버전의 변화들 중 주목해야 할 것은 Doze Mode 및 App Standby Mode, 권한모델, 입니다. 먼저 2가지를 살펴보겠습니다.</span></p>

<h3><strong>1. Doze Mode와 App Standby Mode</strong></h3>
<p class="p1"><span class="s1">위 두가지 모드는 배터리를 절약하기 위해 새로 생긴 모드입니다. 자세한 내용은 아래 링크를 참조해주세요.</span></p>
<p class="p1"><span class="s1">참조링크 : <a href="http://thdev.net/632" target="_blank" rel="noopener noreferrer">http://thdev.net/632</a></span></p>
<p class="p1"><span class="s1">각 모드들은 일정시간이상 어떠한 조건들을 모두 만족시키고 있다면 돌입하게 됩니다. 기준시간은 제조사마다 차이가 있지만 평균적으로 2시간 입니다.&nbsp;</span><span class="s1">모드 시작조건은 다음과 같습니다. </span></p>
<p class="p3"><span class="s1"> • 사용자로부터 인터렉션이 일어나지 않고, 화면이 꺼져있다.</span></p>
<p class="p3"><span class="s1"> • 충전 중이 아니다.</span></p>
<p class="p3"><span class="s1"> • 디바이스가 움직이지 않는다.</span></p>
<p class="p3"><span class="s1">모드가 시작되면 백그라운드 작업이 대부분 불가능 해집니다. 알람과 같은 경우에는 치명적으로 작용할 수 있습니다. 그러나 다행히 리멤버는 특정 시간에 해야하는 작업이 없고, 가장 긴 시간동안 일어나는 백그라운드 작업인 명함 동기화 또한 길어야 10분 내에 완료됩니다. 그래서 우리는 Doze Mode와 App Standby Mode가 UX에&nbsp;영향을 주지 않는다고 판단하여 대응하지 않기로 결정하였습니다.</span></p>
<p class="p1"><span class="s1">만약 자신의 앱은 위 모드들을 대응해야 된다면 아래 링크를 참조해 주세요.</span></p>
<p class="p1"><span class="s1">참고링크</span></p>
<a href="http://developer.android.com/intl/ko/training/monitoring-device-state/doze-standby.html" target="_blank" rel="noopener noreferrer">http://developer.android.com/intl/ko/training/monitoring-device-state/doze-standby.html</a>
<p class="p1"><span class="s1"><a href="http://googledevkr.blogspot.kr/2015/10/gcmonandroid-doze.html" target="_blank" rel="noopener noreferrer">http://googledevkr.blogspot.kr/2015/10/gcmonandroid-doze.html</a></span></p>

<h3 class="p1"><strong>2. 권한모델</strong></h3>
<p class="p1"><span class="s1">M버전의 대응의 90%는 권한모델을 넣는 것 이였습니다. 그만큼 권한모델은 기존 UX 흐름에 큰 변화를 주었습니다. 먼저 어떻게 바뀌었는지 알아보겠습니다.</span></p>
<p class="p1"><span class="s1">기존에는 사용자가 Play Store에서 앱을 다운받을 때 요구하는 권한을 모두 동의해야 했습니다. 이것은 개발자가 AndroidManifest.xml에 필요한 권한을 선언만 하면 되었으므로 매우 편한 시스템 이였습니다. 사용자가 권한을 거부하여 생길 수 있는 예외상황은 고려하지 않아도 되었으니까요.</span></p>
<p class="p1"><span class="s1">하지만 M버전부터는 구글에서 Dangerous 레벨 이상으로 지정한 특정 권한들에 대해서 앱 사용 중에 사용자들로부터 허락을 받아야 합니다. 마치 아이폰과 같지요. 만약 사용자가 권한을 허용하지 않는다면, 어떠한 작업이 일어날지 예상할 수 없습니다. 개발자는 이제 하나하나 필요한 권한들을 대응해야만 합니다.</span></p>

<h3 class="p1"><span class="s1">앱에서 필요한 권한을 조사하자</span></h3>
<p class="p1"><span class="s1">우선 리멤버가 무슨 권한을 요구하는지에 대해 알아보았습니다.</span></p>

<table>
<thead>
<tr>
<th>사용 권한그룹</th>
<th>사용 케이스</th>
</tr>
</thead>
<tbody>
<tr>
<td>카메라</td>
<td>명함촬영</td>
</tr>
<tr>
<td>주소록</td>
<td>명함 연락처 저장, 구글 연락처 동기화, 구글계정 로그인</td>
</tr>
<tr>
<td>전화</td>
<td>전화수신팝업</td>
</tr>
<tr>
<td>Storage</td>
<td>명함 사진으로 가져오기, 명함첩 파일로 내보내기</td>
</tr>
<tr>
<td>SMS</td>
<td>Main 단체 SMS, Namecard SMS</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>사용 개별권한</th>
<th>사용 케이스</th>
<th>권한그룹</th>
</tr>
</thead>
<tbody>
<tr>
<td>WRITE_EXTERNAL_STORAGE</td>
<td>파일 내보내기, 임시 명함파일 저장</td>
<td>저장</td>
</tr>
<tr>
<td>SYSTEM_ALERT_WINDOW</td>
<td>전화수신팝업</td>
<td>별도설정</td>
</tr>
<tr>
<td>CAMERA</td>
<td>카메라</td>
<td>카메라</td>
</tr>
<tr>
<td>READ_CONTACTS</td>
<td>명함 연락처 저장</td>
<td>주소록</td>
</tr>
<tr>
<td>WRITE_CONTACTS</td>
<td>명함 연락처 저장</td>
<td>주소록</td>
</tr>
<tr>
<td>READ_PHONE_STATE</td>
<td>전화수신팝업</td>
<td>전화</td>
</tr>
<tr>
<td>GET_ACCOUNTS</td>
<td>구글 연락처 동기화, 구글계정 로그인</td>
<td>주소록</td>
</tr>
</tbody>
</table>
<p class="p1"><span class="s1">개발자가 사용자에게 요구해야 하는 것은 개별권한입니다. 개별권한은 각각 소속된 권한그룹이 있습니다. 사용자가 설정창에서 명시적으로 허용, 거부하는 단위는 권한그룹입니다. 때문에 필요한 개별권한과 권한그룹을 개발 전에 나누는 것이 중요합니다. 권한과 권한그룹에 대해서는 다음 링크를 참조해주세요.</span></p>
<p class="p1"><span class="s1">참조링크</span></p>
<p class="p6"><span class="s2"><a href="http://developer.android.com/intl/ko/reference/android/Manifest.permission.html" target="_blank" rel="noopener noreferrer">http://developer.android.com/intl/ko/reference/android/Manifest.permission.html</a></span></p>
<p class="p6"><span class="s2"><a href="http://developer.android.com/intl/ko/reference/android/Manifest.permission_group.html" target="_blank" rel="noopener noreferrer">http://developer.android.com/intl/ko/reference/android/Manifest.permission_group.html</a></span></p>


[caption id="attachment_250" align="aligncenter" width="211"]<a href="https://blog.dramancompany.com/wp-content/uploads/2015/11/권한그룹-설정창.jpeg"><img class=" wp-image-250" src="https://blog.dramancompany.com/wp-content/uploads/2015/11/권한그룹-설정창-169x300.jpeg" alt="6.0 부터는 사용자가 설정창에서 권한그룹 단위로 허용/거부를 명시적으로 할 수 있습니다." width="211" height="375"></a> M버전 부터는 사용자가 설정창에서 권한그룹 단위로 허용/거부를 명시적으로 할 수 있습니다.[/caption]
<h3 class="p1"></h3>
<h3 class="p1"><span class="s1">사용자에게 필요한 권한을 요청하자</span></h3>
<p class="p1"><span class="s1">개발자들이 권한모델에 쉽게 대응하도록 하기 위하여 구글에서는 다음과 같은 3가지 메소드를 만들었습니다.</span></p>
<p class="p1"><a href="http://developer.android.com/intl/ko/reference/android/support/v4/content/ContextCompat.html#checkSelfPermission(android.content.Context, java.lang.String)" target="_blank" rel="noopener noreferrer">ContextCompat.checkSelfPermission()</a> <a href="http://developer.android.com/intl/ko/reference/android/support/v4/app/ActivityCompat.html#shouldShowRequestPermissionRationale(android.app.Activity, java.lang.String)" target="_blank" rel="noopener noreferrer">ActivityCompat.shouldShowRequestPermissionRationale()</a> <a href="http://developer.android.com/intl/ko/reference/android/support/v4/app/ActivityCompat.html#requestPermissions(android.app.Activity, java.lang.String[], int)" target="_blank" rel="noopener noreferrer">ActivityCompat.requestPermissions()</a></p>
<p class="p1"><span class="s1">3개의 메소드를 활용한 권한요청 가이드는 아래</span>&nbsp;링크를 참조해주세요.</p>
<p class="p1"><span class="s1">참고링크 :&nbsp;<a href="http://developer.android.com/intl/ko/training/permissions/requesting.html" target="_blank" rel="noopener noreferrer"><span class="s2">http://developer.android.com/intl/ko/training/permissions/requesting.html</span></a></span></p>

<h3 class="p1"></h3>
<h3 class="p1"><span class="s1">우리에게 필요한 시나리오에 따라 대응 전략을 세우자</span></h3>
<p class="p1"><span class="s1">우리는 위 가이드에서 문제가 되는 시나리오 두가지를 발견하였습니다.</span></p>

<ol class="ol1">
 	<li class="li1"><span class="s1"><a href="http://developer.android.com/intl/ko/reference/android/support/v4/app/ActivityCompat.html#requestPermissions(android.app.Activity, java.lang.String[], int)" target="_blank" rel="noopener noreferrer">ActivityCompat.requestPermissions()</a>를 통해 나오는 권한요청 다이알로그에서 한번 이상 거부하고, 다시보지 않기를 체크하지 않았어야만 <a href="http://developer.android.com/intl/ko/reference/android/support/v4/app/ActivityCompat.html#shouldShowRequestPermissionRationale(android.app.Activity, java.lang.String)" target="_blank" rel="noopener noreferrer">ActivityCompat.shouldShowRequestPermissionRationale()</a>가 true를 반환합니다.</span></li>
 	<li class="li1"><span class="s1">다시보지 않기를 체크하고 거부하였을 경우에는 <a href="http://developer.android.com/intl/ko/reference/android/support/v4/app/ActivityCompat.html#requestPermissions(android.app.Activity, java.lang.String[], int)" target="_blank" rel="noopener noreferrer">ActivityCompat.requestPermissions()</a>가 자동으로 false를 반환하면서 요청 다이알로그를 띄우지 않습니다.</span></li>
</ol>
<p class="p1"><span class="s1">1번 시나리오 에서는 권한을 한번도 거부하지 않았을 경우와, 다시보지 않기를 체크하였을 경우에, 사용자에게 권한이 필요한 이유를 설명할 다이알로그를 보여줄 수 없습니다.</span></p>
<p class="p1"><span class="s1">2번 시나리오 에서는 앱 내에서 사용자가 해당 권한을 허용할 수 있도록 안내할 방법이 사라집니다.</span></p>


[caption id="attachment_245" align="aligncenter" width="300"]<a href="https://blog.dramancompany.com/wp-content/uploads/2015/11/permission_request_dialog_chk.png"><img class="size-medium wp-image-245" src="https://blog.dramancompany.com/wp-content/uploads/2015/11/permission_request_dialog_chk-300x221.png" alt="requestPermissions()하면 뜨는 권한요청 다이알로그. 한번 이상 거절을 선택하면 다시보지않기가 보이는데, 이것을 체크할 경우 다시는 이 다이알로그를 볼 수 없다." width="300" height="221"></a> requestPermissions()하면 뜨는 권한요청 다이알로그. 한번 이상 거절을 선택하면 다시보지않기가 보이는데, 이것을 체크할 경우 다시는 이 다이알로그를 볼 수 없습니다.[/caption]
<p class="p1"><span class="s1">저희는 모든 경우에 수를 커버하지 못하는&nbsp;<a href="http://developer.android.com/intl/ko/reference/android/support/v4/app/ActivityCompat.html#shouldShowRequestPermissionRationale(android.app.Activity, java.lang.String)" target="_blank" rel="noopener noreferrer">ActivityCompat.shouldShowRequestPermissionRationale()</a>를 사용하지 않기로 하였습니다. 그리고 몇가지 반복작업을 하나로 묶어 편하게 권한을 요청하면서도, 사용자가 다시보지 않기를 체크해도&nbsp;권한을 허용할 수 있도록 안내하기 위한 PermissionUtil을 만들기로 하였습니다. 생각하는 시나리오는 다음과 같습니다.</span></p>

<ol>
 	<li class="p1"><span class="s1">권한을 check한다. 허용되어 있다면 정상 작업을 실행한다.</span></li>
 	<li class="p1"><span class="s1">권한을 check한다. 허용이 안되어있다면 request를 한다.</span></li>
 	<li class="p1"><span class="s1">request를 통해 허용 값을 받는다면 정상 작업을 실행한다.</span></li>
 	<li class="p1"><span class="s1">request를 통해 거부 값을 받는다면 우리가 자체적으로 만든 Rationale dialog를 보여준다.</span></li>
</ol>
<p class="p1"><span class="s1">여기에서 핵심은 4번입니다. 만약 사용자가 다시보지 않기를 체크하고 권한을 거부하더라도,&nbsp;앱 사용에 필수적인 권한을 허용하도록 설득하면서, 별도로 설정할 수 있도록 돕는 다이알로그를 띄웁니다.</span></p>


[caption id="attachment_247" align="aligncenter" width="300"]<a href="https://blog.dramancompany.com/wp-content/uploads/2015/11/Rational-Dialog1.jpeg"><img class="wp-image-247 size-medium" src="https://blog.dramancompany.com/wp-content/uploads/2015/11/Rational-Dialog1-300x129.jpeg" alt="" width="300" height="129"></a> 권한을 거부당해도 설정창으로 안내하는 다이알로그를 띄우고 싶었습니다.[/caption]
<p class="p1"><span class="s1">PermissionUtil에서는 다음과 같은 메소드들을 이용하여 권한을 요청합니다.</span></p>

<pre class="lang:java decode:true" title="권한 요청하기">public static boolean checkAndRequestPermission(Activity activity, int permissionRequestCode, String... permissions) {
    String[] requiredPermissions = getRequiredPermissions(activity, permissions);

    if (requiredPermissions.length &gt; 0 &amp;&amp; !activity.isDestroyedCompat()) {
        ActivityCompat.requestPermissions(activity, requiredPermissions, permissionRequestCode);
        return false;
    } else {
        return true;
    }
}



public static boolean checkAndRequestPermission(Fragment fragment, int permissionRequestCode, String... permissions) {
    String[] requiredPermissions = getRequiredPermissions(fragment.getContext() != null ?
            fragment.getContext() : fragment.getActivity(), permissions);

    if (requiredPermissions.length &gt; 0 &amp;&amp; fragment.isAdded()) {
        fragment.requestPermissions(requiredPermissions, permissionRequestCode);
        return false;
    } else {
        return true;
    }
}</pre>
<pre class="lang:java decode:true" title="요청이 필요한 권한 가져오기">public static String[] getRequiredPermissions(Context context, String... permissions) {
    List&lt;String&gt; requiredPermissions = new ArrayList&lt;&gt;();

    // Context가 null이면 무조건 권한을 요청하도록 requiredPermissions가 존재한다고 reutrn 한다
    if (context == null) return requiredPermissions.toArray(new String[1]);

    for (String permission : permissions) {
        if (ContextCompat.checkSelfPermission(context, permission) != PackageManager.PERMISSION_GRANTED) {
            requiredPermissions.add(permission);
        }
    }

    return requiredPermissions.toArray(new String[requiredPermissions.size()]);
}</pre>
getRequiredPermission()로 요청이 필요한 권한을 검사하고, checkAndRequestPermission() 에서 요청 다이알로그를 띄웁니다.

&nbsp;

사용자가 권한 값을 가져온 후에 처리하는 과정은 다음과 같습니다.
<pre class="lang:java decode:true" title="권한 결과값 처리">@Override
public void onRequestPermissionsResult(int requestCode, String[] permissions, int[] grantResults) {
    switch (requestCode) {
        case PermissionUtil.PERMISSION_CAMERA:
            if (PermissionUtil.verifyPermissions(grantResults)) {
                // 권한을 얻었다. Do something with permission
            } else {
                // 권한을 얻지 못했다. Show Rational Dialog
                String message = PermissionUtil.getRationalMessage(mContext, PermissionUtil.PERMISSION_CAMERA);
                PermissionUtil.showRationalDialog(mContext, message);
            }
            break;
    }
}
</pre>
<pre class="lang:java decode:true" title="권한을 받아왔는지 체크하기">public static boolean verifyPermissions(int[] grantResults) {
    // At least one result must be checked.
    if (grantResults.length &lt; 1) return false;

    // Verify that each required permission has been granted, otherwise return false.
    for (int result : grantResults) {
        if (result != PackageManager.PERMISSION_GRANTED) return false;
    }
    return true;
}</pre>
<pre class="lang:java decode:true" title="Rational Message 가져오기">public static String getRationalMessage(Context context, int code) {
    switch (code) {
        case PERMISSION_CAMERA:
            return getRationalMessage(context,
context.getString(R.string.permission_camera_rational), context.getString(R.string.permission_camera));
        case PERMISSION_CONTACT:
            return getRationalMessage(context,
context.getString(R.string.permission_contact_rational), context.getString(R.string.permission_contact));
        case PERMISSION_STORAGE:
            return getRationalMessage(context,
context.getString(R.string.permission_storage_rational), context.getString(R.string.permission_storage));
        case PERMISSION_READ_PHONE_STATE:
            return getRationalMessage(context,
context.getString(R.string.permission_read_phone_state_rational), context.getString(R.string.permission_read_phone_state));
    }
    return "";
}



public static String getRationalMessage(Context context, String rational, String permission) {
    return String.format(context.getString(R.string.permission_request), rational, permission);
}</pre>
<pre class="lang:java decode:true" title="Rational Dialog 보여주기">public static void showRationalDialog(Context context, int message) {
    showRationalDialog(context, context.getString(message));
}



public static void showRationalDialog(Context context, String message) {
    DialogCreator.create(context, message, (dialog, which) -&gt; {
        try {
            Intent intent = new Intent(Settings.ACTION_APPLICATION_DETAILS_SETTINGS)
                        .setData(Uri.parse("package:" + context.getPackageName()));
            context.startActivity(intent);
        } catch (ActivityNotFoundException e) {
            e.printStackTrace();

            Intent intent = new Intent(Settings.ACTION_MANAGE_APPLICATIONS_SETTINGS);
                context.startActivity(intent);
        }
    }, R.string.word_settings, (dialog, which) -&gt; {
        // Do nothing
    }, R.string.word_close, 0).show();
}</pre>
<a href="http://developer.android.com/intl/ko/reference/android/support/v4/app/ActivityCompat.OnRequestPermissionsResultCallback.html#onRequestPermissionsResult(int, java.lang.String[], int[])" target="_blank" rel="noopener noreferrer">onRequestPermissionsResult()</a>&nbsp;에서 사용자가 허용/거부한 값을 받고. true이면 원래의 작업을 합니다. false이면 위 이미지와 같은 Rational Dialog를 띄어줍니다. Rational Message는 string.xml의 format을 이용하여 권한의 이름만 바꿔주며 공통적으로 사용하였습니다. Rational Dialog는 설정버튼을 누르면 리멤버 앱의 설정창으로 넘어가도록 하였습니다. (DialogCreator은 리멤버에서 공통적으로 사용하는 CustomAlertDialog을 보여주기 위한 자체 Util입니다.)
<p class="p1"><span class="s1">여기까지 사용권한 및 권한그룹 분석, 실제 대응전략 구상까지 끝났다면, 남은 일은 모든 권한이 필요한 곳들을 찾아 체크 메소드를 넣어주는 것입니다. 이 과정에서는 철저한 QA가 필요합니다. UX 시나리오가 이미 방대한 기존의 앱은 권한이 필요한 경우를 놓칠 수 있기 때문입니다. 천천히, 꼼꼼하게 권한모델을 대응합시다.</span></p>

<h3 class="p1"><span class="s1">Fragment에서 권한을 요청한다면?</span></h3>
<p class="p1"><span class="s1">사용자가 권한을 허용/거부한 결과를 받아주는 <a href="http://developer.android.com/intl/ko/reference/android/support/v4/app/ActivityCompat.OnRequestPermissionsResultCallback.html#onRequestPermissionsResult(int, java.lang.String[], int[])" target="_blank" rel="noopener noreferrer">onRequestPermissionsResult()</a>는 기존의 <a href="http://developer.android.com/intl/ko/reference/android/app/Activity.html#onActivityResult(int, int, android.content.Intent)" target="_blank" rel="noopener noreferrer">onActivityResult()</a> 원리와 같습니다. 그러므로&nbsp;Fragment에서 <a href="http://developer.android.com/intl/ko/reference/android/support/v4/app/ActivityCompat.OnRequestPermissionsResultCallback.html#onRequestPermissionsResult(int, java.lang.String[], int[])" target="_blank" rel="noopener noreferrer">onRequestPermissionsResult()</a>을 받는 경우에는 Activity에 막혀 requestCode가 가려지지 않도록 주의해야 합니다. Activity에서 <a href="http://developer.android.com/intl/ko/reference/android/support/v4/app/ActivityCompat.OnRequestPermissionsResultCallback.html#onRequestPermissionsResult(int, java.lang.String[], int[])" target="_blank" rel="noopener noreferrer">onRequestPermissionsResult()</a>와 <a href="http://developer.android.com/intl/ko/reference/android/app/Activity.html#onActivityResult(int, int, android.content.Intent)" target="_blank" rel="noopener noreferrer">onActivityResult()</a>를 오버라이드 하지 않는다면 상관없지만, 만약 한다면, 반드시 처음에 super 메소드를 실행해야 합니다.</span></p>
<p class="p1"><span class="s1">그리고 아쉽게도 NestedFragment와 DialogFragment에서는 <a href="http://developer.android.com/intl/ko/reference/android/support/v4/app/ActivityCompat.OnRequestPermissionsResultCallback.html#onRequestPermissionsResult(int, java.lang.String[], int[])" target="_blank" rel="noopener noreferrer">onRequestPermissionsResult()</a>를 받을 수 없습니다. 위와 같은 경우에는 <a href="http://developer.android.com/intl/ko/reference/android/app/Fragment.html#getParentFragment()" target="_blank" rel="noopener noreferrer">getParentFragment()</a> 또는&nbsp;<a href="http://developer.android.com/intl/ko/reference/android/app/Fragment.html#getActivity()" target="_blank" rel="noopener noreferrer">getActivity()</a>를 활용하여 권한을 요청해야 합니다.</span></p>

<h3 class="p1"><span class="s1">System_Window_Alert 권한</span></h3>
<p class="p1"><span class="s1">리멤버는 전화가 왔을 때 해당하는 번호와 같은 명함이 있을 경우 팝업을 띄어주는 기능이 있습니다. 전화수신 팝업은 안드로이드 윈도우 상에 팝업을 띄어주어야 하므로 system_window_alert 권한을 필요로 합니다. 안드로이드 6.0 이전 버전에는 다른 권한들과 같이 AndroidManifest.xml에 선언만 해주면 되었지만, M버전부터는 위에 설명했던 방법과는 또 다르게 처리해야 하는 특별한 권한입니다.</span></p>
<p class="p1"><span class="s1">system_window_alert는 <a href="http://developer.android.com/intl/ko/reference/android/support/v4/app/ActivityCompat.html#requestPermissions(android.app.Activity, java.lang.String[], int)" target="_blank" rel="noopener noreferrer">ActivityCompat.requestPermissions()</a>로부터 권한을 얻어낼 수 없습니다. ‘다른 앱 위에 그리기’ 라는 별도의 권한 설정창으로부터 사용자가 직접 허용하도록 유도해야 합니다. 해당 설정창으로 넘어가도록 하는 코드는 다음과 같습니다.</span></p>

<pre class="lang:java decode:true" title="다른 앱 위에 그리기 권한 설정창으로 이동하기">@TargetApi(Build.VERSION_CODES.M)
public static void requestOverlayPermission(Activity activity) {
    activity.startActivityForResult(new Intent(Settings.ACTION_MANAGE_OVERLAY_PERMISSION), PermissionUtil.PERMISSION_OVERLAY);
}</pre>
<p class="p1"><span class="s1">설정창으로 넘어가게 하는 것은 쉽지만, 사용자에게 낯선 권한을 허용받기 위해서는&nbsp;왜 이 권한이 필요한지를 잘 설명하는 것이 중요하겠습니다.</span></p>


[caption id="attachment_251" align="aligncenter" width="226"]<a href="https://blog.dramancompany.com/wp-content/uploads/2015/11/다른앱-위에-그리기.jpeg"><img class=" wp-image-251" src="https://blog.dramancompany.com/wp-content/uploads/2015/11/다른앱-위에-그리기-169x300.jpeg" alt="system_window_alter는 다른 권한들과 다르게 '다른 앱 위에 그리기' 설정창에서 직접 허용받아야 합니다." width="226" height="401"></a> system_window_alert는 다른 권한들과 다르게 '다른 앱 위에 그리기' 설정창에서 직접 허용받아야 합니다.[/caption]
<p class="p1">'다른 앱 위에 그리기' 권한을 사용할 수 있는지 여부는 <a href="http://developer.android.com/intl/ko/reference/android/provider/Settings.html#canDrawOverlays(android.content.Context)" target="_blank" rel="noopener noreferrer">Settings.canDrawOverlays()</a>를 이용해 알 수 있습니다. 하지만 아쉽게도 system_window_alert는 다른 권한들처럼 <a href="http://developer.android.com/intl/ko/reference/android/support/v4/app/ActivityCompat.OnRequestPermissionsResultCallback.html#onRequestPermissionsResult(int, java.lang.String[], int[])" target="_blank" rel="noopener noreferrer">onRequestPermissionsResult()</a>으로 사용자가 권한을 허용/거부한 결과값을 알수 없습니다. 그래서 저희는 위 코드에서도 보이듯이 <a href="http://developer.android.com/intl/ko/reference/android/app/Activity.html#startActivityForResult(android.content.Intent, int)" target="_blank" rel="noopener noreferrer">startActivityForResult()</a>로 요청하여 <a href="http://developer.android.com/intl/ko/reference/android/app/Activity.html#onActivityResult(int, int, android.content.Intent)" target="_blank" rel="noopener noreferrer">onActivityResult()</a>에서&nbsp;결과값을 받아 작업을 실행하였습니다.</p>

<pre class="lang:java decode:true " title="다른 앱 위에 그리기 권한 결과 값 받아서 처리하기">@Override
public void onActivityResult(int requestCode, int resultCode, Intent data) {
    switch (requestCode) {
        case PermissionUtil.PERMISSION_OVERLAY:
            if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.M) {
                if (Settings.canDrawOverlays(getContext())) {
                    // Do something with overlay permission
                } else {
                    // Show dialog which persuades that we need permission
                }
            }
            break;
    }
}</pre>
<p class="p1"><span class="s1">전화수신 팝업은 system_window_alert 권한뿐만 아니라 전화수신 상태를 캐치하는 read_phone_state 권한도 요구합니다. 따라서 일반적인 권한처리 방법도 혼용하여 값을 받아야 사용이 가능합니다. 사용자에게 권한을 다른방법으로, 여러번 요청하는 불편함을 초래하지만, 구글에서 그만큼 중요한 권한이라고 판단하여 위험레벨을 높게 설정하였기 때문에, 이렇게 해야만 합니다.</span></p>

<h2 class="p1"><span class="s1"><b>다른 사항은 없었나?</b></span></h2>
<p class="p1"><span class="s1">구글 코리아에서 정리한 M버전을 대응하면서 나타날 수 있는 일반적인 예외 케이스들을 보고 싶다면 아래 링크를 참조해주세요.</span></p>
<p class="p1"><span class="s1">참고링크 : <a href="http://googledevkr.blogspot.kr/2015/09/testyourapponandroid60.html" target="_blank" rel="noopener noreferrer">http://googledevkr.blogspot.kr/2015/09/testyourapponandroid60.html</a></span></p>
<p class="p1"><span class="s1">리멤버가 겪었던 추가적인 이슈는 다음과 같은 것들이 있었습니다.</span></p>

<h3 class="p1"><span class="s1"><b>최초의 마시맬로우 기기, 넥서스 5x만의 이슈</b></span></h3>
[caption id="attachment_268" align="aligncenter" width="287"]<a href="https://blog.dramancompany.com/wp-content/uploads/2015/11/image00.png"><img class="wp-image-268 size-medium" src="https://blog.dramancompany.com/wp-content/uploads/2015/11/image00-287x300.png" alt="image00" width="287" height="300"></a> 넥서스 5x. 필자가 사용하고 있는 폰 입니다.[/caption]
<h3 class="p1">1. 전화번호가 국제번호로 변경되어서 옵니다</h3>
<p class="p1"><span class="s1">전화가 왔을 때 통신사, 제조사의 차이에 따라 번호가 국제번호로 변환되어 옵니다. 리멤버에는 전화가 오면 번호에 따라서 명함을 검색 후 팝업을 띄어주는 기능이 있는데, 불규칙하게 번호가 변경되는 바람에, 보유하고 있음에도 명함을 검색하지 못하는 경우가 있었습니다. 우리는 전화수신 팝업을 제대로 띄어주기 위해, 전화 온 번호를 명함에 저장되어진 번호와 같은 형식으로 클린징 하는 과정을 추가해야 했습니다.</span></p>

<h3 class="p1">2. 카메라가 180도 돌아가 있습니다</h3>
<p class="p1"><span class="s1">넥서스 5x는 이미지 센서가 다른 기기들과 다르게 180도 돌아가 있습니다. 그래서 따로 처리를 해주지 않았다면, 카메라의 방향이 기본적으로 상하좌우 반전되어 나옵니다. 우리는 카메라가 돌아가 있지 않은 경우에는 그대로, 돌아가 있는 경우에는 Preview를 반대로 돌려주는 작업을 추가해야 했습니다. 이미지 센서가 인식하는 카메라의 방향을 알아내고, Preview를 돌려주는 작업은 아래의 링크를 참조해주세요.</span></p>
<p class="p1">참조링크 :&nbsp;<a href="http://developer.android.com/intl/ko/reference/android/hardware/Camera.html#setDisplayOrientation(int)" target="_blank" rel="noopener noreferrer">http://developer.android.com/intl/ko/reference/android/hardware/Camera.html#setDisplayOrientation(int)</a></p>
<p class="p1">대부분의 앱은 위와 같이 처리하면 쉽게 해결될 것입니다. 하지만 우리는 보여주는 것 뿐만 아니라 명함을 자동인식하는 좌표, 수동으로 편집하기 위해 잡는 좌표 등 정확한 위치계산까지 180도 돌려서 해야 했으므로 새로운 행렬 계산식을 추가해야 했습니다. 부디 이 글을 읽는 분들께서는 이런 경우가 아니기를 바랍니다.</p>

<h3 class="p1"><strong><span class="s1">테스트를 힘들게 하는 것</span></strong></h3>
<p class="p1"><span class="s1">테스트를 할 때에는 권한을 자주 껐다 키면서 다양한 경우를 빠르게 확인해야 합니다. 때문에 설정창과 앱을 동시에 켜놓고 스택창을 통해 넘나들면서 앱을 실행합니다. 하지만 설정창에서 명시적으로 권한을 거부한 후 앱으로 돌아오면, 당시에 가장 상단으로 나와있던 Activity가 onCreate()부터 다시 실행됩니다. 이 말은, 한 Activity에서 여러 Fragment를 바꿔가며 사용하는 경우에는, 첫 Fragment로 돌아간다는 것입니다. 일반적인 유저가 겪기는 힘든 케이스지만, 테스트 중에는 우리를 매우 힘들게 했던 현상 중 하나였습니다.</span></p>


[caption id="attachment_234" align="aligncenter" width="233"]<a href="https://blog.dramancompany.com/wp-content/uploads/2015/11/스택창.jpeg"><img class=" wp-image-234" src="https://blog.dramancompany.com/wp-content/uploads/2015/11/스택창-169x300.jpeg" alt="스택창에서 설정을 끄고 다시 돌아가면 Activity가 재생성된다." width="233" height="414"></a> 스택창에서 설정을 끄고 돌아가면 Activity가 재생성 됩니다. 이 현상은 테스트를 적지 않게 방해합니다.[/caption]
<h2 class="p1"></h2>
<h2 class="p1"><span class="s5"><b>마무리</b></span></h2>
<p class="p10"><span class="s1">안드로이드 5.0 롤리팝 때에는 많은 변화에 비해 개발자를 위한 가이드가 적었습니다. 하지만 6.0은 많은 가이드들을 통해 빠르게 대응할 수 있도록 잘 준비되어 있습니다. 이전에는 디자인으로 사용자 경험을 개선하려 했다면, 6.0에서는 이 글에서 다룬 베터리 절약, 권한모델 외에도 앱 데이터 자동저장, Direct Share, 지문인식 등 다양한 디테일을 통해 사용자 경험을 높이고자 하는 구글의 노력이 보였던 업데이트 였습니다. 혹시 아직 안드로이드 6.0을 대응하지 않으셨나요? 지금이라도 적용을 시작해보세요. 개선된 사용자 경험을 얻을 수 있습니다.</span></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>176</wp:post_id>
		<wp:post_date><![CDATA[2015-11-25 20:00:47]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-11-25 11:00:47]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-11-24 20:38:33]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-11-24 11:38:33]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%eb%a6%ac%eb%a9%a4%eb%b2%84%ec%9d%98-%ec%95%88%eb%93%9c%eb%a1%9c%ec%9d%b4%eb%93%9c-6-0-m%eb%b2%84%ec%a0%84-%eb%8c%80%ec%9d%91%ea%b8%b0]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="develop"><![CDATA[Tech]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[4]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_84cd00321c4a7440b593f9fc523594dc]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[right-sidebar]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_slogan]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_subslogan]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_header_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_scroll_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_bottom_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_footer_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_view_post_info]]></wp:meta_key>
		<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_post_icons]]></wp:meta_key>
		<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729529812;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:2124;}i:1;a:1:{s:2:"id";i:3073;}i:2;a:1:{s:2:"id";i:966;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_single_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:17:{s:8:"subtitle";s:0:"";s:6:"format";s:8:"standard";s:5:"video";s:0:"";s:7:"gallery";s:0:"";s:11:"source_name";s:0:"";s:10:"source_url";s:0:"";s:8:"via_name";s:0:"";s:7:"via_url";s:0:"";s:8:"override";a:1:{i:0;a:11:{s:18:"single_blog_custom";s:0:"";s:7:"sidebar";s:0:"";s:14:"second_sidebar";s:0:"";s:14:"share_position";s:0:"";s:17:"share_float_style";s:0:"";s:16:"post_date_format";s:0:"";s:23:"post_date_format_custom";s:0:"";s:21:"post_reading_time_wpm";s:0:"";s:20:"zoom_button_out_step";s:1:"1";s:19:"zoom_button_in_step";s:1:"1";s:17:"number_popup_post";s:1:"1";}}s:14:"image_override";a:1:{i:0;a:2:{s:26:"single_post_thumbnail_size";s:0:"";s:24:"single_post_gallery_size";s:0:"";}}s:22:"trending_post_position";s:0:"";s:19:"trending_post_label";s:0:"";s:20:"sponsored_post_label";s:0:"";s:19:"sponsored_post_name";s:0:"";s:18:"sponsored_post_url";s:0:"";s:19:"sponsored_post_logo";s:0:"";s:19:"sponsored_post_desc";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle_flag]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1750]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_format_gallery_images]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:2:"id";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>801</wp:comment_id>
			<wp:comment_author><![CDATA[또또]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[rkdthwjd1111@naver.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[221.161.62.100]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-09-27 12:47:37]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-09-27 03:47:37]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[ㅠ ㅠ
제가 위의 소스를 보며 만들어 보고 있으나
isDestroyedCompat()
case PermissionUtil.PERMISSION_CAMERA:
  String message = PermissionUtil.getRationalMessage(mContext, PermissionUtil.PERMISSION_CAMERA); 에서 에러가 뜨네요
ㅠㅠㅠ]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1474948057.52394;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>802</wp:comment_id>
			<wp:comment_author><![CDATA[유명식]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[you6878@icloud.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[14.52.204.129]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-10-02 13:18:03]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-10-02 04:18:03]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[여기서 감사히 잘 참고 했습니다. 그런데 혹시 System_Window_Alert 권한에서PermissionUtil.PERMISSION_OVERLAY 메소드를 사용할려고 할때 PermissionUtil클래스가 없는데 혹시 PermissionUtil 클래스를 만들어줘야 되나요?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1475381883.456526;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>1716</wp:comment_id>
			<wp:comment_author><![CDATA[rfrost]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[min@dramancompany.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://rfrost77.tistory.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[1.234.242.155]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-12-10 06:29:19]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-12-09 21:29:19]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[PermissionUtil.PERMISSION_OVERLAY는 startActivityForResult의 파라미터로 넘기는 코드입니다. PermissionUtil을 만들지 않아도 코드를 하나 지정하여 사용하시면 됩니다.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>802</wp:comment_parent>
			<wp:comment_user_id>5</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1512854959.634103;s:5:"event";s:9:"check-ham";s:4:"user";s:6:"rfrost";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[Electron으로 웹 앱 만들듯 데스크톱 앱 만들기]]></title>
		<link>https://blog.dramancompany.com/2015/12/electron%ec%9c%bc%eb%a1%9c-%ec%9b%b9-%ec%95%b1-%eb%a7%8c%eb%93%a4%eb%93%af-%eb%8d%b0%ec%8a%a4%ed%81%ac%ed%86%b1-%ec%95%b1-%eb%a7%8c%eb%93%a4%ea%b8%b0/</link>
		<pubDate>Fri, 04 Dec 2015 07:00:11 +0000</pubDate>
		<dc:creator><![CDATA[tom]]></dc:creator>
		<guid isPermaLink="false">http://developer.dramancompany.com/?p=183</guid>
		<description></description>
		<content:encoded><![CDATA[이번에 출시된 리멤버 데스크톱 앱은 Electron을 이용하여 개발되었습니다. 이 글에서는 HTML, CSS, JavaScript만을 이용하여 Windows, Mac, Linux 등 크로스 플랫폼으로 데스크톱 앱을&nbsp;만들 수 있게 해주는 Electron에 대하여 이야기해 보려고 합니다. 세 가지 플랫폼 중 가장 많이 사용하시게 될 것 같은 Windows를 기준으로 작성했습니다.
이 글이&nbsp;독자분들에게&nbsp;Electron에 대하여 접할 좋은 기회가 되고 프로젝트 도입 여부에 대한 결정에 도움이 되는 글이 되었으면 좋겠습니다.

&nbsp;
<h1 id="electron-"><strong>Electron</strong></h1>
<h1 id="-" style="margin-top: 0px;"><a href="https://blog.dramancompany.com/wp-content/uploads/2015/11/스크린샷-2015-11-16-오후-4.42.42.png"><img class="size-large wp-image-185 aligncenter" src="https://blog.dramancompany.com/wp-content/uploads/2015/11/스크린샷-2015-11-16-오후-4.42.42-1024x382.png" alt="Electron" width="660" height="246"></a></h1>
<a href="http://electron.atom.io/" target="_blank" rel="noopener noreferrer">Electron</a>은 <a href="https://www.chromium.org/" target="_blank" rel="noopener noreferrer">Chromium</a>과 <a href="https://nodejs.org" target="_blank" rel="noopener noreferrer">Node.js</a>를 이용하여 데스크톱 앱을 HTML, CSS, JavaScript로 쉽게&nbsp;만들 수 있게 해주는 프레임워크입니다.&nbsp;GitHub에서 Atom editor를 만들기 위해서 시작된 프로젝트로 원래 이름은 Atom Shell이었다가&nbsp;Electon으로 이름이 바뀌었습니다.&nbsp;앞서 말씀드린 것과 같이 Electon을 이용하면 쉽게 cross-platform 앱을 개발할 수 있습니다. &nbsp;또한&nbsp;웹 개발자분들도 익숙한 언어와 코드를 재사용하여 쉽게 데스크톱 앱을 개발할 수 있습니다.

혹시 Electron과 비슷한 방식으로 데스크톱 앱을 개발할 수 있는 <a href="https://github.com/nwjs/nw.js/" target="_blank" rel="noopener noreferrer">NW.js(Node Webkit)</a>를 알고 계신분들은 <a href="https://github.com/atom/electron/blob/master/docs-translations/ko-KR/development/atom-shell-vs-node-webkit.md" target="_blank" rel="noopener noreferrer">여기</a>에서 Electron과 NW.js이 어떻게 다른지 찾아보실 수 있습니다.

&nbsp;
<h1 id="electron-"><strong>Electron을 사용한 이유</strong></h1>
리멤버의 데스크톱&nbsp;앱을&nbsp;만들기 위하여 여러 방식을 고민해본 결과 Electron을 고른 이유 중 가장 큰 이유는 다음 세 가지었습니다.
<h4 id="electron-">Electron으로 만들어진 앱들</h4>
<a href="https://blog.dramancompany.com/wp-content/uploads/2015/11/스크린샷-2015-11-16-오후-4.48.30.png"><img class="alignnone size-medium wp-image-186 aligncenter" src="https://blog.dramancompany.com/wp-content/uploads/2015/11/스크린샷-2015-11-16-오후-4.48.30-300x96.png" alt="스크린샷 2015-11-16 오후 4.48.30" width="300" height="96"></a>

<a href="http://electron.atom.io/#built-on-electron" target="_blank" rel="noopener noreferrer">여기</a>를 확인해보시면 Electron을 이용하여 만들어진 앱들이 나와 있습니다. 아마 제일 앞의 세 개가&nbsp;낯익으실 텐데, GitHub의 text editor인 Atom, Slack Technologies의 협업 메신저인 Slack, MS의 Visual Studio Code가 있습니다.&nbsp;세 가지&nbsp;앱 모두 제가 사용을 하는 앱이고(Atom과 Slack은 컴퓨터가 켜져 있는 시간의 99%) Mac과 Windows&nbsp;모두 그 퀄리티에 만족을 하면서 사용하고 있었기 때문에 Electon으로도 충분히 좋은 앱을 만들 수 있다고 판단했습니다.
<h4 id="squirrel-updater">Squirrel&nbsp;인스톨러</h4>
&nbsp;
<p style="text-align: center;"><a href="https://blog.dramancompany.com/wp-content/uploads/2015/11/5743792.png"><img class="size-full wp-image-190 aligncenter" src="https://blog.dramancompany.com/wp-content/uploads/2015/11/5743792.png" alt="5743792" width="200" height="200"></a></p>
Slack이나 Atom을 Windows 환경에서 인스톨러를 실행할 경우 기존의&nbsp;'다음', '다음' 그리고 '다음'의 과정 없이 로딩 이미지가 잠깐 뜨다가 바로 앱이 실행됩니다. 그리고&nbsp;업데이트도 Chrome처럼 언제 일어났는지도 눈치챌 수 없을 정도로 자연스럽게 일어납니다.&nbsp;이는 <a href="https://github.com/Squirrel" target="_blank" rel="noopener noreferrer">Squirrel 인스톨러</a>가 자동으로 해주는 부분입니다.
꼭 Squirrel 인스톨러를 사용해야 하는 것은 아니지만, Slack이나 Atom 같은 경우 Squirrel 인스톨러를 사용하여 만들었고 이들이 주장하는 "인스톨과 업데이트는 간단해야 한다"가 제일 만족스러운 부분이었습니다. 정말 인스톨러나 업데이터를 만드는데 신경을 거의 쓰지 않아도 됩니다(한번 이해만 한다면..).
<h4 id="squirrel-updater">익숙함, 간단함 그리고 편리함</h4>
저는 주로 웹 개발을 해왔기 때문에 HTML, CSS, JavaScript에는 매우 익숙하고 Window나 Mac 등 데스크톱 앱 개발에는 거의 경험이 없었습니다. 저 같은 웹 개발자한테는 추가적인 학습 시간을 매우 조금 들이고 세 가지 플랫폼의 앱을 만들 수 있다는 것, 그리고 익숙하므로 빨리 좋은 질로 만들 수 있다는 게 가장 큰 이유였습니다.
또한, Main 프로세스는 Node.js 4.1 버전을 사용하고 있어서 ES6도 맘껏 사용해도 되며 Renderer 프로세스는 Chromium 기반이기 때문에 IE나 타 브라우저에 대한 호환성 걱정 없이 HTML5, CSS3 등 Chromium이 지원하는 모든기능들을 사용하실 수 있었습니다.

&nbsp;
<h4 id="squirrel-updater"><strong><span style="font-size: 35px; line-height: 1.2308;">구조</span></strong></h4>
공식 홈페이지에 나와 있는 <a href="https://github.com/atom/electron/tree/master/docs-translations/ko-KR" target="_blank" rel="noopener noreferrer">튜토리얼</a>이 잘 되어있다고 생각하기 때문에 이 글에서는 개발 방법에 대한 얘기는&nbsp;별도로 다루지 않도록 하겠습니다.
그보다 큰 그림을 이해하기 위한 구조를 소개해드리겠습니다.

<a href="https://blog.dramancompany.com/wp-content/uploads/2015/11/스크린샷-2015-11-16-오후-4.17.55.png"><img class="size-large wp-image-187 aligncenter" src="https://blog.dramancompany.com/wp-content/uploads/2015/11/스크린샷-2015-11-16-오후-4.17.55-1024x777.png" alt="스크린샷 2015-11-16 오후 4.17.55" width="660" height="501"></a>
크게 두 가지 프로세스가 존재합니다. Renderer 프로세스는 Chromium&nbsp;기반으로 HTML, CSS, JavaScript를 이용하여 웹 페이지를 만들듯 view를 구성합니다. Main 프로세스는 Node.js 기반으로 일반적인 Node application이라고 생각하시면 되겠습니다. 모든 node 모듈들을 가져다 쓸 수 있습니다. 그리고 각 프로세스마다 electron 앱에&nbsp;접근해서 사용할 수 있게 만든 electon에서 제공되는 API들이 담긴 모듈들이 있습니다. 그리고 두 process 사이를 통신할 수 있게 해주는 ipc와 remote module이 존재합니다.
웹 개발자는 원래 front-end를 개발하던 것과 같이 Renderer 프로세스 쪽을 개발하고 back-end를 Node.js로 개발하듯 Main 프로세스 쪽을 개발하면 됩니다. 그때그때 필요한 Electron의 API만 찾아 쓰면 기존의 웹 개발하던 것과 차이가 거의 없습니다.

&nbsp;
<h1 id="-"><strong>빌드</strong></h1>
Squirrel.Windows를 이용하여 Windows 플랫폼을 겨냥한 Electron의 빌드는 크게 다음 과정들을 거치게 됩니다.
<ol>
 	<li style="text-align: left;">프로젝트 경로 설정, 어플리케이션 파일 배치</li>
 	<li style="text-align: left;">메인 js 파일에 squirrel listener 관련 코드 추가</li>
 	<li style="text-align: left;">electron-packager를 이용해서 패키징하여&nbsp;겨냥한&nbsp;architecture에
대한 프로그램 폴더 생성</li>
 	<li style="text-align: left;">nuget spec 파일 생성</li>
 	<li style="text-align: left;">Package.nuget 파일 수정</li>
 	<li style="text-align: left;">spec 파일을 이용해서 nuget package 생성</li>
 	<li style="text-align: left;">Squirrel.Windows를 이용해서 인스톨러 생성</li>
 	<li style="text-align: left;">인스톨러 아이콘, 이름 수정</li>
 	<li style="text-align: left;">인스톨러 디지털 서명</li>
</ol>
1, 2번은 기본 설정이고 3번부터가 매 빌드마다 해줘야 하는 작업입니다.
저는 처음에 문서에 나와 있는 방법대로 위 과정들에 대하여 Grunt task들을 직접 다 만들었었는데, Squirrel 인스톨러의 문서화가 최신화도 안 되어있고 엉망이라 많은 좌절을 겪었습니다..

결국 Squirrel과 관련된 다 만들었던 부분들을 걷어내고 제가 사용하는 모듈과 grunt 플러그인은 다음 두 가지입니다(참고로 아래 두 가지까지도 합쳐서 하나로 만든&nbsp;<a href="https://github.com/ammeep/electron-accelerator" target="_blank" rel="noopener noreferrer">electron-accelerator</a>도 있긴 합니다).
<h4 id="electron-packager"><a href="https://github.com/maxogden/electron-packager" target="_blank" rel="noopener noreferrer">electron-packager</a></h4>
Node.js 모듈로 electron 프로젝트를 원하는 플랫폼 환경에 맞춰 빌드를 해줍니다. Windows는 exe,&nbsp;OS X는 app 그리고 ia32,&nbsp; x64과 같이 아키텍쳐도 맞춰서 빌드할 수 있습니다.
<h4 id="grunt-electron-installer"><a href="https://github.com/atom/grunt-electron-installer" target="_blank" rel="noopener noreferrer">grunt-electron-installer</a></h4>
Grunt 플러그인으로 빌드된 앱 폴더를 가지고 Squirrel.Windows를 이용하여 실제 installer까지&nbsp;만들어주고 installer에 대한 수정, code signing 등까지 책임져 줍니다. 즉, 위 과정들에서 4~9를&nbsp;해준다고 생각하시면 됩니다.
<h4 id="-">추가로</h4>
인스톨러를 만든 뒤 배포를 하기 위해서는 <strong>디지털&nbsp;서명</strong>을 꼭 해야 합니다. 그렇지 않을 경우 IE, Windows의 SmartScreen Filter와 Chrome에게 매우 위험한 파일 취급을 받게 됩니다. Squirrel은 편하게도 실행 시 몇 가지 인자들로 이런 인증과정까지 자동으로 진행해줍니다. 디지털 서명과 배포에 대한 부분은 나중에 다음 글에서 다루도록 하겠습니다.

&nbsp;
<h1 id="-"><strong>개발 후</strong></h1>
이렇게 그리 길지 않은 시간 동안 리멤버 데스크톱 앱을 개발하였습니다. 개발하기 전에 약 1주간 스터디 기간을 가졌었는데, 개발 후에 1주 안에 찾아내지 못했던 부분들도 있었다고 생각합니다. 개발 후에 느낀 장단점을 얘기해보겠습니다.
<h2>장점</h2>
<h3 id="-">매우 낮은 진입장벽, 개발 속도</h3>
앞서 말씀드렸지만 Electon 개발은 HTML, CSS, JavaScript, Node.js로 이루어져 있다 보니 저같이 웹 개발자에게는 새로 배워야 할 부분이 거의&nbsp;없었습니다. 실제로는 ES6, Chromium 덕분에 기존의 웹 개발보다도 어떤 면에서는 더 빠른 개발 속도를 낼 수 있었습니다. 사실 별도의 Windows나 Mac 개발자를 구하지 않아도 웹 개발자가 빠른 속도로 개발할 수 있다는 건 정말 큰 장점이라고 생각합니다.
<h3 id="-cross-platform-">손쉬운 cross-platform 지원</h3>
물론 리멤버는 이번에 Windows 용 앱만 개발했지만 타 플랫폼을 위한 앱을 개발한다 하여도 이번에 들인 노력보다 훨씬 더 적은 노력으로 완성할 수 있습니다(하지만 이 말을 '정말 쉬워서 하루면 된다'로 받아들이지는 말아주셨으면 합니다. 플랫폼별 제공해주는 API가 다르므로 분기 처리나 그 플랫폼별 인스톨러 개발 작업으로 생각보다는 많은 노력이 필요할 수 있습니다).
<h3 id="-cross-platform-">가벼운 설치와 업데이트</h3>
Squirrel이 강조했던 것처럼, 설치는 더블클릭만으로 앱이 순식간에 설치 과정을 거쳐 실행까지 됩니다. 그리고 업데이트는 자동으로 백그라운드에서 이루어지며 원하면 사용자도 모르게 자동업데이트를 진행할 수 있습니다. &nbsp;그리고 이 부분들에 대해서 별도의 작업은 거의 필요 없고 대부분 Squirrel 인스톨러가 처리해줍니다.

&nbsp;
<h2>단점</h2>
<h3 id="project-stable-">Project가 아직은 stable 하지 않다.</h3>
Project가 stable 하지 않다는 부분은 다음 세 가지 측면에서 얘기할 수 있습니다.
<h4 id="-">버그</h4>
기능들이 빨리 추가가 되고 버그들도 빨리 고쳐지고 있지만, 아직 부족한 부분들이 많이 있습니다. 실제로 Slack이나 Atom을 봐도 major 한 버그들을 공통으로 가지고 있는 경우도 있습니다.
<h4 id="-">기능</h4>
Electron이 기본적인 데스크톱 앱을 만드는 데는 문제가 없을지라도 정통적인 방법으로 만든 데스크톱 앱에&nbsp;비하면 제약이 많습니다. 예를 들면 OS의 API 같은 경우는 electon에서&nbsp;API를 제공해야 하나, 아직 제공되고 있는 것들은 매우 기본적인 것들뿐입니다.
<h4 id="-">문서화</h4>
Electron 자체는 문서화가 어느 정도 되어있을지 몰라도, Electron과 같이 사용하게 되는 Squirrel.Windows와 같은 installer 등 다른 부분들에 대해서는 문서화가 매우 부족합니다.
<h4 id="-">참고 자료</h4>
Stack Overflow에 현재(2015년 11월 16일) 기준 electron으로 태그 되어있는 질문은 292개밖에 되지 않습니다. 133,295개인 AngularJS에 비하면 초라하기 그지없습니다. 게다가 그중 사실&nbsp;꽤 많은(절반 이상?) 질문들에 답변조차 없습니다. 구글링으로 검색하는 것보다 그냥 git project의 issue 내에서 검색을 하거나 소스 코드를 직접&nbsp;찾아보시는 게 더 빠른 경우가 많습니다(그리고 어쩌면 내가 급하게 원하는 기능이 추가되길 기다리는 것보다 커미터가 되시는게 더 빠를수도있습니다).

&nbsp;
<h1 id="-"><strong>마무리</strong></h1>
Electon은 매우 활발하게 개발되고 있는 프로젝트입니다. 실제로 "이 기능이 있나..", "이 버그가.."하면서&nbsp;이슈를 찾다 보다 보면 comment들이 1 day ago와 같이 실시간으로 해결되고 있는 경우를 많이 보게 됩니다.&nbsp;그러므로 저번주에 필요했지만 없던 기능이 오늘은 생겨있는 경우가 많습니다.&nbsp;이렇게 아직 안정화되어있지 않지만 확실한 장점은 가지고 있는 프레임워크입니다. 사용하는 프로젝트의 목적이나 성격에 맞춰서 사용하시길 바랍니다.
깊게 들어가지 않고 처음 접하는 분들을 기준으로 적은 글이니 진행하시다 막히는 부분들이 있으면 댓글이나 연락주셔도 괜찮습니다. 아 물론 제가 잘못 알고 적은 부분들에 대한 피드백도 환영입니다 :).]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>183</wp:post_id>
		<wp:post_date><![CDATA[2015-12-04 16:00:11]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-12-04 07:00:11]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-02-24 00:28:55]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-02-23 15:28:55]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[electron%ec%9c%bc%eb%a1%9c-%ec%9b%b9-%ec%95%b1-%eb%a7%8c%eb%93%a4%eb%93%af-%eb%8d%b0%ec%8a%a4%ed%81%ac%ed%86%b1-%ec%95%b1-%eb%a7%8c%eb%93%a4%ea%b8%b0]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="develop"><![CDATA[Tech]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[4]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729524621;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:2124;}i:1;a:1:{s:2:"id";i:966;}i:2;a:1:{s:2:"id";i:1081;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_single_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:17:{s:8:"subtitle";s:0:"";s:6:"format";s:8:"standard";s:5:"video";s:0:"";s:7:"gallery";s:0:"";s:11:"source_name";s:0:"";s:10:"source_url";s:0:"";s:8:"via_name";s:0:"";s:7:"via_url";s:0:"";s:8:"override";a:1:{i:0;a:11:{s:18:"single_blog_custom";s:0:"";s:7:"sidebar";s:0:"";s:14:"second_sidebar";s:0:"";s:14:"share_position";s:0:"";s:17:"share_float_style";s:0:"";s:16:"post_date_format";s:0:"";s:23:"post_date_format_custom";s:0:"";s:21:"post_reading_time_wpm";s:0:"";s:20:"zoom_button_out_step";s:1:"1";s:19:"zoom_button_in_step";s:1:"1";s:17:"number_popup_post";s:1:"1";}}s:14:"image_override";a:1:{i:0;a:2:{s:26:"single_post_thumbnail_size";s:0:"";s:24:"single_post_gallery_size";s:0:"";}}s:22:"trending_post_position";s:0:"";s:19:"trending_post_label";s:0:"";s:20:"sponsored_post_label";s:0:"";s:19:"sponsored_post_name";s:0:"";s:18:"sponsored_post_url";s:0:"";s:19:"sponsored_post_logo";s:0:"";s:19:"sponsored_post_desc";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle_flag]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[185]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_format_gallery_images]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:2:"id";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>4</wp:comment_id>
			<wp:comment_author><![CDATA[박세호]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[genkino@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[1.236.134.86]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-12-04 18:17:39]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-12-04 09:17:39]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[저도 요새 electron으로 뭔가를 만들어 보려고 준비 중인데 글 내용대로 레퍼런스가 많지 않아 답답하던 차에 반가운 글을 발견했네요. 막히는 부분이 있으면 문의 드려도 괜찮겠지요? :)]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>5</wp:comment_id>
			<wp:comment_author><![CDATA[Tom Kim]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[tom@dramancompany.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[106.250.181.163]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-12-07 17:09:56]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-12-07 08:09:56]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[당연하죠 언제든지 환영입니다!!
아마도 제가 세호님한테 훨씬 더 많이 배우게 될 것 같네요 :D]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>4</wp:comment_parent>
			<wp:comment_user_id>4</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>399</wp:comment_id>
			<wp:comment_author><![CDATA[미르아빠]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[chokman@naver.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://blog.naver.com/chokman</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[59.19.38.250]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-07-31 02:08:15]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-07-30 17:08:15]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[힘을 많이 얻었습니다. 고맙습니다.
프로젝트 고민을 많이 했는데 electron로 진행하려고 맘먹게 되었습니다.
참조 많이 하겠습니다.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1469898495.813424;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>601</wp:comment_id>
			<wp:comment_author><![CDATA[Tom Kim]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[tom.kim@dramancompany.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[106.250.181.163]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-08-03 10:11:45]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-08-03 01:11:45]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[미르아빠님 도움이 되었다니 다행입니다 :)
http://www.slideshare.net/tomkim336/ss-63591419
위 슬라이드도 참고하시면 도움이 될 것 같습니다.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>399</wp:comment_parent>
			<wp:comment_user_id>4</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1470186705.593707;s:5:"event";s:9:"check-ham";s:4:"user";s:3:"tom";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>803</wp:comment_id>
			<wp:comment_author><![CDATA[미르아빠]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[chokman@naver.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[59.19.38.250]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-10-04 01:24:55]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-10-03 16:24:55]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[안녕하세요
electron + angular2 작업 테스트를 하고 있습니다.
https://github.com/rajayogan/angular2-desktop-new

여기서 자료를 받아서 실행해보았습니다.
실행은 되는데 한글을 넣으니 깨져 나옵니다.
한글 관련해서 설정하는 부분이 있는지 알 수 있을까요..
혼자 작업을 진행하는데 잘 알지못해 버벅이고 있습니다. ㅜㅜ
혹시 도움될만한 글이 있을까요? 찾다찾다 여기에 글 남겨봅니다]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1475511895.477144;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>804</wp:comment_id>
			<wp:comment_author><![CDATA[미르아빠]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[chokman@naver.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[59.19.38.250]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-10-04 01:45:37]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-10-03 16:45:37]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[죄송합니다..ㅜㅜ
제가 문서만 찾아보고 헛 삽질을 했습니다.
index.html에 한글 관련 메타태그에 전혀 내용이 없었습니다.
귀찮게 죄송합니다.
좋은 하루되십시오]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1475513137.053429;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>978</wp:comment_id>
			<wp:comment_author><![CDATA[Windy Choi]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[swaf.korea@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[203.234.35.11]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-03-30 13:26:43]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-03-30 04:26:43]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Electron으로 구글링하다가 우연히 오게됐는데 여기서 Tom과 Sean을 보게 되는군요.
좋은글 잘 읽었고, 모두 반가워요.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>4</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1490848003.718806;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>1411</wp:comment_id>
			<wp:comment_author><![CDATA[빌립]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[jpcho89@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[210.98.49.253]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-08-16 14:32:50]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-08-16 05:32:50]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[리멤버 잘 쓰고 있는데, 센터에서 개발하는 프로그램도 Electron을 이용하여 개발하고 있습니다.  빨리 안정화가 되면 좋겠네요.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1502861570.833949;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>2245</wp:comment_id>
			<wp:comment_author><![CDATA[나은성]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[hydrogen03@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[211.59.173.96]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2018-09-08 21:56:43]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2018-09-08 12:56:43]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[electron은 nodejs 를 배우다 최근 알게됐습니다.
플랫폼 독립이 가능하다 했는데요.
위 설명에는 개발에 nodejs를 필요로 한다 했는데
그렇다면 타겟 시스템은 nodejs가 없이도 구동이 되나요?
(자바를 예로보면 타겟에 반드시 jvm환경이 있어야 작동.)

다른 궁금한점은  C코드로 작성된 .dll과 연동하는  App도 만들수 있나요?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1536411403.763142;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>5518</wp:comment_id>
			<wp:comment_author><![CDATA[김성안]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[pcplove852@naver.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.28.217]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2020-04-08 16:30:33]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2020-04-08 07:30:33]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[안녕하세요
일렉트론으로 앱 개발을 할 계획중인 대학생입니다.
일렉트론이 C/C++ 와도 연동이 되는지 여부를 알고싶은데 혹시 알려주실 수 있나요?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1586331033.993111;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[Tom과 Jaden의 첫 페어 프로그래밍 도전기]]></title>
		<link>https://blog.dramancompany.com/2015/11/tom%ea%b3%bc-jaden%ec%9d%98-%ec%b2%ab-%ed%8e%98%ec%96%b4-%ed%94%84%eb%a1%9c%ea%b7%b8%eb%9e%98%eb%b0%8d-%eb%8f%84%ec%a0%84%ea%b8%b0/</link>
		<pubDate>Wed, 18 Nov 2015 02:00:27 +0000</pubDate>
		<dc:creator><![CDATA[tom]]></dc:creator>
		<guid isPermaLink="false">http://developer.dramancompany.com/?p=199</guid>
		<description></description>
		<content:encoded><![CDATA[<h1></h1>
이 글은 처음으로 페어 프로그래밍(Pair programming)을 시도해본 두 사람의 이야기입니다. 둘 다 처음 진행해본 페어 프로그래밍인 만큼 매우 잘 이해하고 진행한 것도 아니며 최적의 방식으로 진행하지도 못했습니다. 하지만 1주일간 진행해보며 페어 프로그래밍을 처음 접해본 사람의 입장에서 진행한 방법과 느낀 점들을 적어보았습니다. 페어 프로그래밍을 시도해보고 싶으나 시도해보지 못한 분들에게 도움이 되는 글이었으면 좋겠습니다.

&nbsp;
<h1><b>배경</b></h1>
<h2>등장인물</h2>
<h3>Tom</h3>
<ul>
 	<li>리멤버 PC웹 버전 개발</li>
 	<li>Backbone.js를 이용하여 Single-page application(이하 SPA) &nbsp;개발 경험 있음</li>
 	<li>올해 초에 AngularJS를 처음 접하여 리멤버 PC웹 버전을 AngularJS로 개발(SPA)</li>
 	<li>리멤버 PC웹 버전의 서버 사이드를 Ruby on Rails(이하 RoR)로 개발</li>
</ul>
<h3>Jaden</h3>
<ul>
 	<li>리멤버 백오피스(타이피스트, 어드민 시스템 등. 이하 B/O), API 등의 프로젝트들 개발</li>
 	<li>특별한 JavaScript 프레임워크 없이 jQuery만 이용하여 직접 프레임워크을 만들어서 사용</li>
 	<li>B/O 프로젝트들을 SPA가 아닌 매번 페이지 로드를 하는 Multi-page application(이하 MPA)으로 개발</li>
 	<li>모든 B/O 프로젝트의 서버 사이드를 RoR로 개발</li>
</ul>
&nbsp;
<h2>상황</h2>
<h3>상황 1</h3>
MPA로 B/O 제품들을 개발하던 Jaden은 시스템 속도 개선, 생산성 향상 그리고 유지 보수성의 향상을 위하여 기존 프론트 부분의 재개발과 신규 개발에 대하여 AngularJS를 도입하려 했습니다. 그중 가장 먼저 도입하기로 결정된 부분은 타이피스트의 타이핑 화면을 SPA로 변경하는 작업이었습니다.
<h3>상황 2</h3>
입사 이래 몇 개월간 플랫폼이 달라 고독하게 개발하던 Tom과 마찬가지로 몇 년간 고독하게 개발하던 Jaden은 다른 사람과 같이 머리를 맞대고 고민을 하며 개발할 기회에 매우 목말라 있었습니다.
<h3>상황 3</h3>
마침 몇 개월 전에 API 개발을 맡게 된 분들이 페어 프로그래밍을 처음 시도하셨었고, 그 경험에 대한 좋은 피드백을 주셨었습니다.

이런 세 가지 상황에서&nbsp;Tom과 Jaden의 페어 프로그래밍은 좋은 해답으로 다가왔습니다. 이렇게 이번 작업에 대하여 주저 없이 약 1주일간 페어 프로그래밍을 진행하기로 했습니다.

&nbsp;
<h1><b>기대</b></h1>
이번 페어 프로그래밍을 진행하기 전에 저희가 기대했던 부분들은 크게 네 가지가 있었습니다.

첫 번째,&nbsp;이번 작업은 AngularJS의 부분이 매우 큰 비중을 담당했기 때문에 AngularJS에 조금 더 익숙한 Tom이 아직 덜 익숙한 Jaden이 더 빨리 AngularJS에 적응할 수 있게 도와줄 수 있을 것이다. 또한, 반대로 RoR에 훨씬 더 익숙한 Jaden과 함께 하면서 Tom도 RoR에 더 쉽게 적응할 수 있을 것이다.

두 번째, 개발을 진행하면서 개인이 하나의 프로젝트를 맡다 보니 문제에 부딪혔을 때, 상의할 사람이 없어서 답을 내면서도 이게 최선인지 찝찝한 느낌이 들었던 부분들을 해소할 수 있을 것이다.

세 번째, 혼자서 개발할 경우 귀차니즘에 의하여 생기는 나쁜 습관들을 고칠 수 있는 기회가 될 것이다.

네 번째, 더욱더 끈끈한 동료애!

&nbsp;
<h1><b>페어 프로그래밍</b></h1>
위키피디아에서 <a href="https://en.wikipedia.org/wiki/Pair_programming" target="_blank" rel="noopener noreferrer">페어 프로그래밍</a>을 검색하면 다음과 같은 장점들을 얘기하고 있습니다.
<ul>
 	<li><strong>경제성</strong> - 페어 프로그래밍을 진행하면 약 15%의 시간이 더 걸리지만, 결과물은 약 15%의 결함이 줄어든다.</li>
 	<li><strong>디자인 품질</strong> - 혼자보다 둘이서 머리를 맞댈 경우 더 좋은 디자인 품질이 나온다.</li>
 	<li><strong>만족도</strong> - 약 96%의 프로그래머들이 혼자 일하는 것을 더 선호하지만 95%의 프로그래머들은 페어 프로그래밍을 할 경우 더 코드에 대하여 만족감을 느낀다.</li>
 	<li><strong>배움</strong> - 서로 다른 지식을 가지고 있는 프로그래머들이 같이 일을 하게 되면서 지식 공유가 활발히 이루어진다.</li>
 	<li><strong>팀빌딩, 커뮤니케이션</strong> - 서로 문제 해결을 하면서 좀 더 커뮤니케이션이 잘 된다.</li>
</ul>
자 이렇게 좋은 것이라는 것은 이제 알겠으니, 어떻게 진행해야 하는 걸까요?&nbsp;사실 어디에도 그 방법에 대한 정형화된 확실한 룰이 존재하지는 않습니다. 누구는 '운전자'와 '조수' 역할을 구분하여 30분 간격으로 자리를 이동하면서 운전자가 운전(코딩)을 하고 조수가 옆에서 조수일(의견 제시)을 하라고 합니다. 하지만 다른 곳에서는 또 다른 방법을 제시합니다.
저희는 다음과 같은 규칙을 정하여 진행했습니다.
<ul>
 	<li>1대의 컴퓨터로 진행한다</li>
 	<li>1시간 단위로 번갈아가며 키보드를 잡는다 (턴제)</li>
 	<li>무엇이든 타이핑 하기 전에는 둘 다 무엇을 적을지 합의를 하고 적는다</li>
 	<li>즉 타이핑만 번갈아가며 할 뿐 생각의 역할은 별도로 두지 않는다</li>
</ul>
미리 말씀드리면 아무래도 키보드를 잡고 있지 않는 사람이 조금 집중도가 떨어지는 느낌이 들어서 키보드와 트랙패드를 두 개씩 놓고 둘 다 동시에 키보드를 잡는 방식으로 변경했습니다.

&nbsp;
<h1><strong>진행 일기</strong></h1>
<h2><strong>Day 1 (월)</strong></h2>
우선 Jaden이 일부 만들어놓은 명함 타이핑 화면의 코드에 대한 설명과 그 구조나 코드에 대한 질의가 이뤄졌습니다. 또한 기존 네이밍 룰이나 코딩 컨벤션에 맞춰서 확실한 규칙을 정했습니다. 어느 정도의 설명과 약속이 이뤄진 후에는 기존에 일부 짜여있던 코드들에 대해서 완전히 처음부터(변수명부터) 다시 짚고 넘어가며 변경이 필요한 부분들을 변경했습니다.
그리고 전체 아키텍처, flow의 초안을 내놓았습니다. 기존의 뼈대에서 전체 생명 주기에 대한 로직들을 쭉 훑고 변경해야 할 부분들을 계속 변경해 나갔습니다.
그 결과 첫날에는 핵심이 되는 컨트롤러에 대한 리팩토링이 완성되었고, 전체 구조나 flow들에 대한 초안이 나왔습니다.
<h3>피드백</h3>
<ul>
 	<li><strong>Tom&nbsp;</strong>-&nbsp;혼자 작업을 할 때 계속 손이 먼저 가서 생각을 적게 하는 버릇을 고칠 수 있게 되었다.</li>
 	<li><strong>Jaden</strong> - 페어 프로그래밍은 처음이라 뭐부터 어떻게 해야 할지 막막했지만 일단 내가 기존에 구현하면서 고민했던 부분부터 얘기를 시작하니 좋았다.</li>
</ul>
&nbsp;
<h2><strong>Day 2&nbsp;(화), Day 3 (수)</strong></h2>
어제의 핵심 컨트롤러 구현을 완료한 데 이어서, 다른 서비스들을 다시 돌아 보며 여러 상황들에 대한 처리를 어떻게 효율적으로 처리할 수 있을까에 대하여 여러 방안을 모색하며 고민을 했습니다.

턴제 방식의 페어 방식의 페어 프로그래밍을 진행하던 중, 둘 다 아무래도 처음 정했던 1시간이 애매한 시간이라는 생각이 들었습니다. 1시간이 집중도가 한참 높아질 때여서 1시간 마다 턴 변경을 자주 놓치게 되었고 그러다 보니 키보드를 잡고 있지 않은 사람의 집중도가 약간 떨어지는 경향이 있었습니다. 그래서 방식을 동시제로 변경했습니다. 다음 사진을 보시죠.

<a href="https://blog.dramancompany.com/wp-content/uploads/2015/11/pair_programming.jpg"><img class="aligncenter size-full wp-image-685" src="https://blog.dramancompany.com/wp-content/uploads/2015/11/pair_programming.jpg" alt="pair_programming" width="1280" height="720"></a>

&nbsp;

<span style="font-size: 18px;">사진 왼쪽의 노트북에서는 설계와 관련된 내용을 작성, 가운데의 모니터로 코드를 공유, 오른쪽의 노트북으로는 결과 실행을 합니다. 가운데의 키보드와 트랙패드는 우측 노트북과 연결하여 Tom이 사용하고 Jaden은 우측의 노트북으로 코드를 작성합니다.</span><a href="http://deopard.cafe24.com/wp-content/uploads/2015/10/pair_programming.jpg">
</a>

<a href="https://blog.dramancompany.com/wp-content/uploads/2015/11/Slack-for-iOS-Upload-1.jpg"><img class="aligncenter size-full wp-image-686" src="https://blog.dramancompany.com/wp-content/uploads/2015/11/Slack-for-iOS-Upload-1.jpg" alt="slack-for-ios-upload-1" width="1195" height="1436"></a> <a href="https://blog.dramancompany.com/wp-content/uploads/2015/11/Slack-for-iOS-Upload-2.jpg"><img class="aligncenter size-full wp-image-687" src="https://blog.dramancompany.com/wp-content/uploads/2015/11/Slack-for-iOS-Upload-2.jpg" alt="slack-for-ios-upload-2" width="3118" height="1818"></a>
<p style="text-align: center;"><em>&lt;혼자가 아닌 둘이니 개발 설계에 대해 토의도 하면서 화이트보드에 적을 수도 있습니다&gt;</em></p>

<h3>피드백</h3>
<ul>
 	<li><strong>Tom</strong> -&nbsp;확실히 생각을 멈추지 않게 된다. 형은 노트북, 나는 키보드를 이용하면서 동시에 코딩할 수 있는게 한 시간씩 번갈아 가는 것보다 더 집중되지 않을까? 이틀째라 그런지 약간의 집중도 저하는 있었던 것 같다.</li>
 	<li><strong>Jaden</strong> - 같은 코드를 보고 같이 고민을 하고 같이 논의를 하고 이러한 것이 첫날 보다 많이 자연스러워졌다고 느껴졌다. 코딩할 때도 한 번 더 생각하게 되고 좀 더 좋은 코드를 만들 수 있도록 노력하게 되는 것 같아 좋았다.&nbsp;탐 덕분에 하루하루 AngularJS랑도 가까워지는 느낌이 든다. 짜증 나게만 느껴지던 디버깅도 번갈아 가면서 진행하니 재미있었다.</li>
</ul>
&nbsp;
<h2><strong>Day 4&nbsp;(목), Day 5 (금)</strong></h2>
이날은 남은 일부 부분들을 마무리하고 종일 디버깅을 진행했습니다.
<h3>피드백</h3>
<ul>
 	<li><strong>Tom</strong> - 사실 개발하면서 단위단위로 개발과 동시에 테스팅을 진행하는 게 맞고 또 보통은 각자 그렇게 진행했는데, 이번 페어때는 페어 프로그래밍에만 집중해서 그런지 그러지 못했다. 이젠 서로 호흡을 알아 좀 더 잘 맞게 되는 것 같다. 같은 프로젝트를 따로 개발해도 코드나 팀워크 면에서 모두 잘 맞을 수 있을 것 같다.</li>
 	<li><strong>Jaden</strong> - 온종일 디버깅을 진행했다. 그래서 그런지 온종일 정신적인 데미지를 좀 입었다. 그래도 둘이 같이하니 빨리 진행되긴 했다.&nbsp;이젠 서로 코딩 스타일도 알게 되어 한 프로젝트에서 각자 개발을 진행해도 될 거 같다는 생각이 들었다.</li>
</ul>
&nbsp;
<h1><b>결론</b></h1>
<h2>Tom</h2>
<ul>
 	<li>같이 구현한 코드들에서&nbsp;버그가 없었다(!! 원래는 이게 더 무섭다)</li>
 	<li>혼자 일하는 것보다는 속도가 더딘 느낌은 났지만, 그만큼 한발 한발 안전하게 코딩을 하게 된 것 같고 테스팅, 유지보수까지 포함한 프로젝트 전체 싸이클에서는 시간이 적게 들어간 것 같다.</li>
 	<li>물론 전체적인 싸이클을 보면 시간이 많이 단축되었으나, 그건 한사람이 작업했을 때를 기준으로 한 것이다. 아무리 페어 프로그램이 130 혹은 그 이상의 효율성을 내도 둘이 각자 일을 하는 200의 업무량을 따라가기는 힘들다. 현실적으로 얼마나 자주, 어떤 조합으로 페어 프로그래밍을 진행해야 할지는 고민을 많이 해야 할 듯하다.</li>
 	<li>결과물을 보면 매우 만족스러운 설계나, 코드 품질이다.</li>
 	<li>고독하게 고민하고 코딩하던 외로움이 많이 해소되었다</li>
 	<li>지식 공유의 측면에서 Jaden이 혼자 AngularJS를 배우는 것보다 더 효율적으로 배울 수 있지 않았을까?</li>
 	<li>매우 만족스러운 결과를 가져왔지만, 이는 Jaden과 많이 친하고, 서로를 꽤 잘 아는 상황이었기 때문에 더 호흡이 잘 맞았던 것 같다. 모든 페어 프로그래밍이 이와 같은 좋은 결과만을 가져오지는 못할 것 같다.</li>
 	<li>새로 들어온 입사자와 페어 프로그래밍을 하면 좋을 것 같다. 코딩 컨벤션, 설계 방법들에 대해서 잘 맞출 수 있고, 또 기존의 코드도 가장 잘 알려줄 수 있는 방법인듯하다. 그리고 무엇보다도 보다 새로 오신 분이 &nbsp;더 적응하기 쉬워지고 빠르게 끈끈한 동료애가 생기지 않을까?</li>
</ul>
<h2>Jaden</h2>
<ul>
 	<li class="p1"><span class="s1">처음 진행했던 Pair programming임에도 불구하고 개인적으로 매우 만족이였다. </span></li>
 	<li class="p1"><span class="s1">우리가 목표로 한 기능을 개발하는데 예상보다 시간은 조금 더 들었지만, 작성한 코드들에 대해서 전반적인 품질이나 만족도도 높았다.</span></li>
 	<li class="p1">AngularJS를 보다 빨리 습득할 수 있었다.</li>
 	<li class="p1"><span class="s1">그 이유에서는 오랫동안 혼자 개발을 해온 탓에 좋지 않은 코딩 버릇도 생겼었고, 무엇보다 속도 위주의 개발을 해왔었는데, 둘이서 하니 코드 한 줄을 작성하는데도 신중해지고 다른 사람이 봐도 이해 가능한 코드를 작성하도록 노력하게 되는 것이 아닐까 하는 생각이 든다. </span></li>
 	<li class="p1"><span class="s1">기회가 있다면 자주 이러한 개발을 진행하고 싶다는 생각이 들었다.</span></li>
</ul>
&nbsp;

이렇게 일주일간 페어 프로그래밍을 진행해보았습니다. 이번 경험에 대하여 저희 둘은 만족도가 매우 높았습니다. 하지만 저와 Jaden은 평소에도 아주 친한 사이라 서로 성격이나 스타일을 잘 알고 있었기 때문에 더 높은 효율이 나왔을 수도 있습니다.
비록 저희와 같은 상황이 아니더라도 개인적으로는 시니어와 주니어의 지식 공유, 신규 입사자의 적응 등의 상황에서는 페어 프로그래밍이 매우 효과적일 것으로 생각합니다.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>199</wp:post_id>
		<wp:post_date><![CDATA[2015-11-18 11:00:27]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-11-18 02:00:27]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-02-24 00:29:50]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-02-23 15:29:50]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[tom%ea%b3%bc-jaden%ec%9d%98-%ec%b2%ab-%ed%8e%98%ec%96%b4-%ed%94%84%eb%a1%9c%ea%b7%b8%eb%9e%98%eb%b0%8d-%eb%8f%84%ec%a0%84%ea%b8%b0]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="develop"><![CDATA[Tech]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[4]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[right-sidebar]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_slogan]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_subslogan]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_header_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_scroll_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_bottom_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_footer_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_view_post_info]]></wp:meta_key>
		<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_post_icons]]></wp:meta_key>
		<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729465499;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:966;}i:1;a:1:{s:2:"id";i:586;}i:2;a:1:{s:2:"id";i:1783;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_dont_email_post_to_subs]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_single_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:17:{s:8:"subtitle";s:0:"";s:6:"format";s:8:"standard";s:5:"video";s:0:"";s:7:"gallery";s:0:"";s:11:"source_name";s:0:"";s:10:"source_url";s:0:"";s:8:"via_name";s:0:"";s:7:"via_url";s:0:"";s:8:"override";a:1:{i:0;a:11:{s:18:"single_blog_custom";s:0:"";s:7:"sidebar";s:0:"";s:14:"second_sidebar";s:0:"";s:14:"share_position";s:0:"";s:17:"share_float_style";s:0:"";s:16:"post_date_format";s:0:"";s:23:"post_date_format_custom";s:0:"";s:21:"post_reading_time_wpm";s:0:"";s:20:"zoom_button_out_step";s:1:"1";s:19:"zoom_button_in_step";s:1:"1";s:17:"number_popup_post";s:1:"1";}}s:14:"image_override";a:1:{i:0;a:2:{s:26:"single_post_thumbnail_size";s:0:"";s:24:"single_post_gallery_size";s:0:"";}}s:22:"trending_post_position";s:0:"";s:19:"trending_post_label";s:0:"";s:20:"sponsored_post_label";s:0:"";s:19:"sponsored_post_name";s:0:"";s:18:"sponsored_post_url";s:0:"";s:19:"sponsored_post_logo";s:0:"";s:19:"sponsored_post_desc";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle_flag]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[686]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_format_gallery_images]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:2:"id";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>796</wp:comment_id>
			<wp:comment_author><![CDATA[J]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[J@samsung.net]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[49.1.194.204]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-09-06 00:52:10]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-09-05 15:52:10]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[멋진 시도네요^^]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1473090730.136206;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>1906</wp:comment_id>
			<wp:comment_author><![CDATA[goohooh]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[piriri11@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[58.234.9.154]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2018-02-18 16:24:16]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2018-02-18 07:24:16]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[좋은 경험 공유해주셔서 감사합니다!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1518938656.659152;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA['처음' Windows 설치 파일을 '배포'하는 개발자들을 위하여]]></title>
		<link>https://blog.dramancompany.com/2015/12/%ec%b2%98%ec%9d%8c-windows-%ec%84%a4%ec%b9%98-%ed%8c%8c%ec%9d%bc%ec%9d%84-%eb%b0%b0%ed%8f%ac%ed%95%98%eb%8a%94-%ea%b0%9c%eb%b0%9c%ec%9e%90%eb%93%a4%ec%9d%84-%ec%9c%84%ed%95%98%ec%97%ac/</link>
		<pubDate>Thu, 17 Dec 2015 10:00:20 +0000</pubDate>
		<dc:creator><![CDATA[tom]]></dc:creator>
		<guid isPermaLink="false">http://developer.dramancompany.com/?p=211</guid>
		<description></description>
		<content:encoded><![CDATA[이번에 리멤버 Windows 데스크톱 버전을 개발하면서 처음으로 exe 파일로 설치 파일을 만들고 웹에 배포해 보았습니다. 이 글에서는 처음으로 설치 파일을 웹에 배포하는 과정 그리고 예상하지 못했던 난관에 대하여 설명해보려 합니다.

앱 개발을 완성하고 설치 파일까지 만들었다고 모든 것이 끝났다고 생각하시면 안됩니다. 별 생각 없이 설치 파일을 웹에 게시하고 웹페이지에서 다운을 받으면 다음과 같은 화면들을 만나게 됩니다.
<p style="text-align: center;"><a href="https://blog.dramancompany.com/wp-content/uploads/2015/11/스크린샷-2015-11-10-오후-6.35.09.png"><img class="alignnone size-large wp-image-212" src="https://blog.dramancompany.com/wp-content/uploads/2015/11/스크린샷-2015-11-10-오후-6.35.09-1024x264.png" alt="스크린샷 2015-11-10 오후 6.35.09" width="660" height="170"></a><em>&lt;이 파일은 위험해!&gt;</em></p>
<p style="text-align: center;"><a href="https://blog.dramancompany.com/wp-content/uploads/2015/11/alert.png"><img class="alignnone size-full wp-image-213" src="https://blog.dramancompany.com/wp-content/uploads/2015/11/alert.png" alt="alert" width="684" height="270"></a><em>&lt;Windows 설치 때 한 번 더 뜨는 경고..&gt;</em></p>
<p style="text-align: center;"><a href="https://blog.dramancompany.com/wp-content/uploads/2015/11/스크린샷-2015-11-17-오후-3.16.01.png"><img class="alignnone size-full wp-image-214" src="https://blog.dramancompany.com/wp-content/uploads/2015/11/스크린샷-2015-11-17-오후-3.16.01.png" alt="스크린샷 2015-11-17 오후 3.16.01" width="670" height="100"></a><em>&lt;Chrome도 예외는 아닙니다&gt;</em></p>
만약 사용자들이 이런 메시지를 본다면 기껏 열심히 만들어 놓은 앱이 악성 프로그램 취급받게 될 것입니다. 자, 앱 개발은 끝났을 지라도 앱 배포는 이제부터 시작입니다. 이 배포에 걸리는 시간은 생각하는 것보다 <em>오래</em> 걸립니다.

&nbsp;
<h1><strong>전자 서명</strong></h1>
배포를 하기 위하여 제일 먼저 해야할 것은 전자 서명입니다. 전자 서명의 원리 설명은 <a href="http://d2.naver.com/helloworld/744920" target="_blank" rel="noopener noreferrer">네이버 개발자 블로그</a>에 친절하고 자세히 나와 있습니다.&nbsp;간략하게 설명을 하자면, 코드 서명 인증서(Code Signing Certificate)를 가지고 서명한 파일은 내가 만든 파일임을 인증해주는 원산지 표시와 비슷합니다. 예를 들어 해커들이 리멤버와 똑같이 생긴 악성 설치파일을 만들어서 리멤버인 것처럼 배포를 하여도 드라마앤컴퍼니가 만들었다는 인증서가 없으므로 사용자들은 위험한 파일임을 알 수 있습니다.

전자 서명을 하기 위해서 처음으로 해야 할 일은 코드 서명 인증서를 구하는 일입니다. 아쉽게도 전자 서명은 무료가 아니라 유료로&nbsp;Symantec과 같은 인증서 발급 업체에서 회사 혹은 개인 정보를 인증받고 코드 서명 인증서(Code signing certificate)를 구매해야 합니다.

인증서 종류도 표준(Standard)과&nbsp;EV로 두 가지 종류가 있습니다. <a href="https://msdn.microsoft.com/ko-kr/library/windows/hardware/hh801887(v=vs.85).aspx" target="_blank" rel="noopener noreferrer">MSDN</a>에서 표준과 EV 인증서의 차이, 그리고 구매 방법들에 대하여 읽어보실 수 있습니다. EV 인증서가 가격이 더 비싸며 대부분의 경우에는&nbsp;표준을 사용하셔도 무방합니다.

이제 구매한 인증서와 MS에서 제공하는 <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa387764(v=vs.85).aspx" target="_blank" rel="noopener noreferrer">SignTool.exe</a>를 가지고 우리가 만든 프로그램을 서명합시다. SignTool에서는 다양한 인자들을 제공하는데 API 문서를 읽어 보시고 필요한 부분들을 사용하시면 됩니다. 저의 경우에는 다음 인자들을 사용했습니다.
<pre class="lang:default highlight:0 decode:true">&gt;./Signtool.exe sign
    /a
    /f "{인증서 경로}"
    /p "{인증서 비밀번호}"
    /t "{인증서에 따른 Timestamp 서버 주소 예) http://timestamp.verisign.com/scripts/timestamp.dll}"</pre>
이렇게 서명을 완료하면 다음과 같이 뭔가 부족해 보이던 설치파일이

<a href="https://blog.dramancompany.com/wp-content/uploads/2015/11/스크린샷-2015-11-17-오후-3.56.59.png"><img class="alignnone size-full wp-image-215" src="https://blog.dramancompany.com/wp-content/uploads/2015/11/스크린샷-2015-11-17-오후-3.56.59.png" alt="unsigned_installer" width="832" height="390"></a>

다음과 같이 든든하게 변합니다.

<a href="https://blog.dramancompany.com/wp-content/uploads/2015/11/스크린샷-2015-11-17-오후-3.58.52.png"><img class="alignnone size-full wp-image-216" src="https://blog.dramancompany.com/wp-content/uploads/2015/11/스크린샷-2015-11-17-오후-3.58.52.png" alt="signed_installer" width="934" height="576"></a>

<a href="https://blog.dramancompany.com/wp-content/uploads/2015/11/스크린샷-2015-11-17-오후-4.12.27.png"><img class="alignnone size-large wp-image-218" src="https://blog.dramancompany.com/wp-content/uploads/2015/11/스크린샷-2015-11-17-오후-4.12.27-822x1024.png" alt="스크린샷 2015-11-17 오후 4.12.27" width="660" height="822"></a>
<p style="text-align: center;"><em>&lt;올.바.른. 인증서입니다.&gt;</em></p>
그렇다고 이제 끝일까요? 저도 여기서 끝이라고 생각했습니다.. 이렇게 파일을 다시 서버에 올려서 다운 받아도 마찬가지로 IE와 Chrome은 여전히 우리의 파일을 위험하다고 얘기합니다. 서명이 잘못되었나.. 설마 비싼 인증서 잘못 구매한 건가.. 하루 종일 구글링을 하고 이곳 저곳에 수소문해봐도 명쾌한 답이 나오지 않았습니다. 그러다 결국은 설마 했던 '명성이 부족하다'라는 결론을 내리게 되었습니다.

&nbsp;
<h1><strong>명성치</strong></h1>
MS의&nbsp;SmartScreen filter는 인증서들에 대한 자체적인 white list DB를 관리하며 해당 인증서가 안전한지 아닌지 판단합니다. 새로 등록된 인증서로 만들어진 파일이 일정 횟수 이상, 일정 기간 이상 동안, 일정 사용자들에게 다운로드 되고, 신고 건수가 없어야 안전한 파일로 white list에 등록합니다(SmartScreen filter는 원래 IE에 존재하던 기능이었다가 Windows 8부터는 OS 자체&nbsp;기능으로도 추가되었습니다). Google의 Chrome도 이와 비슷한 로직을 가지고 있습니다.
즉, 일정 수준을 명성을 쌓기 전까지는 위험한 프로그램 취급을 하여 사용자들에게 경고 메시지를 보여 줍니다. 하지만 여기서 답답한 부분은 필요한 '다운로드 수', '다운로드 인원', '처리되는 기간' 등 중요한 정보들이 공개 되어있지 않다는 것입니다.
저희는 회사 직원(약 25명)에게 Chrome과 IE로 다운로드 요청을 몇차례에 걸쳐서 했습니다. IE의 SmartScreen은 처음 전사원이 받은 후 이틀 뒤에 통과됐습니다. 그리고 다시 전사원이 다운로드를 받았고 약 1주일 뒤에 Chrome에서 통과했습니다. &nbsp;그 이후로는 일부 사용자들에게 미리 공개를 하여 받게 했습니다. Windows 8 이상부터 생긴 OS자체의 ScreenFilter는 꽤 오랜 시간이 걸렸던 것 같습니다. 확실한 방법과 시간은 알 수 없지만 여유롭게 약 2~3주간 소수의 베타 테스터들에게 뿌려야 하는 시간을 염두해야 할 것 같습니다(누군가 위험판 프로그램이라고 신고를 하지 않는다는 가정하에).

&nbsp;
<h1><strong>마무리</strong></h1>
주위에 Windows 개발자 분들도 찾기 힘들지만 '최초로 인증서를 발급받아 배포를 경험'해본 분은 더더욱 찾기 힘들어서 많은 애를 먹었습니다. 사실 아직도 불확실한 시간에 무작정 기다려야 한다는 것 자체가 매우 마음에 들지는 않습니다. 그리고 인증서가 만료되어 새로운 인증서를 발급받으면 이 과정을 똑같이 한 번 더 거쳐야 하므로 이왕이면 유효기간이 긴 인증서를 사용하지 게 좋을 것 같습니다. 마지막으로 저희는 이렇게 인증을 받았지만, 이 방법을 제가 잘못 알고 있는 것이라면 꼭 알려주시면 감사하겠습니다 :) (개인적으로는 꼭 더 효율적인 방법이 있었으면 합니다).

&nbsp;
<h1><strong>참고 링크</strong></h1>
<h4>MSDN 블로그의 스마트 스크린과 코드 서명 이야기<strong>
</strong></h4>
http://blogs.msdn.com/b/ie/archive/2012/08/14/microsoft-smartscreen-amp-extended-validation-ev-code-signing-certificates.aspx
<h4><strong>'Chrome도 몇 일 기다리면 된다' 라는 토의 thread</strong></h4>
http://blogs.msdn.com/b/ie/archive/2012/08/14/microsoft-smartscreen-amp-extended-validation-ev-code-signing-certificates.aspx

&nbsp;

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>211</wp:post_id>
		<wp:post_date><![CDATA[2015-12-17 19:00:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-12-17 10:00:20]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-02-23 23:50:15]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-02-23 14:50:15]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%ec%b2%98%ec%9d%8c-windows-%ec%84%a4%ec%b9%98-%ed%8c%8c%ec%9d%bc%ec%9d%84-%eb%b0%b0%ed%8f%ac%ed%95%98%eb%8a%94-%ea%b0%9c%eb%b0%9c%ec%9e%90%eb%93%a4%ec%9d%84-%ec%9c%84%ed%95%98%ec%97%ac]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="develop"><![CDATA[Tech]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[4]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_e7be77be9f237a3a6c3741a3c3934131]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_49b497e77b397c915887bdf1725ca930]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_d0a0e2d9aaed198fed8378b207bbc9dd]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_a3e85c137376effbf44cd7c2b75cddde]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_ca245239f32c23b893a72b778abdb6e7]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[right-sidebar]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_slogan]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_subslogan]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_header_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_scroll_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_bottom_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_footer_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_view_post_info]]></wp:meta_key>
		<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_post_icons]]></wp:meta_key>
		<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729512112;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:3445;}i:1;a:1:{s:2:"id";i:183;}i:2;a:1:{s:2:"id";i:19;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_0b89676884078e4d2588ba241094d802]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_single_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:17:{s:8:"subtitle";s:0:"";s:6:"format";s:8:"standard";s:5:"video";s:0:"";s:7:"gallery";s:0:"";s:11:"source_name";s:0:"";s:10:"source_url";s:0:"";s:8:"via_name";s:0:"";s:7:"via_url";s:0:"";s:8:"override";a:1:{i:0;a:11:{s:18:"single_blog_custom";s:0:"";s:7:"sidebar";s:0:"";s:14:"second_sidebar";s:0:"";s:14:"share_position";s:0:"";s:17:"share_float_style";s:0:"";s:16:"post_date_format";s:0:"";s:23:"post_date_format_custom";s:0:"";s:21:"post_reading_time_wpm";s:0:"";s:20:"zoom_button_out_step";s:1:"1";s:19:"zoom_button_in_step";s:1:"1";s:17:"number_popup_post";s:1:"1";}}s:14:"image_override";a:1:{i:0;a:2:{s:26:"single_post_thumbnail_size";s:0:"";s:24:"single_post_gallery_size";s:0:"";}}s:22:"trending_post_position";s:0:"";s:19:"trending_post_label";s:0:"";s:20:"sponsored_post_label";s:0:"";s:19:"sponsored_post_name";s:0:"";s:18:"sponsored_post_url";s:0:"";s:19:"sponsored_post_logo";s:0:"";s:19:"sponsored_post_desc";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle_flag]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_a97be9437b4d0acdb3ebe734c8294269]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[213]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_format_gallery_images]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:2:"id";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>1283</wp:comment_id>
			<wp:comment_author><![CDATA[윈도우개발자]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[a@a.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[59.11.156.151]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-06-22 16:31:03]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-06-22 07:31:03]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[많은 도움이 되었습니다
감사합니다]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1498116663.482554;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>1455</wp:comment_id>
			<wp:comment_author><![CDATA[감사합니다.]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[dkflsdfls@naver.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[118.33.174.111]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-09-01 17:14:29]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-09-01 08:14:29]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[윈도우 데스크탑 프로그램 배포시 디지털 서명 때문에 고생중인데
먼저 시행착오를 겪은 내용을 알려주셔서 고맙습니다.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1504253669.461021;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>1543</wp:comment_id>
			<wp:comment_author><![CDATA[남건우]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[marullia98@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://goodlife-coding.tistory.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[220.85.58.253]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-10-20 20:50:06]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-10-20 11:50:06]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[정말 좋은 정보 감사합니다.

블로그에 좀 퍼가겠습니다. (출처 작성자 모두 밝힘)

감사합니다.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1508500206.746384;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>1739</wp:comment_id>
			<wp:comment_author><![CDATA[병준민]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[tlsghk4866@naver.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://bjmin.tistory.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[222.231.27.246]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-12-20 10:39:15]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-12-20 01:39:15]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[감사합니다 도움이 많이 됐네요 글좀 퍼가겠습니다. 감사합니다]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1513733955.120854;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>1757</wp:comment_id>
			<wp:comment_author><![CDATA[박경주]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[un_lone@hanmail.net]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[183.109.117.231]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-12-28 10:25:04]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-12-28 01:25:04]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[관련 글들이 적어서 정보찾기가 어려웠는데 자세히 적어주셔서 감사합니다. 만약 프로그램을 수정하여 재 배포를 해야 할 경우에는 위와 같은 방법으로 한번 샀던 인증서로 다시 서명을 하면 되는건가요?? 답변주시면 감사하겠습니다 :)]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1514424304.394015;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>1884</wp:comment_id>
			<wp:comment_author><![CDATA[pm]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[junhuk1113@naver.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[222.238.209.177]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2018-02-09 11:18:35]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2018-02-09 02:18:35]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[공인인증서 사용 가능한가요?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1518142715.362565;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>2219</wp:comment_id>
			<wp:comment_author><![CDATA[정상윤]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[he4722@naver.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[39.7.50.183]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2018-08-08 20:06:26]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2018-08-08 11:06:26]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[죄송하지만 꼭 드리고 싶은말씀이 있어요.
공부를 많이하시거나, 기초이론을 마스터 하신후 해당 글을 작성하는게 좋을것 같아요. 윈도우를 얼마나 하셨는지는 모르겠지만 드라이버 개발자 입장에서 볼때는 일정부분만 알고 작성한 글로 보여지네요. 인증서 부분은 드라이버 개발자에게는 기초과정에 포함되어있죠. 화이팅하세요.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1533726386.402156;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>2220</wp:comment_id>
			<wp:comment_author><![CDATA[송현석]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[moral369@naver.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[58.87.60.198]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2018-08-09 10:52:14]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2018-08-09 01:52:14]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[전 그렇게 생각하지 않습니다. 시행착오 과정을 알게 되었다는 것만으로도 배우는 입장에선 방향이라도 잡을 수 있어요. 정상윤 님은 인증서 부분은 드라이버 개발자로서 기초과정이라고 표현하셨는데 정상윤님이 그 기초 부분 여기 써 주실건 아니잖아요?  댓글로 이 글의 잘못된 부분을 지적해주시거나 보강하는 내용을 쓰셨다면 별 말 안 드렸을텐데 그것도 아니고 잘 모르면 글을 쓰지 말라는 늬앙스에 눈살이 찌푸려지네요. 저도 화이팅 하세요.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>2219</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1533779534.661344;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>2247</wp:comment_id>
			<wp:comment_author><![CDATA[고영호]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[gn7soft@naver.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[221.162.29.20]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2018-09-12 13:05:10]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2018-09-12 04:05:10]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[2017년 10월 20일 at 8:50 오후 - 응답

정말 좋은 정보 감사합니다.

블로그에 좀 퍼가겠습니다. (출처 작성자 모두 밝힘)

감사합니다.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1536725110.52281;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>2370</wp:comment_id>
			<wp:comment_author><![CDATA[정상윤]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[he4722@naver.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://winddev12.blogspot.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[220.85.141.126]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2018-12-11 14:18:50]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2018-12-11 05:18:50]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[기분이 나쁘셨다면 너무 죄송합니다. 그렇게 말씀드리려고 한게 아닙니다.
그리고 누구에게나 잘하는 부분이 있습니다. 절대 무시하지 않습니다.
단지 그것이 진실이라면 그것에 대한 문제점도 작성하는 편이 좋을 것 같아서! 조금 나쁘게 표현된
것 같아 죄송합니다. 사람들은 그것을 믿고, 수행하겠지만 그것에 따른 피해를 본다면 어떻게 될까요?
잘 아시다시피 서명부분은 함부로 작성하기가 더 어렵게 느껴지더라구요 ^^

사실 저도 블로그에 작성한 글이 많았습니다. 하지만 드라이버 개발을 하면서 좀더 겸손해 지더라구요, 글을 함부로 작성할 수가 없어지더라구요. 어떠한 문제가 발생했을 때 논리적이지 못했을때, 모순이 생기더라구요. 그래서 문제가 생기면 반드시 문제를 유발하는 녀석까지 반드시 논리적으로 설명했을 때 그 가치가 있다라고 판단이 들더라구요. 즉 MS의 SmartScreen filter 는 신빙성이 있냐는 뜻이죠?

한가지 예를 들어 본다면
기존에 유명한 대기업의 .exe, .sys 등 서명된 인증서를 해킹하여, 대기업 인증서로 .exe 서명하여, 재배포시 SmartScreen filter 는 그것을 white list 로 생각할까요? 아직 실험은 안해봤지만 Pass가 나올 수도 있을 것 같아요. 그래서 저의 개인적인 생각은 SmartScreen filter도 인증서도 모두 안정하다고 볼 수 없다는 말이죠. 그것은 노출의 가능성이 높다는 겁니다.

그리고 .sys 커널 드라이버도 모두 신임할 수 없습니다. 그럼 응용프로그램은 더 신임할 수 없다는 말이 되겠죠.

기분나쁘셨다면 너무 죄송하구요, 저의 마음을 알아주신다면 조금 이해가 될꺼라 믿습니다.

제가 최근에 만든 블로그 인데요. 내용은 별로 없습니다. 나중에 예전에 작성한 카페글 모순글 모두 제거 후 내용 업데이트 할께요. 서로 궁금한거 공유하시죠. ^^
감사합니다.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1544505530.325057;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>2499</wp:comment_id>
			<wp:comment_author><![CDATA[3류개발자]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[asdfgh@asdfgh.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[118.36.222.13]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2019-01-04 21:04:36]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2019-01-04 12:04:36]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[으아 이러지맙시다 ㅜㅜ 나중에 이불킥차요 저도 윈도플랫폼만 20년가까이 개발중인데 마소의 온갖 인증서관련 가이드들은 대부분 쓰잘데기 없는 그들만의 리그에요 코드서명에 대한 원론적인 개념은 글쓴이 정도만 이해하고 있으면 충분합니다 (그래도 혹시 모르죠 마소플랫폼 달달 외우고 있으면 코드서명의 달인이라 불러줄지)]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1546603476.404959;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>2634</wp:comment_id>
			<wp:comment_author><![CDATA[meslva]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[meslva@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.27.6]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2019-01-30 17:42:12]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2019-01-30 08:42:12]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[좋은 내용감사합니다. 이 글로 인해서 관련 내용을 검색하는데 도움이 되었습니다.
보다 자세한 정보를 원하시면 "스마트스크린 평판" 또는 "Application Reputation"으로 검색하시면
많은 내용이 있습니다.

시마텍에서는 이런 문제 때문에 관련 상품도 판매하고 있는 것 같네요.
EV 인증서를 사용하면 기본 평판(?)이 좀 높은 것 같네요.
하지만 정확한 기준이 발표되지 않아서 신뢰하기는 힘듭니다.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1548837732.656291;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>3702</wp:comment_id>
			<wp:comment_author><![CDATA[김진태]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[jtkim67@hanmail.net]]></wp:comment_author_email>
			<wp:comment_author_url>http://topeditor.tistory.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[59.7.134.129]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2019-07-10 10:40:39]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2019-07-10 01:40:39]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[좋은 정보 잘 읽고 갑니다. 이것 때문에 많은 자료를 찾고 있었는데. 저에게 많은 도움이 되었습니다.
감사합니다.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1562722839.581063;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>4014</wp:comment_id>
			<wp:comment_author><![CDATA[danyoh]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[danyoh@naver.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[220.95.197.164]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2019-08-13 13:57:35]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2019-08-13 04:57:35]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[글 잘일고 갑니다. 내용이 잘 작성한것 같습니다. 저는 많은 도움이 되었습니다.
개인적으로 이런 글이 많은 사람들에게 도움되는 글이라고 생각합니다.
좋은하루 보내세요]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1565672255.885051;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>6418</wp:comment_id>
			<wp:comment_author><![CDATA[초보개발자]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[anstans@naver.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.28.217]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2020-11-09 14:46:46]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2020-11-09 05:46:46]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[저는 업무에서 사용할 진짜 간단한 프로그램 만들었는데 이걸 회사 팀원들에게 공유하려니까 윈도우 디펜더가 막아버리네요 ㅜㅜ 뭐 제가 전문개발자도 아니고 프로그램도 파이썬으로 끽해야 30줄 이내라.... 인증서 구매해서 하는 것도 좀 오바같고 어떻게 해야할지 고민입니다. 일단 회사 IT부서랑 연락은 하고 있는데 별것도 아닌걸로 귀찮게 해드리는 거 같기도 하네요 하하 ;]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1604900806.345704;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>12575</wp:comment_id>
			<wp:comment_author><![CDATA[해나]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[hackhyun@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://hackhyun.tistory.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.24.230]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2022-04-26 11:23:01]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2022-04-26 02:23:01]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[글 잘 읽었습니다. 저희 회사에도 처음으로 인증서를 도입하려고 하는데 도움이 많이 되었습니다.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1650939781.326931;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1655892716.560302;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"hb.lee";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>12576</wp:comment_id>
			<wp:comment_author><![CDATA[고등학교사회복무요원]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[stevenswjoeng@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.github.com/seungw0n/neis-to-payslip</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.24.230]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2022-04-26 20:55:20]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2022-04-26 11:55:20]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[좋은 게시물 감사합니다. 사회복무요원으로 복무 중 근무지를 위한 프로그램을 만들었는데.. 못 믿으실 분들이 있어 해당 링크 걸어 놓았습니다. 원치 않으시면 꼭 알려주시기 바랍니다! 감사합니다.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1650974120.484712;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1655892716.481969;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"hb.lee";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>12873</wp:comment_id>
			<wp:comment_author><![CDATA[김인철]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[ickim@manastone.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.22.129]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-09-25 21:46:03]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-09-25 12:46:03]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[인증서는 기본적으로 해쉬입니다. 수정하면 해쉬값이 틀려집니다.
단 한바이트만 수정되어도 인증서가 깨지기 때문에. 도용은 거의 불가능합니다.
private key 없이 인증서를 짜맞추는 건 현존하는 모든 컴퓨팅파워를 동원해도 몇 백년 걸릴테니 불가능하다는 게 맞죠.

각설하고, EV Code sign을 했는데 크롬에서 블락을 하네요. 완전히 블락은 아니고,  위험할 수 있다는 경고가 나옵니다.
일단 Google search console에 사이트를 등록하고 보안문제를 해결했다고 검토요청을 한 상태입니다.

EV code signning으로도 끝은 아니었습니다. ㅋㅋㅋ]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1695645963.11482;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1697589833.113383;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"hb.lee";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>12876</wp:comment_id>
			<wp:comment_author><![CDATA[김인철]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[ickim@manastone.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://excel.manastone.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.22.129]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-09-27 00:50:10]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-09-26 15:50:10]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[구글 일처리가 빠르네요.
Google Search Console 보안문제에 해명하기를 눌러 Ev Code sign을 했고, VirusTotal에 0/72 clean 판정을 받았다고 하니 바로 해제가 되었습니다.(한 두시간 걸렸나?)

 GV,DV,OV,EV code sign 이 있는 데, 저희 회사는 EV Code Sign만 해봤기 때문에 EV(Extended Validation) 기준으로 2줄 요약

1. code sign을 하면 바이러스나 멀웨어로 판독되는 경우가 줄지만, 완전히 없어지진 않음.  똥이 더러워서 피해야 하니, 백신들이 시비거는 행동은 피해야 함. virustotal 에서 0/72 받기 쉽지 않았음.(나만 어려웠나? ㅋㅋㅋ)
2. 배포 site의 신뢰성도 중요함. 그렇지 않으면 , EV Code sign이고 Virustotal 0/72 고 나발이고 간에 야 이거 니 컴퓨터에 위험할 수도 있어. 그래도 받을거야? 라고 크롬은 처물음.
그러면 뭐 할 수 있나? Google Search Console로 허겁지겁 뛰어가서 , 급한 놈이 우물을 파야함.

EV Code Sign USB를 FedEx로 받고 Site에서 크롬,파폭,에지등에서 시비안걸리고 다운받게 하는 데 약 7시간 걸림.구글링해보니 2020년에는 2주넘게 걸렸다고 하던 데, 요즘은 많이 빨라진듯. 그게 EV code sign의 힘인지는 잘모르겠음.

ps.중간에 약간 말투가 거칠어진 것은 실무자로서 고생한거 고려해서 양해부탁드림.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1695743410.234855;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1697589838.979176;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"hb.lee";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>12884</wp:comment_id>
			<wp:comment_author><![CDATA[이민호]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[ucomas@naver.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.22.129]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-10-15 22:00:59]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-10-15 13:00:59]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[정상윤님 힘내세요!
5년이 지났지만 정상윤님은 변함이 없을 것 같다는 생각이 무심결에 드는군요.
다 자기만의 생각으로 사는거죠!!
어느 순간 불현듯 깨달음을 얻는 계기가 생기시면 좋겠습니다.
단순한거에요. 나의 말과 글이 남들에게 어떻게 보여질까를 먼저 생각하고나서 말하고 쓰는거에요.
화이팅 하세요.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>2370</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1697374859.689467;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[RDS MySQL에서 RDS Aurora로 DB이전 다운타임 최소화 하기]]></title>
		<link>https://blog.dramancompany.com/2016/01/rds-mysql%ec%97%90%ec%84%9c-rds-aurora%eb%a1%9c-db%ec%9d%b4%ec%a0%84-%eb%8b%a4%ec%9a%b4%ed%83%80%ec%9e%84%ec%9d%84-%ec%b5%9c%ec%86%8c%ed%99%94-%ed%95%98%ea%b8%b0/</link>
		<pubDate>Fri, 01 Jan 2016 01:00:32 +0000</pubDate>
		<dc:creator><![CDATA[devyrlee]]></dc:creator>
		<guid isPermaLink="false">http://developer.dramancompany.com/?p=279</guid>
		<description></description>
		<content:encoded><![CDATA[얼마 전 저희 <a href="http://rememberapp.co.kr">리멤버</a>의 DB서버 이전이 있었습니다. 기존엔 AWS RDS에서 MySQL을 사용하고 있었으나 AuroraDB로 서버 이전을 하였고, 손쉽게(?) 작업을 마무리 할 수 있었습니다.&nbsp;이전을 할 때 데이터 소실없이 이전 하는 것이 첫 번째로 중요했고, 두 번째로 중요했던 건&nbsp;서비스의 다운타임을 최소화 하는 것 이었습니다. 첫 번째로 중요했던 데이터의 소실 없이 이전 하는건 철저한 검증을 통해 확인과 복원을 하면 되었지만, 두번째 중요했던 다운타임 최소화 문제는 조금 난감했습니다. DB이전과 함께 여러가지 밀려있던 작업을 위해 주말 새벽 5시간의 서비스 다운타임을 이용자들에게 공지했고, 저희는 이 시간 안에 예정된 모든 작업을 끝내야 했습니다. 결과적으로 공지 했던 시간 보다 2시간을 단축해 3시간만에 모든 작업을 끝낼 수 있었습니다. DB이전 작업엔 거의 시간이 들지 않았으니까요.

DB이전을 할 때 다운타임을 최소화 하기 위한 방법은 놀라울 정도로 간단합니다.
<ol>
 	<li>RDS MySQL의 최신 스냅샷을 Migrate기능을 이용해 AuroraDB로 이전</li>
 	<li>Migrate하는 동안의 데이터 변경분처리. (AuroraDB를 Replica server로 활용)</li>
 	<li>각 Applications에서 DB Endpoint를 &nbsp;AuroraDB의 Endpoint로 변경.</li>
</ol>
참 쉽죠? 2번에 대해 좀 더 정리해보자면, AuroraDB가 migrate되는 시간 동안 기존에 사용하던 MySQL DB에는 계속 데이터가 변경되고, 쌓여가고, 사라지고 있을 겁니다. Migrate하는 시간 동안의 데이터 Gap은 AuroraDB의 Migrate작업이 완료 된 후 이를 MySQL Master DB의 replica server화 하여 두 서버간 데이터의 동기화 합니다.

사실, AWS에서 이러한 방법에 대해 도큐먼트를 제공하고 있긴 하지만 자세한 방법까지는 다루고 있지 않기 때문에&nbsp;이 글에서는 조금 전 설명드린 과정에 대해 그 방법을 풀어 볼 생각입니다.
<h3>0. 시작하기 전에</h3>
본격적으로 서버 이전을 진행하기 전에 RDS의 MySQL에서 한 가지 설정을 바꿔주고 시작 해야 하는데, "binlog retention hours"라는 RDS의 configuration 값을 바꿔 주어야 합니다. AWS Console의 Parameter Groups의 항목이 아니기때문에 브라우저가 아닌 터미널을 열어서 MySQL에 Master계정으로 접속을 해 주세요. RDS MySQL은 기본적으로 binlog를 삭제하는 주기가 빠르기 때문에 AuroraDB에 Migrate하는 동안의 binlog는 기록되어 보관될 수 있도록 설정 값을 바꿔야합니다. 아래와 같은 프로시저를 호출 해주세요.
<blockquote>call mysql.rds_set_configuration('binlog retention hours', 48);</blockquote>
혹시나 하는 마음에 binlog 보관 주기를 48시간으로 설정 했지만 24시간이면 충분 할 것 같습니다. <strong><em>위 설정을 변경하기 전 스토리지가 충분한지 확인 후 변경하시기 바랍니다.</em></strong>
<h3>1. AuroraDB 인스턴스 생성</h3>
우선 AuroraDB의 인스턴스를 생성해 보겠습니다. 생성 시 기존에 사용하던 MySQL Master DB의 최신 Snapshot을 이용해 AuroraDB로 Migrate합니다. MySQL MasterDB를 선택하고, 상단의 Instance Actions탭에서&nbsp;"Take Snapshot"을 눌러 현재 시점의 스냅샷을 준비해주세요.

<a href="https://blog.dramancompany.com/wp-content/uploads/2015/12/스크린샷-2015-12-09-오후-12.45.08.png"><img class="aligncenter wp-image-280 size-full" src="https://blog.dramancompany.com/wp-content/uploads/2015/12/스크린샷-2015-12-09-오후-12.45.08.png" alt="Migrate Lastest Snapshot" width="289" height="392"></a>

스냅샷이 준비되었다면, "Migrate Latest Snapshot"를 눌러줍니다.

<a href="https://blog.dramancompany.com/wp-content/uploads/2015/12/스크린샷-2015-12-09-오후-12.48.50.png"><img class="size-full wp-image-281 aligncenter" src="https://blog.dramancompany.com/wp-content/uploads/2015/12/스크린샷-2015-12-09-오후-12.48.50.png" alt="스크린샷 2015-12-09 오후 12.48.50" width="611" height="810"></a>

다음과 같은 화면이 나오면 기본적인 설정을 해 줍니다. 기존 MySQL Master DB의 설정을 따라가기 때문에 DB Instance Identifier와 Availability Zone지정 외에 별다른 작업이 필요 없을 것 같습니다.

<em><strong><span style="color: #ff0000;">자, Migrate버튼을 누르기 전에 이쯤에서 정말 중요한 메모를 하나 할 것입니다.</span> </strong></em>이 메모를 한 후 재빠르게 Migrate버튼을 눌러 AuroraDB인스턴스를 생성 할 겁니다.&nbsp;MySQL에 접속한 후 다음과 같은 명령어를 통해 binary log 정보를 확인합니다. &nbsp;<span style="color: #ff0000;"><em><strong>File과 Position을 잘 메모해 둡니다.</strong></em></span>
<blockquote>SHOW MASTER STATUS;</blockquote>
<a href="https://blog.dramancompany.com/wp-content/uploads/2015/12/스크린샷-2015-12-09-오후-6.11.10.png"><img class="size-full wp-image-295 aligncenter" src="https://blog.dramancompany.com/wp-content/uploads/2015/12/스크린샷-2015-12-09-오후-6.11.10.png" alt="스크린샷 2015-12-09 오후 6.11.10" width="670" height="122"></a>

확인 하셨나요? 그러면 재빨리 Migrate버튼을 눌러 인스턴스를 생성합니다.

<a href="https://blog.dramancompany.com/wp-content/uploads/2015/12/스크린샷-2015-12-09-오후-12.58.16.png"><img class="size-full wp-image-282 aligncenter" src="https://blog.dramancompany.com/wp-content/uploads/2015/12/스크린샷-2015-12-09-오후-12.58.16.png" alt="스크린샷 2015-12-09 오후 12.58.16" width="192" height="48"></a>

마이그레이션이 완료 되고 인스턴스가 생성될 때 까지 잠시(?) 기다려 줍니다. <a href="https://aws.amazon.com/ko/blogs/aws/now-available-amazon-aurora/" target="_blank" rel="noopener noreferrer">아마존 블로그</a>의 문구를 인용해보자면, 소요되는 시간은 대략 다음과 같습니다.
<blockquote>
<p class="p1"><span class="s1">a coffee break might be appropriate, depending on the size of your database</span></p>
</blockquote>
<p class="p1">데이터 용량에 따라 걸리는 시간이 다르겠지만, 커피 한잔 즐길시간이면 될 것이라 하니 한 30분정도 기다려 봅니다. 사실 전 커피 한잔 마시는데 10분이면 되는데 말이죠.</p>
<p class="p1">1시간 더 기다려 봅니다.</p>
<p class="p1">1시간 더 기다려 봅니다!!</p>
<p class="p1">1시간 더 기다려 봅니다!!!!</p>
<p class="p1"><strong>1시간 더 기다려 봅니다!!!!!!!!!!!</strong></p>
<p class="p1">드디어 되었군요. 4시간 반의 티 타임 끝에 AuroraDB 인스턴스가 준비되었습니다. 이 글을 읽으시는 분 들은 마이그레이션이 언제 완료되나 무작정 기다리지 마시고, "DB Cluster Details"탭의 "Migration Progress"를 참고하시면 현재 진행 상황을 자세하게 알려주니, 저처럼 무작정 기다리지 않으셔도 될 것 같습니다.(있는 줄 몰랐습니다..)</p>
<p class="p1"><a href="https://blog.dramancompany.com/wp-content/uploads/2015/12/스크린샷-2015-12-09-오후-4.19.13.png"><img class="size-large wp-image-285 aligncenter" src="https://blog.dramancompany.com/wp-content/uploads/2015/12/스크린샷-2015-12-09-오후-4.19.13.png" alt="스크린샷 2015-12-09 오후 4.19.13" width="660" height="541"></a></p>
<p class="p1">AuroraDB 인스턴스가 준비되었다면, 다음 단계로 넘어가도록 하겠습니다.</p>

<h3 class="p1">2. VPC 설정</h3>
앞서 생성 한 AuroraDB를 MySQL의 Replica DB로 구성하기 위해선, AuroraDB가 MySQL에 접근할 수 있도록 VPC설정이 필요합니다.

먼저, AuroraDB의 IP를 확인합니다. AuroraDB의 Endpoint를 확인 한 후 console에서 host명령을 이용해 IP를 확인할 수 있습니다.
<blockquote>$ host [aurora-db-end-point]</blockquote>
IP를 잘 적어둔 후, RDS Instances 콘솔에 접속한 후 MySQL의 Security Groups에서 사용하고 있는 해당 그룹 링크를 클릭합니다. &nbsp;이동 한 Security Groups에서 해당 그룹을 선택한 후 상단 Actions탭의 "Edit inbound rules"를 클릭합니다.

<a href="https://blog.dramancompany.com/wp-content/uploads/2015/12/스크린샷-2015-12-09-오후-5.29.29.png"><img class="size-full wp-image-290 aligncenter" src="https://blog.dramancompany.com/wp-content/uploads/2015/12/스크린샷-2015-12-09-오후-5.29.29.png" alt="스크린샷 2015-12-09 오후 5.29.29" width="302" height="188"></a>

창이 열리면, "Add Rule"를 해 Row하나를 추가 한 후 Type은 "<em><strong>All traffic</strong></em>"으로 지정하고, 아까 적어 둔 AuroraDB의 아이피를 다음과 같이 적어줍니다. "1.1.1.1/32" (DB 이전을 완료 한 후에는 방금 추가한 Rule을 삭제해 주세요.)

<a href="https://blog.dramancompany.com/wp-content/uploads/2015/12/스크린샷-2015-12-09-오후-6.06.52.png"><img class="size-full wp-image-294 aligncenter" src="https://blog.dramancompany.com/wp-content/uploads/2015/12/스크린샷-2015-12-09-오후-6.06.52.png" alt="스크린샷 2015-12-09 오후 6.06.52" width="782" height="25"></a>

이제 VPC 설정은 다 되었습니다.
<h3>3. MySQL에 Replication전용 계정 추가</h3>
이제 AuroraDB가 MySQL에 Replication을&nbsp;위해 접근할 계정을 만들도록 하겠습니다. (DB 이전을 완료 한 후 방금 추가한 계정은 삭제를 해 주세요.)
<blockquote>CREATE USER 'repl_user'@'%' IDENTIFIED BY 'yourpassword';</blockquote>
계정을 추가한 후 replication 권한을 부여합니다.
<blockquote>GRANT REPLICATION CLIENT, REPLICATION SLAVE ON *.* TO 'repl_user'@'%' IDENTIFIED BY 'yourpassword';</blockquote>
<h3>5. Replication설정 및 시작</h3>
이제 마지막 입니다. RDS에서 제공하는 procedure를 사용해 replication설정을 마무리 할 것입니다. 우선 MySQL의 Endpoint와 앞서 메모해 두었던 binlog의 "File"과 "Position"을 이용해 프로시저에 파라미터를 채워줍니다.&nbsp;AuroraDB에 접속한 후 아래의 명령을 수행합니다.
<blockquote>CALL mysql.rds_set_external_master('mysql end point', 3306, 'repl_user', 'yourpassword', 'mysql-bin-changelog.188412', 788, 0);</blockquote>
external master설정을 마치셨으면 이제 복제를 시작하겠습니다.
<blockquote>CALL mysql.rds_start_replication;</blockquote>
<h3>6. Replica Error 처리하기</h3>
무사히 Replication 설정까지 마쳤으나 한가지 시련이 남았습니다. 복제 설정이 완료 된 AuroraDB에 접속해 "show slave status"라는 질의를 해 보시기 바랍니다. 정말 운이 좋다면 에러 없이 정상적으로 리플리케이션이 진행중일 테지만 십중 팔구는 에러가 발생해 리플리케이션이 중단 된 상태 일 것입니다. 1번 과정에서 인스턴스 생성 시 메모해 두었던 Binlog의 위치 정보가 유효하지 않기 때문에 발생한 에러인데, MasterDB의 정확한 스냅샷 시점과 맞지 않아 발생하는 문제입니다. 이를 해결하기 위해서 조금 야매(?) 스럽지만 한번 헤쳐나가 보겠습니다.
<blockquote>call mysql.rds_skip_repl_error;</blockquote>
위와 같은 프로시저를 slave 에러가 발생하지 않을 때 까지 실행해 주세요. 한 건 마다 에러발생 유무를 확인하고 실행하면 시간이 얼마나 걸릴지 모르기 때문에 저 같은 경우는 프로시저를 10,000번 수행하는 스크립트를 만들어서 돌렸습니다. &nbsp;프로시저를 호출했는데 발생한 에러가 없는 경우는 그냥 PASS하니 저렇게 실행해도 괜찮을 것 같습니다. 다만, 에러 처리 완료 시점까지의 로그는 반드시 기록을 해 두고, 그 근처의 데이터들을 전수 조사하여 문제가 없는지 반드시 확인을 해야합니다. 아마 대부분의 경우 문제가 없을텐데, 문제가 있을 경우 해당 시점의 binlog파일을 열어 하나씩 정합성을 맞추어 주거나, 위 작업을 새로 시도를 하시는게 좋을 것 같다는 생각입니다.
<h3>마치며</h3>
MySQL에서 Aurora로 Migrate를 할 때 걸리는 4시간 반이 매우 부담스러운 시간이었습니다. DB이전만 할 게 아니라 이전 후에도 할 작업이 많았기 때문에 장시간의 다운타임이 필요했던 상황 이었지만 덕분에 4시간 반을 아낄 수 있었습니다. 다만, 주의 할 점은 Replication을 구성하기 전 binlog의 리플레이 시점을 잘 기록을 해 두셔야 합니다. 이 내용은 RDS MySQL to RDS AuroraDB에만 가능한 방법이 아니라 RDS MariaDB로 이전시에도 적용이 가능합니다.
<h3>References</h3>
<p class="p1"><span class="s1"><a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/MySQL.Procedural.Importing.NonRDSRepl.html" target="_blank" rel="noopener noreferrer">Importing Data to an Amazon RDS MySQL or MariaDB DB Instance with Reduced Downtime</a></span></p>
<p class="p1"><span class="s1"><a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.html" target="_blank" rel="noopener noreferrer">Virtual Private Clouds (VPCs) and Amazon RDS</a></span></p>
<p class="p1"><span class="s1"><a href="https://aws.amazon.com/ko/blogs/aws/highly-scalable-mysql-compat-rds-db-engine/" target="_blank" rel="noopener noreferrer">Amazon Aurora – New Cost-Effective MySQL-Compatible Database Engine for Amazon RDS</a></span></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>279</wp:post_id>
		<wp:post_date><![CDATA[2016-01-01 10:00:32]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-01-01 01:00:32]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-02-23 23:47:34]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-02-23 14:47:34]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[rds-mysql%ec%97%90%ec%84%9c-rds-aurora%eb%a1%9c-db%ec%9d%b4%ec%a0%84-%eb%8b%a4%ec%9a%b4%ed%83%80%ec%9e%84%ec%9d%84-%ec%b5%9c%ec%86%8c%ed%99%94-%ed%95%98%ea%b8%b0]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="develop"><![CDATA[Tech]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[4]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[right-sidebar]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_slogan]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_subslogan]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_header_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_scroll_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_bottom_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_footer_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_view_post_info]]></wp:meta_key>
		<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_post_icons]]></wp:meta_key>
		<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729529143;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:2528;}i:1;a:1:{s:2:"id";i:826;}i:2;a:1:{s:2:"id";i:1850;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_single_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:17:{s:8:"subtitle";s:0:"";s:6:"format";s:8:"standard";s:5:"video";s:0:"";s:7:"gallery";s:0:"";s:11:"source_name";s:0:"";s:10:"source_url";s:0:"";s:8:"via_name";s:0:"";s:7:"via_url";s:0:"";s:8:"override";a:1:{i:0;a:11:{s:18:"single_blog_custom";s:0:"";s:7:"sidebar";s:0:"";s:14:"second_sidebar";s:0:"";s:14:"share_position";s:0:"";s:17:"share_float_style";s:0:"";s:16:"post_date_format";s:0:"";s:23:"post_date_format_custom";s:0:"";s:21:"post_reading_time_wpm";s:0:"";s:20:"zoom_button_out_step";s:1:"1";s:19:"zoom_button_in_step";s:1:"1";s:17:"number_popup_post";s:1:"1";}}s:14:"image_override";a:1:{i:0;a:2:{s:26:"single_post_thumbnail_size";s:0:"";s:24:"single_post_gallery_size";s:0:"";}}s:22:"trending_post_position";s:0:"";s:19:"trending_post_label";s:0:"";s:20:"sponsored_post_label";s:0:"";s:19:"sponsored_post_name";s:0:"";s:18:"sponsored_post_url";s:0:"";s:19:"sponsored_post_logo";s:0:"";s:19:"sponsored_post_desc";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle_flag]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[290]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_format_gallery_images]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:2:"id";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>35</wp:comment_id>
			<wp:comment_author><![CDATA[Ryan]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[brandnewdays@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[210.94.41.89]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-01-26 19:36:44]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-01-26 10:36:44]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Aurora로 마이그레이션 하신 후에 MySQL과 비교해서 성능상 체감하는 것이 크신가요?
혹은 다른 이유로 인해 Aurora로 옮기셨나요? 이런 관점에서 경험을 공유해 주실 수 있으실까요?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>36</wp:comment_id>
			<wp:comment_author><![CDATA[YoungRae Lee]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[devyrlee@dramancompany.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[106.250.181.163]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-01-27 14:57:32]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-01-27 05:57:32]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[안녕하세요 Ryan님.
Aurora로 이전을 결정하기 전 MariaDB, RDS MySql 5.6, RDS Aurora 이 세개의 RDBMS를 놓고 BMT를 진행했었습니다.
이 BMT 결과에 대해서도 블로그 글은 다 작성해놓고 정리를 다 못해서 오픈을 못 하고 있네요.
Read/Write 성능은 워크로드 마다 달랐는데, 저희 워크로드 기준으로의 성능 순서는 MariaDB > Aurora > MySQL5.6 이었습니다.
BMT상 성능 테스트 결과는 위와 같았지만, Aurora를 선택 한 이유는 '고가용성' 때문이었습니다.
Aurora의 가장 큰 장점은 AWS에 최적화 된 스토리지 엔진을 통해 안정성 및 확장성을 향상시킨데 있다고 봅니다.
BMT상의 성능 테스트는 단순히 성능 측정을 위해 RDBMS를 극한까지 몰아붙여 본 테스트였고,
실 상황에서는 쿼리들이 루틴하게 들어오고 리니어하게 증가할것이란 상황을 가정했을 때
성능이 어마어마 하게 좋지 않은 이상은 좀 더 안전한 운영을 하는 것에 무게를 두었습니다.
그리고, MySQL5.6 대비 체감 상 성능 상승 효과는 소폭 있었습니다.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>35</wp:comment_parent>
			<wp:comment_user_id>9</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>132</wp:comment_id>
			<wp:comment_author><![CDATA[제이팍]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[htkloveis@naver.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[112.175.187.8]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-06-20 18:26:23]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-06-20 09:26:23]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[안녕하세요. 지난달 AWS 관련세미나에서 오로라내용을 보고 블로그까지 찾아오게 되었습니다.
그 때 발표시에 오로라와 mysql 성능비교가 블로그에 있다고 하셨는데 제가 찾지를 못하였습니다.
혹시 가능하시다면 블로그에 성능비교 내용을 공유해주실 수 있는지요.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1466414783.374077;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[안정적인 서비스 운영을 위한 서버 모니터링 #1]]></title>
		<link>https://blog.dramancompany.com/2015/12/%ec%95%88%ec%a0%95%ec%a0%81%ec%9d%b8-%ec%84%9c%eb%b9%84%ec%8a%a4-%ec%9a%b4%ec%98%81%ec%9d%84-%ec%9c%84%ed%95%9c-%ec%84%9c%eb%b2%84-%eb%aa%a8%eb%8b%88%ed%84%b0%eb%a7%81-1/</link>
		<pubDate>Thu, 17 Dec 2015 07:00:39 +0000</pubDate>
		<dc:creator><![CDATA[sid]]></dc:creator>
		<guid isPermaLink="false">http://developer.dramancompany.com/?p=312</guid>
		<description></description>
		<content:encoded><![CDATA[<h3><strong>0. Background</strong></h3>
초기 스타트업에게는 빠르게 제품을 개발하고 이를 시장에서 검증받는 것이 최우선 과제이지만, 제품이나 서비스가 어느 정도 시장에 안착하게 되면 그 다음부터는 안정적으로 운영하는 것이 점점 더 중요해집니다. 드라마앤컴퍼니도 리멤버를 출시한지 어느덧 2년이 지났고, 이제는 서비스를 검증하는 단계를 지나 확장하는 단계로 접어들었습니다. 따라서 신규 기능 개발도 중요하지만 그에 못지 않게 서비스의 안정성 유지도 개발팀 업무의 큰 비중을 차지하게 되었습니다.

그러면 서비스의 안정성이란 뭘까요? 회사마다, 서비스마다 약간씩 다르겠지만 대부분 아래와 같은 것들이 서비스 안정성의 중요한 요소가 될 것 같습니다.
<ul>
 	<li>무장애: 장애가 뻥뻥 나서 서비스를 이용하지 못한다면 사용자 경험에 치명적인 영향을 미치게 됩니다.</li>
 	<li>버그의 최소화: 앱을 실행하다가 크래시 나면 좋아할 고객은 아무도 없습니다.</li>
 	<li>빠른 처리 시간: 앱을 켜고 리스트를 불러오는데 10초 동안 동글뱅이가 돌고 있다면 앱을 꺼버릴 확률이 높습니다. 그리고 다신 들어오지 않겠죠. 따라서 앱/서버 등 모든 시스템의 처리 속도 또한 사용자 경험의 중요한 요소입니다. 그에 더해 리멤버는 서비스 특성상 명함의 입력 속도도 굉장히 중요합니다. 명함 이미지를 업로드했는데 하루가 지나도 입력이 안 된다면 답답함을 느낄 겁니다. 따라서 드라마앤컴퍼니는 이를 좀 더 빠르게 단축시키기 위해 여러 프로세스/기술들을 도입하여 개선의 노력을 게을리하지 않고 있습니다.</li>
</ul>
서비스의 안정성을 높이기 위해서는 아시다시피 여러 가지 방법들이 있습니다. 장애를 방지하기 위해 인프라 측면에서 HA 구성을 한다든지, 혹은 워크로드가 한 곳으로 집중되는 것을 막기 위해 적절한 Load Balancing을 합니다. 버그를 최소화하기 위해서는 Code Inspection Tool을 돌린다거나 혹은&nbsp;Peer code review와 같은 프로세스적인 접근을 취하기도 합니다.

본 글에서는 이러한 여러 가지 방법 중에서 우리가 안정적인 서비스 운영을 위해 일상적으로 가장 많이 수행하는 활동, 즉 애플리케이션 모니터링 관점에서 이야기를 풀어보고자 합니다.
<h3><strong>1.&nbsp;Pain points</strong></h3>
드라마앤컴퍼니(이하 드라마) 개발팀도 여느 스타트업과 마찬가지로 개발할 기능은 많고, 시간은 없고, 인력은 부족한 상황에 늘 쫓기고 있었습니다. 그래서 아무리 QA을 열심히 한다해도 앱을 배포하고 나면 늘 이런저런 버그와 문제에 부딪치곤 했습니다. 하지만 모니터링 시스템이 제대로 갖춰져 있지 않다보니 고객의 클레임이 들어와도 사실상 이슈의 원인을 제대로 추적하지 못한 적이 한 두번이 아니었습니다. 그래서 이런 점을 해결하고자 APM(Application Performance Management 혹은 Monitoring)과 Centralized Logging 시스템을 구축하기로 결정하였습니다.
<h3><strong>2. Application Performance Management</strong></h3>
APM하면 가장 먼저 <a href="http://www.jennifersoft.com">Jennifer</a>같은 솔루션이 떠오릅니다. 하지만 저희도 최대한 비용을 아껴야 하기에 이런 패키지 솔루션은 배제해 놓고 조사를 시작했습니다. 다행히 요새는 개발과 관련된 SaaS 서비스들이 너무나도 잘 나와있어서 저렴한 비용으로 도입할 수 있는 시대가 되었습니다. APM 분야에서는 <a href="http://www.appdynamics.com">AppDynamics</a>나 <a href="http://newrelic.com">NewRelic</a> 등 여러 벤더들이 서비스를 제공하고 있더군요. 그런데 리멤버의 Backend 시스템은 Rails로 되어 있어서 사실상 NewRelic 외에는 선택의 여지가 거의 없었습니다.(조사해 본 곳 중에 자바, C# 등의 언어를 지원하는 솔루션은 많은데 Rails는 NewRelic 밖에 없었습니다. 혹시 Rails를 지원하는 다른 APM 솔루션이 있다면 제보 부탁 드립니다.)

그래서 저희는 <a href="http://newrelic.com">NewRelic</a>을 도입하기로 하였습니다. 설치도 에이전트 gem만 다운로드하여 번들해주기만 하면 되기 때문에 무척 손쉬웠습니다. 그리고 지금까지 운영해 본 결과 NewRelic의 풍부하고 유용한 기능들에 상당히 만족하고 있습니다. NewRelic에서 제공하는 기능들 중 가장 기본적이면서 유용한 몇 가지만 소개드리고자 합니다.
<h4><strong>A. Transaction Response Time Monitoring</strong></h4>
APM의 아주 기본적인 기능입니다. NewRelic은 아래 그림과 같이 각 컴포넌트/시스템별로 쪼개서 트랜잭션 수행 시 걸린 시간을 측정합니다.

<a href="https://blog.dramancompany.com/wp-content/uploads/2015/12/transaction_response_time.png"><img class="alignnone wp-image-316 size-large" src="https://blog.dramancompany.com/wp-content/uploads/2015/12/transaction_response_time-1024x630.png" alt="transaction_response_time" width="660" height="406"></a>

리멤버 서버 애플리케이션의 경우 모니터링 대상이 되는 컴포넌트들은 아래와 같습니다.

<a href="https://blog.dramancompany.com/wp-content/uploads/2015/12/transaction_components.png"><img class="alignnone wp-image-318 size-large" src="https://blog.dramancompany.com/wp-content/uploads/2015/12/transaction_components-1024x550.png" alt="transaction_components" width="660" height="354"></a>
<ul>
 	<li>Middleware: Rails에서 HTTP 요청을 parsing하여 해당 Controller로 라우팅하는 등 Application 코드가 아닌 Rails 자체에서 요청 처리에 걸린 시간</li>
 	<li>Ruby: 개발자가 개발한 애플리케이션에서 걸린 시간</li>
 	<li>ActiveRecord: ActiveRecord 모델에서 데이터베이스에 쿼리를 전달하고 응답을 받기까지 걸린 시간</li>
 	<li>Redis: Redis에 접속하여 명령을 전달하고 응답을 받기까지 걸린 시간</li>
 	<li>Web external: 구글, 네이버, 페이스북 등 외부 API를 호출하여 응답을 받기까지 걸린 시간</li>
</ul>
위 그림에서는 오후 2:30분부터 3시까지 ActiveRecord에서 시간이 오래 걸린 것을 볼 수 있습니다. 따라서 이 때 DB에 뭔가 이슈가 있었는지 확인을 해볼 필요가 있습니다.<a href="https://blog.dramancompany.com/wp-content/uploads/2015/12/system-health.png"><img class="wp-image-319 size-full aligncenter" src="https://blog.dramancompany.com/wp-content/uploads/2015/12/system-health.png" alt="system-health" width="347" height="413"></a>

Apdex는 시스템의 전반적인 상태를 나타냅니다. 평균 응답 시간의 threshold(App Server 기본값은 0.5초, Browser는 7초)를 설정하여 특정 시간 동안 이 값을 만족시키지 못하면 alert를 발생시키게 됩니다. Apdex는 순수하게 서버에서 요청을 처리한 시간과 사용자의 브라우저 입장에서 걸린 시간 두 가지를 나누어 보여줍니다.

Throughput은 분당 유입되는 요청의 수를 나타냅니다. 따라서, 서버에 어떤 이슈가 발생했을 때 순전히 요청량이 많아져서인지, 아니면 요청량은 변화가 없는데 서버 내부의 문제 때문인지 쉽게 파악할 수 있습니다.
<h4><strong>B. Transaction Traces</strong></h4>
<a href="https://blog.dramancompany.com/wp-content/uploads/2015/12/transaction_traces.png"><img class="alignnone wp-image-320 size-full" src="https://blog.dramancompany.com/wp-content/uploads/2015/12/transaction_traces.png" alt="transaction_traces" width="1016" height="845"></a>

이것도 APM에서 제공하는 기본 기능입니다. 각&nbsp;트랜잭션에서 메소드별로 처리 시간을 쪼개 보여줍니다. 따라서 어느 메소드에서 시간이 가장 오래 걸렸는지 쉽게 파악할 수 있고 이를 토대로 애플리케이션 혹은 DB&nbsp;쿼리&nbsp;튜닝을 할 수 있습니다. 아마 많은 분들이 익숙하신 기능이라 생각됩니다.
<h4><strong>C. Error Traces</strong></h4>
에러 추적을 위한 강력한 기능입니다. 아래와 같이 애플리케이션 내에서 예외가 발생하면 트랜잭션의 여러 가지 속성(요청한 사용자 &nbsp;ID, 요청 시간 등)과 함께 스택 트레이스를 보여줍니다.

<a href="https://blog.dramancompany.com/wp-content/uploads/2015/12/error_traces.png"><img class="alignnone wp-image-321 " src="https://blog.dramancompany.com/wp-content/uploads/2015/12/error_traces.png" alt="error_traces" width="550" height="431"></a>

위 에러는 리멤버 앱에서 저장한 명함을 구글 주소록에 동기화할 때 발생한 에러입니다. 구글 주소록 API는 단시간에 너무 많은 요청이 일어나면 위와 같이 UserRateLimitExceeded와 같은 에러를 리턴하는데 이는 개발이나 테스트 환경에서 일어나기 무척 힘든 에러입니다. APM이 없었다면 아마 발견할 수 없었을 것이고 고객 클레임이 들어왔을 것이 분명합니다. 그러나 꾸준한 모니터링을 통해 위 에러를 발견하고 적절히 수정하여 고객 만족도를 더욱 높일 수 있었습니다.
<h4><strong>D. Others</strong></h4>
NewRelic은 제 경험상 기능에 대한 업데이트가 빠른 편입니다. 얼마 전에는 NewRelic Insight 모듈(애플리케이션에서 발생하는 이벤트를 분석해주는 도구)을 이용하여 에러를 분석해주는 Error analytics 기능을 추가하였습니다.

<a href="https://blog.dramancompany.com/wp-content/uploads/2015/12/error_analytics.png"><img class="alignnone wp-image-324 size-large" src="https://blog.dramancompany.com/wp-content/uploads/2015/12/error_analytics-1024x797.png" alt="error_analytics" width="660" height="514"></a>

물론 단점도 있습니다. 빠르게 업데이트되다 보니 버그도 간혹 생깁니다. 실제로 위의 Error analytics가 추가되고 나서, Background job에서 발생하는 에러가 NewRelic에 잡히지 않는 버그가 있었습니다. 하지만 그에 대한 대응도 빠르게 해주는 편입니다. (버그 리포팅을 했더니 친절하게 응대해주고, 1주일만에 버그 fix한 에이전트를 릴리즈해주었습니다. 이 정도면 괜찮지 않은가요?^^)
<h3><strong>3. Conclusion</strong></h3>
APM 솔루션을 적절히 사용하고, 이를 바탕으로 일상적인 모니터링 활동을 수행한다면 장애의 징후를 미리 알 수 있고, 인지하지 못했던 버그들도 쉽게 파악하여 사용자 경험을 개선시킬 수 있습니다. 또 각 컴포넌트/메소드 별 처리시간을 분석하고 꾸준히 성능을 튜닝하여 안정적인 시스템을 구축할 수 있습니다.

NewRelic은 위에서 소개한 기능들 외에도 호스트 서버에 대한 모니터링, &nbsp;분석 및 리포팅, Thread Profiling, 모바일 앱에 대한 APM, 이벤트 분석 등 다양한 기능들을 제공합니다. 자세한 내용은 아래 참고 링크를 참조하시면 되겠습니다.

다음 편에서는 APM과 함께 모니터링에 절대로 빠져서는 안 될 Centralised Logging에 대해 이야기해보도록 하겠습니다.
<h3><strong>4. References</strong></h3>
<ul>
 	<li><a href="http://www.morethanseven.net/2014/02/16/buy-vs-build-your-monitoring-system/">Buy vs Build your Monitoring System</a></li>
 	<li><a href="http://code.tutsplus.com/articles/5-reasons-why-new-relic-is-a-developers-best-friend--net-34932">5 Reasons Why New Relic is a Developer's Best Friend</a></li>
 	<li><a href="http://www.sitepoint.com/integrate-apm-log-management-loggly-new-relic/">How to Integrate APM and Log Management: Loggly And New Relic</a></li>
 	<li><a href="http://code.tutsplus.com/articles/3-new-relic-power-features-you-should-be-using-today--net-26015">3 New Relic Power Features You Should Be Using Today</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>312</wp:post_id>
		<wp:post_date><![CDATA[2015-12-17 16:00:39]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-12-17 07:00:39]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-02-24 00:28:37]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-02-23 15:28:37]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%ec%95%88%ec%a0%95%ec%a0%81%ec%9d%b8-%ec%84%9c%eb%b9%84%ec%8a%a4-%ec%9a%b4%ec%98%81%ec%9d%84-%ec%9c%84%ed%95%9c-%ec%84%9c%eb%b2%84-%eb%aa%a8%eb%8b%88%ed%84%b0%eb%a7%81-1]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="develop"><![CDATA[Tech]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[4]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729445635;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:645;}i:1;a:1:{s:2:"id";i:974;}i:2;a:1:{s:2:"id";i:2967;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_single_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:17:{s:8:"subtitle";s:0:"";s:6:"format";s:8:"standard";s:5:"video";s:0:"";s:7:"gallery";s:0:"";s:11:"source_name";s:0:"";s:10:"source_url";s:0:"";s:8:"via_name";s:0:"";s:7:"via_url";s:0:"";s:8:"override";a:1:{i:0;a:11:{s:18:"single_blog_custom";s:0:"";s:7:"sidebar";s:0:"";s:14:"second_sidebar";s:0:"";s:14:"share_position";s:0:"";s:17:"share_float_style";s:0:"";s:16:"post_date_format";s:0:"";s:23:"post_date_format_custom";s:0:"";s:21:"post_reading_time_wpm";s:0:"";s:20:"zoom_button_out_step";s:1:"1";s:19:"zoom_button_in_step";s:1:"1";s:17:"number_popup_post";s:1:"1";}}s:14:"image_override";a:1:{i:0;a:2:{s:26:"single_post_thumbnail_size";s:0:"";s:24:"single_post_gallery_size";s:0:"";}}s:22:"trending_post_position";s:0:"";s:19:"trending_post_label";s:0:"";s:20:"sponsored_post_label";s:0:"";s:19:"sponsored_post_name";s:0:"";s:18:"sponsored_post_url";s:0:"";s:19:"sponsored_post_logo";s:0:"";s:19:"sponsored_post_desc";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle_flag]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[317]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_format_gallery_images]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:2:"id";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>37</wp:comment_id>
			<wp:comment_author><![CDATA[leekorea]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[leekorea09@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[1.235.252.95]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-01-28 02:27:30]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-01-27 17:27:30]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[감사합니다. 스타트업 개발자 분들에게 많은 도움이 될 것 같습니다!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>42</wp:comment_id>
			<wp:comment_author><![CDATA[hax0r]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[a@hax0r.info]]></wp:comment_author_email>
			<wp:comment_author_url>http://blog.hax0r.info</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[61.41.64.140]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-02-05 11:30:29]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-02-05 02:30:29]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[정말 재밌게 잘 읽었습니다. good!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>43</wp:comment_id>
			<wp:comment_author><![CDATA[영준]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[a@hax0r.info]]></wp:comment_author_email>
			<wp:comment_author_url>http://blog.hax0r.info</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[61.41.64.140]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-02-05 12:30:02]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-02-05 03:30:02]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[잘 읽었습니당:p]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>105</wp:comment_id>
			<wp:comment_author><![CDATA[Joseph C Cho]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cho87@uw.edu]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[110.70.15.19]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-04-24 22:16:23]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-04-24 13:16:23]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Scout 도 혹시 사용해보셨는지요]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1461503783.264807;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1461545760.900006;s:5:"event";s:15:"status-approved";s:4:"user";s:3:"tom";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>106</wp:comment_id>
			<wp:comment_author><![CDATA[Sejoon Lim]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[sj.lim@dramancompany.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[106.250.181.163]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-04-28 11:11:26]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-04-28 02:11:26]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[아쉽게도 scout는 사용해본 적은 없습니다.^^]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>105</wp:comment_parent>
			<wp:comment_user_id>8</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1461809486.635639;s:5:"event";s:9:"check-ham";s:4:"user";s:3:"sid";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>963</wp:comment_id>
			<wp:comment_author><![CDATA[Charlie Park]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[mals93@naver.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[180.182.148.128]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-03-26 00:39:41]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-03-25 15:39:41]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[앱 개발 배우는 단계의 개발자입니다. 기술 블로그에서 제가 모르는 부분 배워갑니다!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1490456381.855322;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>6475</wp:comment_id>
			<wp:comment_author><![CDATA[빅데이터 프레임워크를 활용한 데이터 인프라 구축 | DRAMA&amp;COMPANY]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>https://blog.dramancompany.com/2017/08/%eb%b9%85%eb%8d%b0%ec%9d%b4%ed%84%b0-%ed%94%84%eb%a0%88%ec%9e%84%ec%9b%8c%ed%81%ac%eb%a5%bc-%ed%99%9c%ec%9a%a9%ed%95%9c-%eb%8d%b0%ec%9d%b4%ed%84%b0-%ec%9d%b8%ed%</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.26.1]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2020-11-24 20:23:14]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2020-11-24 11:23:14]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] API 로그를 살펴보아야 했습니다. 이러한 케이스의 로그 데이터 분석은  ELK, AWS Cloud Watch에서는 살펴보기에는 어려움이 [&#8230;]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1606216994.645154;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>6476</wp:comment_id>
			<wp:comment_author><![CDATA[안정적인 서비스 운영을 위한 서버 모니터링 #2 | DRAMA&amp;COMPANY]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>https://blog.dramancompany.com/2015/12/%ec%95%88%ec%a0%95%ec%a0%81%ec%9d%b8-%ec%84%9c%eb%b9%84%ec%8a%a4-%ec%9a%b4%ec%98%81%ec%9d%84-%ec%9c%84%ed%95%9c-%ec%84%9c%eb%b2%84-%eb%aa%a8%eb%8b%88%ed%84%b0%eb</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.15.82]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2020-11-24 20:38:12]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2020-11-24 11:38:12]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] 전편에서는 안정적인 서비스 운영을 위해 꼭 필요한 APM(Application Performance Management)에 대해 이야기하였습니다. APM을 도입하면 운영 환경에서도 어느 곳이 성능 병목 구간인지, 어떤 에러가 발생하는지 쉽게 파악하고 추적할 수 있습니다. 하지만 이것만으로는 부족합니다. 예를 들어, 특정 사용자가 리멤버의 명함 조회 API를 호출했는데 어느 순간 갑자기 응답이 느려지기 시작합니다. APM을 통해 모니터링을 하면 이런 현상이 나타났다는 것을 쉽게 알 수 있지만 거기까지입니다. 더 정확한 원인을 추적하려면 해당 API 호출의 전후로 어떤 일들이 일어났는지 분석을 하는 것이 필요합니다. 따라서 이 때 필요한 것이 로그 관리 시스템입니다. [&#8230;]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1606217892.980594;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>8070</wp:comment_id>
			<wp:comment_author><![CDATA[빅데이터 프레임워크를 활용한 데이터 인프라 구축 &#8211; DRAMA&amp;COMPANY]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>https://blog.dramancompany.com/2017/08/%eb%b9%85%eb%8d%b0%ec%9d%b4%ed%84%b0-%ed%94%84%eb%a0%88%ec%9e%84%ec%9b%8c%ed%81%ac%eb%a5%bc-%ed%99%9c%ec%9a%a9%ed%95%9c-%eb%8d%b0%ec%9d%b4%ed%84%b0-%ec%9d%b8%ed%</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.103.12]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2021-02-23 23:26:26]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2021-02-23 14:26:26]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] API 로그를 살펴보아야 했습니다. 이러한 케이스의 로그 데이터 분석은 &nbsp;ELK, AWS Cloud Watch에서는 살펴보기에는 어려움이 [&#8230;]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1614090386.670531;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>8071</wp:comment_id>
			<wp:comment_author><![CDATA[안정적인 서비스 운영을 위한 서버 모니터링 #2 &#8211; DRAMA&amp;COMPANY]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>https://blog.dramancompany.com/2015/12/%ec%95%88%ec%a0%95%ec%a0%81%ec%9d%b8-%ec%84%9c%eb%b9%84%ec%8a%a4-%ec%9a%b4%ec%98%81%ec%9d%84-%ec%9c%84%ed%95%9c-%ec%84%9c%eb%b2%84-%eb%aa%a8%eb%8b%88%ed%84%b0%eb</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.101.104]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2021-02-23 23:50:05]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2021-02-23 14:50:05]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] 전편에서는 안정적인 서비스 운영을 위해 꼭 필요한 APM(Application Performance Management)에 대해 이야기하였습니다. APM을 도입하면 운영 환경에서도 어느 곳이 성능 병목 구간인지, 어떤 에러가 발생하는지 쉽게 파악하고 추적할 수 있습니다. 하지만 이것만으로는 부족합니다. 예를 들어, 특정 사용자가 리멤버의 명함 조회 API를 호출했는데 어느 순간 갑자기 응답이 느려지기 시작합니다. APM을 통해 모니터링을 하면 이런 현상이 나타났다는 것을 쉽게 알 수 있지만 거기까지입니다. 더 정확한 원인을 추적하려면 해당 API 호출의 전후로 어떤 일들이 일어났는지 분석을 하는 것이 필요합니다. 따라서 이 때 필요한 것이 로그 관리 시스템입니다. [&#8230;]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1614091805.655002;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>12600</wp:comment_id>
			<wp:comment_author><![CDATA[리멤버는 서비스 모니터링을 어떻게 하고 있을까? - DRAMA&amp;COMPANY]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>https://blog.dramancompany.com/2022/06/how-remember-monitors/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.20.192]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2022-06-21 17:24:46]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2022-06-21 08:24:46]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] 안정적인 서비스 운영을 위한 서버 모니터링 #1 [&#8230;]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1655799886.772929;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1655892716.402085;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"hb.lee";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[안정적인 서비스 운영을 위한 서버 모니터링 #2]]></title>
		<link>https://blog.dramancompany.com/2015/12/%ec%95%88%ec%a0%95%ec%a0%81%ec%9d%b8-%ec%84%9c%eb%b9%84%ec%8a%a4-%ec%9a%b4%ec%98%81%ec%9d%84-%ec%9c%84%ed%95%9c-%ec%84%9c%eb%b2%84-%eb%aa%a8%eb%8b%88%ed%84%b0%eb%a7%81-2/</link>
		<pubDate>Tue, 22 Dec 2015 09:13:59 +0000</pubDate>
		<dc:creator><![CDATA[sid]]></dc:creator>
		<guid isPermaLink="false">http://developer.dramancompany.com/?p=331</guid>
		<description></description>
		<content:encoded><![CDATA[<h3><strong>0. Background</strong></h3>
<a href="https://blog.dramancompany.com/?p=312">전편</a>에서는 안정적인 서비스 운영을 위해 꼭 필요한 APM(Application Performance Management)에 대해 이야기하였습니다. APM을 도입하면 운영 환경에서도 어느 곳이 성능 병목 구간인지, 어떤 에러가 발생하는지 쉽게 파악하고 추적할 수 있습니다. 하지만 이것만으로는 부족합니다. 예를 들어, 특정 사용자가 리멤버의 명함 조회 API를 호출했는데 어느 순간 갑자기 응답이 느려지기 시작합니다. APM을 통해 모니터링을 하면 이런 현상이 나타났다는 것을 쉽게 알 수 있지만 거기까지입니다. 더 정확한 원인을 추적하려면 해당 API 호출의 전후로 어떤 일들이 일어났는지 분석을 하는 것이 필요합니다. 따라서 이 때 필요한 것이 로그 관리 시스템입니다.
<h4>시스템 관점 vs. 비즈니스 관점</h4>
APM은 시스템 관점에서의 모니터링 성격이 강합니다. 트랜잭션별로, 메소드별로 응답 시간과 같은 데이터를 뽑아내고 이를 수집/가공/분석하고 예쁘게 포장하여 최종 사용자에게 보여줍니다. 하지만 어떤 트랜잭션이 업무적으로 중요하고, 각 트랜잭션들이 하나의 비즈니스 업무를 처리하기 위해 어떤 연관 관계를 가지는지는 알 수 없습니다(물론 <a href="http://newrelic.com">NewRelic</a>의 경우 <a href="https://docs.newrelic.com/docs/apm/transactions/key-transactions/key-transactions-tracking-important-transactions-or-events">Key Transaction</a>으로 지정해 놓으면. 별도로 관리/모니터링이 가능합니다).

반면 로그 관리 시스템은 비즈니스 관점에서의 모니터링 성격을 지니고 있습니다. 로그는 개발자가 마음대로 추가할 수 있는 것이기 때문에 업무에 따라 필요한 데이터를 추출해낼 수 있습니다. 명함 조회 API 호출의 응답시간이 느려졌다면 그 전에 사용자가 어떤 명함을 업로드했는지, 해당 요청의 파라미터는 무엇이었는지, 요청의 처리결과는 어떠했는지 로그 관리 시스템을 통해 분석할 수 있습니다.

로그 관리 시스템은 이슈나 버그가 발생했을 때 추적 용도로 쓰일뿐 아니라, 일별 회원 가입수, DAU나 MAU 등 여러 가지 비즈니스적인 지표를 뽑아내는 데도 유용하게 사용될 수 있습니다.
<h4><strong>&nbsp;사전 인지 vs. 사후 조치</strong></h4>
APM이 장애가 발생하기 전에 징후를 포착하는 사전 인지의 성격이 강하다면, 로그 관리 시스템은 사건이 터지고 나서 그 원인을 분석하는데 더 많이 사용되는 것 같습니다(사실 딱 들어맞는 분류는 아니지만, 굳이 저렇게 한 번 나눠보았습니다. 로그 관리 시스템을 통해서도 얼마든지 장애를 사전 인지할 수 있고, 또 사후 원인 분석을 위해 APM도 당연히 보아야 합니다).

APM이 현재 시스템의 상태를 실시간으로 보여주는 것에 좀 더 초점을 맞추고 있다면 로그는 좀 더 거시적인 관점에서 분석하고 insight를 얻기 위해 쓰이는 경우가 많기 때문입니다.
<h3><strong>1. Pain points</strong></h3>
다른 많은 회사와 마찬가지로 저희도 크게 개발, 테스트, 운영 이렇게 3가지 환경을 갖추고 있습니다. 개발자는 개발 환경에서 소프트웨어를 개발하고 이를 테스트 환경에 배포하면 QA팀에서 검수를 시작합니다. 해당 배포본이 문제 없다고 판단되면 실제 운영 환경에 배포를 진행하게 됩니다.

그런데 테스트 환경에서 QA팀이 테스트를 하다보면 버그나 이슈가 많이 발생합니다. 이 때 개발자는 테스트 환경의 서버 로그를 열어서 원인 분석을 해야 합니다. 보통 테스트 서버는 로그 레벨이 debug로 설정되어 있기 때문에 로그의 양이 상당히 많고 여러 테스트 사용자의 로그가 섞여 있기 때문에 grep을 무한반복해가며 로그를 뒤져야 합니다. 먼저 문제가 된 API 호출을 찾고, 프로세스 ID 혹은 request id로 다시 grep을 해서 관련 내용만 뽑아낸 다음 한줄한줄 읽어가며 분석하는데 이게 여간 불편한 게 아닙니다.

개발에서의 불편함뿐 아니라 실제 운영을 할 때도 운영 서버에서 발생하는 로그를 한 곳에 수집해 놓지 않으면 무용지물입니다. 특정 시간에 API 호출 에러가 났는데 모든 서버를 일일이 돌아다니면서 grep을 해볼 수는 없는 노릇이니까요. 그래서 운영 환경의 경우 모든 서버/애플리케이션 로그를 하나의 저장소로 수집하고, 이를 검색에 용이한 형태로 가공하여 저장하고, 저장된 데이터를 토대로 정보를 조회하거나 그래프를 보여주는 등의 Visualization을 해주는 시스템이 필요합니다.
<h3><strong>2. SaaS vs. Open source</strong></h3>
많은 분들이 아시다시피 이런 요구를 충족시켜주는 대표적인 오픈 소스 솔루션이 ELK(ElasticSearch, Logstash, Kibana)입니다. 오픈 소스뿐만 아니라 <a href="https://www.loggly.com">loggly</a>나 <a href="https://logentries.com">logentries</a>&nbsp;등 SaaS 형태의 서비스 벤더들도 굉장히 많습니다. 그래서 ELK로 갈 것이냐 SaaS 서비스를 돈내고 쓸 것이냐를 초기에 많이 고민했습니다. 저희가 가진 요구사항은 아래와 같았습니다.
<ul>
 	<li>Rails 애플리케이션 로그를 수집/저장/검색하는 기본적인 기능을 제공해야 한다.(로그 기반으로 화려하게 Visualization해주거나 빡세게 분석해서 지표 데이터를 뽑아내거나 할 필요는 전혀 없다)</li>
 	<li>3개월 ~ 6개월 정도의 로그 데이터는 보관 가능해야 한다</li>
 	<li>최대한 저렴해야 한다(우린 스타트업이니까)</li>
 	<li>설치 혹은 연동이 간편해야 한다</li>
 	<li>로그 관리 시스템은 우리의 핵심 업무 영역이 아니므로 최대한 리소스를 덜 써야 한다</li>
</ul>
사실 Loggly라는 SaaS형 로그 관리 서비스를 주의깊게 조사했었고, 위에 열거한 거의 대부분의 요구사항을 만족시켰습니다. 하지만 딱 하나 만족하지 못한 게 있었는데 바로 비용이었습니다. 로그라는 것이 원체 양이 많다보니 이런 서비스 벤더에서도 보관하는데 부담이 많이 되나 봅니다. 그래서 보관 기간이 길어질수록 비용도 증가하는 가격 정책을 가지고 있었습니다. 그래서 결국 SaaS형은 포기하고 ELK 스택을 설치하여 직접 운영하기로 하였습니다.
<h3><strong>3. ELK Stack</strong></h3>
저희가 운영하는&nbsp;ELK 구성은 다음 그림과 같습니다.

<a href="https://blog.dramancompany.com/wp-content/uploads/2015/12/elk_architecture.png"><img class="alignnone size-large wp-image-333" src="https://blog.dramancompany.com/wp-content/uploads/2015/12/elk_architecture-1024x556.png" alt="elk_architecture" width="660" height="358"></a>
<h4><strong>A. Logstasher</strong></h4>
먼저 <a href="https://github.com/shadabahmed/logstasher">Logstasher</a> 젬을 설치하여 Rails 애플리케이션에서 발생하는 로그들을 json형태로 만들어 logstash_{env}.log 파일에 쌓도록 하였습니다. json 형식은 Logstash에서 바로 파싱이 가능하기 때문에 별도의 grok 설정을 해줄 필요가 없어 편리합니다.
<h4><strong>B. Logstash-forwarder</strong></h4>
logstash_{env}.log 파일을 계속 polling하면서 쌓이는 로그를 Logstash 서버로 전달해 주는 데몬입니다. 예전에는 lumberjack이라는 이름으로 불렸었고, 지금은 <a href="https://www.elastic.co/products/beats/filebeat">Filebeat</a>이라는 더 좋은 모듈이 나왔네요. 참고로 Filebeat은 내부적으로 logstash-forwarder의 프로토콜을 그대로 쓴다고 합니다(<a href="https://www.elastic.co/blog/this-week-in-beats-first-filebeat-release">Weekly Beats: Preparing the first Filbeat release</a>).
<h4><strong>C. Logstash</strong></h4>
모든 서버의 로그를 수집하여 이를 파싱하고 저장/검색하기 쉬운 형태로 가공해주는 역할을 담당합니다.
<h4><strong>D. ElasticSearch</strong></h4>
수집된 로그를 저장하고 검색을 위한 인덱스를 생성/관리하는 역할을 담당합니다.
<h4><strong>E. Kibana</strong></h4>
저장된 로그 데이터를 기반으로 예쁘게 Visualisation 해주는 도구입니다. 사용자가 검색 질의를 날리면 이를 ElasticSearch에 전달하고, 검색 결과를 받아 화면에 뿌려주는 자바 기반 웹 애플리케이션입니다.

저희는 아직 수집되는 로그의 양이 많지 않기도 하고, 운영에 드는 리소스를 최소로 하고자 ELK를 한 대의 서버로 몰아넣었습니다. 물론 시스템이 점점 커지고 로그의 양도 많아지면 별도의 서버로 분리하고 이것저것 할게 많겠지만, 아직까지는 한 대의 서버로 잘 버티고 있습니다.

ELK Stack에 대해서는 인터넷에 돌아다니는 자료도 워낙 많고, 문서도 잘 되어 있어서 별도로 더 언급하지는 않겠습니다(아래 References 섹션에 ELK에 대해 잘 정리된 웹페이지 링크들을 걸어두었습니다).

대신 ELK 도입 후 운영을 해보면서 느꼈던 점과 성능을 위해 튜닝했던 포인트들을 간략하게 이야기해보도록 하겠습니다.
<h3><strong>4.&nbsp;ELK Tuning</strong></h3>
처음에는 ELK에 어느 정도의 리소스가 필요한지 몰라서 AWS의 t2.medium급 인스턴스(CPU 2개, 메모리 4GB)에 설치하고 시범적으로 테스트 환경에 도입해 보았습니다. 한 달 정도 모니터링 후 문제가 없다고 판단되어 운영 환경에 적용하였습니다. 그런데 2주도&nbsp;지나지 않아 금방 문제가 생겼습니다. 성능이 심각하게 저하되어 더 이상 Kibana에서 조회가 안 되는 상황이 된 겁니다.
<h4><strong>A. 메모리 증설</strong></h4>
첫 번째로 취한 조치는 당연히 서버 사양을 업그레이드하는 것이었습니다. ElasticSearch도 일종의 DB이고 최대한 많은 인덱스를 메모리에 올려놓는 것이 성능에 엄청난 차이를 가져오기 때문에 메모리를 최대한 많이 잡으라고(최대 31GB) 권고하고 있습니다.

하지만 서버 사양 말고도 튜닝할 포인트들이 많았기 때문에 일단&nbsp;m4.xlarge급 인스턴스(CPU 4개, 메모리 16GB)로 유지해도 충분하다고 판단하였습니다. 현재 각 애플리케이션이 차지하고 있는 메모리 사용량은 아래와 같습니다.

<a href="https://blog.dramancompany.com/wp-content/uploads/2015/12/elk_memory.png"><img class="alignnone size-large wp-image-335" src="https://blog.dramancompany.com/wp-content/uploads/2015/12/elk_memory-1024x99.png" alt="elk_memory" width="660" height="64"></a>
<h4><strong>B. Index Template 최적화</strong></h4>
서버 메모리를 증설했지만 문제는 완전히 해결되지 않았습니다. "lumberjack input the pipeline is blocked temporarily refusing new connection"과 같은 에러가 나면서 logstash-forawrder에서 logstash로 맺은 커넥션이 자꾸 끊어지는 현상이 나타났습니다. 열심히 구글링을 해보니 Logstash에서 ElasticSearch로 데이터를 보내지 못하는 경우 큐에 보관을 하게 되는데 이 큐가 꽉차면 client(Logstash 입장에서는 logstash-forwarder)의 연결을 강제로 끊어버린다는 내용이 있었습니다. 추측컨대 ElasticSearch의 indexing 속도가 Logstash에서 로그를 밀어넣는 속도를 따라가지 못해서 그런 것 같았습니다. 그래서 ElasticSearch의 indexing 속도를 최적화하기로 하였습니다.

가장 먼저 눈에 띈 것은 ElasticSearch가 기본적으로 로그의 모든 속성을 다 인덱싱하고 있다는 것이었습니다. 이는 ElasticSearch를 설치하고 나면 기본적으로 <a href="https://www.elastic.co/guide/en/elasticsearch/guide/current/dynamic-mapping.html">Dynamic Mapping</a> 기능이 활성화되어 있기 때문이었습니다. 따라서 검색에 꼭 필요한 필드들만 index를 생성하도록 인덱스 템플릿을 조정해 줄 필요가 있습니다.

<a href="https://blog.dramancompany.com/wp-content/uploads/2015/12/elk_index1.png"><img class="alignnone size-full wp-image-337" src="https://blog.dramancompany.com/wp-content/uploads/2015/12/elk_index1.png" alt="elk_index" width="847" height="735"></a>

위의 템플릿 설정에서 "_default_" 의 "dynamic" 속성을 false로 지정하여 지정된 필드 이외에는 인덱싱하지 않도록 설정하였습니다.

또 꼭 필요한 경우가 아니라면 analyzed index를 사용하지 않도록 하였습니다. analyzed index를 사용하면 해당 필드를 기반으로 분석 그래프를 그리는 등 Visualization을 용이하게 할 수 있지만, 그만큼 인덱스의 크기가 커지고 성능에 영향을 줍니다. 위에 기술한 요구사항대로 저희는 Visualization에 대한 많은 기능을 필요로 하지 않기 때문에 대부분의 필드들은 not analyzed index를 사용하고 있습니다.
<h4><strong>C. Index Shard 최적화</strong></h4>
Logstash는 하루에 한 개씩 인덱스가 생깁니다. 그리고 이를 지정된 샤드 개수만큼 분산하여 저장하게 되는데, ElasticSearch의 기본 설정은 인덱스 1개당 5개의 샤드를 생성하도록 되어 있습니다. 이를 그림으로 표현하면 다음과 같습니다.

<a href="https://blog.dramancompany.com/wp-content/uploads/2015/12/elk_shard.png"><img class="alignnone size-large wp-image-339" src="https://blog.dramancompany.com/wp-content/uploads/2015/12/elk_shard-1024x407.png" alt="elk_shard" width="660" height="262"></a>

ElasticSearch의 클러스터 노드가 2개라고 가정하고, number of replicas는 1, number of shards는 5로 지정되어 있으면 위와 같이 각 Logstash&nbsp;일자별 인덱스가 5개의 primary shard로 분산되고 각 shard마다 복제본이 하나씩 생겨 총 10개의 shard가 생성됩니다. 그리고 클러스터의 2개 노드에 골고루 분산됩니다.

하지만 샤드 개수가 많아지면 많아질수록 검색 성능은 점점 떨어집니다. 하나의 질의를 처리하기 위해 건드려야 할 샤드가 그만큼 많아지기 때문입니다. 저희는 로그의 용량이 그리 크지 않기 때문에 샤드를 많이 만들 필요가 없었고, 따라서 인덱스당 1개만 생성하도록 지정했습니다.
<h4><strong>D. Index 보관 주기 설정</strong></h4>
위에서 언급한 대로 인덱스와 샤드의 수가 많으면 많아질수록 검색의 성능은 떨어지기 때문에 일정 시간이 지나 더 이상 검색할 일이 없는 인덱스들은 아카이빙을 하고 ElasticSearch에서는 삭제해주어야 합니다.

ElasticSearch의 인덱스 아카이빙은 보통 S3를 많이 이용하시는 듯 합니다. 저희도 추후 인덱스 아카이빙을 S3에 할 계획입니다.
<h4><strong>E. System Configuration</strong></h4>
위에서 이야기한대로 메모리를 늘려 잡았다고 하더라도, 메모리 Swap이 자주 일어난다면 ElasticSearch의 성능은 떨어질 수 밖에 없습니다. ElasticSearch는 메모리 Swap이 일어나지 않도록 강제로 메모리를 점유하게 하는 설정이 있는데 바로&nbsp;bootstrap.mlockall 이란 속성입니다.

ES_HEAP_SIZE 환경 변수에 ElasticSearch에 할당할 메모리 크기를 지정해주고 elastic search.yml 환경 설정 파일에 위 속성을 true로 지정해주면 메모리 swap을 허용하지 않게 됩니다.

현재 ELK 서버는 메모리가 16GB이므로 ES_HEAP_SIZE는 그 반인 8GB로 설정하였습니다.
<h3><strong>5. 향후 고려 사항</strong></h3>
위의 튜닝 과정을 거쳐 현재는 한 대의 서버로 잘 운영되고 있지만 아직 개선해야 할 점들이 많이 있습니다. 앞으로 고려해야 할 사항들을 다음과 같이 정리해 보았습니다.
<h4><strong>A. 서버 사양 Upgrade</strong></h4>
리멤버 회원 수도 계속 증가하고, 이용률도 점점 많아진다면 수집되는 로그의 양도 그만큼 많을 수 밖에 없습니다. 따라서 향후 서버 사양을 몇 번 더 업그레이드하는 것은 피할 수 없는 일일 것입니다.
<h4><strong>B. 꾸준한 Patch Update</strong></h4>
ELK Stack은 <a href="https://www.elastic.co">Elastic.co</a>라는 회사에서 꾸준히 관리하고 유지보수하기 때문에 오픈 소스임에도 패치 업데이트가 꽤 빠른 것 같습니다. 따라서 그 때 그 때 잘 업데이트를 해준다면 좀 더 성능도 좋아지고 버그도 줄어들지 않을까 생각합니다.
<h4><strong>C. Index Template 관리</strong></h4>
로그를 수집하는 서비스가 점점 늘어나면 Index Template도 그에 맞게 꾸준히 관리해주어야 합니다. 그렇지 않으면 불필요한 인덱스가 우후죽순처럼 생겨나게 되고 결국은 ELK 서버의 성능을 떨어뜨립니다. 또 나중에 이를 정리하는데에도 만만치않은 노력을 들여야 할 것입니다.
<h4><strong>D. ElasticSearch 클러스터 노드 증설</strong></h4>
아무래도 하나의 노드에서 많은 샤드를 관리할수록 인덱스나 질의 성능은 떨어질 것입니다. 또, 데이터 유실이 일어나면 안 되는 로그 정보들이라면 복제도 해야 합니다. 따라서 나중에는 클러스터의 노드를 점점 늘려가면서 이러한 요구사항을 다룰 필요가 있습니다.
<h3><strong>6. Conclusion</strong></h3>
지금까지 어떻게 해서 ELK를 도입하여 운영하게 되었는지 간략하게 이야기해보았습니다. 아시다시피, 오픈 소스는 공짜가 아닙니다. 도입 후 운영하는 비용까지 고려해야 하기 때문입니다. ELK 도입 후 간간히 신경을 많이 써주어야 하는 부분이 있지만, 그래도 지금까지는 상당히 만족하면서 잘 지내오고 있습니다.

앞으로 개발자도 더 늘어나고, 또 로그 데이터 분석에 대한 필요가 점점 늘어나게 되면 ELK를 본격적으로 운영/관리해야 할 것입니다. 그러려면 앞으로 ELK에 대해 더 많이 공부하고 노하우를 쌓아야 합니다. ELK는 다른 분들도 많이 도입해서 사용하시는 만큼 서로 지식과 노하우를 공유하면서 함께 발전해갔으면 하는 바램입니다. 저희도 ELK에 대해 아직 모르는 부분이 훨씬 더 많으니 좋은 정보와 가르침 부탁 드립니다.
<h3><strong>7. References</strong></h3>
<ul>
 	<li><a href="http://jasonwilder.com/blog/2013/07/16/centralized-logging-architecture/">Centralized Logging Architecture</a></li>
 	<li><a href="http://blog.takipi.com/the-7-log-management-tools-you-need-to-know/">The 7 Log Management Tools You Need To Know</a></li>
 	<li><a href="https://www.digitalocean.com/community/tutorials/how-to-install-elasticsearch-logstash-and-kibana-elk-stack-on-centos-7">How To Install Elasticsearch, Logstash, and Kibana 4 on CentOS 7</a></li>
 	<li><a href="https://korekontrol.eu/blog/tips-for-centralized-logging-infrastructure-with-logstash">Tips for centralized logging infrastructure with logstash</a></li>
 	<li><a href="http://agileworks.blogspot.kr/2014/09/elk-and-elasticsearch.html">A New Beginning: ELK and Elasticsearch</a></li>
 	<li><a href="http://brewhouse.io/blog/2014/11/04/big-data-with-elk-stack.html">Big data in minutes with the ELK Stack</a></li>
 	<li><a href="http://blog.hsuhanooi.com/2014/11/06/elasticsearch/">11 Tips to Optimize Elasticsearch · Hsu Han's Software Engineering Blog</a></li>
 	<li><a href="https://blog.codecentric.de/en/2014/05/elasticsearch-indexing-performance-cheatsheet/">Elasticsearch Indexing Performance Cheatsheet</a></li>
 	<li><a href="https://www.loggly.com/blog/nine-tips-configuring-elasticsearch-for-high-performance/">9 Tips on ElasticSearch Configuration for High Performance</a></li>
 	<li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/setup-configuration.html">ElasticSearch Configuration</a></li>
 	<li><a href="https://jackhanington.com/blog/2014/12/11/create-a-custom-elasticsearch-template/">Create a Custom Elasticsearch Template</a></li>
 	<li><a href="http://tech.domain.com.au/2014/12/elasticsearch-snapshots-backup-restore-s3/">Elasticsearch snapshot backup/restore to S3</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>331</wp:post_id>
		<wp:post_date><![CDATA[2015-12-22 18:13:59]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-12-22 09:13:59]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-02-23 23:50:03]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-02-23 14:50:03]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%ec%95%88%ec%a0%95%ec%a0%81%ec%9d%b8-%ec%84%9c%eb%b9%84%ec%8a%a4-%ec%9a%b4%ec%98%81%ec%9d%84-%ec%9c%84%ed%95%9c-%ec%84%9c%eb%b2%84-%eb%aa%a8%eb%8b%88%ed%84%b0%eb%a7%81-2]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="develop"><![CDATA[Tech]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[4]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[right-sidebar]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_slogan]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_subslogan]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_header_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_scroll_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_bottom_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_footer_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_view_post_info]]></wp:meta_key>
		<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_post_icons]]></wp:meta_key>
		<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729176086;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:312;}i:1;a:1:{s:2:"id";i:2967;}i:2;a:1:{s:2:"id";i:2528;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_single_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:17:{s:8:"subtitle";s:0:"";s:6:"format";s:8:"standard";s:5:"video";s:0:"";s:7:"gallery";s:0:"";s:11:"source_name";s:0:"";s:10:"source_url";s:0:"";s:8:"via_name";s:0:"";s:7:"via_url";s:0:"";s:8:"override";a:1:{i:0;a:11:{s:18:"single_blog_custom";s:0:"";s:7:"sidebar";s:0:"";s:14:"second_sidebar";s:0:"";s:14:"share_position";s:0:"";s:17:"share_float_style";s:0:"";s:16:"post_date_format";s:0:"";s:23:"post_date_format_custom";s:0:"";s:21:"post_reading_time_wpm";s:0:"";s:20:"zoom_button_out_step";s:1:"1";s:19:"zoom_button_in_step";s:1:"1";s:17:"number_popup_post";s:1:"1";}}s:14:"image_override";a:1:{i:0;a:2:{s:26:"single_post_thumbnail_size";s:0:"";s:24:"single_post_gallery_size";s:0:"";}}s:22:"trending_post_position";s:0:"";s:19:"trending_post_label";s:0:"";s:20:"sponsored_post_label";s:0:"";s:19:"sponsored_post_name";s:0:"";s:18:"sponsored_post_url";s:0:"";s:19:"sponsored_post_logo";s:0:"";s:19:"sponsored_post_desc";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle_flag]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[333]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_format_gallery_images]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:2:"id";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>921</wp:comment_id>
			<wp:comment_author><![CDATA[서비스 운용과 로그 관리 &#8211; lifewtech]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>https://lifewtech.com/2017/02/%ec%84%9c%eb%b9%84%ec%8a%a4-%ec%9a%b4%ec%9a%a9%ea%b3%bc-%eb%a1%9c%ea%b7%b8-%ea%b4%80%eb%a6%ac/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[192.241.232.192]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-02-24 18:08:21]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-02-24 09:08:21]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] 안정적인-서비스-운영을-위한-서버-모니터링-2 From 드라마엔컴퍼니(앱이름: &#8230; [&#8230;]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1487927301.755518;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>1946</wp:comment_id>
			<wp:comment_author><![CDATA[jason]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[wotjd1005@naver.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[210.94.41.89]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2018-02-27 18:30:03]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2018-02-27 09:30:03]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[좋은 글 잘 읽었어요. 좋은 경험 공유 감사합니다.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1519723803.26942;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>5479</wp:comment_id>
			<wp:comment_author><![CDATA[c]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[deep3eye@naver.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.15.82]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2020-03-29 21:55:22]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2020-03-29 12:55:22]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[안녕하세요.
포스팅 잘 보고있습니다.
한 가지 궁금한게 있는데요,
logstash에 아래와 같이 복수개의 설정을 등록하고 AAAA.json에 데이터를 넣으면 AAAA 인덱스와 BBBB 인덱스 모두에게 AAAA.json 데이터가 쌓입니다.
왜 이런걸까요?
제가 설정을 뭔가 빠뜨린걸까요..?

[pipelines.yml]
```
- pipeline.id: AAAA
  path.config: "/etc/logstash/conf.d/AAAA.conf"
  queue.type: persisted
- pipeline.id: BBBB
  path.config: "/etc/logstash/conf.d/BBBB.conf"
  queue.type: persisted
```

[AAAA.conf]
```
input {
    stdin {
        codec =&gt; json
    }
    file {
        codec =&gt; json
        path =&gt; "AAAA.json"
        start_position =&gt; "beginning"
        sincedb_path =&gt; "NUL"
    }
}

output {
    elasticsearch {
        hosts =&gt; "localhost"
        index =&gt; "AAAA"
    }
    stdout {}
}
```

[BBBB.conf]
```
input {
    stdin {
        codec =&gt; json
    }
    file {
        codec =&gt; json
        path =&gt; "BBBB.json"
        start_position =&gt; "beginning"
        sincedb_path =&gt; "NUL"
    }
}

output {
    elasticsearch {
        hosts =&gt; "localhost"
        index =&gt; "BBBB"
    }
    stdout {}
}
```]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1585486522.232479;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>12601</wp:comment_id>
			<wp:comment_author><![CDATA[리멤버는 서비스 모니터링을 어떻게 하고 있을까? - DRAMA&amp;COMPANY]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>https://blog.dramancompany.com/2022/06/how-remember-monitors/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.20.192]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2022-06-21 17:27:19]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2022-06-21 08:27:19]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] 과거에 ELK 로 선택한 것과 관련한 블로그 포스트 [&#8230;]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1655800039.440663;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1655892716.327881;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"hb.lee";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[안드로이드에 Flux 적용하기. Flux는 정말 새로운 것인가?]]></title>
		<link>https://blog.dramancompany.com/2016/03/%ec%95%88%eb%93%9c%eb%a1%9c%ec%9d%b4%eb%93%9c%ec%97%90-flux-%ec%a0%81%ec%9a%a9%ed%95%98%ea%b8%b0/</link>
		<pubDate>Fri, 11 Mar 2016 03:53:40 +0000</pubDate>
		<dc:creator><![CDATA[rfrost]]></dc:creator>
		<guid isPermaLink="false">http://developer.dramancompany.com/?p=456</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="https://blog.dramancompany.com/wp-content/uploads/2016/03/flux.png" rel="attachment wp-att-464"><img class="aligncenter size-full wp-image-464" src="https://blog.dramancompany.com/wp-content/uploads/2016/03/flux.png" alt="flux" width="400" height="400"></a>

<span class="s1">Flux는 MVC모델의 단점을 보완하기 위해 페이스북에서 고안한 패턴으로, 웹개발 환경에서 먼저 쓰여지기 시작하였습니다. <a href="https://facebook.github.io/flux/" target="_blank" rel="noopener noreferrer">2014년에 페이스북에서 Flux를 발표</a>하였는데, 발표 후 많은 웹개발자들의 관심과 함께 기술적인 논의도 활발히 이루어졌습니다.</span>

[caption id="attachment_461" align="aligncenter" width="2232"]<a href="https://blog.dramancompany.com/wp-content/uploads/2016/03/flux-diagram-white-background.png" rel="attachment wp-att-461"><img class="size-full wp-image-461" src="https://blog.dramancompany.com/wp-content/uploads/2016/03/flux-diagram-white-background.png" alt="플럭스" width="2232" height="1114"></a> 플럭스는 리액트와 함께 웹 분야에서 등장한 패턴입니다.[/caption]
<p class="p1"><span class="s1">저는 이것이 무엇이길래 다들 이렇게 주목하는가 궁금했습니다. 그리고 이것이 패턴이라면, 안드로이드에도 적용하여 구조개선을 이룰 수 있지 않을까, 기대감을 품고 학습을 시작하였습니다. 결론을 먼저 말씀드리면, 기대했던만큼 좋은 패턴은 아니라고 생각합니다. 단점도 있고, 새로운 패턴이라고 하기에 모호한 부분이 있습니다. 하지만 MVC, MVP 등의 전통 패턴과는 다른 관점으로 생각할 수 있도록 안내하고, 어떠한 경우에 있어서는 개발을 하기 쉽도록 도와줍니다.</span></p>
<p class="p1"><span class="s1">이제부터 1. Flux가 무엇인지, 2. 어떻게 안드로이드에 적용하는지, 3. 어떠한 경우에 실제로 사용하기에 적절한지, 그리고 4. 정말 Flux가 좋은지에 대해 리멤버에 적용하면서 배웠던 것들을 공유하겠습니다.</span></p>

<h1 class="p1">Flux 알아보기</h1>
<p class="p1"><span class="s1">Flux를 짧게 설명하면, 데이터를 단방향으로 흐르도록 하여, 데이터만 바라보며 이밴트를 다룰 수 있도록 고안한 구조입니다. 이를 위해서 View 외에 Action, Dispatcher, Store가 존재합니다. Flux에 대한 자세한 설명은 <a href="http://bit.ly/1OYfE4G" target="_blank" rel="noopener noreferrer">링크</a>를 참조해 주세요.</span></p>


[caption id="attachment_459" align="aligncenter" width="390"]<a href="https://blog.dramancompany.com/wp-content/uploads/2016/03/flux-react-e1457457631952.png" rel="attachment wp-att-459"><img class="wp-image-459 size-full" src="https://blog.dramancompany.com/wp-content/uploads/2016/03/flux-react-e1457457631952.png" alt="" width="390" height="219"></a> Flux의 핵심은 Action, Dispatcher, Store, View에서 이루어지는 데이터 흐름입니다.[/caption]
<h1 class="p1"><span class="s1">안드로이드에 Flux 적용하기</span></h1>
<p class="p1"><span class="s1">그러면 Flux를 어떻게 안드로이드에 적용할 수 있을까요? Github에 Flux 구조로 만든 간단한 <a href="https://github.com/lgvalle/android-flux-todo-app" target="_blank" rel="noopener noreferrer">예시 프로젝트</a>가 있습니다. 이것을 참조하시면, Flux를 안드로이드에 적용하는 방법 뿐만 아니라, 위에서 설명한 Action, Dispatcher, Store, View의 관계를 좀더 구체적으로 이해할 수 있습니다.</span></p>
<p class="p1"><span class="s1">Action은 어느 뷰에서나 생성될 수 있습니다. Dispatcher는 생성된 Action을 스토어에 보내고, 스토어는 Action을 수행 후 다시 Dispatcher를 통해 View에게 자신의 데이터가 갱신되었음을 알립니다. 이 일련의 과정에서 Action을 전역으로 전달하는 Dispatcher는 다양한 방법으로 구현할 수 있습니다. 위 프로젝트에서는 Bus라는 클래스로 직접 구현하였습니다. 하지만 이 글을 읽으시는 분들께서 만약 싱글톤을 이용한 전역 이밴트 관리가 익숙하지 않으시다면, 유명한 라이브러리인 <a href="https://github.com/greenrobot/EventBus" target="_blank" rel="noopener noreferrer">이밴트 버스</a>를 사용해서 Dispatcher를 대체할 수 있습니다.</span></p>


[caption id="attachment_460" align="aligncenter" width="1280"]<a href="https://blog.dramancompany.com/wp-content/uploads/2016/03/EventBus-Publish-Subscribe.png" rel="attachment wp-att-460"><img class="wp-image-460 size-full" src="https://blog.dramancompany.com/wp-content/uploads/2016/03/EventBus-Publish-Subscribe.png" alt="이벤트 버스" width="1280" height="479"></a> 위 그림에서 Event를 Action, Event Bus를 Dispatcher로 생각하면 이해가 쉽습니다. Subscriber는 Action을 받는 곳으로, Store 또는 View가 될 수 있습니다.[/caption]

&nbsp;
<h1 class="p1"><span class="s1">리멤버에서 Flux 사용하기</span></h1>
<p class="p1"><span class="s1">리멤버에서는 명함 교환방 기능에서 Flux를 사용하였습니다. 명함 교환방은 오프라인 행사에서 여러명이 명함을 쉽게 온라인으로 교환할 수 있도록 돕는 기능입니다. 이 때 중요한 것은 ‘교환방’ 데이터 입니다. 명함 교환방은 교환방에 들어온 후에 시작되는 기능이기 때문에, 교환방에서 일어나는 대부분의 이밴트는 교환방 데이터에 의존합니다. 그리고 교환방의 데이터를 변화시킵니다. 다양한 뷰와 모델에서 하나의 데이터에 접근하고, 건드리는 것입니다.</span></p>


[caption id="attachment_466" align="aligncenter" width="1080"]<a href="https://blog.dramancompany.com/wp-content/uploads/2016/03/리멤버-명함교환방-이미지.png" rel="attachment wp-att-466"><img class="size-full wp-image-466" src="https://blog.dramancompany.com/wp-content/uploads/2016/03/리멤버-명함교환방-이미지.png" alt="명함 교환" width="1080" height="648"></a> 교환방에 입장 후 교환방 데이터를 기반으로 초대, 명함교환 등의 작업이 일어납니다.[/caption]
<p class="p1"><span class="s1">처음에는 평소와 같이 이밴트에 집중하여 교환방 데이터를 갱신하였습니다. 하지만 교환방 안에서 이루어지는 기능들이 많아지면서 데이터가 흐르는 방향이 급격히 늘어났습니다. 그리고 내가 지금 있는 화면에서 ‘교환방’ 데이터가 어떤 경우로 변화되는지, 예상하기 힘든 핑퐁이 이루어지게 되었습니다.&nbsp;대략 아래의 코드와 같습니다.</span></p>

<pre class="lang:java decode:true" title="이밴트에 따라 Room과 뷰를 갱신합니다.">private void getRoom() {
    mRoomHelper.room(roomId).subscribe(room -&gt; {
        // Room을 받고 뷰를 갱신한다.
        mRoom = room;
        updateToolbar();
    });
}


private void editRoom() {
    mRoomHelper.edit(room.getId(), inputRoomName.getText().toString())
            .subscribe(room -&gt; {
                ToastUtil.showShort(mContext, R.string.room_edit_success);

                // Room을 변경하고 뷰를 갱신한다.
                mRoom = room;
                updateToolbar();
            });
}

public void getMembers() {
    mRoomMemberHelper.exchangeMembers(room.getId()).subscribe(members -&gt; {
        mAdapter.refresh(members);
        boxEmpty.setVisibility(members.isEmpty()? View.VISIBLE : View.GONE);

        // 맴버를 새로고침 할 때마다 Room의 Count를 변경하고 뷰를 갱신한다.
        mRoom.setMemberCount(members.size());
        updateToolbar();
    });
}

.
.
// 그외 Room과 소통하는 많은 이밴트들이 있다.
.
.


// 뷰를 갱신한다.
private void updateToolbar() {
    mActivityFrag.setToolbarTitle(mRoom.getName());
    mActivityFrag.setToolbarSubTitle(getString(R.string.word_participant), mRoom.getMemberCount()));
    mActivityFrag.showTabLayout();
}</pre>
이밴트와 함께 뷰를 갱신하는 코드가 반복됩니다. 이것은 여러곳에서 Room을 접근하도록 만들어, 여러 비동기 작업이 진행될 때 안전하지 못하도록 만듭니다. 그리고 위 코드는 편의를 위해 이밴트들을 하나의 클래스에 모았기 때문에 그나마 보기가 편합니다. 하지만 실제로는 여러 화면에서 따로 이밴트가 일어나기 때문에, 이밴트로부터 뷰를 갱신하기까지 이어지는 로직의 복잡도가 매우 높습니다.

&nbsp;

<span class="s1">그래서 데이터를 기반으로 바라보는 Flux를 도입해 보았습니다. 결과는 좋았습니다. 어디에서 무슨 작업이 일어나든, 단순하게 생각하며 ‘교환방’ 데이터를 갱신해주니, 뷰에서도 햇갈리지 않고 잘 최신화된 결과를 보여줄 수 있었습니다.</span>
<pre class="lang:java decode:true" title="Flux로 Room을 통신한다">private void getRoom() {
    mRoomHelper.room(mRoomId).subscribe(room -&gt; {
        // 받아온 Room으로 Store를 갱신하는 Action을 생성한다.
        // (RxBus는 제가 구현한 Dispatcher 입니다.)
        RxBus.get().send(new RxEvent&lt;&gt;(RoomStore.REFRESH_ROOM_STACK, room));
    });
}

// Store는 싱글톤으로 전역적으로 데이터를 관리한다. (여기서 싱글톤 코드는 생략하였습니다.)
// Action을 받아 데이터를 변경하고, 뷰에게 갱신 알림을 보낸다.
public class RoomStore {
    public static final int SYNC_ROOM_STACK = 100;
    public static final int REFRESH_ROOM_STACK = 101;

    public void setEvent() {
        Subject&lt;RxEvent, RxEvent&gt; subject = RxBus.createSubject();
        subject.subscribe(event -&gt; {
            switch (event.getCode()) {
                // Refresh Room Action을 받는다.
                case REFRESH_ROOM_STACK:
                    // Store에 저장된 Room을 갱신한다.
                    mRoom = (Room) event.getParam();

                    // Room이 갱신되었음을 뷰에게 알린다.
                    RxBus.get().send(new RxEvent(SYNC_ROOM_STACK));
                    break;
            }
        }, Throwable::printStackTrace);
        RxBus.get().register(this, subject);
    }
}

// Room이 변화되었다는 Action이 잡히면, 뷰를 갱신한다.
private void setEvent() {
    Subject&lt;RxEvent, RxEvent&gt; subject = RxBus.createSubject();
    subject.subscribe(event -&gt; {
        switch (event.getCode()) {
            // Room 갱신 Action을 잡는다.
            case RoomStore.SYNC_ROOM_STACK:
                // 뷰를 업데이트 한다.
                updateToolbar();
                break;
        }
    }, Throwable::printStackTrace);
    RxBus.get().register(this, subject);
}</pre>
위 코드에서는 View가 컨트롤러 이밴트에 종속되지 않고, 참조하는 Room 데이터만 바라보고 있습니다. Action에 관계없이 View는 데이터가 변화한 당시의 최신 상태로 업데이트 됩니다. 데이터의 최신상태만을 참조하기 때문에, 여러 비동기 작업 중에도 안전하게 적절한 데이터를 보여줄 수 있습니다. 그리고 비즈니스 로직, 데이터 관리, 뷰 갱신 로직을 분리해, Action을 보내는 것 외에 중복을 제거합니다.
<h1 class="p1">Flux는 정말 좋은가?</h1>
<p class="p1">페이스북은 Flux를 주로 MVC와 비교하였습니다. 발표에서는 MVC가 복잡도의 원인이며, 유연성을 낮추는 악의 근원으로 설명됩니다. 하지만 저는 Flux를 적용하면서, MVC에 Dispatcher를 섞어 Action 을 받아주도록 구현한다면, 유사할 것이라고 생각하였습니다.</p>


[caption id="attachment_462" align="aligncenter" width="390"]<img class="wp-image-462 size-full" src="https://blog.dramancompany.com/wp-content/uploads/2016/03/flux-react-mvc.png" alt="" width="390" height="221"> 페이스북에서는 MVC를 사용하면 이렇게 엄청난 위험이 있다고 이야기 하였지만, 이것도 <a href="https://www.reddit.com/r/programming/comments/25nrb5/facebook_mvc_does_not_scale_use_flux_instead/" target="_blank" rel="noopener noreferrer">논란</a>이 많습니다.[/caption]
<p class="p1">위에 MVC로 짠 교환방을 Action 기반으로 구현하면 다음과 같습니다.</p>

<pre class="lang:java decode:true " title="이밴트에 따라 Room과 뷰를 갱신합니다.">private void getRoom() {
    mRoomHelper.room(roomId).subscribe(room -&gt; {
        // Dispatcher가 Room이 바뀌었다는 Action을 발행한다.
        RxBus.get().send(new RxEvent&lt;&gt;(RoomStore.CHANGE_ROOM, room));
    });
}


private void editRoom() {
    mRoomHelper.edit(room.getId(), inputRoomName.getText().toString())
            .subscribe(room -&gt; {
                ToastUtil.showShort(mContext, R.string.room_edit_success);

                // Dispatcher가 Room이 바뀌었다는 Action을 발행한다.
                RxBus.get().send(new RxEvent&lt;&gt;(RoomStore.CHANGE_ROOM, room));
            });
}

public void getMembers() {
    mRoomMemberHelper.exchangeMembers(room.getId()).subscribe(members -&gt; {
        mAdapter.refresh(members);
        boxEmpty.setVisibility(members.isEmpty()? View.VISIBLE : View.GONE);

        // Dispatcher가 Room이 바뀌었다는 Action을 발행한다.
        mRoom.setMemberCount(members.size());
        RxBus.get().send(new RxEvent&lt;&gt;(RoomStore.CHANGE_ROOM, mRoom));
    });
}

// 컨트롤러에서 Dispatcher를 세팅한다.
private void setEvent() {
    Subject&lt;RxEvent, RxEvent&gt; subject = RxBus.createSubject();
    subject.subscribe(event -&gt; {
        switch (event.getCode()) {
            // Room 변경 Action을 받아 데이터와 뷰를 갱신한다.
            // 데이터 갱신은 원래 스토어에서 행하던 일이지만, Action 기반으로 하면 컨트롤러에서 한꺼번에 처리가 가능하다.
            case RxCode.CHANGE_ROOM:
                mRoom = (Room) event.getParam();
                updateToolbar();
                break;
        }
    });
    RxBus.get().register(this, subject);
}</pre>
<p class="p1">위에서는 이밴트 후 공통적인 작업을 Action으로 묶어 보내어, 컨트롤러의 한 곳에서 처리를 합니다. 이것은 Store에서 수행하는 데이터 관리를 Action에 따라 컨트롤러에서 진행한다고 생각하면, Flux와 유사한 구조입니다. 결국 Flux는 MVC에서 Store로 한번 데이터 레이어를 감싸준 것 뿐인데, 굳이 새로운 이름을 붙이고 패턴이라 자칭하면서, 복잡도를 늘린 것으로 볼 수도 있습니다.</p>

<h1 class="p1"><span class="s1">Flux의 장단점</span></h1>
<h3 class="p1"><span class="s1">장점</span></h3>
<ol>
 	<li class="p1"><span class="s1">Flux는 데이터가 한 방향으로 흐르므로, 이밴트를 다룰 때 고려해야 할 경우의 수를 줄일 수 있습니다. 이밴트가 일어나면 어떤 액션으로 분류되는지만 생각합니다. Store에서는 액션에 따라 데이터를 바꾸는 것만 바라봅니다. View는 데이터가 변할 때 어떻게 다시 그려야 하는지만 집중합니다. 이벤트, 데이터 갱신, 뷰 갱신에 이르는 과정을 독립적으로 관리할 수 있게 되는 것입니다.</span></li>
 	<li class="p1">데이터가 싱글톤 Store에 전역으로 관리되므로, 어디서든 쉽게 접근할 수 있습니다.</li>
</ol>
<h3 class="p1"><span class="s1">단점</span></h3>
<ol>
 	<li class="p1"><span class="s1">글로벌하게 Action을 정의, 관리해야 하므로, 코드 가독성이 낮습니다.</span></li>
 	<li class="p1"><span class="s1">이밴트를 바로 모델과 뷰에 적용하는 방식에 비해 직관적이지 않아, 학습비용이 필요합니다.</span></li>
 	<li class="p1">Dispatcher를 섞어 MVC를 구현하면, 결국 Flux와 비슷합니다. Flux라는 새로운 이름으로 인해 더 복잡해졌을 뿐입니다.</li>
</ol>
&nbsp;
<h1 class="p1"><span class="s1">결론</span></h1>
<p class="p1"><span class="s1">처음에는 Flux가 페이스북이 홍보한 것처럼 기존의 구조를 능가하는 새로운 개념이기를 기대하였습니다. 하지만 바랬던 만큼의 만능은 아니였습니다.&nbsp;</span></p>
<p class="p1">저는 Flux가 기존의 MVC, MVP와 대응되는 개념이라기 보다는, 데이터를 기반으로 구조를 바라볼 수 있도록 돕는 관점의 하나라고 보았습니다. 그래서 ‘교환방’ 이라는 다양한 곳에서 접근해야 하고, 여러 뷰에 영향을 주는 데이터가 있는 명함 교환방 기능에서 Flux를 활용하였습니다. 그리고 교환방에서 일어나는 뷰와 모델의 핑퐁을 줄이면서, 더 예상 가능한 안정적인 코드를 짤 수 있었습니다.</p>
<p class="p1"><span class="s1">어느 패턴이든 학습비용이 존재하며, 과도하게 사용될 경우 코드의 접근성과 가독성을 낮출 위험이 있습니다. 하지만 잘 활용한다면, 코드의 안정성와 유연성을 매우 높일 수 있습니다. Flux를 통해 저는 다르게 모듈을 설계할 수 있는 시각을 배웠고, 실제로 적용하면서 성과를 볼 수 있어 좋았습니다.</span></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>456</wp:post_id>
		<wp:post_date><![CDATA[2016-03-11 12:53:40]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-03-11 03:53:40]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-02-23 23:46:10]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-02-23 14:46:10]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%ec%95%88%eb%93%9c%eb%a1%9c%ec%9d%b4%eb%93%9c%ec%97%90-flux-%ec%a0%81%ec%9a%a9%ed%95%98%ea%b8%b0]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="develop"><![CDATA[Tech]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[4]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[right-sidebar]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_slogan]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_subslogan]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_header_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_scroll_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_bottom_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_footer_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_view_post_info]]></wp:meta_key>
		<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_post_icons]]></wp:meta_key>
		<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729507558;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:3073;}i:1;a:1:{s:2:"id";i:2124;}i:2;a:1:{s:2:"id";i:583;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_single_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:17:{s:8:"subtitle";s:0:"";s:6:"format";s:8:"standard";s:5:"video";s:0:"";s:7:"gallery";s:0:"";s:11:"source_name";s:0:"";s:10:"source_url";s:0:"";s:8:"via_name";s:0:"";s:7:"via_url";s:0:"";s:8:"override";a:1:{i:0;a:11:{s:18:"single_blog_custom";s:0:"";s:7:"sidebar";s:0:"";s:14:"second_sidebar";s:0:"";s:14:"share_position";s:0:"";s:17:"share_float_style";s:0:"";s:16:"post_date_format";s:0:"";s:23:"post_date_format_custom";s:0:"";s:21:"post_reading_time_wpm";s:0:"";s:20:"zoom_button_out_step";s:1:"1";s:19:"zoom_button_in_step";s:1:"1";s:17:"number_popup_post";s:1:"1";}}s:14:"image_override";a:1:{i:0;a:2:{s:26:"single_post_thumbnail_size";s:0:"";s:24:"single_post_gallery_size";s:0:"";}}s:22:"trending_post_position";s:0:"";s:19:"trending_post_label";s:0:"";s:20:"sponsored_post_label";s:0:"";s:19:"sponsored_post_name";s:0:"";s:18:"sponsored_post_url";s:0:"";s:19:"sponsored_post_logo";s:0:"";s:19:"sponsored_post_desc";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle_flag]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[464]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_format_gallery_images]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:2:"id";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>790</wp:comment_id>
			<wp:comment_author><![CDATA[여나무]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[kdg9037@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[210.108.251.60]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-08-23 16:16:52]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-08-23 07:16:52]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[감사합니다. 좋은 글 잘 읽었습니다.  React + Flux로 개발중인데, 개념적으로 부족하던 부분을 채울수 있었습니다! 특히 React 외에 다른 System에 적용하는 부분이 많이 인상적이었네요

개인적으로 Flux의 가장 큰 장점은 뷰와 모델의 핑퐁이 줄어드는 부분이라 생각합니다. 작성자 부분이 말씀하신것 처럼 복잡한 시스템에서 Event의 logic을 따라가다보면 어느 순간 이 function이  저 function같고 이 function이 뭘 하려던 function이었지? 라는 생각에 다시 처음부터 Logic 을 따라가야하는경우도 많이 발생했습니다.

오히려 이러한 경우에는 전체 시스템의 관점에서 봤을때에는 가독성이 떨어지지만,  특정 Event의 logic을 파악하는 것에는 오히려 가독성이 증가할수도 볼수 있지 않을까요?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1471936612.623808;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>792</wp:comment_id>
			<wp:comment_author><![CDATA[rfrost]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[min@dramancompany.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://rfrost77.tistory.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[106.250.181.163]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-08-30 17:06:08]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-08-30 08:06:08]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[잘 읽으셨다니 기쁘네요 :) 도움이 되었길 바랍니다. 말씀하신 부분이 맞습니다. 이벤트의 존재를 모른 상태에서 코드를 읽어가기에는 자연스럽지 않은 부분이 있지만, 인지 후에는 뷰모델의 핑퐁보다 훨씬 자연스러운 흐름으로 코드를 읽을 수 있습니다. 그 사이의 간격을 주석 또는 문서로 잘 채워준다면 단점을 더 보완할 수 있겠네요 ^^ 좋은 질문 감사합니다.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>790</wp:comment_parent>
			<wp:comment_user_id>5</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1472544368.580984;s:5:"event";s:9:"check-ham";s:4:"user";s:6:"rfrost";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[Realm 데이터베이스, 제대로 알고 안드로이드에서 사용하기]]></title>
		<link>https://blog.dramancompany.com/2016/03/realm-%eb%8d%b0%ec%9d%b4%ed%84%b0%eb%b2%a0%ec%9d%b4%ec%8a%a4/</link>
		<pubDate>Wed, 16 Mar 2016 03:20:07 +0000</pubDate>
		<dc:creator><![CDATA[rfrost]]></dc:creator>
		<guid isPermaLink="false">http://developer.dramancompany.com/?p=484</guid>
		<description></description>
		<content:encoded><![CDATA[<p class="p1"><span class="s1">* 아래 글은 Realm-Java 0.87.5 버전을 기준으로 작성되었습니다. 현재는 0.88.0이 나왔으며, 그에따라 약간 다른 내용이 있을 수 있습니다. <a href="https://github.com/realm/realm-java/blob/master/CHANGELOG.md" target="_blank" rel="noopener noreferrer">Changelog</a>를 참조하시면서 글을 보신다면, 혼동하지 않고 볼 수 있습니다.</span></p>


[caption id="attachment_488" align="aligncenter" width="470"]<a href="https://blog.dramancompany.com/wp-content/uploads/2016/03/realmDark.jpg" rel="attachment wp-att-488"><img class="wp-image-488 size-full" src="https://blog.dramancompany.com/wp-content/uploads/2016/03/realmDark.jpg" alt="realmDark" width="470" height="276"></a> 안드로이드에 기본적으로 설치된 Sqlite 기반으로 다양한 ORM이 있습니다. Realm은 엔진부터 새로 만든 데이터베이스 입니다. 그래서 Sqlite보다 빠르면서도, ORM과 같은 기능이 자연스럽게 제공되어 다루기 편합니다.[/caption]
<p class="p1"><span class="s1">리멤버는 최근에 API를 v2로 리팩토링 하면서 데이터 스키마를 많이 변경했습니다. 그에 따라 클라이언트도 리팩토링이 필요했고, 자연스럽게 사용하던 기술 스택을 재구성하였습니다. 그 과정에서 큰 부분을 차지했던 Realm에 대해 1. 왜 선택했는지, 2. 어떤 제약이 있는지, 3. 활용 Tip, 4. 장단점 등을 공유하고자 합니다.</span></p>

<h1 class="p1"><span class="s1">로컬DB 선택하기</span></h1>
<p class="p1"><span class="s1">리멤버는 지금까지 GreenDAO를 사용하였습니다. GreenDAO는 Generator를 통해 DAO 코드를 쉽게 생성하는 방식의 Sqlite기반 ORM 프레임워크입니다. 우리는 새로운 로컬DB 플랫폼으로 최근에 등장하여 빠르게 발전하고 있는 Realm을 주목하였습니다. 그리고 결정에 앞서 다양한 비교를 하였습니다.</span></p>

<h3 class="p1"><span class="s1">1. 벤치마크</span></h3>
<p class="p1"><span class="s1">Realm은 성능을 강점으로 내세웁니다. 실제로 얼마나 빠른지, 사용하는 GreenDAO와 비교해보았습니다.</span></p>
<p class="p1"><a href="https://blog.dramancompany.com/wp-content/uploads/2016/03/스크린샷-2016-03-14-오후-4.45.04.png" rel="attachment wp-att-534"><img class="aligncenter size-full wp-image-534" src="https://blog.dramancompany.com/wp-content/uploads/2016/03/스크린샷-2016-03-14-오후-4.45.04.png" alt="스크린샷 2016-03-14 오후 4.45.04" width="684" height="474"></a> <a href="https://blog.dramancompany.com/wp-content/uploads/2016/03/스크린샷-2016-03-14-오후-7.57.59.png" rel="attachment wp-att-535"><img class="aligncenter size-full wp-image-535" src="https://blog.dramancompany.com/wp-content/uploads/2016/03/스크린샷-2016-03-14-오후-7.57.59.png" alt="스크린샷 2016-03-14 오후 7.57.59" width="657" height="429"></a></p>
<p class="p1"><span class="s1">데이터가 많아질수록 Realm의 성능이 더 좋은 것을 볼 수 있습니다. 우리는 로컬DB에 쌓아야 할 명함 데이터가 20,000개를 넘는 사용자도 종종 있어, Realm을 사용한다면 성능에서 큰 이점이 있다고 생각하였습니다.</span></p>

<h3 class="p1"><span class="s1">2. 사용성</span></h3>
<p class="p1"><span class="s1">Realm은 사용성이 편하다고 주장합니다. <a href="https://realm.io/" target="_blank" rel="noopener noreferrer">링크</a>의 아래쪽을&nbsp;참고하면 간략한 쿼리 사용법을 알 수 있습니다. 편해 보입니다. 하지만 ORM도 잘 활용하면 충분히&nbsp;편하게 사용할 수 있습니다. 저는 단순히 쿼리가 간단한 것보다, 다른 사용상의 이점은 없을까 고민하며 스키마를 구성해보았습니다.</span></p>

<pre class="lang:java decode:true" title="RealmObject 스키마 관계 표현">public class StackRealm extends RealmObject {
    @PrimaryKey
    private long id;
    private boolean master;

    // Card 객체를 그대로 Instance에 추가하여 관계를 형성한다.
    private CardRealm mainCard = new CardRealm();

    // 1:n 관계도 편리하게 맺는다.
    private RealmList&lt;CardRealm&gt; subCards = new RealmList&lt;&gt;();
}</pre>
<p class="p1"><span class="s1">Sqlite는 객체를 그대로 DB에 저장할 수 없으므로, 테이블 간의 관계를 고민하며 스키마를 구성해야 합니다. 그리고 조인 쿼리를 필수로 사용해야 합니다. 하지만 Realm은 테이블 간의 관계를 has로 표현하여, 설계와 쿼리를 덜 고민하도록 합니다. 리멤버는 명함, 그룹 등 양방향 관계가 많습니다. 그래서 저는 여기에서&nbsp;큰 장점을 느꼈습니다.</span></p>

<h1 class="p1"><span class="s1">제약사항과 선택</span></h1>
<p class="p1"><span class="s1">Realm은 큰 제약이 2가지 있습니다. RealmObject를 상속받는 클래스의 customize가 허용되지 않고, Realm으로부터 받아온 객체는 쓰레드 간 전달이 불가능합니다. 하지만 저는 제약보다, 성능과 관계 표현의 편리함을 더 큰 장점으로 보았습니다. 그리고 2가지 제약은 대체할 수 있는 방법이 있습니다. </span><span class="s1">RealmObject 클래스의 customize는 static util 클래스를 만들어 대체합니다. 쓰레드 간 전달은 Realm이 제공하는 <a href="https://realm.io/kr/docs/java/latest/#section-15" target="_blank" rel="noopener noreferrer">트랜잭션</a>,&nbsp;<a href="https://realm.io/kr/docs/java/latest/#section-27" target="_blank" rel="noopener noreferrer">Async Method</a>와 <a href="https://realm.io/kr/docs/java/latest/#section-7" target="_blank" rel="noopener noreferrer">Auto Refresh</a>를 통해 해결할 수 있습니다. 위의 사항들을 고려하여 결론적으로 Realm으로의 DB&nbsp;이전을 결정하고, v2 적용 작업을 시작하였습니다.</span></p>

<pre class="lang:java decode:true" title="static Util 메소드 활용">public class StackRealmUtil {
    // RealmObject의 instance 메소드로 어울리는 것들은 이렇게 static한 util 메소드로 대체할 수 있다.
    public static boolean isEmpty(StackRealm stack) {
        return (stack.getMainCard() == null || stack.getMainCard().getId() == 0)
                &amp;&amp; (stack.getSubCards() == null || stack.getSubCards().isEmpty());
    }
}</pre>
<h1 class="p1"></h1>
<h1 class="p1"><span class="s1">Tip</span></h1>
<p class="p1"><span class="s1">Realm은 쓰레드 간 객체 전달이 안되는 큰 제약을 가지고 있기 때문에, 기존과 다르게 사용해야 크래시를 내지 않고 다룰 수 있습니다. 그 중 직접 다루어보지 않으면 알기 어려운 Tip 몇가지를 공유하겠습니다.</span></p>

<h3 class="p1"><span class="s1">1. DTO vs Auto Refresh</span></h3>
<p class="p1"><span class="s1">Realm은 쓰레드 간 객체 전달이 불가능 합니다. Realm을 처음 시작하면 가장 힘든 부분이 이 제약사항입니다. 가장 편하게 해결하는 방법은 DTO(Data Transfer Object)를 활용하는 것입니다. RealmObejct를 상속한 클래스와 동일한 속성들을 가진&nbsp;별도의 POJO 클래스를 만듭니다. 이것이 DTO 입니다. 활용 방법은 RealmObject를 DTO 객체에 DeepCopy 합니다. DTO는 Realm과 연결되어 있지 않으므로 쓰레드를 이동할 수 있습니다.</span></p>

<pre class="lang:java decode:true" title="DTO">// Realm 객체. RealmObject를 상속받으므로 쓰레드 간 전달이 불가능하다.
public class BannerRealm extends RealmObject {
    @PrimaryKey
    private String type;
    private int showCount;
    private int priority;
    // Getter, Setter 생략
}

// DTO 객체. 쓰레드 간 전달이 가능하다.
public class Banner {
    private String type;
    private int showCount;
    private int priority;

    // Getter, Setter 생략

    // Instance 메소드로 Realm 객체 변환
    public BannerRealm toBannerRealm() {
        BannerRealm bannerRealm = new BannerRealm();
        bannerRealm.setType(getType());
        bannerRealm.setShowCount(getShowCount());
        bannerRealm.setPriority(getPriority());
        return bannerRealm;
    }
}

// static 메소드로 Realm 객체에서 DTO로 변환
public static Banner toBanner(BannerRealm bannerRealm) {
    if (bannerRealm == null) return null;

    Banner banner = new Banner();
    banner.setType(bannerRealm.getType());
    banner.setShowCount(bannerRealm.getShowCount());
    banner.setPriority(bannerRealm.getPriority());
    return banner;
}</pre>
하지만 RealmObject에 선언된 관계가 복잡하면 DTO로 변환하는 비용이 급격히 커집니다. 게다가 여러 개의 RealmObject를 DTO로 변환해야 할 경우에는, 급기야 ANR이 발생합니다. 그러므로 객체를 복사하여 넘기는 방법은 바람직하지 않습니다.
<p class="p1">그래서 Auto Refresh를 활용하는 것을 권장합니다. (Auto Refresh의 자세한 설명은 <a href="https://realm.io/kr/docs/java/latest/#section-7" target="_blank" rel="noopener noreferrer">링크</a>를 참조해주세요.) Auto Refresh는 하나의 쓰레드에서 Realm 객체를 변경하면, 같은 DB를 가리키는 Realm 객체들에 대해서 모두 자동으로 새로고침되는 Realm의 기능입니다. 굳이 객체를 변환하지 않아도 각 쓰레드마다 Realm에 따로 접근하면, Auto Refresh에 의해 자연스럽게 쓰레드 사이에 값을 전달하는 효과를 얻을 수 있습니다.</p>

<h3 class="p1"><span class="s1">2. copyFromRealm()</span></h3>
DTO를 활용하지 않을 경우, Realm으로부터 불러온 객체는 모두 Realm DB와 묶여있게 됩니다. Realm DB에 묶인 객체는 트랜잭션 안에서만 값을 바꿀 수 있고, 원하지 않는 Auto Refresh에 걸리는 등&nbsp;자유롭지 못합니다. 하지만 Realm DB에 엮이지 않고 그저 지금의 객체 값만 변경하고 싶다거나, DB와 별도로 이 객체의 데이터만 필요한 경우가 있습니다. 이런 경우에는 copyFromRealm()을 활용합니다. copyFromRealm()은 Realm 객체로부터 Realm DB와의 연결을 끊은 POJO 클래스 인스턴스를 복제합니다. RealmObject를 상속받는 클래스를 그대로 사용하면서도, 위에서 설명한 DTO의 원리로 객체를 복사하는 것입니다. (쓰레드 간 전달도 가능합니다.) 하지만 이것 역시 비용이 가볍지 않으므로, 적절한 경우에만 활용하는 것이 중요합니다.
<pre class="lang:java decode:true" title="copyFromRealm()">// cardRealm은 Realm과 연결되어 있으며, Auto Refresh 된다.
// 쓰레드 간 데이터를 전달할 수 없다.
// Setter를 쓰기 위해서는 트랜잭션 안에 있어야 한다.
CardRealm cardRealm = CardRealmUtil.getCardById(mRealm, cardId);

// card는 일반 객체와 동일하다. Realm과 연결이 없고, Auto Refresh 되지 않는다.
// 쓰레드 간 데이터를 전달할 수 있다.
// Setter를 자유롭게 사용할 수 있다.
CardRealm card = mRealm.copyFromRealm(cardRealm);</pre>
&nbsp;
<h2 class="p1"></h2>
<h3 class="p1">3. 시간차 트랜잭션. Realm.refresh()</h3>
<p class="p1">CRUD를 할 때 메인이 아닌 쓰레드에서 Write를 수행하고, 메인 쓰레드에서 Read를 하는 것은 바람직한 사용 패턴입니다. 하지만 Realm에서 Write와 Read를 쓰레드를 달리하여 수행하면, 가끔 갱신되지 않은 데이터가 Read 되는 것을 발견할 수 있습니다. Write를 마치기 전에 Read 되기 때문입니다. 이렇게 시간차로 트랜잭션이 수행될 때에는,&nbsp;<span style="line-height: 1.5;">Write 후 Read 하는 부분에서 Realm.refresh()를 활용해주면, 강제적으로 Realm을 모두 새로고침 하면서, 언제나 최신 데이터를 받아올 수 있습니다. 하지만 Realm.refresh()는 비용이 가볍지 않은 작업이므로, 비동기적으로 Write가 일어난 후 바로 Read가 필요한 경우에만 활용하는 것이 좋습니다.</span></p>

<pre class="lang:java decode:true" title="Realm refresh">// Banner를 Write한다
BannerUtil.get().addBannerRealmAsync().subscribe(added -&gt; {
            // Write가 종료되면 Realm을 새로고침한다.
            mRealm.refresh();

            // 새로고침한 Realm으로부터 Banner을 설정한다.
            BannerUtil.get().setCurrentBanner(mRealm);
        });</pre>
<h1 class="p1"></h1>
<h1 class="p1"><span class="s1">Realm의 단점</span></h1>
<p class="p1"><span class="s1">처음에는 Realm의 빠른 속도와 편한 사용성에 열광하였습니다. 하지만 점점 사용 범위가 넓어지고 다양해지면서, 기존에 생각지 못했던 단점들을 많이 볼 수 있었습니다.</span></p>

<h2 class="p1"></h2>
<h3 class="p1"><span class="s1">1. 알 수 없는 예외</span></h3>
<h3><span class="s1">BadVersion</span></h3>
<p class="p1"><span class="s1">findAllAsync(), findAllSortedAsync()를 쓸 경우 간헐적으로 일어납니다. 하지만 어느정도 사용자가 있는 어플리케이션에서는 무시못할 만큼의 크래시가 발생합니다. Realm 내부에서 일어나는 버그이기에 원인도 알 수 없습니다. 0.88.0 부터 해결되었다고 합니다. (아직 확인하지는 못했습니다.) 해결 방법은 findAll, findAllSorted로 대체하는 것입니다.</span></p>

<h3 class="p1"><span class="s1">SharedGroup</span></h3>
<p class="p1"><span class="s1">Realm에서 제공하는 초기화 메소드 Realm.getDefaultInstance() 에서 발생합니다. BadVersion만큼 자주 발생하지는 않아서 어느정도 무시할 수는 있지만, 이것도 순전히 Realm을 사용한 것만으로 일어나는 크래시이기에, 스트레스의 원인입니다. 초기화를 대체하는 것은 없으므로 해결방법은 없습니다.</span></p>
<p class="p1"><span class="s1">아직 1.0을 넘지 못한 버전이기 때문에, 위와 같이 원인을 알 수 없는 예외들이 있는 등 어느 정도의 불안정성이 동반되는 것 같습니다.</span></p>

<h2 class="p1"></h2>
<h3 class="p1"><span class="s1">2. 다중 쓰레드에서의 Realm 객체 관리</span></h3>
<p class="p1"><span class="s1">Realm 객체는 쓰레드 간 직접 전달이 불가능하지만, 같은 Realm DB 값의 객체라면, 다른 쓰레드에서 접근하여도, 참조하는 객체는 하나입니다. (위에서 설명한&nbsp;<a href="https://realm.io/kr/docs/java/latest/#section-7" target="_blank" rel="noopener noreferrer">Auto Refresh</a>가 가능한 원리입니다.) 때문에 하나의 쓰레드에서 Realm 객체를 삭제한다면, 다른 쓰레드에서 동일한 Realm 객체를 참조하지 못합니다. 이것은 삭제 순서를 보장할 수 없는 다중 쓰레드 상황에서 예외를 초래합니다. Realm.isValid() 를 통해 삭제 여부를 체크하여도, 종종 다른 쓰레드에서 삭제가 된 Realm 객체라며&nbsp;<a href="http://crashes.to/s/32733fab0d8" target="_blank" rel="noopener noreferrer">크래시</a>를 발생시킵니다. 최대한 주의를 기울이지만, 다중 쓰레드 환경에서 이러한 시간차를 예방하는 것은 힘듭니다.</span></p>


[caption id="attachment_536" align="aligncenter" width="506"]<a href="https://blog.dramancompany.com/wp-content/uploads/2016/03/스크린샷-2016-03-14-오후-5.58.08.png" rel="attachment wp-att-536"><img class="size-full wp-image-536" src="https://blog.dramancompany.com/wp-content/uploads/2016/03/스크린샷-2016-03-14-오후-5.58.08.png" alt="다른 쓰레드에서 따로 접근하여도, 같은 Realm DB 객체라면, 하나의 인스턴스를 참조합니다. 따라서 하나의 쓰레드에서 Realm 객체를 삭제한다면, 다른 쓰레드에서 접근하지 못합니다." width="506" height="529"></a> 다른 쓰레드에서 따로 접근하여도, 같은 Realm DB 객체라면, 하나의 인스턴스를 참조합니다. 따라서 하나의 쓰레드에서 Realm 객체를 삭제한다면, 다른 쓰레드에서 접근하지 못합니다.[/caption]
<p class="p1">사실 sychronoized 등을 활용하면 해결방법이 없지는 않습니다. 하지만 자주 수행해야 하는 작업을 이런 방식으로 처리하는 것은 비효율이 큽니다. 그리고 다행히 이 현상은 자주 일어나지 않습니다. 그래서 지금은 의도적으로 크래시를 감수하고 있습니다.</p>

<h2 class="p1"></h2>
<h3 class="p1">3. 부족한 쿼리</h3>
Realm은 raw 쿼리를 인정하지 않습니다. Realm에서 메소드 형식으로 지원하는 쿼리만으로 &nbsp;CRUD 작업을 수행해야 합니다. 메소드 형식은 사용하기에 직관적인 장점이 있지만, 그만큼 다양한 쿼리를 지원하지 못하고, customize의 여지가 없습니다. 저는 Realm이 지원하지 않는 쿼리가 필요했고(Collate Localized ASC, CASE WHEN, MATCH 등), 몇가지 경우에 편법을 사용할 수 밖에 없었습니다. 앞으로는 차차 다양한 쿼리가 추가되기를 기대해 봅니다.
<ul>
 	<li>Collate Localized ASC - Java 코드에서 결과값을 한번 더 Sorting 하였습니다.</li>
 	<li>CASE WHEN - int 값을 저장하는 Language Order Column을 별도로 생성하였습니다.</li>
 	<li>MATCH - 명함은 데이터가 많으므로 Contains로는 검색 속도가 나오지 않습니다(Table을 Full Scan 하기 때문입니다). Full Text Search를 활용해야 원하는 속도를 얻을 수 있습니다. 하지만 Full Text Search의 MATCH 쿼리는 Sqlite에서만 지원합니다. 그래서 Sqlite로 명함 Index를 저장, 검색하고 Realm에서 명함을 가져오는 방식으로 DB를 조합하였습니다.</li>
</ul>
<h2 class="p1"></h2>
<h3 class="p1"><span class="s1">4. Learning curve</span></h3>
<p class="p1"><span class="s1">쿼리를 사용하거나 복잡한 스키마를 설계하기에 Realm은 정말 편한 DB 입니다. 하지만 쓰레드 간 객체 전달이 되지 않는다는 큰 제약사항 때문에, 위에 공유한 Tip과 같은 시행착오들을 겪은 후에야 자연스럽게 사용할 수 있었습니다. 쓰레드 흐름에 익숙하지 않다면 거의 사용하기 힘듭니다. 이러한 학습 비용은 결코 Realm이 사용성이 좋다고 말할 수 없는 큰 단점입니다.</span></p>

<h1 class="p1"></h1>
<h1 class="p1"><span class="s1">Realm의 장점</span></h1>
<p class="p1"><span class="s1">사용하면서 단점만 느낀 것은 아닙니다. 큰 단점들에도 불구하고 Realm을 신뢰할 수 있도록 만들어주는 장점들이 있습니다. </span></p>

<h3 class="p1"><span class="s1">1. 빠른 업데이트</span></h3>
<p class="p1"><span class="s1">Realm은 길어야 한달 주기로 지속적으로 새로운 버전을 배포합니다. 큰 업데이트는 다양한 호환성을 지원하려는 방향으로 새로운 기능들을 추가합니다. (개인적으로 Rx 지원을 가장 잘 활용하고 있습니다.) 마이너 업데이트는 이슈로 등록된 버그 및 개선사항들을 해결합니다. 이러한 빠른 업데이트는 앞으로 나아질 것을 기대하도록 만듭니다.</span></p>

<h3 class="p1"><span class="s1">2. 문서화</span></h3>
<p class="p1"><span class="s1">Realm은 한글화가 되어있는 몇 안되는 오픈소스 라이브러리 입니다. 문서화의 퀄리티 또한 매우 높아서, 웬만한 사용법과 이슈는 문서만으로 해결이 가능합니다. 게다가 문서가 버전별로도 관리가 잘 되어있어, <a href="https://github.com/realm/realm-java/blob/master/CHANGELOG.md" target="_blank" rel="noopener noreferrer">Changelog</a>와 함께 본다면, 변경사항을 쉽게 파악할 수 있습니다. Realm을 다룰 때에는, <a href="https://realm.io/kr/docs/java/latest/" target="_blank" rel="noopener noreferrer">문서</a>를 한번 정독하고 시작하기를 권장합니다.</span></p>

<h3 class="p1"><span class="s1">3. 커뮤니티</span></h3>
<p class="p1"><span class="s1">Realm은 모든 진행이 <a href="https://github.com/realm/realm-java" target="_blank" rel="noopener noreferrer">Github</a>에서 공개적으로 이루어집니다. 어떤 이슈를 사람들이 겪었고 해결하였는지, 어떤 <a href="https://github.com/realm/realm-java/pulls" target="_blank" rel="noopener noreferrer">수정사항</a>이 이루어지고 있는지를 한눈에 볼 수 있습니다. 그리고 이슈를 올린다면 거의 하루 이내로 답변을 받을 수 있습니다. 이렇게 소통이 가능한 살아있는 커뮤니티는 사용자들에게 신뢰를 주고, 정보 공유를 활발히 하도록 합니다. 만약 Realm을 사용하다가 무슨 문제가 생긴다면, 구글 검색 이전에 <a href="https://github.com/realm/realm-java/issues" target="_blank" rel="noopener noreferrer">Github 이슈</a>를 보는 것이 더 도움이 될 것입니다.</span></p>

<h1 class="p1"><span class="s1">결론</span></h1>
<p class="p1"><span class="s1">Realm은 빠르고, 설계와 시작이 쉽습니다. 하지만 큰 제약사항 때문에 다양한 경우를 다룰 때에는 학습 비용이&nbsp;높습니다. 게다가 아직 정식버전 아니여서인지, 불안정한 모습도 보입니다. 하지만 빠른 업데이트와 적극적인 커뮤니티 문화로 그러한 단점들을 덮어가고 있습니다. 이러한 그들의 노력은 앞으로 나아질 거라는 신뢰를 주기에 충분합니다. 지금처럼 성실하게 하나씩 문제를 해결하면서, 빠른 시일 내에 Realm이 모바일 데이터베이스 분야의 독보적인 존재가 되기를 바라는 마음입니다.</span></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>484</wp:post_id>
		<wp:post_date><![CDATA[2016-03-16 12:20:07]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-03-16 03:20:07]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-02-23 23:46:13]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-02-23 14:46:13]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[realm-%eb%8d%b0%ec%9d%b4%ed%84%b0%eb%b2%a0%ec%9d%b4%ec%8a%a4]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="develop"><![CDATA[Tech]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[4]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[right-sidebar]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_slogan]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_subslogan]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_header_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_scroll_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_bottom_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_footer_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_view_post_info]]></wp:meta_key>
		<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_post_icons]]></wp:meta_key>
		<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729516924;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:2124;}i:1;a:1:{s:2:"id";i:2528;}i:2;a:1:{s:2:"id";i:3343;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_single_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:17:{s:8:"subtitle";s:0:"";s:6:"format";s:8:"standard";s:5:"video";s:0:"";s:7:"gallery";s:0:"";s:11:"source_name";s:0:"";s:10:"source_url";s:0:"";s:8:"via_name";s:0:"";s:7:"via_url";s:0:"";s:8:"override";a:1:{i:0;a:11:{s:18:"single_blog_custom";s:0:"";s:7:"sidebar";s:0:"";s:14:"second_sidebar";s:0:"";s:14:"share_position";s:0:"";s:17:"share_float_style";s:0:"";s:16:"post_date_format";s:0:"";s:23:"post_date_format_custom";s:0:"";s:21:"post_reading_time_wpm";s:0:"";s:20:"zoom_button_out_step";s:1:"1";s:19:"zoom_button_in_step";s:1:"1";s:17:"number_popup_post";s:1:"1";}}s:14:"image_override";a:1:{i:0;a:2:{s:26:"single_post_thumbnail_size";s:0:"";s:24:"single_post_gallery_size";s:0:"";}}s:22:"trending_post_position";s:0:"";s:19:"trending_post_label";s:0:"";s:20:"sponsored_post_label";s:0:"";s:19:"sponsored_post_name";s:0:"";s:18:"sponsored_post_url";s:0:"";s:19:"sponsored_post_logo";s:0:"";s:19:"sponsored_post_desc";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle_flag]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1921]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_format_gallery_images]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:2:"id";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[개발그룹은 어떻게 일을 하는가? #1]]></title>
		<link>https://blog.dramancompany.com/2016/03/%ea%b0%9c%eb%b0%9c%ea%b7%b8%eb%a3%b9%ec%9d%80-%ec%96%b4%eb%96%bb%ea%b2%8c-%ec%9d%bc%ec%9d%84-%ed%95%98%eb%8a%94%ea%b0%80-1/</link>
		<pubDate>Wed, 16 Mar 2016 03:59:30 +0000</pubDate>
		<dc:creator><![CDATA[tom]]></dc:creator>
		<guid isPermaLink="false">http://developer.dramancompany.com/?p=507</guid>
		<description></description>
		<content:encoded><![CDATA[오늘은 개발자 면접을 볼 때 면접자 분들께서 늘 물어보시는 질문인 <em>'드라마앤컴퍼니의 개발 그룹은 어떻게 일을 하나요'</em>에 대한 첫 번째 글을 적어볼까 합니다. '어떻게 일을 하는지'는 굉장히 광범위한 질문이기 때문에 이번 글에서는 저희의 방법론과 계획 등에 대하여 얘기해보겠습니다.

업무의 방법론이란 굉장히 중요합니다. 무작정 열심히 한다고 해서는 절대로 장기적으로 일을 효율적으로 해낼 수 없습니다. 특히 사람이 많아지면 많아질수록 모두가 제일 효율적이라고 생각하는 업무 방식을 찾아야 합니다. 드라마앤컴퍼니의 개발 그룹도 무작정 열심히만 했다가 일을 제대로 할 수 없다는 것을 실제로 겪고 깨달았습니다. 분명히 모두가 열심히 일하고 있었으나 커뮤니케이션에 문제가 있었으며, 계획했던 일들을 연달아 끝내지 못하고 계속 미루게 되는 상황이 발생했습니다.&nbsp;이런 일의 재발을 막고 모두가 최고의 효율로 일을 할 수 있도록 모든 일을 멈추고 업무 방식을 찾기 위해 오랜 시간 동안 다 같이 논의하며 고민했으며 지금도 끊임없이 고민하고 있습니다.&nbsp;지금부터 설명드릴 방법은 저희가 긴 고민을 한 끝에 만들어진 현재 버전의 답안입니다.
<h2>Agile</h2>
개발 그룹의 업무 환경은 <a href="https://ko.wikipedia.org/wiki/%EC%95%A0%EC%9E%90%EC%9D%BC_%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4_%EA%B0%9C%EB%B0%9C">애자일 방법론</a>에 기반을 두고 있습니다. 애자일 방법론 중 <a href="https://ko.wikipedia.org/wiki/%EC%8A%A4%ED%81%AC%EB%9F%BC_(%EC%95%A0%EC%9E%90%EC%9D%BC_%EA%B0%9C%EB%B0%9C_%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4)" target="_blank" rel="noopener noreferrer">스크럼</a>을 중심으로 업무를 처리합니다. 큰 flow는 다음 그림과 비슷합니다. 제품(혹은 프로젝트)에 대한 모든 task들이 담겨있는 프로덕트 백로그가 존재하며, 이번 스프린트에 진행할 task들을 스프린트 백로그에 옮깁니다. 그 후에는 하루와 총 스크럼 기간 두 단위로 나누어 일을 진행합니다. 저희가 실제로 어떻게 사용하는지에 대한 자세한 내용은 뒤에서 다루겠습니다. 혹시 Agile 방법론이나 스크럼 등의 용어가 생소하신 분이라면 위키피디아에서 가볍게 읽어보고 오시는 것을 추천해 드립니다.

[caption id="attachment_506" align="aligncenter" width="1000"]<a href="https://blog.dramancompany.com/wp-content/uploads/2016/03/1000px-Scrum_process.svg_.png" rel="attachment wp-att-506"><img class="size-full wp-image-506" src="https://blog.dramancompany.com/wp-content/uploads/2016/03/1000px-Scrum_process.svg_.png" alt="스크럼 프로세스" width="1000" height="500"></a> 스크럼 프로세스 (출처: 위키피디아)[/caption]
<h2>Planning</h2>
개발 그룹의 업무 계획 단위는 Yearly Planning, Phase, Phase break, Sprint로, 총 세 가지로 나누어 볼 수 있습니다. Yearly planning은 장기 계획, Phase는 중기 계획, Sprint는 단기 계획를 나타냅니다. 이렇게 장기, 중기, 단기로 나누어 계획을 짜는 이유는 다양한 시점에서 우리가 올바른 방향과 속도로 나아가고 있는지 계속 인지하기 위함입니다. 또한 상황에 따라 적절하고 lean하게 계획을 조율하여 리소스를 효율적으로 사용하며 목표에 다다를 성공률을 높히기 위함입니다. 다음은 Sprint, Phase, Phase break 등의 모든 업무 단위들을 포함하여 하나의 그림으로 나타낸 표입니다. 다음 표가 전체 사이클이며 다음과 같은 사이클을 반복합니다.

[caption id="attachment_516" align="aligncenter" width="943"]<a href="https://blog.dramancompany.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-15-at-11.10.57-AM.png" rel="attachment wp-att-516"><img class="wp-image-516 size-full" src="https://blog.dramancompany.com/wp-content/uploads/2016/03/Screen-Shot-2016-03-15-at-11.10.57-AM.png" alt="개발 그룹 업무 사이클" width="943" height="310"></a> 개발 그룹 업무 사이클[/caption]
<h3>Sprint</h3>
하나의 스프린트는 2주 동안 진행됩니다. 스프린트를 시작하기 전에 우선 프로덕트 백로그에 있는 task들의 우선순위를 PM님과 담당 개발자분이 상의하여 정리합니다. 그 후에는 담당 엔지니어분께서 각 task 별 예상 일정을 산정합니다. 스프린트를 시작하기 전주 금요일의 스프린트 플래닝 회의에서 미리 산정해놓은 task들의 우선순위와 예상 일정을 참고하여 이번 스프린트 시간동안 하게 될 업무의 목록을 정하고 스프린트 백로그에 올려놓습니다. 이렇게 스프린트 백로그이 올라간 task들은 세 가지 상태(todo/doing/done)로 나뉘어 스크럼 보드에서 관리됩니다.

매일 아침 출근시간인 10시에 개발 그룹, PM, QA 분들이 모두 모여서 약 15분 동안 데일리 스크럼 회의를 진행합니다. 이때는 각 엔지니어 분들이 차례대로 '어제 한 일', '오늘 할 일', '이슈/장애물' 이 세가지를 간단히 요약하여 얘기합니다. 또한 다른 파트나 엔지니어 분들과 의논 해야 할 사항들을 의논하기도 합니다. 이렇게 각자 진행상황과 문제점 등을 공유하고 동기화하는 시간을 갖습니다. 스프린트가 끝나는 주의 금요일에는 이번에 진행한 스프린트에 대해 피드백을 하는 스프린트 리뷰 회의를 갖습니다. 이때 이번 스프린트에 대한 리뷰를 하고 어떤 점들을 어떻게 개선해야 하는지 논의하고 다음 스프린트 때 반영합니다.

데일리 스크럼 회의의 가장 큰 의미는 모두가 모여서 동기화 할 시간을 갖게 해준다는 것 입니다. 개발 그룹에는 각 안드로이드, iOS, 웹<em>&nbsp;</em>플랫폼당 한 분, API는 두 분, DB는 한 분께서 담당하고 있는데, 이렇게 동기화할 시간이 없을 땐 전체가 아닌 일부 사람들끼리만 내용을 논의하게 되고 논의된 내용이 전체적으로 공유되지 않아 커뮤니케이션의 문제가 발생했었습니다. 하지만 데일리 스크럼 회의때는 엔지니어 분들 외에도 PM, 기획자, QA분들까지 모두 모여 계시니 미스 커뮤니케이션의 문제를 많이 해소할 수 있었습니다.
<h3>Phase</h3>
하나의 페이즈는 스프린트가 4개 모여 총 8주의 기간 동안 진행됩니다. 페이즈는 스프린트와 같이 상세한 계획을 짜기 보다는 중기적인 계획으로 우리가 나아갈 방향과 속도를 인지하기 위한 목표가 큽니다. 이번 기간 동안 우리가 이루고자 하는 것이 무엇인지 (예: 안정성 향상, 리텐션 상승 등) 컨셉을 잡고 진행하기도 합니다. 페이즈를 시작하기 전에 페이즈 플래닝 회의에서는&nbsp;중기적인 플랜을 짜기 위해 개발 그룹에서 진행해야할 전체 task들이 담겨있는 프로덕트 백로그에서 우선순위와 매우 러프한 예상 일정을 산정하고 이번 페이즈 기간에 진행할 항목들을 페이즈 백로그로 가지고 와서&nbsp;페이즈 보드를 작성합니다.

4번의 스프린트로 페이즈가 끝나게 되면 페이즈 리뷰 미팅을 하며 '원래 계획했던 일들', '실제 완료한 일들', '좋았다고 느낀점', '아쉬웠던 점/개선해야 할 점' 등에 대한 피드백을 모아서 더 나은 프로세스를 논의하여 정한 후 다음 페이즈에 반영합니다.

매 Phase가 끝날 때 마다 개발 그룹은 회식을 하는데 이때 회식을 하게 될 장소를 Phase 이름으로 사용하고 있습니다. Phase 1의 이름은 '마장'으로 마장동 우시장에 갔으며 Phase 2의 이름은 '정선'으로 phase가 끝난 후 워크샵 겸 정선의 하이원 리조트를 갔습니다. Phase 3은 '양재'로 양재 느린마을 막걸리집을 갔습니다.
<h3></h3>
<h3>Phase Break</h3>
페이즈 브레이크 기간에는 정말 급한 업무 외에는 회사의 비즈니스에 필요한 개발을 멈추고 재정비를 하게 됩니다. 이 기간에는 기술 공유 세션, 기술 블로그 글 작성, 해커톤, 리서치, 네트워킹 등 개발자의 성장에 도움이 되는&nbsp;일들을 진행하게 됩니다. 이 기간은 페이즈 기간 동안 열심히 달려 왔으니, 다음 페이즈에서&nbsp;도약을 하기 위한 재정비 시간을 갖는 것을&nbsp;목적으로 하고 있습니다.

사실 8주의 페이즈 후에 2주 동안 페이즈 기간을 갖는 것은, 회사 입장에서 보면 전체의 1/5이라는 시간을 회사&nbsp;비즈니스에&nbsp;직접적이지 않은 일에 쓰는 것 이므로 매우 비효율적이고 충격적으로 보일수도 있습니다. 하지만 실제 3회정도 진행해본 결과 페이즈를 도입하기 하기 이전의 개발 속도와 별 차이가 없었으며 오히려 마음 놓고 당장 업무에 직결되지 않은 분야들을 열심히 공부 해볼 수 있어서 개개인의 개발 능력 성장과 장기적인 개발 속도에 매우 큰 도움이 되었습니다. 사실 생각해보면 저희가 페이즈 브레이크 기간동안 하는 일들은 많은 엔지니어분들이 하고 있고 매우 중요한 일들 입니다. 하지만 보통은 비즈니스 일정에 치여 낮은 우선순위로 미뤄지거나 틈틈이 하게 되는데, 그럴 경우 100% 몰입하여 할 수 없기 때문에 결과적으로는 시간도 오래 걸리고 제대로 끝내기 힘듭니다. 하지만 이렇게 다른 업무에 걱정 할 필요없는 시간이 주어질 경우 오히려 더 효율적으로 끝낼 수 있습니다.

그리고 페이즈 기간 동안 정말 열심히 일을 하다가 적절한 시기에 break time을 가질 수 있으니 burnout을 막는데 매우 큰 역할을 하고 있습니다. 내부에서는 이 페이즈 브레이크 기간을 신의 한수라고 평가하고 있습니다.

[caption id="attachment_520" align="aligncenter" width="600"]<a href="https://blog.dramancompany.com/wp-content/uploads/2016/03/output_1ehvRU.gif" rel="attachment wp-att-520"><img class="size-full wp-image-520" src="https://blog.dramancompany.com/wp-content/uploads/2016/03/output_1ehvRU.gif" alt="제 1회 드라마앤컴퍼니 해커톤 커팅식" width="600" height="338"></a> 제 1회 드라마앤컴퍼니 해커톤 커팅식 (w/ 두루마리 휴지)[/caption]

[caption id="attachment_519" align="aligncenter" width="449"]<a href="https://blog.dramancompany.com/wp-content/uploads/2016/03/Slack-for-iOS-Upload-3.jpg" rel="attachment wp-att-519"><img class="wp-image-519 size-large" src="https://blog.dramancompany.com/wp-content/uploads/2016/03/Slack-for-iOS-Upload-3-449x304.jpg" alt="Phase 2 정선" width="449" height="304"></a> Phase 2 정선 워크샵 (@하이원)[/caption]
<h2>마무리</h2>
<div class="item-views">
<div class="markdown-preview native-key-bindings" tabindex="-1">

&nbsp;지금 진행하고 있는 이 방식이 버그나 개선사항이 없는 마지막 버전이라고 생각하지 않습니다. 그렇기 때문에 어쩌면 너무 많아 보일 수도 있는 review와 planning 회의를 하는 것입니다. 절대로 단번에 완벽한 계획을 할 수 없기 때문에 오랜 시간동안 고민만 하고 있기 보다는 끊임없이 시도하고, 그로 얻은 피드백과 교훈을 바로 다시 적용하여 개선해나가는 lean 정신을 가지고 이행하고 있습니다. &nbsp;첫 sprint와 phase에 비하여 계속 발전하고 점점 자리를 잡아가는 것을 보면 이 방법이 옳았으며, 앞으로도 더 발전해나갈 수 있다는 믿음이 생깁니다.
이상으로 드라마앤컴퍼니의 개발 그룹이 어떤 방식으로 계획하고 업무를 진행하는지 살펴보았습니다. &nbsp;다음 편에서는 개발 그룹의 DevOps나 개발 그룹이 PM, 기획자, QA 그리고 대표님과 어떤 방식으로 일을 하는지 등에 대한 주제를 가지고 얘기해보도록 하겠습니다.

</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>507</wp:post_id>
		<wp:post_date><![CDATA[2016-03-16 12:59:30]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-03-16 03:59:30]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-02-23 23:44:22]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-02-23 14:44:22]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%ea%b0%9c%eb%b0%9c%ea%b7%b8%eb%a3%b9%ec%9d%80-%ec%96%b4%eb%96%bb%ea%b2%8c-%ec%9d%bc%ec%9d%84-%ed%95%98%eb%8a%94%ea%b0%80-1]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="develop"><![CDATA[Tech]]></category>
		<category domain="post_tag" nicename="%eb%b0%a9%eb%b2%95%eb%a1%a0"><![CDATA[방법론]]></category>
		<category domain="post_tag" nicename="%ec%8a%a4%ed%81%ac%eb%9f%bc"><![CDATA[스크럼]]></category>
		<category domain="post_tag" nicename="%ec%95%a0%ec%9e%90%ec%9d%bc"><![CDATA[애자일]]></category>
		<category domain="post_tag" nicename="%ed%95%b4%ec%bb%a4%ed%86%a4"><![CDATA[해커톤]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[4]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[right-sidebar]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_slogan]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_subslogan]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_header_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_scroll_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_bottom_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_footer_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_view_post_info]]></wp:meta_key>
		<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_post_icons]]></wp:meta_key>
		<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729520276;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:966;}i:1;a:1:{s:2:"id";i:2424;}i:2;a:1:{s:2:"id";i:1783;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_single_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:17:{s:8:"subtitle";s:0:"";s:6:"format";s:8:"standard";s:5:"video";s:0:"";s:7:"gallery";s:0:"";s:11:"source_name";s:0:"";s:10:"source_url";s:0:"";s:8:"via_name";s:0:"";s:7:"via_url";s:0:"";s:8:"override";a:1:{i:0;a:11:{s:18:"single_blog_custom";s:0:"";s:7:"sidebar";s:0:"";s:14:"second_sidebar";s:0:"";s:14:"share_position";s:0:"";s:17:"share_float_style";s:0:"";s:16:"post_date_format";s:0:"";s:23:"post_date_format_custom";s:0:"";s:21:"post_reading_time_wpm";s:0:"";s:20:"zoom_button_out_step";s:1:"1";s:19:"zoom_button_in_step";s:1:"1";s:17:"number_popup_post";s:1:"1";}}s:14:"image_override";a:1:{i:0;a:2:{s:26:"single_post_thumbnail_size";s:0:"";s:24:"single_post_gallery_size";s:0:"";}}s:22:"trending_post_position";s:0:"";s:19:"trending_post_label";s:0:"";s:20:"sponsored_post_label";s:0:"";s:19:"sponsored_post_name";s:0:"";s:18:"sponsored_post_url";s:0:"";s:19:"sponsored_post_logo";s:0:"";s:19:"sponsored_post_desc";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle_flag]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[506]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_format_gallery_images]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:2:"id";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>12630</wp:comment_id>
			<wp:comment_author><![CDATA[리멤버앱의 비즈니스 포털 변화 - 거북이 미디어 전략 연구소]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>https://gobooki.net/%eb%a6%ac%eb%a9%a4%eb%b2%84%ec%95%b1%ec%9d%98-%eb%b9%84%ec%a6%88%eb%8b%88%ec%8a%a4-%ed%8f%ac%ed%84%b8-%eb%b3%80%ed%99%94/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.24.121]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2022-08-26 13:31:58]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2022-08-26 04:31:58]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] 조직이라면 이제 리멤버앤컴퍼니 등 여러 스타트업들이 진행하는 애자일 방법론을 검토해볼 필요가 있다고 [&#8230;]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1661488318.881029;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[Rails Engine을 이용한 Zeus 프로젝트]]></title>
		<link>https://blog.dramancompany.com/2016/03/rails-engine%ec%9d%84-%ec%9d%b4%ec%9a%a9%ed%95%9c-zeus-%ed%94%84%eb%a1%9c%ec%a0%9d%ed%8a%b8/</link>
		<pubDate>Fri, 18 Mar 2016 01:40:43 +0000</pubDate>
		<dc:creator><![CDATA[sid]]></dc:creator>
		<guid isPermaLink="false">http://developer.dramancompany.com/?p=515</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>1. Problem</h3>
드라마앤컴퍼니에서는 리멤버 서비스를 위해 다양한 서버 애플리케이션들을 운용하고 있습니다. 일부 데이터 분석을 위한 소프트웨어를 제외하고는 모두 Ruby on Rails를 사용하여 작성되었고, 크게 아래와 같은 것들이 있습니다.
<ul>
 	<li>API 서버 애플리케이션: 리멤버 앱 등 클라이언트에서 발생하는 모든 요청을 처리합니다.</li>
 	<li>Typist 서버 애플리케이션: 사용자가 등록한 명함 요청을 타이피스트가 확인하고 입력하는 시스템입니다.</li>
 	<li>Admin 서버 애플리케이션: 운영자가 명함을 검토, 검수하는 등 다양한 운영 작업을 수행하는 시스템입니다.</li>
</ul>
그런데 여기에는 한 가지 큰 문제가 있었습니다. 바로 동일한 업무 로직이 여러 애플리케이션에 중복되어 들어간다는 겁니다. 예를 들어 명함과 명함 요청에 대한 도메인 모델은 위의 세 가지 애플리케이션에서 모두 참조합니다.

<a href="https://blog.dramancompany.com/wp-content/uploads/2016/03/duplicate_domain_model.png" rel="attachment wp-att-518"><img class="alignnone size-full wp-image-518" src="https://blog.dramancompany.com/wp-content/uploads/2016/03/duplicate_domain_model.png" alt="duplicate_domain_model" width="755" height="511"></a>

위의 그림에서 보듯이, 명함 요청과 명함 도메인은 전체 라이프사이클에 걸쳐 다양한 애플리케이션에 의해 생성, 수정, 조회와 같은 작업이 일어납니다. 따라서 애플리케이션마다 동일한 명함과 명함 요청의 모델 코드가 들어가 있습니다.

<a href="https://blog.dramancompany.com/wp-content/uploads/2016/03/duplicate_rails_model.png" rel="attachment wp-att-525"><img class="alignnone size-full wp-image-525" src="https://blog.dramancompany.com/wp-content/uploads/2016/03/duplicate_rails_model.png" alt="duplicate_rails_model" width="927" height="316"></a>
<h3>2. Don't Repeat Yourself</h3>
이러한 상황에 대한 대처 방법은 크게 3가지가 있을 것 같습니다. 첫 번째는 그냥 놔두는 것입니다. 사실 코드베이스의 크기가 그렇게 크지 않고, 중복되는 모델이 많지 않다면 그대로 유지를 하는 것도 나쁘지 않다고 생각합니다. 유지보수에 드는 비용이 그리 크지 않기 때문입니다.

하지만, 리멤버의 경우 서비스에 점점 많은 기능이 추가되면서 중복되는 모델도 많아지기 시작했고, 기능의 변경도 잦아지면서 점점 더 유지보수하기가 힘들어졌습니다. 따라서 중복되는 모델 코드를 한 군데 모아놓을 필요성이 생겼습니다.

이 때 두 번째로 검토할 수 있는 방법이 바로 <a href="http://martinfowler.com/articles/microservices.html">Microservice</a> architecture입니다.
<h3>3. Microservices</h3>
<a href="https://blog.dramancompany.com/wp-content/uploads/2016/03/microservice.png" rel="attachment wp-att-527"><img class="alignnone size-full wp-image-527" src="https://blog.dramancompany.com/wp-content/uploads/2016/03/microservice.png" alt="microservice" width="784" height="371"></a>

도메인 업무를 수행하는 모델을 별도의 Internal&nbsp;API 서버로 구성하고 각 애플리케이션은 Internal API를 호출합니다. 이렇게 하면 중복 코드를 제거하게 되어 도메인 모델 코드의 유지 보수가 용이해집니다. 그러나 고려해야 할 단점도 많습니다. 사실 Microservice나 그 전신(?)인 SOA Architecture가 고스란히 가지고 있는 단점이기도 합니다.
<ul>
 	<li>성능 저하가 일어납니다. 당연한 이야기지만, 하나의 서버에서 처리할 수 있는 일을 별도의 API 호출을 하게 되면 그만큼 비용이 늘어납니다(네트워크 통신 비용, Internal API 호출 시 들어가는 parameter parsing/binding, 비즈니스 로직 수행 후 response를 만들고 가공하는 일 등등..)</li>
 	<li>시스템 전체적으로 보면 유지보수 비용이 늘어납니다. Internal API 서버를 별도의 서버로 구성한다면 서버 운영 비용이 증가합니다. 그리고 Internal API 애플리케이션도 하나의 애플리케이션이기 때문에 소스 코드 관리, Model과 Controller들에 대한 테스트 작성 등 해주어야 할 것들이 많습니다.</li>
 	<li>기능을 빨리 추가하거나 변경하지 못합니다. 기능의 추가/수정에 대한 요구사항이 발생하면 먼저 API 명세를 설계하고, 이를 문서로 작성해야 하는 등 부가적으로 해야 할 작업들이 적지 않습니다.</li>
 	<li>여기에 API Gateway가 들어가고 어쩌고 하면 시스템 복잡성이 더욱 증가할 수 있습니다.</li>
</ul>
Microservice는 시스템의 크기가 크고, 팀/조직/프로세스가 잘 정비되어 있는 경우 상당한 장점이 있다고 생각합니다. 하지만, 저희 같이 빠르게 움직여야 하고 시스템의 크기가 아직 크지 않은 상황에서는 장점보다 단점이 더 클 것이라고 판단하였습니다.

그래서 마지막으로 세 번째 대안을 고려하여 보았습니다. 바로 <a href="http://guides.rubyonrails.org/engines.html">Rails Engine</a>을 사용하여 모델 layer만 들어내어 중복을 제거하는 것입니다.
<h3>4. Rails Engine</h3>
<a href="https://blog.dramancompany.com/wp-content/uploads/2016/03/rails_engine.png" rel="attachment wp-att-529"><img class="alignnone size-full wp-image-529" src="https://blog.dramancompany.com/wp-content/uploads/2016/03/rails_engine.png" alt="rails_engine" width="923" height="398"></a>

언뜻 보면, 첫 번째 방법인 중복 모델을 그대로 유지하는 것과 별반 다를 게 없어 보이지만 여기에는 아주 중요한 차이가 있습니다. Rails Engine은 별도의 애플리케이션으로 관리되지만, Ruby 라이브러리인 Gem(Java에서는 jar)의 형태로 각 애플리케이션에 import 될 수 있습니다. 따라서 모든 도메인 모델 코드는 Rails Engine 애플리케이션에 작성하고, 각 애플리케이션에서는 라이브러리 클래스를 사용하듯이 이를 가져다가 사용하면 됩니다. 아래는 API 애플리케이션에서 실제로 Rails Engine을 사용하는 예시 코드입니다.
<pre class="">Gemfile.rb

...
gem 'zeus', git: '...', tag: '0.0.6'

</pre>
<pre class="">user_controller.rb

...
def create
  user = Zeus::User::Entity.new(params)
  user.save

  ...
end</pre>
<p class="">저희는 리멤버 서비스에서 공통적으로 사용되는 도메인 모델을 담은 Rails Engine 애플리케이션의 이름을 Zeus라 명명했습니다. 위의 코드에서 보듯이 Gemfile에 보통 gem을 import하는 것처럼 Zeus를 선언하였습니다. 그러면 API 애플리케이션에서는 Zeus에서 제공하는 모든 도메인 모델 클래스를 사용할 수 있습니다. Rails Engine은 보통 namespace를 정의하기 때문에 저희도 Zeus라는 namespace를 사용하고 있습니다. &nbsp;따라서 UserController 클래스에서 zeus의 사용자 모델 클래스인 &nbsp;Zeus::User::Entity 클래스를 사용하여 회원 가입을 처리하고 있습니다.</p>
<p class="">Java에서는 Maven이 multi module이라는 이름으로 비슷한 기능을 제공하고 있습니다(실제로 몇 년 전에 &nbsp;multi module을 사용하여 프로젝트 구성을 한 적이 있었는데 설정 잡아주는 것이라던지, 빌드하는 게 완전 hell이었습니다... 요새는 시간이 지나서 잘 되는지 모르겠네요).</p>
<p class="">Zeus도 하나의 별도 애플리케이션이기 때문에 Microservice처럼 유지보수가 필요합니다. 하지만 그 비용은 상대적으로 매우 작습니다. 또 소스 코드에 태깅이 가능하기 때문에, 기능의 변경이나 추가가 용이합니다. Microservice의 경우, API 인터페이스에 변경이 일어나면 매우 골치가 &nbsp;아픕니다.</p>

<ul>
 	<li class="">Internal API 배포 시, 여기에 의존하고 있는 모든 클라이언트 애플리케이션도 같이 수정하여 한 방에 배포하거나</li>
 	<li class="">Internal API를 versioning하여 순차적으로 migration시키거나</li>
</ul>
인데, 이게 아시다시피 엄청 짜증나고 귀찮은 일입니다.

그렇지만 Zeus의 경우 수정이 가해지면 버전을 하나 올리고, 각 애플리케이션에서 테스트를 돌려본 후 이상이 없으면 Gemfile만 업데이트해주면 됩니다. 만약 문제가 생기면 한 줄만 고쳐서 다시 원복시킬 수도 있습니다.
<h3>5. Wrap-up</h3>
지금까지 리멤버 서비스 애플리케이션 간의 코드 중복을 해결하기 위해 여러 방법을 검토했고, 어떻게 해서 Rails Engine을 이용한 방법을 채택했는지를 설명하였습니다. Rails Engine은 생각보다 적용하기 쉽고, 잘만 사용하면 아주 유용한 도구라 생각됩니다. Rails guide에도 설명이 자세히 나와있어서 정보를 구하는 것도 어렵지는 않습니다.

코드 중복이라는 bad smell을 제거하기 위해 오늘도 노력을 게을리하지 않으시는 많은 개발자 분들께 조금이나마 도움이 되기를 바라면서 이 글을 마칠까 합니다.

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>515</wp:post_id>
		<wp:post_date><![CDATA[2016-03-18 10:40:43]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-03-18 01:40:43]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-02-23 23:35:31]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-02-23 14:35:31]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[rails-engine%ec%9d%84-%ec%9d%b4%ec%9a%a9%ed%95%9c-zeus-%ed%94%84%eb%a1%9c%ec%a0%9d%ed%8a%b8]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="develop"><![CDATA[Tech]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[4]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729354284;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:312;}i:1;a:1:{s:2:"id";i:2967;}i:2;a:1:{s:2:"id";i:331;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[right-sidebar]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_slogan]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_subslogan]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_header_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_scroll_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_bottom_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_footer_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_view_post_info]]></wp:meta_key>
		<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_post_icons]]></wp:meta_key>
		<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_single_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:17:{s:8:"subtitle";s:0:"";s:6:"format";s:8:"standard";s:5:"video";s:0:"";s:7:"gallery";s:0:"";s:11:"source_name";s:0:"";s:10:"source_url";s:0:"";s:8:"via_name";s:0:"";s:7:"via_url";s:0:"";s:8:"override";a:1:{i:0;a:11:{s:18:"single_blog_custom";s:0:"";s:7:"sidebar";s:0:"";s:14:"second_sidebar";s:0:"";s:14:"share_position";s:0:"";s:17:"share_float_style";s:0:"";s:16:"post_date_format";s:0:"";s:23:"post_date_format_custom";s:0:"";s:21:"post_reading_time_wpm";s:0:"";s:20:"zoom_button_out_step";s:1:"1";s:19:"zoom_button_in_step";s:1:"1";s:17:"number_popup_post";s:1:"1";}}s:14:"image_override";a:1:{i:0;a:2:{s:26:"single_post_thumbnail_size";s:0:"";s:24:"single_post_gallery_size";s:0:"";}}s:22:"trending_post_position";s:0:"";s:19:"trending_post_label";s:0:"";s:20:"sponsored_post_label";s:0:"";s:19:"sponsored_post_name";s:0:"";s:18:"sponsored_post_url";s:0:"";s:19:"sponsored_post_logo";s:0:"";s:19:"sponsored_post_desc";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle_flag]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1915]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_format_gallery_images]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:2:"id";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>91</wp:comment_id>
			<wp:comment_author><![CDATA[안희종]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[heejongahn@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[195.235.100.122]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-03-21 11:03:43]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-03-21 02:03:43]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[재밌게 잘 읽었습니다 :)]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1458525823.586655;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1458528116.063018;s:5:"event";s:15:"status-approved";s:4:"user";s:3:"tom";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[안드로이드에 테스트 도입하기]]></title>
		<link>https://blog.dramancompany.com/2016/08/%ec%95%88%eb%93%9c%eb%a1%9c%ec%9d%b4%eb%93%9c%ec%97%90-%ed%85%8c%ec%8a%a4%ed%8a%b8-%eb%8f%84%ec%9e%85%ed%95%98%ea%b8%b0/</link>
		<pubDate>Thu, 04 Aug 2016 01:34:14 +0000</pubDate>
		<dc:creator><![CDATA[rfrost]]></dc:creator>
		<guid isPermaLink="false">http://developer.dramancompany.com/?p=583</guid>
		<description></description>
		<content:encoded><![CDATA[<p class="p1"><span class="s1">좋은 소프트웨어를 만들기 위해서는 테스트 자동화가 중요합니다. 꼼꼼하고 정확한 자동화 테스트는 QA 비용을 줄이고, 제품의 질을 높입니다. 리멤버의 백엔드는 오래 전부터 TDD를 적용하였습니다. 하지만 클라이언트는 View단과 직접 엮여있기 때문에 겪는 테스트의 어려움과, 빠르게 처리해야 할 비즈니스 요구사항에 밀려, 테스트 자동화를 하지 못하고 있었습니다.</span></p>
<p class="p1"><span class="s1">우리는 저번 페이즈 브레이크 때 클라이언트 개발자들끼리 모여 테스트에 대해 논의하였습니다. 그리고 테스트부터 CI까지 이어지는 전략을 정립하고, 각 플랫폼에 맞게 적용하였습니다. 이번 포스팅에서는 안드로이드에서 테스트를 도입하기 위해 했던 구조적인 고민과 적용, 그리고 참고했던 링크들을 나누고자 합니다.</span></p>


[caption id="attachment_631" align="aligncenter" width="688"]<a href="https://blog.dramancompany.com/wp-content/uploads/2016/05/red-green-refactor.png"><img class="size-full wp-image-631" src="https://blog.dramancompany.com/wp-content/uploads/2016/05/red-green-refactor.png" alt="클라이언트는 코드가 자주 변화하기 때문에 TDD까지는 힘든 것이 사실이지만, 최대한 테스트를 마련함으로써 안정성을 높일 수 있습니다." width="688" height="324"></a> 클라이언트는 코드가 자주 변화하기 때문에 TDD까지는 힘들지만, 최대한 테스트를 마련함으로써 안정성을 높일 수 있습니다.[/caption]
<h1 class="p5"><span class="s1"><b>MVC에서 MVP로</b></span></h1>
<p class="p1"><span class="s1">MVC는 웹 어플리케이션에서 많이 사용하는 패턴입니다. 안드로이드 또한 MVC로 빠르고 강력하게 개발할 수 있습니다. 하지만 대부분의 기능이 Context라는 화면 속성으로부터 출발하는 안드로이드의 특성 상, Controller과 View가 붙어있게 됩니다.&nbsp;</span><span class="s1">이것은 테스트를 매우 어렵게 합니다. 테스트는 View와 Model을 나누어야 하는데, Model의 로직을 View와 Controller가 모두 접근하고 있고, Controller와 View는 한 공간에 있기까지 하니, 테스트를 분리하기가 까다롭습니다.</span></p>
<p class="p1"><span class="s1">그래서 우리는 테스트를 위해 기본 구조를 MVP로 변경하기로 결정하였습니다. MVP는 View와 Model을 분리하고, 둘 사이 데이터를 주고받는 로직 또한 Presenter에 모아놓기 때문에, 각 레이어에 대해 테스트가 용이합니다. MVC와 MVP에 대해 코드를 포함한 자세한 내용은 아래 링크를 참고해주세요.</span></p>
<p class="p3"><span class="s3"><a href="http://tosslab.github.io/android/2015/03/01/01.Android-mvc-mvvm-mvp.html">http://tosslab.github.io/android/2015/03/01/01.Android-mvc-mvvm-mvp.html</a></span></p>


[caption id="attachment_632" align="aligncenter" width="772"]<a href="https://blog.dramancompany.com/wp-content/uploads/2016/05/MVC_MVP.png"><img class="size-full wp-image-632" src="https://blog.dramancompany.com/wp-content/uploads/2016/05/MVC_MVP.png" alt="안드로이드는 V와 C가 함께 있고, Context의 존재 때문에 MVC에 제약이 있습니다. 이것은 테스트를 어렵게 합니다." width="772" height="323"></a> 안드로이드는 V와 C가 함께 있고, Context의 존재 때문에 MVC에 제약이 있습니다. 이것은 테스트를 어렵게 합니다.[/caption]
<h1 class="p5"><span class="s1"><b>Dagger2</b></span></h1>
<p class="p1"><span class="s1">Dagger2는 <a href="https://github.com/square">Square</a>에서 만든 <a href="https://github.com/square/dagger">Dagger</a>를 <a href="https://github.com/google/dagger">Google이 Fork</a>하여 개선한 DI 프레임워크 입니다. 의존성에 따른 객체생성을 추상화 하여 보일러플레이트 코드를 줄이고, 변화에 유연하게 만듭니다.</span></p>
<p class="p1"><span class="s1">MVP는 View에 Presenter 객체, Presenter에 Model 객체가 생성되어야 합니다. Dagger2를 사용하면 여러 클래스에 의존하는 Presenter와 Model 객체를 깔끔하게 생성할 수 있습니다. 의존성을 자유롭게 바꿔가며 유연하게 Model과 Presenter의 Constructer를 바꿀 수 있습니다. 또한 하나의 Presenter를 여러 곳에 사용하던가, 하나의 View에서 여러 Presenter를 갈아 끼우며 사용해야 할 때, DI를 이용한 객체생성 추상화는 큰 힘을 발휘합니다. 저는 Dagger2를 이용하여, MVP를 좀더 깔끔하게 정리하기로 했습니다.</span></p>
<p class="p1"><span class="s1">Dagger2는 활용성이 매우 높지만, 학습비용이 높습니다. 하지만 하루정도 시간을 두고 천천히 학습하신다면, 충분히 익히고 프로덕트에 적용할 수 있습니다. Dagger2에 대한 내용은 아래 링크를 참고해주세요.</span></p>
<p class="p1"><span class="s2"><a href="https://medium.com/@jsuch2362/android-%EA%B9%A8%EC%95%8C%ED%8C%81-4-dagger2-7f38cd9cb11b">https://medium.com/@jsuch2362/android-깨알팁-4-dagger2-7f38cd9cb11b</a></span></p>

<h1 class="p5"><span class="s1"><b>Test</b></span></h1>
<p class="p1"><span class="s1">지금까지 했던 모든 작업은 사실 테스트를 위해서 했던 사전 작업입니다. 이제 테스트를 작성합시다. MVP는 Model Layer, View Layer, Presenter Layer 3개의 레이어를 따로 테스트 합니다. Model은 전통적인 JUnit, Presenter는 구글에서 제공하는 Android Test Support Library(ATSL)를 사용합니다. View는 ATSL에 더하여 Espresso를 사용하여 테스트 합니다. 다운로드 및 간단한 사용법은 아래 링크를 참고해주세요.</span></p>
<p class="p1"><span class="s2"><a href="https://google.github.io/android-testing-support-library/">https://google.github.io/android-testing-support-library/</a></span></p>
<p class="p1"><span class="s1">리멤버는 이제 구조를 바꾸면서 테스트를 추가하고 있기 때문에 아직 Presenter Test까지만 작성하고 있습니다. Presenter의 테스트 코드는 다음과 같습니다.</span></p>

<pre class="lang:java decode:true" title="Presenter Test with ATSL">@RunWith(AndroidJUnit4.class)
public class SigninEmailFragmentTest {

    private static final String GOOD_ID = "test@email.com";
    private static final String GOOD_PASSWORD = "123456";

    private SigninEmailPresenter.View mView;
    private AuthHelper mAuthHelper;
    private SigninEmailPresenter mPresenter;

    @Before
    public void setUp() throws Exception {
        // Mock을 생성한다.
        this.mView = Mockito.mock(SigninEmailPresenter.View.class);
        this.mAuthHelper = Mockito.mock(AuthHelper.class);
        this.mPresenter = new SigninEmailPresenter(mView, mAuthHelper);
    }

    // ID가 비어있는지 체크한다.
    @Test
    public void testSigninWithBlankId() throws Throwable {
        // Presenter 메소드에 테스트 목적에 맞는 파라미터를 넘긴다.
        mPresenter.signin("", GOOD_PASSWORD);
        // 원하는 메소드가 출력되는가 체크한다.
        Mockito.verify(mView).inputIdError(R.string.alert_empty_email);
    }

    // 비밀번호가 비어있는지 체크한다.
    @Test
    public void testSigninWithBlankPassword() throws Throwable {
        mPresenter.signin(GOOD_ID, "");
        Mockito.verify(mView).inputPasswordError(R.string.alert_empty_password);
    }

    // 바른 파라미터가 전달되었을 경우 Sign in이 잘 되는지 테스트 한다.
    @Test
    public void testSigninWithGoodAccount() throws Throwable {
        // Presenter에서 실제로 메소드를 호출하는 Helper의 행동을 Mock으로 정의한다.
        Mockito.when(mAuthHelper.login(GOOD_ID, GOOD_PASSWORD))
                .thenReturn(Observable.just(new Response()));
        // Presenter 메소드를 바른 파라미터로 실행한다.
        mPresenter.signin(GOOD_ID, GOOD_PASSWORD);
        // 원하는 결과를 체크한다.
        Mockito.verify(mView).gotoMainActivity();
    }

    // Sign in이 실패하였을 때 Fail message를 잘 보여주는지 테스트 한다.
    @Test
    public void testSigninFail() throws Throwable {
        // Presenter에서 Helper 메소드가 Fail하도록 Mock을 설정한다.
        String message = "signinFailMessage";
        Mockito.when(mAuthHelper.login(GOOD_ID, GOOD_PASSWORD))
                .thenReturn(Observable.error(new RuntimeException(message)));
        mPresenter.signin(GOOD_ID, GOOD_PASSWORD);
        Mockito.verify(mView).showFailDialog(message);
    }
}</pre>
<h3 class="p3">종합 예시</h3>
<p class="p1"><span class="s1">지금까지 설명드린 MVP, Dagger2, Test Library들을 모두 활용하여 기본적인 기능부터 Model, View, Presenter 테스트까지 구현한 좋은 예시가 있습니다. 아래 링크를 참고해주세요. 위에 말씀드린 것들을 ‘왜 해야 하는가?’ 부터 고민하면서 천천히 학습한다면, 마지막에 이 예시를 보았을 때 많은 도움이 될 것입니다.</span></p>
<p class="p1"><span class="s2"><a href="https://github.com/ZeroBrain/GDG-ATSL-ON-MVP">https://github.com/ZeroBrain/GDG-ATSL-ON-MVP</a></span></p>

<h1 id="firstHeading" class="firstHeading" lang="en">Continuous integration (CI)</h1>
<p class="p1"><span class="s1">테스트까지 구현하였지만, 한가지 단계가 더 남아있습니다. 배포 자동화 입니다. 사실 안드로이드는 결국 apk를 뽑아서 플레이 스토어에 직접 올려야 하기 때문에, 모든 배포 과정을 자동화 하기 어렵습니다. 하지만 코드를 작성하고 Pull Request를 날림과 동시에, Test 진행 후 apk까지 뽑게 함으로써, 상당한 부분을 자동화 할 수 있습니다.</span></p>
<p class="p1"><span class="s1">배포 자동화를 돕는 툴로는 Jenkins와 Travis가 있습니다. 설치형과 PaaS 형태의 차이점이 있습니다. 배포할 제품이 많고 주기가 짧다면 자체적으로 구축한 Jenkins 서버에서 진행하는 것이 자유도가 높습니다. 하지만 우리는 리멤버 한가지 제품만을 개발하고, 소수의 개발자가 배포를 하기 때문에, 관리비용을 줄일 수 있는 Travis를 선택하였습니다.</span></p>


[caption id="attachment_634" align="aligncenter" width="600"]<a href="https://blog.dramancompany.com/wp-content/uploads/2016/05/Travis-CI-logo.jpg"><img class="size-full wp-image-634" src="https://blog.dramancompany.com/wp-content/uploads/2016/05/Travis-CI-logo.jpg" alt="private repo를 사용하려면 유료이지만, 젠킨스 또한 설치 후 관리해야 하는 비용을 생각하면, Travis의 비용이 비싸지 않은 편이다." width="600" height="200"></a> private Repository를 사용하려면 유료이지만, 관리비용을 줄이고 빠르게 개발할 수 있는 Travis를 선택하였습니다.[/caption]
<p class="p1"><span class="s1">Travis를 안드로이드에 적용하기 위해서는 프로젝트 Root에 .yml을 추가하여야 합니다. Travis를 안드로이드에 적용하기 위한 가이드는 아래 링크를 참고해주세요.</span></p>
<p class="p1"><span class="s2"><a href="https://docs.travis-ci.com/user/languages/android">https://docs.travis-ci.com/user/languages/android</a></span></p>
<p class="p1"><span class="s1">Travis는 public Repository는 무료고, private Repository는 유료입니다. 그리고 햇갈렸던 부분인데, 유료플랜을 구독하신다면 <a href="https://travis-ci.com/"><span class="s2">https://travis-ci.com/</span></a> 로 사용하셔야 합니다. <a href="https://travis-ci.org/"><span class="s2">https://travis-ci.org/</span></a> 로 사용하시면 private Repository가 보이지 않습니다. 가격 정책은 <a href="https://travis-ci.com/plans">https://travis-ci.com/plans</a> 여기를 참고해주세요.</span></p>
<p class="p1"><span class="s1">적절한 .yml로 Travis와 안드로이드를 성공적으로 연동하면, Travis가 git push, pull request 등의 이밴트를 감지하여 자동으로 테스트 코드를 실행합니다. 어떤 이밴트에 따라 배포할지 등의 자세한 옵션은 Travis 콘솔 설정창에서 조정할 수 있습니다. 테스트가 끝나면 결과가 Github 이밴트에 첨부되어 보여집니다. 만약 테스트가 실패할 경우 .yml 설정을 조정하여 따로 노티를 받을 수도 있습니다.</span></p>


[caption id="attachment_635" align="aligncenter" width="696"]<img class="wp-image-635" src="https://blog.dramancompany.com/wp-content/uploads/2016/05/스크린샷-2016-08-01-오후-5.56.14.png" width="696" height="349"> Github Pull Request에 테스트 결과가 함께 첨부됩니다. 설정에 따라 Email, Slack 노티도 함께 받을 수 있습니다.[/caption]
<p class="p1"><span class="s1">apk까지 뽑기 위해서는 release 설정을 .yml에 더 추가해야 합니다. release를 위한 여러 방법이 있지만, 저는 Github에서 테스트와 함께 release까지 처리하기로 선택하였습니다. Travis 빌드와 함께 Github에 apk를 자동으로 release하기 위한 .yml 설정은 아래 링크를 참고해주세요.</span></p>
<p class="p1"><a href="https://docs.travis-ci.com/user/deployment/releases"><span class="s1">https://docs.travis-ci.com/user/deployment/releases</span></a></p>
<p class="p1"><a href="https://isjang98.github.io/blog/Travis-ci-for-Android"><span class="s1">https://isjang98.github.io/blog/Travis-ci-for-Android</span></a></p>

<h1 class="p5"><span class="s1"><b>테스트 자동화 합시다</b></span></h1>
<p class="p1"><span class="s1">지금까지 테스트를 하기위해 고민하고 적용했던 과정을 소개하였습니다. 아직은 인프라 구축을 이제 시작한 것이기에 개선해야 할 부분이 많이 있습니다. 하지만 테스트를 자동화 하면서 개발 퀄리티가 많이 좋아진 것을 체감하고 있습니다. 테스트가 주는 안정감도 있지만, 테스트를 위해 로직을 분리하며 구조를 개선한 것이 큰 도움이 됩니다. 당장 배포 때마다 하는 QA 테스트에서, 발견되는 버그의 숫자가 절반 이상 줄었습니다.</span></p>
<p class="p1"><span class="s1">처음 시작한다면 하나하나 배우는데에 허들이 느껴질 수 있습니다. 하지만 차근차근 학습해 나간다면 높은 생산성을 얻을 수 있습니다. 테스트 자동화 합시다.</span></p>
<p class="p1"></p>

<h1 class="p1">Reference</h1>
<ul>
 	<li><a href="http://www.allaboutcircuits.com/technical-articles/how-test-driven-development-can-help-you-write-better-unit-tests/">http://www.allaboutcircuits.com/technical-articles/how-test-driven-development-can-help-you-write-better-unit-tests/</a></li>
 	<li><a href="http://www.techyourchance.com/mvc-and-mvp-architectural-patterns-in-android-part-1/">http://www.techyourchance.com/mvc-and-mvp-architectural-patterns-in-android-part-1/</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>583</wp:post_id>
		<wp:post_date><![CDATA[2016-08-04 10:34:14]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-08-04 01:34:14]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-02-23 23:33:12]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-02-23 14:33:12]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%ec%95%88%eb%93%9c%eb%a1%9c%ec%9d%b4%eb%93%9c%ec%97%90-%ed%85%8c%ec%8a%a4%ed%8a%b8-%eb%8f%84%ec%9e%85%ed%95%98%ea%b8%b0]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="develop"><![CDATA[Tech]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[4]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[right-sidebar]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_slogan]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_subslogan]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_header_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_scroll_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_bottom_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_footer_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_view_post_info]]></wp:meta_key>
		<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_post_icons]]></wp:meta_key>
		<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729454500;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:974;}i:1;a:1:{s:2:"id";i:2124;}i:2;a:1:{s:2:"id";i:1078;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_single_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:17:{s:8:"subtitle";s:0:"";s:6:"format";s:8:"standard";s:5:"video";s:0:"";s:7:"gallery";s:0:"";s:11:"source_name";s:0:"";s:10:"source_url";s:0:"";s:8:"via_name";s:0:"";s:7:"via_url";s:0:"";s:8:"override";a:1:{i:0;a:11:{s:18:"single_blog_custom";s:0:"";s:7:"sidebar";s:0:"";s:14:"second_sidebar";s:0:"";s:14:"share_position";s:0:"";s:17:"share_float_style";s:0:"";s:16:"post_date_format";s:0:"";s:23:"post_date_format_custom";s:0:"";s:21:"post_reading_time_wpm";s:0:"";s:20:"zoom_button_out_step";s:1:"1";s:19:"zoom_button_in_step";s:1:"1";s:17:"number_popup_post";s:1:"1";}}s:14:"image_override";a:1:{i:0;a:2:{s:26:"single_post_thumbnail_size";s:0:"";s:24:"single_post_gallery_size";s:0:"";}}s:22:"trending_post_position";s:0:"";s:19:"trending_post_label";s:0:"";s:20:"sponsored_post_label";s:0:"";s:19:"sponsored_post_name";s:0:"";s:18:"sponsored_post_url";s:0:"";s:19:"sponsored_post_logo";s:0:"";s:19:"sponsored_post_desc";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle_flag]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1913]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_format_gallery_images]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:2:"id";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[드라마의 Pair Programming과 Code Review 도입 후기]]></title>
		<link>https://blog.dramancompany.com/2016/05/%eb%93%9c%eb%9d%bc%eb%a7%88%ec%9d%98-pair-programming%ea%b3%bc-code-review-%eb%8f%84%ec%9e%85-%ed%9b%84%ea%b8%b0/</link>
		<pubDate>Wed, 25 May 2016 12:15:40 +0000</pubDate>
		<dc:creator><![CDATA[sid]]></dc:creator>
		<guid isPermaLink="false">http://developer.dramancompany.com/?p=586</guid>
		<description></description>
		<content:encoded><![CDATA[작년 11월에 Tom님과 Jaden님이 처음으로 페어 프로그래밍을 진행하고 도전기를 남겨주셨는데요,

&nbsp;

https://blog.dramancompany.com/2015/11/tom과-jaden의-첫-페어-프로그래밍-도전기/

그 이후로 API, 타이피스트 시스템 등 백엔드 애플리케이션을 중심으로 <strong>Pair Programming(<em>이하 PP</em>)</strong>과 <strong>Code Review(<em>이하 CR</em>)</strong>를 개발 문화로 정착시키기 위해 꾸준한 노력이 있었습니다. 본 글에서는 PP와 CR을 적용하면서 느꼈던 점들을 요약하여 말씀드리고자 합니다.

&nbsp;
<h3><strong>Why PP &amp; CR?</strong></h3>
PP와 CR을 해야 하는 이유에 대해서는 많은 article들과 서적에서 설명하고 있습니다. 따라서 저희가 실제로 경험했던 것 위주로 &nbsp;간단하게 핵심만 언급하고 넘어가겠습니다.
<h4>1. 품질 향상</h4>
혼자 코드를 작성할 때는 놓치고 갈 수 있었던 부분을 다른 사람이 함께 보면서 잡아낼 수 있습니다. 또 혼자 개발할 때는 '이 정도면 됐지 뭐'하고 스스로 합리화하고 대충 넘어가던 부분도 다른 사람이 내 코드를 본다고 생각하면 그렇게 하기가 어렵습니다. 아무래도 대충 작성한 코드를 남에게 보여주기는 민망하기 때문이겠지요. 그래서 코드를 한 번 더 확인하게 되고, 더 좋은 방법은 없는지 고민하게 됩니다.

구현에 앞서 설계 작업도 함께 하기 때문에 서로 아이디어와 의견을 교환하면서 더 좋은 결과물을 만들어냅니다. 백지장도 맞들면 낫다는 속담처럼 한 명이 아닌 두 명의 경험과 지식이 모였을 때 시너지가 나는 것이라 생각합니다.

따라서 장기적인 관점에서 전체 개발에 필요한 시간이 감소한다고 볼 수 있습니다. 버그가 감소하기 때문에 불필요한 디버깅이 없어지고, 설계가 개선되어 추후 디버깅을 하거나 기능을 추가 개발할 때 필요한 시간이 줄어들기 때문입니다. 어떤 유망한 회사에 투자를 하면 처음에는 가지고 있는 여유 자금이 줄어들어 손실로 보이지만, 장기적으로 손익분기점을 넘게 되면 큰 이득을 얻습니다. 마찬가지로 PP와 CR도 처음에는 시간과 노력이라는 투자가 필요하지만, 시간이 지나 성숙도가 올라가면 큰 이득을 얻는다는 것을 경험했습니다.

<a href="https://blog.dramancompany.com/wp-content/uploads/2016/05/design_stamina_hypo.png"><img class="alignnone size-full wp-image-594" src="https://blog.dramancompany.com/wp-content/uploads/2016/05/design_stamina_hypo.png" alt="design_stamina_hypo" width="1272" height="747"></a>
<blockquote><em><strong>출처: <a href="http://martinfowler.com/bliki/DesignStaminaHypothesis.html">http://martinfowler.com/bliki/DesignStaminaHypothesis.html</a></strong></em>

<em>Martin Fowler는 Design Stamina Hypothesis라는 글에서 좋은 소프트웨어 설계를 위해서는 처음에 시간과 노력이 필요하지만, 일정 시점이 지나면 무설계 소프트웨어보다 훨씬 더 큰 생산성을&nbsp;지속적으로 낼 수 있다고 주장합니다</em>.</blockquote>
<h4>2. 지식 공유</h4>
PP와 CR하면 절대 이 부분을 빼놓을 수 없습니다. 두 명이 서로 협업을 하면서 자연스럽게 각자 알고 있는 도메인 지식과 best practice, 설계 기법들이 공유됩니다. 실제로 저와 Jaden님이 함께 <a href="https://blog.dramancompany.com/2016/03/rails-engine을-이용한-zeus-프로젝트/">Zeus&nbsp;프로젝트</a>를 진행하면서 이런 멋진 경험을 했습니다. Jaden님은 예전에 API와 타이피스트, 어드민 등 리멤버의 모든 백엔드 시스템 개발을 담당하셨기 때문에 사내의 어떤 누구도 따라올 수 없는 풍부한 도메인 지식을 가지고 있었습니다. 반면, 저는 오랜 기간 유연성과 확장성이 필요한 애플리케이션 개발을 진행하면서 어떻게 하면 좀 더 좋은 설계를 할 수 있을지 고민했던 경험이 있었습니다.

거의 두 달여간 매일같이 함께 PP를 하면서 서로의 지식이 완전히 sync되는 느낌은 흔치 않은 경험이었습니다. 이후에 Jaden님이 작성한 코드를 본 적이 있었는데 마치 제가 작성한 듯한 느낌이 들 정도였습니다. 아마 제가 작성한 코드를 Jaden님이 봤어도 같은 느낌이었을 겁니다.

이처럼 각자 알고 있는 지식뿐 아니라, 함께 코딩을 하면서 코딩 스타일, 컨벤션 등도 맞춰나가기 때문에 시간이 지나면 마치 한 사람이 작성한 것처럼 깔끔하고 일관성 있는 코드를 만들 수 있습니다.
<h4>3. 심리적 안정감</h4>
한 번도 가보지 않은 낯선 곳을 여행할 때면 아무래도 혼자보다는 동행이 있는 것이 더 든든합니다. 마찬가지로 PP와 CR을 하게 되면 누군가가 항상 옆에 있고 도움을 주기 때문에 심리적인 안정감을 얻을 수 있습니다. 그래서 코드를 커밋할 때도 좀 더 자신감 있게 하게 됩니다.
<h3>How to do PP?</h3>
<h4>7:3 Rule</h4>
아시다시피 PP는 두 명 중 한 명이 driver, 다른 한 명이 navigator가 되어 진행합니다. 그런데 해보면 driver보다는 navigator가 더 쉽게 지치는 것 같습니다. 두 명이 차를 타고 가면 운전자보다는 옆사람이 더 졸린 것과 같은 이치이겠지요. 따라서 특별한 이유가 없다면 driver와 navigator가 되는 시간의 비율이 7:3을 넘지 않도록 자주 바꿔주는 것이 좋다는 생각이 들었습니다.

그리고 driver와 navigator를 시간을 정해놓고 인위적으로 바꿀 수도 있겠지만, 제 생각에는 자연스럽게 바뀌는 것이 가장 좋은 것 같습니다. navigator 역할에서 뭔가 생각나는 게 있다면 바로 driver가 되어 코드를 작성해 보는 것이 더 자연스러운 흐름이기 때문입니다. 그래서, 각자 main driver가 되는 영역을 어떻게 나눌지 고민해보는 것이 필요합니다.
<h4>Main 코드에서 테스트 코드로</h4>
예를 들어 Jaden님과 제가 PP로 <a href="https://blog.dramancompany.com/2016/03/rails-engine을-이용한-zeus-프로젝트/">Zeus&nbsp;프로젝트</a>를 진행했을 때 처음에는 Jaden님이 테스트 코드 작성에 익숙지 않았습니다. 그래서&nbsp;제가 메인 코드와 테스트 코드 모두를 작성하면서 어떻게 프로세스가 흘러가는지를 보여주었습니다. 약간의 시간이 지나서 Jaden님이 감을 잡게 되자, 메인 코드는 제가, 테스트 코드는 Jaden님이 작성하는 형태로 5:5의 비율을 맞추었습니다. 프로젝트 후반부에 가서 Jaden님이 완전히 익숙해지게 되자 메인 코드와 테스트 코드 모두 Jaden님이 작성하고 저는 주로 navigator 역할을 맡았습니다.

Tom님과 API 개발을 할 때도 마찬가지 방식으로 진행하였습니다. 이처럼 둘 중 한 명이 현재 코드베이스에 익숙하고 &nbsp;다른 한 명은 그렇지 못한 경우 익숙한 사람이 처음에는 main driver가 되고, 나중에는 익숙지 않은 다른 한 명이 main driver가 되어 실제 코드를 작성하는 것이 지식 습득에 가장 효과적인 것 같습니다. 들리는 후문에 의하면 Jaden님과 Tom님 모두 이 방식에 크게 만족하셨다고 합니다. :)
<h3>PP Details</h3>
저희의 경험을 바탕으로 PP의 장단점 및 주의사항을 간략하게 정리해보면 다음과 같습니다.

<strong>PP의 장점</strong>
<ul>
 	<li>개발자 간 의사소통이 CR에 비해 훨씬 더 즉각적이고 활발하게 일어나기 때문에 시간 대비 효율이 좋습니다.</li>
 	<li>서로 다른 분야의 전문가가 PP를 하게 되면 지식이 쌍방향으로 흘러가기 때문에 효과가 극대화됩니다.</li>
 	<li>이후에 혼자 코딩을 하더라도, 코드에 대해 좀 더 고민을 깊이하는 습관을 들일 수 있습니다.</li>
</ul>
<strong>PP의 단점</strong>
<ul>
 	<li>PP는 고도의 집중력이 요구됩니다. 반나절만 PP를 해도 끝내고 나면 완전히 진이 빠지는 경우가 한두번이 아니었습니다. 이러한 피로도는 경험상 면접에 참여하는(면접관이든 피면접자이든) 피로도와 거의 맞먹는 것 같습니다. 따라서 오전이나 오후 시간만 하기 등으로 하루 중 일정 시간을 정해놓고 하는 것이 좋은 것 같습니다.</li>
 	<li>처음에는 서로 합이 맞지 않기 때문에, 진도가 매우 느리게 나갈 수 있습니다. 사소한 것에서도 서로의 생각이 다른 부분이 많기 때문에 여기에 대해 이야기를 하고 맞춰나가는 데 시간이 많이 걸립니다. 하지만 어느 정도 시간이 지나 서로 많이 맞춰진 상태에서는 굉장한 효율을 자랑합니다.</li>
</ul>
<strong>주의할 점</strong>
<ul>
 	<li>당연한 이야기지만 키보드와 마우스는 두 개씩 준비하는 것이 더 효율적입니다. 그래야 driver와 navigator 간의 전환이 빠르고 자연스럽게 일어납니다. 그렇지 않다면 navigator는 키보드를 뺏어오는 것이 부담스럽거나 귀찮아서, 보여주고 싶은 게 있어도 참고 그냥 지나갈지 모릅니다.</li>
 	<li>navigator는 마음에 뭔가 걸리는 것이 있으면 꾹 참지 말고 거리낌없이 이야기해야 합니다. 예를 들어 개행, 공백, 변수명 등 사소한 것이라도 뭔가 다른 의견을 가지고 있으면 다 터놓고 이야기하는 것이 필요하다고 생각합니다. 그래야 서로 의견을 교환하고 맞추어나가는 과정에서 신뢰가 생깁니다. 또 코드의 일관성이 보장되고 좀 더 많은 지식이 공유됩니다. 반면 driver는 열린 마음으로 navigator의 이야기에 귀를 기울여야 합니다.</li>
 	<li>이처럼 서로 간에 허물없는 의사소통을 하기 위해서는 다시 한번 강조하지만 신뢰가 무엇보다 중요합니다. 이 부분은 Jaden님도 아래와 같이 잘 지적해주고 있습니다.</li>
</ul>
<blockquote><em>평소에도 마찬가지지만 특히 페어 프로그래밍을 할 때는 서로의 신뢰가 중요한 것 같습니다. 사람마다 실력차는 분명 존재하겠지만 개발이라는게 절대적인 정답은 없는거라고 생각합니다. 틀린 코드라는건 요구사항에 벗어나 개발된 코드를 말하는것이고, 요구사항에만 맞는 코드라면 모든 코드가 정답이라고 생각합니다. 단지 같은 요구 사항을 수행하면서도 누가 봐도 이해하기 쉽고, 효율적이면서 재사용 가능한 코드를 작성할 수 있다면 그건 좋은 코드라 할 수 있습니다. 페어 프로그래밍은 그런 좋은 코드를 작성 할 수 있도록 많은 도움을 주는것 같습니다. 그와 동시에 좀더 경험이 많은 사람으로 부터 노하우를 쉽게 터득할 수 있는 기회이기도 한것 같습니다.</em></blockquote>
<ul>
 	<li>같은 맥락에서 PP를 하기 위해서는 기본적으로 두 사람 모두 인성적으로 성숙해야 합니다. 자신의 의견만 고집하고, 다른 의견이 제시되었을 때 이를 자신에 대한 공격으로 인식하여 목소리를 높이는 사람은 절대 PP를 할 수 없습니다. 인격적 성숙과 신뢰가 쌓이지 않은 상태에서는 감정적 충돌이 발생할 가능성이 높습니다.</li>
 	<li>좀 더 효과적인 PP를 위해서는 PP를 위한 독립적인 공간을 마련해주는 것도 좋은 방법입니다. 실제로 저희는 PP를 위한 별도 공간을 만들어 언제든지 사용할 수 있도록 했습니다. 이렇게 하면 확실히 일반 사무공간과 격리되어 집중력이 향상되는 것을 경험했습니다. 또 PP를 하면 장시간 이야기를 굉장히 많이 하기 때문에 주변 사람들에게 방해가 될 수 있는데, &nbsp;이러한 부작용을 방지할 수 있습니다.</li>
</ul>
<h3>How to do CR?</h3>
온라인 코드 리뷰를 위해서는 여러 가지 방법과 도구들이 존재합니다. 저희는 이 중에서 가장 쉽게 도입할 수 있는 Git의 <strong>Pull Request(<em>이하 PR</em>)</strong>를 사용해보기로 하였습니다.
<h4>Git Pull Request</h4>
PR을 사용할 때는 크게 두 가지 방식이 있는 것 같습니다. 하나는 원본 repository를 fork한 별도의 repository에서 PR을 생성하는 방법이고, 다른 하나는 같은 repository에 브랜치를 하나 만들어 여기서 PR을 생성하는 방법입니다. 저희는 이 중 브랜치 방식을 택하여 시도를 해보았습니다. 그 이유는 Tom님, Jaden님 모두 이미 git flow를 사용하고 있는 상황이었고, 또 같은 repository에 브랜치를 하나 만드는 것이 리뷰어가 코드를 받아 확인하고 실행하는 것이 더 쉽다고 생각했기 때문입니다.

<a href="https://blog.dramancompany.com/wp-content/uploads/2016/05/pr_code_review.png"><img class="alignnone size-full wp-image-588" src="https://blog.dramancompany.com/wp-content/uploads/2016/05/pr_code_review.png" alt="pr_code_review" width="587" height="518"></a>

위 그림과 같이 git flow의 convention을 사용하여 feature/profile(기능 추가 개발 시), fix/profile(버그 픽스) 등과 같은 브랜치를 만들고 여기에 관련 코드를 커밋 &amp; 푸시합니다. 모든 작업이 끝나면 develop 브랜치로 PR을 하나 생성한 후 사내 커뮤니케이션 도구인 Slack으로 리뷰어들에게 리뷰를 요청합니다. 리뷰어들은 PR에 line comment를 달아 리뷰를 해줍니다.

<a href="https://blog.dramancompany.com/wp-content/uploads/2016/05/review_comment.png"><img class="alignnone size-full wp-image-590" src="https://blog.dramancompany.com/wp-content/uploads/2016/05/review_comment.png" alt="review_comment" width="947" height="935"></a>

필요하면 코드 리뷰를 더 재미있고 쉽게 만들어주는 PR 기반의 도구를 사용할 수도 있습니다.

<a href="https://blog.dramancompany.com/wp-content/uploads/2016/05/review_ninja.png"><img class="alignnone size-full wp-image-591" src="https://blog.dramancompany.com/wp-content/uploads/2016/05/review_ninja.png" alt="review_ninja" width="1375" height="837"></a>

요청자는 리뷰들을 다시 브랜치에 수정 반영하고, 2차 리뷰를 요청합니다. 이러한 과정을 3차, 4차 등으로 계속 반복할 수 있습니다(그렇지만 실제로는 2차 리뷰를 넘는 경우는 거의 없었습니다). 만약 리뷰 후의 수정사항이 간단하여 2차 리뷰를 굳이 받을 필요가 없다고 판단되면, 리뷰를 요청하지 않고 바로 머지할 수도 있습니다.

PR을 머지한 후에는 깔끔한 브랜치 관리를 위해 (특별한 경우가 아니면) 작업한 브랜치를 보통 삭제해주고 있습니다.
<h3>CR Details</h3>
PP와 마찬가지로 CR의 장단점 및 주의사항을 정리해보았습니다.

<strong>장점</strong>
<ul>
 	<li>코드 리뷰를 하면서 자신이 알고 있던 암묵지가 형식지로 변환됩니다. 예를 들어 요청자가 줄바꿈해놓은 것을 보면서 마음에 뭔가 걸리는 게 있을 수 있습니다. 그러면, 왜 이게 마음을 찜찜하게 만드는 건지, 또 내가 좋다고 생각하는 줄바꿈 방식이 왜 좋은 것인지 한참을 생각하게 됩니다. 이런 과정을 통해 요청자와 리뷰어 모두 기존에는 별 생각없이 당연하다고 여겨왔던 방식을 다시 한 번 곱씹어 보게 되고, 이를 comment라는 형태를 빌어 글로 작성하는 과정에서 그 이유를 좀 더 명확하게 깨닫게 됩니다. 따라서 CR도 처음 시작하면 comment를 쓰는데 생각보다 상당한 시간이 걸리는 것을 경험하였습니다.</li>
 	<li>아무래도 CR은 비동기로 일어나다보니, 시간을 관리하는 측면에서 편리합니다. 또한 PP보다는 시간이 덜 들어가는 것도 사실입니다.</li>
</ul>
<strong>단점</strong>
<ul>
 	<li>위에 기술한 CR의 장점은 CR의 단점이기도 합니다. 작업이 비동기로 일어나기 때문에, 리뷰 요청자는 리뷰어가 리뷰할 때까지 프로세스를 진행하지 못하는 경우가 왕왕 생길 수 있습니다.</li>
 	<li>또한, Face-to-face가 아닌 문서를 통해 대부분의 리뷰가 이루어지기 때문에, 서로의 의도를 정확히 이해하지 못하여 miscommunication이 일어날 수 있습니다.</li>
 	<li>PP만큼 밀접한 협업이 일어나지 않기 때문에 지식의 동기화가 덜 일어납니다.</li>
 	<li>간단한 수정사항임에도 CR을 하는 경우 비효율이 발생할 수 있습니다. 따라서 무조건 모든 수정사항을 리뷰하기 보다는 요청자의 판단 하에 필요한 경우 리뷰를 요청하는 등 원칙을 정해놓는 것이 좋을 것 같습니다.</li>
</ul>
<strong>주의할 점</strong>
<ul>
 	<li>특별한 일이 없으면 리뷰어는 가급적 빨리, 늦어도 요청 후 24시간 이내에 리뷰하는 것을 원칙으로 하면 좋다고 생각합니다. 그렇지 않다면 리뷰가 계속 늘어져 머지하지 못한 PR이 여기저기 생길 것입니다.</li>
 	<li>코드 리뷰의 범위는 작을수록 좋은 것 같습니다. 리뷰 요청자가 한 번에 너무 많은 양의 코드를 요청하게 되면 리뷰어는 말 그대로 죽어납니다. 특히 CR을 처음 시작하는 경우 위에서 언급했듯이 comment 쓰는데도 시간이 오래 걸리기 때문에 많은 양이 아님에도 리뷰에만 7~8시간이 걸리는 것을 경험했습니다. 이러한 리뷰어의 고충을 고려하여 요청자는 가급적 작은 단위로 끊어 리뷰를 요청할 필요가 있습니다. 또 너무 많은 코드 수정 사항의 경우 github에서 다 보여주지 못하는 경우도 있었습니다.</li>
 	<li>리뷰어는 의견을 제시할 수 있지만, 반영 여부에 대한 최종 결정은 요청자가 하는 것이 좋다고 생각합니다. 저희는 아직까지 서로의 의견이 끝까지 상충되는 경우는 없었고, 모두 원만하게 잘 조율되었습니다. 하지만, 때로는 의견이 끝까지 좁혀지지 않는 경우도 있을 것입니다. 이러한 경우 프로세스의 빠른 진행을 위해서는 요청자가 최종 결정권을 가지면 좋을 것 같습니다.</li>
 	<li>온라인 리뷰를 기본으로 하되, 필요하면 오프라인 미팅을 누구라도 요청할 수 있습니다. comment를 통해서 하기에는 너무 많은 이야기거리가 있다거나 서로의 의도를 명확히 이해하지 못하는 경우에는 반드시 오프라인을 통해 이를 해소할 필요가 있습니다.</li>
 	<li>반면 온라인 리뷰가 없는 오프라인 리뷰는 효과가 많이 떨어지는 것 같습니다. 실제로 안드로이드와 ios간에 온라인을 거치지 않은 오프라인 리뷰 미팅을 시도했었는데, 힘든 점이 많았습니다. 플랫폼이 달라 서로 간의 이해도가 떨어지는 점이 주요 원인이었지만, 미팅 전에 소스 코드를 확인하지 않고 들어오는 경우도 대다수이기 때문이었습니다. 이렇게 되면 미팅 시에 코드 흐름을 쫓아가기에도 상당히 벅차고 다 이해하지 못하는 경우가 많기 때문에 convention 이외에는 할 이야기가 별로 없게 됩니다.</li>
</ul>
<h3>PP vs. CR</h3>
PP와 CR 모두 개발팀 전체의 수준을 한 단계 끌어올릴 수 있는 좋은 도구임에는 틀림이 없습니다. 다만 각각의 장단점을 고려하여 적절한 상황에 이용하면 금상첨화일 것입니다. 위에서 기술한 모든 내용을 종합하여 PP와 CR을 간단하게 비교해 보았습니다.

먼저 서로 가진 지식들을 tight하게 공유할 필요가 있거나, 상당히 중요한 로직을 작성하는 경우에는&nbsp;PP가 더 좋은 것 같습니다. 예를 들어 기존 시스템을 완전히 뒤엎고 차세대에 버금가는 리팩토링을 한다든지, 서로 겹치지 않는 전문지식을 가진 두 사람이 지식을 공유하기 원한다든지, 팀에 새로운 분이 조인하여 업무를 익힌다든지 하는 경우에는 PP가 매우 효과적입니다.

반대로 서로의 지식이 상당히 잘 동기화가 되어 있고, 상대적으로 중요도가 떨어지는 요구사항을 구현하는 경우에는 CR로도 충분한 것 같습니다.
<h3>Wrap up</h3>
드라마앤컴퍼니 개발 그룹은 더 좋은 개발 문화를 위하여 끊임없는 노력을 게을리하지 않고 있습니다. 그 과정의 일환으로 PP와 CR에 대해 이제 막 첫걸음마를 떼었습니다. 분명 모두가&nbsp;PP와 CR을 몸의 일부처럼 자연스럽게 여기는 당연한 문화로 자리잡기까지는 오랜 시간이 걸릴 것입니다. 그렇지만 지금까지 이를 경험한 모든 개발자분들이 큰 만족감을 나타내고 있어 PP와 CR 문화가 점차적으로 확산되고 정착되는데 큰 문제가 없을 것이라 생각합니다.

앞으로도 지속적인 시도와 실패로부터의 학습을 통해 더욱 더 훌륭한 모습의 개발 그룹으로 성장하는 것을 지켜봐주시길 부탁 드립니다.
<h3>Contributors</h3>
이 글은 PP와 CR에 적극적으로 참여해주시고, 가감없는 피드백을 주신 아래 분들의 도움으로 작성되었습니다.
<ul>
 	<li class="fn name"><a href="https://blog.dramancompany.com/author/tom/">Tom Kim</a></li>
 	<li class="fn name"><a href="https://blog.dramancompany.com/author/jaden/">Jaden Oh</a></li>
 	<li class="fn name"><a href="https://blog.dramancompany.com/author/hj8902">Heejoong Kim</a></li>
</ul>
<h3>Reference</h3>
<ul>
 	<li><a href="http://tech.kakao.com/2016/02/04/kakaostory-codereview/">카카오스토리 팀의 코드 리뷰 도입 사례</a>&nbsp;: 코드 리뷰에 대한 아주 훌륭한 글입니다. 일독을 강추드립니다.</li>
 	<li><a href="http://ohgyun.com/367">깃헙으로 코드리뷰 하기</a></li>
 	<li><a href="https://realm.io/kr/news/codereview-howto/">코드리뷰, Github로 바로 적용하기</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>586</wp:post_id>
		<wp:post_date><![CDATA[2016-05-25 21:15:40]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-05-25 12:15:40]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-02-23 23:35:57]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-02-23 14:35:57]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%eb%93%9c%eb%9d%bc%eb%a7%88%ec%9d%98-pair-programming%ea%b3%bc-code-review-%eb%8f%84%ec%9e%85-%ed%9b%84%ea%b8%b0]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="develop"><![CDATA[Tech]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[4]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_83dd469fea35b38c2c6413652572fc0d]]></wp:meta_key>
		<wp:meta_value><![CDATA[<blockquote data-secret="vR9WFJgW8b" class="wp-embedded-content"><a href="https://blog.dramancompany.com/2015/11/tom%ea%b3%bc-jaden%ec%9d%98-%ec%b2%ab-%ed%8e%98%ec%96%b4-%ed%94%84%eb%a1%9c%ea%b7%b8%eb%9e%98%eb%b0%8d-%eb%8f%84%ec%a0%84%ea%b8%b0/">Tom과 Jaden의 첫 페어 프로그래밍 도전기</a></blockquote><iframe class="wp-embedded-content" sandbox="allow-scripts" security="restricted" style="position: absolute; clip: rect(1px, 1px, 1px, 1px);" src="https://blog.dramancompany.com/2015/11/tom%ea%b3%bc-jaden%ec%9d%98-%ec%b2%ab-%ed%8e%98%ec%96%b4-%ed%94%84%eb%a1%9c%ea%b7%b8%eb%9e%98%eb%b0%8d-%eb%8f%84%ec%a0%84%ea%b8%b0/embed/#?secret=vR9WFJgW8b" data-secret="vR9WFJgW8b" width="600" height="338" title="&#8220;Tom과 Jaden의 첫 페어 프로그래밍 도전기&#8221; &#8212; DRAMA&amp;COMPANY Engineering" frameborder="0" marginwidth="0" marginheight="0" scrolling="no"></iframe>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_time_83dd469fea35b38c2c6413652572fc0d]]></wp:meta_key>
		<wp:meta_value><![CDATA[1464666020]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[right-sidebar]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_slogan]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_subslogan]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_header_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_scroll_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_bottom_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_footer_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_view_post_info]]></wp:meta_key>
		<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_post_icons]]></wp:meta_key>
		<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729436718;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:199;}i:1;a:1:{s:2:"id";i:966;}i:2;a:1:{s:2:"id";i:1783;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_97bdcb34354e2c53efc6b12dd39391b6]]></wp:meta_key>
		<wp:meta_value><![CDATA[<blockquote class="wp-embedded-content" data-secret="HFJyvSuOKo"><a href="https://blog.dramancompany.com/2015/11/tom%ea%b3%bc-jaden%ec%9d%98-%ec%b2%ab-%ed%8e%98%ec%96%b4-%ed%94%84%eb%a1%9c%ea%b7%b8%eb%9e%98%eb%b0%8d-%eb%8f%84%ec%a0%84%ea%b8%b0/">Tom과 Jaden의 첫 페어 프로그래밍 도전기</a></blockquote><iframe title="&#8220;Tom과 Jaden의 첫 페어 프로그래밍 도전기&#8221; &#8212; DRAMA&amp;COMPANY" class="wp-embedded-content" sandbox="allow-scripts" security="restricted" style="position: absolute; clip: rect(1px, 1px, 1px, 1px);" src="https://blog.dramancompany.com/2015/11/tom%ea%b3%bc-jaden%ec%9d%98-%ec%b2%ab-%ed%8e%98%ec%96%b4-%ed%94%84%eb%a1%9c%ea%b7%b8%eb%9e%98%eb%b0%8d-%eb%8f%84%ec%a0%84%ea%b8%b0/embed/#?secret=HFJyvSuOKo" data-secret="HFJyvSuOKo" width="600" height="338" frameborder="0" marginwidth="0" marginheight="0" scrolling="no"></iframe>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_time_97bdcb34354e2c53efc6b12dd39391b6]]></wp:meta_key>
		<wp:meta_value><![CDATA[1570011393]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_b38af518d0572d097f92f21518910f38]]></wp:meta_key>
		<wp:meta_value><![CDATA[<blockquote class="wp-embedded-content" data-secret="k3E34Uth6t"><a href="https://blog.dramancompany.com/2015/11/tom%ea%b3%bc-jaden%ec%9d%98-%ec%b2%ab-%ed%8e%98%ec%96%b4-%ed%94%84%eb%a1%9c%ea%b7%b8%eb%9e%98%eb%b0%8d-%eb%8f%84%ec%a0%84%ea%b8%b0/">Tom과 Jaden의 첫 페어 프로그래밍 도전기</a></blockquote><iframe class="wp-embedded-content" sandbox="allow-scripts" security="restricted" style="position: absolute; clip: rect(1px, 1px, 1px, 1px);" title="&#8220;Tom과 Jaden의 첫 페어 프로그래밍 도전기&#8221; &#8212; DRAMA&amp;COMPANY" src="https://blog.dramancompany.com/2015/11/tom%ea%b3%bc-jaden%ec%9d%98-%ec%b2%ab-%ed%8e%98%ec%96%b4-%ed%94%84%eb%a1%9c%ea%b7%b8%eb%9e%98%eb%b0%8d-%eb%8f%84%ec%a0%84%ea%b8%b0/embed/#?secret=k3E34Uth6t" data-secret="k3E34Uth6t" width="500" height="282" frameborder="0" marginwidth="0" marginheight="0" scrolling="no"></iframe>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_time_b38af518d0572d097f92f21518910f38]]></wp:meta_key>
		<wp:meta_value><![CDATA[1606217215]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_single_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:17:{s:8:"subtitle";s:0:"";s:6:"format";s:8:"standard";s:5:"video";s:0:"";s:7:"gallery";s:0:"";s:11:"source_name";s:0:"";s:10:"source_url";s:0:"";s:8:"via_name";s:0:"";s:7:"via_url";s:0:"";s:8:"override";a:1:{i:0;a:11:{s:18:"single_blog_custom";s:0:"";s:7:"sidebar";s:0:"";s:14:"second_sidebar";s:0:"";s:14:"share_position";s:0:"";s:17:"share_float_style";s:0:"";s:16:"post_date_format";s:0:"";s:23:"post_date_format_custom";s:0:"";s:21:"post_reading_time_wpm";s:0:"";s:20:"zoom_button_out_step";s:1:"1";s:19:"zoom_button_in_step";s:1:"1";s:17:"number_popup_post";s:1:"1";}}s:14:"image_override";a:1:{i:0;a:2:{s:26:"single_post_thumbnail_size";s:0:"";s:24:"single_post_gallery_size";s:0:"";}}s:22:"trending_post_position";s:0:"";s:19:"trending_post_label";s:0:"";s:20:"sponsored_post_label";s:0:"";s:19:"sponsored_post_name";s:0:"";s:18:"sponsored_post_url";s:0:"";s:19:"sponsored_post_logo";s:0:"";s:19:"sponsored_post_desc";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle_flag]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1918]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_format_gallery_images]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:2:"id";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[30]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[드라마에서 1년의 성장기]]></title>
		<link>https://blog.dramancompany.com/2016/08/%eb%93%9c%eb%9d%bc%eb%a7%88%ec%97%90%ec%84%9c-1%eb%85%84%ec%9d%98-%ec%84%b1%ec%9e%a5%ea%b8%b0/</link>
		<pubDate>Mon, 08 Aug 2016 04:59:02 +0000</pubDate>
		<dc:creator><![CDATA[rfrost]]></dc:creator>
		<guid isPermaLink="false">http://developer.dramancompany.com/?p=645</guid>
		<description></description>
		<content:encoded><![CDATA[<p class="p1"><span class="s2">2015년 7월에 입사하여 드라마앤컴퍼니에 온지 이제 1년이 지났습니다. 어느 분야든 정체를 겪다가 한번에 올라가는 순간이 있습니다. 저는 120만명 이상이 사용하는 리멤버 서비스의 안드로이드 앱을 혼자 개발하면서 한번에 올라가는 성장을 경험하고 있습니다. 개발 능력도 많이 성장하였지만, 근본적인 것들을 많이 배웁니다. 그리고 배운 것들 중 의미있는 것들을 나누려고 합니다.</span></p>

<h2 class="p5"><span class="s3">원칙있는 개발, 기술부채의 최소화</span></h2>
<p class="p3"><span class="s2">지금까지 많은 유저가 실제로 사용하는 무언가를 만든 경험이 없었습니다. 리멤버를 통해 처음으로 돌아가는 서비스를 만들기 시작하였습니다. 일정기간 이상 운영된 서비스는 여러 기능이 얽혀 복잡도가 높습니다. 기획이 지속적으로 변경, 개선, 추가됨에 따라 복잡한 구조 사이로 코드를 변경하는 비용이 점점 증가합니다. 이러한 기술부채는 시장에서 제품을 빨리 검증받아야 하는 초기에는 의미있지만, 리멤버는 그런 시기가 지나있었습니다. 저는 기본으로 돌아갔습니다.</span></p>


[caption id="attachment_648" align="aligncenter" width="529"]<img class="wp-image-648 size-full" src="https://blog.dramancompany.com/wp-content/uploads/2016/08/designstaminagraph.png" width="529" height="282"> 기술부채는 어느 시점을 넘어가면 개발속도를 저하시킵니다.[/caption]

&nbsp;
<p class="p3"><span class="s2">책임이 섞여있던 클래스들을 분리하고 리팩토링 하였습니다. 사용되고 있던 다양한 기술들을 역할에 따라 통일하였습니다. Flux, MVP 등의 패턴들을 새로 공부하여 앱 구조를 변경하였습니다. 테스트를 도입하고 CI를 연동하였습니다. 앱의 근본적인 변화가 쉽지는 않았지만, 몇개월의 투자로 이제 예전보다 빠르고 안정적인 개발을 하고 있습니다. 변화에 빠르고 안정적으로 대응할 수 있는 좋은 디자인의 소프트웨어를 만들기위해 기본으로 돌아가면서, 개발과 설계의 중요한 원칙들을 몸으로 익히고 있습니다.</span></p>
https://speakerdeck.com/rfrost77/rimembeo-andeuroideu-byeonceongi
<h2 class="p5"><span class="s3">서비스를 운영한다는 것, 레거시에 대한 존중</span></h2>
<p class="p3"><span class="s2">프로젝트 단위로 개발을 할 때에는 항상 새롭게 만들었기 때문에 기존 유저를 고려하지 않아도 괜찮습니다. 하지만 돌아가고 있는 서비스에 변화를 준다는 것은, 기존 유저와 배포된 앱버전들을 고려해야 한다는 것을 뜻합니다. 그리고 이것이 운영의 일부입니다. 저는 실제 돌아가는 서비스에 대한 운영경험이 부족하였습니다. 생산성있는 개발환경과 퍼포먼스 좋은 소프트웨어를 만들기위해 고민하였지만, 기존의 것들까지 포함한 안정성은 많이 생각하지 못하였습니다.</span></p>
<p class="p3"><span class="s2">그렇게 가입이 안되거나, 명함이 사라지거나 등의 몇번 큰 버그가 있었습니다. 운영을 고려하지 않고 많은 변화를 주었기 때문입니다. 불안정한 개발로 사용자 경험을 해치는 실수를 하면서, 레거시가 꼭 나쁜 것은 아니구나, 그것들까지 감싸면서 안정적으로 개발하는 것이 진짜 서비스를 ‘운영’하는 것이라는 것을 배웠습니다. 트렌드와 최신 기술을 꾸준히 따라가고 배우는 자세는 개발자로서 필요합니다. 하지만 실제 서비스는 약간의 퍼포먼스보다 검증된 안정성이 더욱 중요합니다. 저는 비용을 치루고 나서야 안정성을 검증하고 변화를 적용하는 자세를 배울 수 있었습니다.</span></p>


[caption id="attachment_650" align="aligncenter" width="450"]<a href="https://blog.dramancompany.com/wp-content/uploads/2016/08/20621818_blog.jpg"><img class="size-full wp-image-650" src="https://blog.dramancompany.com/wp-content/uploads/2016/08/20621818_blog.jpg" alt="운영되고 있는 서비스는 약간의 퍼포먼스보다 안정성이 더 중요한 이슈입니다." width="450" height="360"></a> 운영되고 있는 서비스는 약간의 퍼포먼스보다 안정성이 더 중요한 이슈입니다.[/caption]
<h2 class="p5"><span class="s3">문제 정의, 깊은 고민</span></h2>
<p class="p3"><span class="s2">모든 커뮤니케이션에는 이유가 존재합니다. 특히 문제에 대해 논의할 때에는 더욱 그렇습니다. 그런데 대화가 흘러가다보면 논점에서 벗어나기 쉽습니다. 그래서 문제를 정확히 용어로 정의하는 것이 중요합니다. 논의 주제를 적어놓고 보면서 계속 생각을 바로잡아야 올바른 결론을 도출할 수 있습니다. 회의뿐만 아니라 무언가를 고민할 때에도 마찬가지입니다. 내가 이것을 고민하는 이유를 계속 생각하면서 논리를 진행해야 좋은 의사결정을 할 수 있습니다. 드라마인들은 문제를 접근하기 전에 왜 우리가 이것을 해결해야 하는지 정의하고 시작합니다. 자연스럽게 저 또한 문제를 정의하고 생각을 정리하는 좋은 습관을 익혔습니다.</span></p>
<p class="p3"><span class="s2">저는 이전까지 직감과 경험을 바탕으로 빠르게 무언가를 판단 하였습니다. 좋게 말하면 결단력 있는 것이지만, 가벼운 고민으로 좋은 의사결정을 하지는 못했습니다. 드라마에서 여러 의사결정을 보면서 문제에 잘 접근하는 방법을 배웠습니다. 구체적으로 그림을 그려보는 것이 중요합니다. 실제적인 깊은 고민은 의사결정을 단단하게 하고, 혹 결정이 실패하더라도 많은 Lessons Learned을 줍니다. 너무 긴 시간을 소요하면 안되겠지만, 내가 할 수 있는 최선의 깊이까지 바르게 고민하는 자세는, 매 선택으로부터 나를 발전시키는 중요한 발판 입니다.</span></p>


[caption id="attachment_649" align="aligncenter" width="511"]<a href="https://blog.dramancompany.com/wp-content/uploads/2016/08/다운로드.jpeg"><img class=" wp-image-649" src="https://blog.dramancompany.com/wp-content/uploads/2016/08/다운로드.jpeg" alt="문제를 정의하고 구체적으로 선택지를 따져가여 깊이 고민합니다." width="511" height="365"></a> 문제를 정의하고, 다양한 선택지를 구체적으로 고민하며, 바른 해결책을 찾아갑니다.[/caption]
<h2 class="p5"><span class="s3">좋은 비전을 공유하는 훌륭한 동료들과 재밌게 일하는 경험</span></h2>
<p class="p3"><span class="s2">지금까지 이것저것 배운 것들을 말씀 드렸지만, 제가 1년동안 얻은 가장 큰 것은, 좋은 비전을 공유하는 훌륭한 동료들과 함께 재미있게 일하는 지금의 경험 자체 입니다.</span></p>
<p class="p3"><span class="s2">회사는 무언가를 함께 이루어나가며, 과정에서의 수익을 공유하는 집단입니다. 함께 이룰 무언가를 우리는 비전이라고 부릅니다. 가능성 있고 재미있는 비전 아래에는 좋은 사람들이 모이고, 모두 목표를 위해 자신의 최선을 다합니다. 드라마앤컴퍼니는 그런 일이 일어나고 있는 회사입니다. 우리가 바라보는 큰 그림을 위해 한 방향으로 함께 달리고 있습니다. 지금의 좋은 경험은 앞으로의 커리어에서도 타성에 젖지 않고, 목표를 향해 힘껏 달리도록 동기를 부여해주는, 긍정적인 마인드의 원동력이 될 것입니다.</span></p>


[caption id="attachment_651" align="aligncenter" width="606"]<a href="https://blog.dramancompany.com/wp-content/uploads/2016/08/vision.jpg"><img class=" wp-image-651" src="https://blog.dramancompany.com/wp-content/uploads/2016/08/vision.jpg" alt="좋은 비전을 훌륭한 동료들과 함께 잘 풀어내는 지금의 경험은, 앞으로의 커리어를 긍정적으로 쌓아갈 중요한 양분입니다." width="606" height="403"></a> 좋은 비전을 훌륭한 동료들과 함께 잘 풀어내는 지금의 경험은, 앞으로의 커리어를 긍정적으로 쌓아갈 중요한 양분입니다.[/caption]

&nbsp;
<p class="p3"><span class="s2">저는 1년동안 이렇게 성장하였습니다. 아직 부족한 점이 많지만, 좋은 팀원들과 함께하기 때문에 지금처럼, 지금보다 더욱 발전할 수 있을 것이라 믿습니다. 앞으로 2년, 5년, 10년 후 저는 어떤 모습일지, 그리고 제가 뛰어든 이 비전이 어떻게 펼쳐질지 너무나 궁금합니다.</span></p>

<h2 class="p3">Reference</h2>
<ul>
 	<li><a href="http://martinfowler.com/bliki/DesignStaminaHypothesis.html">http://martinfowler.com/bliki/DesignStaminaHypothesis.html</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>645</wp:post_id>
		<wp:post_date><![CDATA[2016-08-08 13:59:02]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-08-08 04:59:02]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-02-23 23:37:03]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-02-23 14:37:03]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%eb%93%9c%eb%9d%bc%eb%a7%88%ec%97%90%ec%84%9c-1%eb%85%84%ec%9d%98-%ec%84%b1%ec%9e%a5%ea%b8%b0]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="develop"><![CDATA[Tech]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[4]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_73e3c54d34b91cd60344ed246075ec3c]]></wp:meta_key>
		<wp:meta_value><![CDATA[<iframe src="https://www.slideshare.net/slideshow/embed_code/key/IIleW7GtNpYJmy" width="427" height="356" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="https://www.slideshare.net/SeungminLee13/ss-61412564" title="리멤버 안드로이드 변천기" target="_blank">리멤버 안드로이드 변천기</a> </strong> from <strong><a target="_blank" href="http://www.slideshare.net/SeungminLee13">승민 이</a></strong> </div>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_time_73e3c54d34b91cd60344ed246075ec3c]]></wp:meta_key>
		<wp:meta_value><![CDATA[1470632407]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[right-sidebar]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_slogan]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_subslogan]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_header_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_scroll_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_bottom_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_footer_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_view_post_info]]></wp:meta_key>
		<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_post_icons]]></wp:meta_key>
		<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1728886659;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:1783;}i:1;a:1:{s:2:"id";i:966;}i:2;a:1:{s:2:"id";i:2174;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_ef29c25d58f6035cd2e0fd97319acb94]]></wp:meta_key>
		<wp:meta_value><![CDATA[<iframe allowfullscreen="true" allowtransparency="true" frameborder="0" height="941" id="talk_frame_416372" mozallowfullscreen="true" src="//speakerdeck.com/player/6e1bd962adea4a0a9d5a7271f7772ab8" style="border:0; padding:0; margin:0; background:transparent;" webkitallowfullscreen="true" width="1170"></iframe>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_time_ef29c25d58f6035cd2e0fd97319acb94]]></wp:meta_key>
		<wp:meta_value><![CDATA[1514874588]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_6acbaa2048707764401183968c6db063]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_e8fbfa9e00c566a8b10500ad10ac9652]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_single_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:17:{s:8:"subtitle";s:0:"";s:6:"format";s:8:"standard";s:5:"video";s:0:"";s:7:"gallery";s:0:"";s:11:"source_name";s:0:"";s:10:"source_url";s:0:"";s:8:"via_name";s:0:"";s:7:"via_url";s:0:"";s:8:"override";a:1:{i:0;a:11:{s:18:"single_blog_custom";s:0:"";s:7:"sidebar";s:0:"";s:14:"second_sidebar";s:0:"";s:14:"share_position";s:0:"";s:17:"share_float_style";s:0:"";s:16:"post_date_format";s:0:"";s:23:"post_date_format_custom";s:0:"";s:21:"post_reading_time_wpm";s:0:"";s:20:"zoom_button_out_step";s:1:"1";s:19:"zoom_button_in_step";s:1:"1";s:17:"number_popup_post";s:1:"1";}}s:14:"image_override";a:1:{i:0;a:2:{s:26:"single_post_thumbnail_size";s:0:"";s:24:"single_post_gallery_size";s:0:"";}}s:22:"trending_post_position";s:0:"";s:19:"trending_post_label";s:0:"";s:20:"sponsored_post_label";s:0:"";s:19:"sponsored_post_name";s:0:"";s:18:"sponsored_post_url";s:0:"";s:19:"sponsored_post_logo";s:0:"";s:19:"sponsored_post_desc";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle_flag]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1919]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_format_gallery_images]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:2:"id";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Ruby 코드 성능 최적화 (feat. ruby-prof, Benchmark)]]></title>
		<link>https://blog.dramancompany.com/2016/11/ruby-%ec%bd%94%eb%93%9c-%ec%84%b1%eb%8a%a5-%ec%b5%9c%ec%a0%81%ed%99%94-feat-ruby-prof-benchmark/</link>
		<pubDate>Mon, 28 Nov 2016 03:25:19 +0000</pubDate>
		<dc:creator><![CDATA[tom]]></dc:creator>
		<guid isPermaLink="false">http://blog.dramancompany.com/?p=693</guid>
		<description></description>
		<content:encoded><![CDATA[초기 스타트업은 기능에 비해 성능이 덜 중요시 되는 개발을 하게 됩니다. 사용자가 적을 땐 성능을 신경쓰는 것 보다 아이템을 빨리 검증하기 위한 기능 개발이 더 중요하기 때문인데요, 드라마앤컴퍼니도 처음엔 기능 위주의 개발을 하다 사용자가 늘어남에 따라 자연스럽게 성능도 중요시 하여 개발하고 있습니다.
드라마앤컴퍼니의 대부분 Web/API 프로젝트들은 Ruby와 Ruby on Rails로 만들어졌습니다. Ruby는 느리다고 자주 까이는 언어인데요,&nbsp;이번 글에서는 내가 만든 프로그램이 느린 이유가 정말 Ruby라는 언어 때문인지, 코드의 다른 부분에 문제가 있는 것인지 근거를 가지고&nbsp;판단하고 어떻게 성능 개선을 할 수 있을지 그 방법을 다뤄보고자 합니다.
이 글에서 예시로 든 언어가 Ruby지만 Tool만 다를뿐 이 글에서 소개하는 성능 최적화 방법은 모든 언어에 걸쳐 비슷하다고 생각합니다. 또 이 글에서는 성능을 "속도"로 가정하고 다루고 있지만, 상황에 따라 정확도 등 다양한 기준이 될 수 있음을 염두해주셨으면 합니다.
크게 3단계로 나뉘어 설명해보자 합니다. <strong>Tools</strong>에서는&nbsp;Ruby 성능 최적화에 많이 사용되는 툴들인 Benchmark(성능 측정), ruby-prof(프로파일러)를 소개합니다. <strong>성능 최적화 과정</strong>에서는 필요한 과정들을 설명하며 <strong>실제 사례</strong>에서는 제가 실제로 성능 최적화를 진행하며 정리했던 문서를 예시로 다뤄봅니다.
<h1><strong>Tools</strong></h1>
<h2>Benchmark</h2>
<a href="https://ruby-doc.org/stdlib-2.2.5/libdoc/benchmark/rdoc/Benchmark.html">문서 링크</a>

Ruby에서 기본적으로 제공하고 있는 Benchmark 모듈입니다. 단순하여 사용하기 매우 간단하지만 많은 쓸모가 있습니다.
아래와 같은 코드를 작성하면 report 메소드에 넘기는 코드 블럭를 수행하는데 든 소요 시간을 측정해줍니다.
결과의 real부분이 실제 코드를 수행하는데 사용한 총 시간을 초 단위로 나타냅니다.
<pre class="plain:false lang:ruby decode:true" title="Benchmark 사용 예시">require 'benchmark'

Benchmark.bm do |x|
  x.report('느린') do
    1_000_000.times.map do |i|
      i.to_s
    end
  end

  x.report('빠른') do
    Array.new(1_000_000) do |i|
      i.to_s
    end
  end
end
</pre>
<pre class="plain:false lang:default decode:true" title="Benchmark 예시 코드 결과">       user     system      total        real
느린  0.210000   0.010000   0.220000 (  0.218153)
빠른  0.190000   0.000000   0.190000 (  0.187891)</pre>
<h2>ruby-prof</h2>
<a href="https://github.com/ruby-prof/ruby-prof">프로젝트 링크</a>

아마 Ruby에서 가장 많이 사용되는 프로파일러입니다.
원하는 코드 블럭들에 대해서 리포트를 측정할 수 있으며 결과를 다양한 포맷으로 제공합니다.
gem을 설치한 뒤 다음과 같은 코드만 작성하면 해당 코드 블럭에 대한 프로파일링을 기록할 수 있습니다.

<code>gem install&nbsp;ruby-prof</code>
<pre class="plain:false lang:ruby decode:true" title="ruby-prof 사용 예시">require 'ruby-prof'

result = RubyProf.profile do
  dummy_list.each do |dummy|
    foo(dummy)
  end
end

# Text로 된 그래프 형식으로 출력
File.open "remember-profile-graph.html", 'w' do |file|
  RubyProf::GraphHtmlPrinter.new(result).print(file)
end

# Call Stack을 html 형식으로 출력
File.open "remember-profile-stack.html", 'w' do |file|
  RubyProf::CallStackPrinter.new(result).print(file)
end</pre>
측정한 report를 다양한 포맷으로 제공하는 printer들이 많은데 그 중 제가 가장 많이 쓰는 printer들은 GraphPrinter와 CallStackPrinter입니다.
두 printer들에 대한 예시와 결과를 읽을 법에 대해서 간단히 설명해드리겠습니다.
<h4>GraphPrinter</h4>
측정한&nbsp;코드 블럭에서 호출되었던 모든 메소드들을 모아서, 각 메소드들이 얼만큼의 시간을 소요했으며 어떤 메소드들에 의해 호출되고 어떤 메소드들을 호출했는지 보여줍니다.
텍스트로만 되어있기 때문에, 빠르게 어떤 부분들이 가장 시간을 많이 잡아먹고 몇 번 호출되는지 파악하기 용이합니다.
다음은 GraphPrinter로 출력한 예시입니다.
<pre class="striped:false marking:false wrap-toggle:false plain:false lang:default decode:true" title="GraphPrinter 출력 예시">Measure Mode: wall_time
Thread ID: 70310439543100
Fiber ID: 70310456289620
Total Time: 0.05264616012573242
Sort by: total_time

  %total   %self      total       self       wait      child            calls    name
--------------------------------------------------------------------------------
 100.00%   0.01%      0.053      0.000      0.000      0.053                1      PrintersTest#setup
                      0.053      0.000      0.000      0.053              1/1      Object#run_primes
--------------------------------------------------------------------------------
                      0.053      0.000      0.000      0.053              1/1      PrintersTest#setup
  99.99%   0.01%      0.053      0.000      0.000      0.053                1      Object#run_primes
                      0.052      0.000      0.000      0.052              1/1      Object#find_primes
                      0.001      0.000      0.000      0.001              1/1      Object#make_random_array
                      0.000      0.000      0.000      0.000              1/1      Object#find_largest
--------------------------------------------------------------------------------
                      0.052      0.000      0.000      0.052              1/1      Object#run_primes
  98.35%   0.00%      0.052      0.000      0.000      0.052                1      Object#find_primes
                      0.052      0.000      0.000      0.051              1/1      Array#select
--------------------------------------------------------------------------------
                      0.052      0.000      0.000      0.051              1/1      Object#find_primes
  98.34%   0.61%      0.052      0.000      0.000      0.051                1      Array#select
                      0.051      0.000      0.000      0.051        1000/1000      Object#is_prime
--------------------------------------------------------------------------------
                      0.051      0.000      0.000      0.051        1000/1000      Array#select
  97.74%   0.93%      0.051      0.000      0.000      0.051             1000      Object#is_prime
                      0.051      0.051      0.000      0.000        1000/1001      Integer#upto
--------------------------------------------------------------------------------
                      0.000      0.000      0.000      0.000           1/1001      Object#find_largest
                      0.051      0.051      0.000      0.000        1000/1001      Object#is_prime
  96.91%  96.91%      0.051      0.051      0.000      0.000             1001      Integer#upto
--------------------------------------------------------------------------------
                      0.001      0.000      0.000      0.001              1/1      Object#run_primes
   1.51%   0.00%      0.001      0.000      0.000      0.001                1      Object#make_random_array
                      0.001      0.000      0.000      0.000              1/1      Array#each_index
                      0.000      0.000      0.000      0.000              1/1      Class#new
--------------------------------------------------------------------------------
                      0.001      0.000      0.000      0.000              1/1      Object#make_random_array
   1.50%   0.56%      0.001      0.000      0.000      0.000                1      Array#each_index
                      0.000      0.000      0.000      0.000        1000/1000      Kernel#rand
--------------------------------------------------------------------------------
                      0.000      0.000      0.000      0.000        1000/1000      Array#each_index
   0.94%   0.72%      0.000      0.000      0.000      0.000             1000      Kernel#rand
                      0.000      0.000      0.000      0.000        1000/1000      Kernel#respond_to_missing?
--------------------------------------------------------------------------------
                      0.000      0.000      0.000      0.000        1000/1000      Kernel#rand
   0.22%   0.22%      0.000      0.000      0.000      0.000             1000      Kernel#respond_to_missing?
--------------------------------------------------------------------------------
                      0.000      0.000      0.000      0.000              1/1      Object#run_primes
   0.12%   0.02%      0.000      0.000      0.000      0.000                1      Object#find_largest
                      0.000      0.000      0.000      0.000           1/1001      Integer#upto
                      0.000      0.000      0.000      0.000              1/1      Array#first
--------------------------------------------------------------------------------
                      0.000      0.000      0.000      0.000              1/1      Object#make_random_array
   0.01%   0.00%      0.000      0.000      0.000      0.000                1      Class#new
                      0.000      0.000      0.000      0.000              1/1      Array#initialize
--------------------------------------------------------------------------------
                      0.000      0.000      0.000      0.000              1/1      Class#new
   0.01%   0.01%      0.000      0.000      0.000      0.000                1      Array#initialize
--------------------------------------------------------------------------------
                      0.000      0.000      0.000      0.000              1/1      Object#find_largest
   0.00%   0.00%      0.000      0.000      0.000      0.000                1      Array#first
</pre>
결과는 - - - 로 나뉘어진 여러 블록으로 이루어져 있습니다.

다음은 결과 표를 읽을 때 중요하게 보셔야 할 항목들입니다.
<table style="width: 100%; vertical-align: middle;">
<tbody>
<tr style="height: 72px;">
<td style="width: 10%; text-align: center; height: 72px;">
<h5>name</h5>
</td>
<td style="width: 88.1432%; height: 72px;">가장 중요한 부분입니다. 27번째 줄과 같이 <strong>%total</strong>, <strong>%self</strong> 값이 존재하는 줄의 <strong>name</strong>이 해당 블럭이 나타내는 메소드입니다. 그 블록은 해당 메소드를 설명하고 있다고 보시면 됩니다. 26-28번째 줄은&nbsp;<strong>Object#is_prime</strong><span class="crayon-p"> 메소드를 나타내고 있습니다.</span></td>
</tr>
<tr style="height: 72px;">
<td style="width: 10%; text-align: center; height: 72px;">
<h5>%self</h5>
</td>
<td style="width: 88.1432%; height: 72px;">전체 코드 블럭을 수행한 시간 중, 이 메소드 자체(자식 호출 제외)가 소요한 시간 비중을 나타냅니다.
이 값이 큰 메소드일수록 우리가 찾고있는 병목 메소드일 확률이 높습니다.</td>
</tr>
<tr style="height: 63.375px;">
<td style="width: 10%; text-align: center; height: 63.375px;">
<h5>self</h5>
</td>
<td style="width: 88.1432%; height: 63.375px;"><strong>%self</strong>와 비슷하지만 전체 시간과 상대적 비율이 아닌 이 메소드를 수행하는데 절대적으로 몇 초를 소요했는지 나타냅니다.</td>
</tr>
<tr style="height: 96px;">
<td style="width: 10%; text-align: center; height: 96px;">
<h5>calls</h5>
</td>
<td style="width: 88.1432%; height: 96px;">이 메소드가 몇 번 호출되었는지를 나타냅니다. <strong>해당 블럭에서 바로 부모가 호출한 횟수/전체 블럭에서 이 메소드가 호출된 총 횟수</strong>입니다.&nbsp;<strong><span class="crayon-t">Integer</span></strong><span class="crayon-p"><strong>#upto</strong> 메소드는 총 1,001회 호출되었는데,&nbsp;<strong><span class="crayon-t">Object</span>#is_prime</strong> 메소드에 의해 1,000번 (27번째 줄) <strong><span class="crayon-t">Object</span>#find_largest </strong>메소드에 의해 1번 (52번째 줄)호출된 것을 알 수 있습니다.</span></td>
</tr>
</tbody>
</table>
<h5></h5>
<h4>CallStackPrinter</h4>
전체 call stack을 html 형식으로 보여줍니다. 필요한 상황에 따라 node를 접고, 일정 값 이상의 %를 소요한 메소드들만 필터링하여 볼 수 있습니다. 각 node를 보면 <strong>A%(B%)</strong>와 같은 형식으로 표시되는데, 앞의 <strong>A</strong>는 위 <strong>GraphPrinter</strong>의 <strong>%self</strong>에 해당하는 값이고, <strong>B</strong>는 부모의가 호출한 자식 메소드들을 기준으로 소요한 시간의 비율입니다.

[caption id="attachment_698" align="aligncenter" width="463"]<a href="https://blog.dramancompany.com/wp-content/uploads/2016/11/Screen-Shot-2016-11-22-at-9.51.13-PM.png"><img class="wp-image-698 size-full" src="https://blog.dramancompany.com/wp-content/uploads/2016/11/Screen-Shot-2016-11-22-at-9.51.13-PM.png" alt="screen-shot-2016-11-22-at-9-51-13-pm" width="463" height="258"></a> CallStackPrinter 예시[/caption]
<h1><strong>성능 최적화 과정</strong></h1>
성능 최적화는 다음 6단계들로 이루어집니다.
매우 당연한 이야기일지라도 한단계라도 대충 했다간 잘못된 방향을 잡아 이 모든 과정이 결국 의미없는 시간낭비가 되어버릴 수 있습니다. 귀찮더라도 매 단계를 확실히 하고 가야 우리가 원하는 답을 찾을 수 있습니다.
<h4>1. 문제 정의</h4>
정확히 어떤 문제가 있는지, 왜 성능을 측정하고 최적화를 시도하려는지 정의합니다.
<h4>2. 단계 정의</h4>
문제가 되는 부분이 어떤 과정을 거쳐 동작하는지 하나 하나 명확하게 정의합니다. 이 정의가 명확해야 변수들을 제거할 수 있으며 올바른 성능 측정 방향을 세울 수 있습니다.
<h4>3. 성능 측정</h4>
문제라고 생각하는 코드의 성능을 측정합니다.
우선 성능 저해의 원인이라고 의심되어 변경해볼 변수(조작변인)을 남겨두고 나머지는 이 성능 측정에 영향을 주지 않은 상수(통제변인)를 확실히 나눠야 합니다. &nbsp;DB, 네트워크 상태와 같은 외부적인 요인부터 테스트에 사용하는 변수 등 내부적인 요인 등 모두 테스트 결과에 영향을 미치지 않도록 통제변인으로 만들어야 합니다. 물론 이런 요인들을 100% 완벽한 상수로 만들 수는 없기 때문에 최대한 영향도를 줄이기 위하여 충분히 많은 횟수를 반복해야 합니다. 이 과정을 조금이라도 어설프게 정의했다간, 뒤의 테스트들을 비교할 대상이 없어져 의미없는 시간 낭비가 되어버립니다.
조작변인과 통제변인을 정의하고 실험 환경을 준비했다면 같은 코드를 여러번 실행하고 각각 어느정도의 시간이 소요되었는지 기록합니다.
<h4>4. 분석</h4>
코드를 분석합니다. ruby-prof와 같은 프로파일링 툴을 이용하여 코드를 세세히 분석하고 어떤 메소드가 병목이 되고 있는지 감이 아닌 타당한 근거를 갖고 판단합니다.
<h4>5. 개선</h4>
병목이 되고있는 부분과 이유를 찾아냈으면 병목을 해결하여 더 좋은 성능을 낼 수 있도록 코드를 개선합니다.
<h4>6. 성능 비교</h4>
개선된 코드의 성능과 원래 코드의 성능을 비교해보고 어느정도의 성능이 향상되었는지 측정합니다. 만약 만족하지 못한 결과가 나왔을 경우에는 다시 분석 단계로 돌아갑니다.
<h1><strong>실제 사례</strong></h1>
앞서 말씀드린 Tool과, 최적화 과정은 드라마앤컴퍼니에서 실제로 자주 사용하고 있습니다. 이론보다는 실제 사용 사례가 좋을 것 같아 적당한 예를 사내 wiki에서 하나 가져왔습니다. 이는 제가 리멤버의 '연락처 지인찾기' 기능의 성능을 개선하며 실제로 정리했던 내용입니다. 간단하게 풀린 문제로 이 글의 예시로 좋을 것 같습니다. Wiki의 내용을 거의 그대로 복사하느라 문체가 다른 점 이해부탁드립니다 :)
<h4>문제 정의</h4>
<ul>
 	<li>'연락처 지인찾기' &nbsp;API에 연락처가 많은 (몇 천건) 회원이 요청할 경우 각 응답을 처리하는데 너무 늦어져 서버의 request queue가 다 차버리는 현상이 발생함.</li>
 	<li>'연락처 지인찾기'란 사용자 주소록의 휴대폰 번호 목록을 이용하여 리멤버 회원들 중 같은 전화번호를 사용하는 회원들을 찾는 과정이다.</li>
</ul>
<h4>단계 정의</h4>
연락처 지인 찾기 기능은 다음 단계들로 진행된다.
<ul>
 	<li>클라이언트에서 사용자 휴대폰 주소록의 전화번호 목록을 일정 단위로 잘라서 API 서버로 여러번 업로드</li>
 	<li>클라이언트에서 넘긴 raw 전화번호를 파싱</li>
 	<li>휴대전화번호 목록을 가지고 DB에서 같은 지역번호를 갖고 있는 리멤버 회원들을 찾음</li>
 	<li>DB에서 조회한 회원들 중 국가번호와 지역번호가 모두 같은 회원들을 찾음</li>
 	<li>일치하는 회원들의 목록을 반환</li>
</ul>
<h4>성능 측정</h4>
Ruby에서 기본적으로 <strong>Benchmark</strong> 모듈을 이용하여 성능을 측정하고 &nbsp;<strong>ruby-prof</strong>를 이용하여 성능을 분석한다. <strong>검색 대상&nbsp;사용자의 수</strong>와 <strong>전화번호-사용자 매칭률</strong>을 두 변수로 정의하고 성능을 측정하며 비교한다. 사용자 수는5, 10, 20, 30, 50, 100, 150, 500에 대하여 진행하고 매칭률은 100%, 50%, 10%로 나누어 측정한다. Profiling은 150 user, 50%의 매칭률에 대해서만 진행한다. 측정하는 코드는 다음과 같다.
<pre class="plain:false lang:ruby decode:true">require 'benchmark'

class Test
  class &lt;&lt; self
    def ready
      @users = Zeus::User::Entity.where.not(national_phone: '').limit(1_000).load
    end

    def run
      run_single 5, 1
      run_single 5, 0.5
      run_single 5, 0.1

      run_single 10, 1
      run_single 10, 0.5
      run_single 10, 0.1

      run_single 20, 1
      run_single 20, 0.5
      run_single 20, 0.1

      run_single 30, 1
      run_single 30, 0.5
      run_single 30, 0.1

      run_single 50, 1
      run_single 50, 0.5
      run_single 50, 0.1

      run_single 100, 1
      run_single 100, 0.5
      run_single 100, 0.1

      run_single 150, 1
      run_single 150, 0.5
      run_single 150, 0.1

      run_single 500, 1
      run_single 500, 0.5
      run_single 500, 0.1

      run_single 1_000, 1
      run_single 1_000, 0.5
      run_single 1_000, 0.1

      nil
    end

    def run_single(size, hit_rate = 1)
      users = @users.sample size
      phones = users.map do |u|
          if u.national_phone.present?
            Contact::PhoneNumber.new(u.national_phone)
          end
        end.compact

      # 전화번호 가지고 있는 비율
      phones = phones.sample(phones.size * hit_rate)

      Benchmark.bm do |x|
        x.report("User size: #{size}, Hit rate: #{hit_rate}") do
          users = users.select do |user|
            phones.any? { |phone| user.mobile == phone }
          end
        end
      end
    end

    def run_prof
      users = @users.sample 150
      phones = users.map do |u|
            if u.national_phone.present?
              Contact::PhoneNumber.new(u.national_phone)
            end
          end.compact
      # 전화번호 가지고 있는 비율
      phones = phones.sample(phones.size * 0.5)

      result = RubyProf.profile do
        users = users.select do |user|
          phones.any? { |phone| user.mobile == phone }
        end
      end

      # print a graph profile to text
      File.open "#{Rails.root}/tmp/bulk-upload-profile-graph.html", 'w' do |file|
        RubyProf::GraphHtmlPrinter.new(result).print(file)
      end
      File.open "#{Rails.root}/tmp/bulk-upload-profile-stack.html", 'w' do |file|
        RubyProf::CallStackPrinter.new(result).print(file)
      end
    end

  end
end
Test.ready
</pre>
<h4>기존 성능</h4>
다음은 기존 코드로 성능 테스트를 진행한 결과이다.
<table class="wrapped confluenceTable">
<colgroup>
<col>
<col>
<col>
<col>
<col>
<col></colgroup>
<tbody>
<tr>
<td class="confluenceTd">
<p style="text-align: center;" align="center"><strong>User size</strong></p>
</td>
<td class="confluenceTd">
<p style="text-align: center;" align="center"><strong>Hit rate</strong></p>
</td>
<td class="confluenceTd">
<p style="text-align: center;" align="center"><strong>user</strong></p>
</td>
<td class="confluenceTd">
<p style="text-align: center;" align="center"><strong>system</strong></p>
</td>
<td class="confluenceTd">
<p style="text-align: center;" align="center"><strong>total</strong></p>
</td>
<td class="confluenceTd">
<p style="text-align: center;" align="center"><strong>real time</strong></p>
</td>
</tr>
<tr>
<td class="confluenceTd">
<p style="text-align: right;" align="right">5</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">1</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.040000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.040000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.034104</p>
</td>
</tr>
<tr>
<td class="confluenceTd">
<p style="text-align: right;" align="right">5</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.5</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.020000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.020000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.018707</p>
</td>
</tr>
<tr>
<td class="confluenceTd">
<p style="text-align: right;" align="right">5</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.1</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000003</p>
</td>
</tr>
<tr>
<td class="confluenceTd">
<p style="text-align: right;" align="right">10</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">1</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.130000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.00000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.130000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.129068</p>
</td>
</tr>
<tr>
<td class="confluenceTd">
<p style="text-align: right;" align="right">10</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.5</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.090000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.00000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.090000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.094217</p>
</td>
</tr>
<tr>
<td class="confluenceTd">
<p style="text-align: right;" align="right">10</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.1</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.020000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.00000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.020000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.021157</p>
</td>
</tr>
<tr>
<td class="confluenceTd">
<p style="text-align: right;" align="right">20</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">1</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.510000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.00000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.510000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.513110</p>
</td>
</tr>
<tr>
<td class="confluenceTd">
<p style="text-align: right;" align="right">20</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.5</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.360000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.00000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.360000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.356309</p>
</td>
</tr>
<tr>
<td class="confluenceTd">
<p style="text-align: right;" align="right">20</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.1</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.080000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.00000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.080000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.086764</p>
</td>
</tr>
<tr>
<td class="confluenceTd">
<p style="text-align: right;" align="right">30</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">1</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">1.070000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.01000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">1.080000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">1.072212</p>
</td>
</tr>
<tr>
<td class="confluenceTd">
<p style="text-align: right;" align="right">30</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.5</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.800000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.00000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.800000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.807687</p>
</td>
</tr>
<tr>
<td class="confluenceTd">
<p style="text-align: right;" align="right">30</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.1</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.190000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.00000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.190000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.199311</p>
</td>
</tr>
<tr>
<td class="confluenceTd">
<p style="text-align: right;" align="right">50</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">1</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">2.900000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.01000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">2.910000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">2.907888</p>
</td>
</tr>
<tr>
<td class="confluenceTd">
<p style="text-align: right;" align="right">50</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.5</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">2.130000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.00000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">2.130000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">2.136653</p>
</td>
</tr>
<tr>
<td class="confluenceTd">
<p style="text-align: right;" align="right">50</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.1</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.550000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.00000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.550000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.546068</p>
</td>
</tr>
<tr>
<td class="confluenceTd">
<p style="text-align: right;" align="right">100</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">1</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">11.780000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.030000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">11.810000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">11.838261</p>
</td>
</tr>
<tr>
<td class="confluenceTd">
<p style="text-align: right;" align="right">100</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.5</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">8.570000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.020000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">8.590000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">8.626450</p>
</td>
</tr>
<tr>
<td class="confluenceTd">
<p style="text-align: right;" align="right">100</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.1</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">2.150000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.010000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">2.160000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">2.157522</p>
</td>
</tr>
<tr>
<td class="confluenceTd">
<p style="text-align: right;" align="right">150</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">1</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">26.100000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.060000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">26.160000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">26.241357</p>
</td>
</tr>
<tr>
<td class="confluenceTd">
<p style="text-align: right;" align="right">150</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.5</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">19.310000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.050000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">19.360000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">19.406512</p>
</td>
</tr>
<tr>
<td class="confluenceTd">
<p style="text-align: right;" align="right">150</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.1</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">4.880000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.010000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">4.890000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">4.908961</p>
</td>
</tr>
<tr>
<td class="confluenceTd">
<p style="text-align: right;" align="right">500</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">1</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">291.680000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">1.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">292.680000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">294.109574</p>
</td>
</tr>
<tr>
<td class="confluenceTd">
<p style="text-align: right;" align="right">500</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.5</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">220.220000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.890000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">221.110000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">222.306764</p>
</td>
</tr>
<tr>
<td class="confluenceTd">
<p style="text-align: right;" align="right">500</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.1</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">56.030000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.220000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">56.250000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">56.555782</p>
</td>
</tr>
</tbody>
</table>
<a href="https://blog.dramancompany.com/wp-content/uploads/2016/11/image2016-11-8-14-35-54.png"><img class="size-full wp-image-700 alignnone" src="https://blog.dramancompany.com/wp-content/uploads/2016/11/image2016-11-8-14-35-54.png" alt="image2016-11-8-14-35-54" width="279" height="322"></a> <a href="https://blog.dramancompany.com/wp-content/uploads/2016/11/image2016-11-8-14-35-59.png"><img class="size-full wp-image-701 alignnone" src="https://blog.dramancompany.com/wp-content/uploads/2016/11/image2016-11-8-14-35-59.png" alt="image2016-11-8-14-35-59" width="276" height="337"></a> <a href="https://blog.dramancompany.com/wp-content/uploads/2016/11/image2016-11-8-14-36-2.png"><img class="size-full wp-image-702 alignnone" src="https://blog.dramancompany.com/wp-content/uploads/2016/11/image2016-11-8-14-36-2.png" alt="image2016-11-8-14-36-2" width="268" height="337"></a> <a href="https://blog.dramancompany.com/wp-content/uploads/2016/11/image2016-11-8-14-36-5.png"><img class="size-full wp-image-703 alignnone" src="https://blog.dramancompany.com/wp-content/uploads/2016/11/image2016-11-8-14-36-5.png" alt="image2016-11-8-14-36-5" width="276" height="337"></a> <a href="https://blog.dramancompany.com/wp-content/uploads/2016/11/image2016-11-8-15-34-28.png"><img class="size-full wp-image-704 alignnone" src="https://blog.dramancompany.com/wp-content/uploads/2016/11/image2016-11-8-15-34-28.png" alt="image2016-11-8-15-34-28" width="548" height="306"></a>
테스트 결과를 보면 전화번호로 검색된 리멤버 사용자 수와 거의 비례하게 소요 시간이 증가하며, 현재 사용하고 있는 사용자 수가 그리 많지 않음에도 매우 오랜 시간이 걸린다.
<h4>분석</h4>
ruby-prof로 상세하게 call-stack 등 어느 메소드에서 많은 시간을 소요했는지 분석해보면 다음과 같다.

<a href="https://blog.dramancompany.com/wp-content/uploads/2016/11/image2016-11-8-15-36-4.png"><img class="aligncenter size-full wp-image-705" src="https://blog.dramancompany.com/wp-content/uploads/2016/11/image2016-11-8-15-36-4.png" alt="image2016-11-8-15-36-4" width="994" height="572"></a><a href="https://blog.dramancompany.com/wp-content/uploads/2016/11/image2016-11-8-15-36-19.png"><img class="aligncenter size-full wp-image-706" src="https://blog.dramancompany.com/wp-content/uploads/2016/11/image2016-11-8-15-36-19.png" alt="image2016-11-8-15-36-19" width="673" height="508"></a>

가장 많은 시간을 소요한 부분은 전화번호 파싱을 담당하는 gem인 <strong>Phonelib의</strong>&nbsp;<strong>Phonelib::Core#</strong><strong>parse&nbsp;</strong>부분임을 알 수 있다. API에서는 Phonelib을 이용한 파싱을 2번 사용하고 있다.
<ul>
 	<li>클라이언트에서 넘겨준 raw한 전화번호를 파싱하여 국가코드/지역번호로 나누기 위해서</li>
 	<li>사용자 연락처를 가져오기 위하여<strong>&nbsp;user.mobile</strong> 메소드를 호출하여 사용자 번호를 <strong>PhoneNumber</strong>&nbsp;클래스로 파싱할 때</li>
</ul>
1번 경우는 올바른 비교를 위하여 필수적이지만, 2번 경우는 이미 테이블에 국가코드/지역번호로 나뉘어져 저장되어있기 때문에 다시 <strong>Phonelib</strong>을 이용해 파싱하는 과정은 불필요한 과정이다. 따라서 해당 부분을 제거하여 성능을 개선해본다.
<h4>개선</h4>
개선하여 변경한 코드는 다음과 같다.
<pre class="plain:false lang:ruby decode:true"># 기존
phones.any? { |phone| user.mobile == phone }

# 개선
phones.any? { |phone| user.international_code == phone.international_code &amp;&amp; user.national_phone == phone.national_number }</pre>
User::Entity에서 mobile을 불러 Phonelib를 호출 하는 부분을 제거하고 바로 값을 비교하도록 수정했다.
그로 인하여 변경된 테스트 코드는 다음과 같다.
<pre class="plain:false lang:ruby decode:true"># 위와 같음..
    def run_single(size, hit_rate = 1)
      users = @users.sample size
      phones = users.map do |u|
          if u.national_phone.present?
            Contact::PhoneNumber.new(u.national_phone)
          end
        end.compact

      # 전화번호 가지고 있는 비율
      phones = phones.sample(phones.size * hit_rate)

      Benchmark.bm do |x|
        x.report("User size: #{size}, Hit rate: #{hit_rate}") do
          users = users.select do |user|
            # phones.any? { |phone| user.mobile == phone }
            phones.any? { |phone| user.international_code == phone.international_code &amp;&amp; user.national_phone == phone.national_number }
          end
        end
      end
    end
# 위와 같음..</pre>
그리고 개선 후 성능 측정 결과는 다음과 같다.
<table class="confluenceTable wrapped">
<colgroup>
<col>
<col>
<col>
<col>
<col>
<col></colgroup>
<tbody>
<tr>
<td class="confluenceTd">
<p style="text-align: center;" align="center"><strong>User size</strong></p>
</td>
<td class="confluenceTd">
<p style="text-align: center;" align="center"><strong>Hit rate</strong></p>
</td>
<td class="confluenceTd">
<p style="text-align: center;" align="center"><strong>user</strong></p>
</td>
<td class="confluenceTd">
<p style="text-align: center;" align="center"><strong>system</strong></p>
</td>
<td class="confluenceTd">
<p style="text-align: center;" align="center"><strong>total</strong></p>
</td>
<td class="confluenceTd">
<p style="text-align: center;" align="center"><strong>real time</strong></p>
</td>
</tr>
<tr>
<td class="confluenceTd">
<p style="text-align: right;" align="right">5</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">1</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000177</p>
</td>
</tr>
<tr>
<td class="confluenceTd">
<p style="text-align: right;" align="right">5</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.5</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000147</p>
</td>
</tr>
<tr>
<td class="confluenceTd">
<p style="text-align: right;" align="right">5</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.1</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000003</p>
</td>
</tr>
<tr>
<td class="confluenceTd">
<p style="text-align: right;" align="right">10</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">1</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000197</p>
</td>
</tr>
<tr>
<td class="confluenceTd">
<p style="text-align: right;" align="right">10</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.5</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000228</p>
</td>
</tr>
<tr>
<td class="confluenceTd">
<p style="text-align: right;" align="right">10</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.1</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000170</p>
</td>
</tr>
<tr>
<td class="confluenceTd">
<p style="text-align: right;" align="right">20</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">1</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000426</p>
</td>
</tr>
<tr>
<td class="confluenceTd">
<p style="text-align: right;" align="right">20</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.5</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000432</p>
</td>
</tr>
<tr>
<td class="confluenceTd">
<p style="text-align: right;" align="right">20</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.1</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000316</p>
</td>
</tr>
<tr>
<td class="confluenceTd">
<p style="text-align: right;" align="right">30</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">1</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000952</p>
</td>
</tr>
<tr>
<td class="confluenceTd">
<p style="text-align: right;" align="right">30</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.5</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000856</p>
</td>
</tr>
<tr>
<td class="confluenceTd">
<p style="text-align: right;" align="right">30</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.1</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000484</p>
</td>
</tr>
<tr>
<td class="confluenceTd">
<p style="text-align: right;" align="right">50</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">1</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.001935</p>
</td>
</tr>
<tr>
<td class="confluenceTd">
<p style="text-align: right;" align="right">50</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.5</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.001270</p>
</td>
</tr>
<tr>
<td class="confluenceTd">
<p style="text-align: right;" align="right">50</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.1</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000728</p>
</td>
</tr>
<tr>
<td class="confluenceTd">
<p style="text-align: right;" align="right">100</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">1</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.010000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.010000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.005805</p>
</td>
</tr>
<tr>
<td class="confluenceTd">
<p style="text-align: right;" align="right">100</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.5</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.010000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.010000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.004177</p>
</td>
</tr>
<tr>
<td class="confluenceTd">
<p style="text-align: right;" align="right">100</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.1</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.001609</p>
</td>
</tr>
<tr>
<td class="confluenceTd">
<p style="text-align: right;" align="right">150</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">1</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.010000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.010000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.011655</p>
</td>
</tr>
<tr>
<td class="confluenceTd">
<p style="text-align: right;" align="right">150</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.5</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.008360</p>
</td>
</tr>
<tr>
<td class="confluenceTd">
<p style="text-align: right;" align="right">150</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.1</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.010000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.010000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.002741</p>
</td>
</tr>
<tr>
<td class="confluenceTd">
<p style="text-align: right;" align="right">500</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">1</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.120000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.120000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.121817</p>
</td>
</tr>
<tr>
<td class="confluenceTd">
<p style="text-align: right;" align="right">500</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.5</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.090000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.090000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.087188</p>
</td>
</tr>
<tr>
<td class="confluenceTd">
<p style="text-align: right;" align="right">500</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.1</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.030000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.000000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.030000</p>
</td>
<td class="confluenceTd">
<p style="text-align: right;" align="right">0.023976</p>
</td>
</tr>
</tbody>
</table>
<a href="https://blog.dramancompany.com/wp-content/uploads/2016/11/image2016-11-8-15-45-29.png"><img class="alignnone size-full wp-image-707" src="https://blog.dramancompany.com/wp-content/uploads/2016/11/image2016-11-8-15-45-29.png" alt="image2016-11-8-15-45-29" width="287" height="323"></a><a href="https://blog.dramancompany.com/wp-content/uploads/2016/11/image2016-11-8-15-45-25.png"><img class="alignnone size-full wp-image-708" src="https://blog.dramancompany.com/wp-content/uploads/2016/11/image2016-11-8-15-45-25.png" alt="image2016-11-8-15-45-25" width="282" height="337"></a>
<h4>성능 비교</h4>
<table class="confluenceTable wrapped">
<colgroup>
<col>
<col>
<col>
<col>
<col></colgroup>
<tbody>
<tr>
<td class="confluenceTd" style="text-align: center;">User size</td>
<td class="confluenceTd" style="text-align: center;">Hit rate</td>
<td class="confluenceTd" style="text-align: center;">before time</td>
<td class="confluenceTd" style="text-align: center;">after time</td>
<td class="confluenceTd" style="text-align: center;">비교(%)</td>
</tr>
<tr>
<td class="confluenceTd" style="text-align: right;">5</td>
<td class="confluenceTd" style="text-align: right;">1</td>
<td class="confluenceTd" style="text-align: right;">0.034104</td>
<td class="confluenceTd" style="text-align: right;">0.000177</td>
<td class="confluenceTd" style="text-align: right;">0.5190007037</td>
</tr>
<tr>
<td class="confluenceTd" style="text-align: right;">5</td>
<td class="confluenceTd" style="text-align: right;">0.5</td>
<td class="confluenceTd" style="text-align: right;">0.018707</td>
<td class="confluenceTd" style="text-align: right;">0.000147</td>
<td class="confluenceTd" style="text-align: right;">0.7858021062</td>
</tr>
<tr>
<td class="confluenceTd" style="text-align: right;">5</td>
<td class="confluenceTd" style="text-align: right;">0.1</td>
<td class="confluenceTd" style="text-align: right;">0.000003</td>
<td class="confluenceTd" style="text-align: right;">0.000003</td>
<td class="confluenceTd" style="text-align: right;">100</td>
</tr>
<tr>
<td class="confluenceTd" style="text-align: right;">10</td>
<td class="confluenceTd" style="text-align: right;">1</td>
<td class="confluenceTd" style="text-align: right;">0.129068</td>
<td class="confluenceTd" style="text-align: right;">0.000197</td>
<td class="confluenceTd" style="text-align: right;">0.1526327207</td>
</tr>
<tr>
<td class="confluenceTd" style="text-align: right;">10</td>
<td class="confluenceTd" style="text-align: right;">0.5</td>
<td class="confluenceTd" style="text-align: right;">0.094217</td>
<td class="confluenceTd" style="text-align: right;">0.000228</td>
<td class="confluenceTd" style="text-align: right;">0.2419945445</td>
</tr>
<tr>
<td class="confluenceTd" style="text-align: right;">10</td>
<td class="confluenceTd" style="text-align: right;">0.1</td>
<td class="confluenceTd" style="text-align: right;">0.021157</td>
<td class="confluenceTd" style="text-align: right;">0.00017</td>
<td class="confluenceTd" style="text-align: right;">0.8035165666</td>
</tr>
<tr>
<td class="confluenceTd" style="text-align: right;">20</td>
<td class="confluenceTd" style="text-align: right;">1</td>
<td class="confluenceTd" style="text-align: right;">0.51311</td>
<td class="confluenceTd" style="text-align: right;">0.000426</td>
<td class="confluenceTd" style="text-align: right;">0.08302313344</td>
</tr>
<tr>
<td class="confluenceTd" style="text-align: right;">20</td>
<td class="confluenceTd" style="text-align: right;">0.5</td>
<td class="confluenceTd" style="text-align: right;">0.356309</td>
<td class="confluenceTd" style="text-align: right;">0.000432</td>
<td class="confluenceTd" style="text-align: right;">0.1212430783</td>
</tr>
<tr>
<td class="confluenceTd" style="text-align: right;">20</td>
<td class="confluenceTd" style="text-align: right;">0.1</td>
<td class="confluenceTd" style="text-align: right;">0.086764</td>
<td class="confluenceTd" style="text-align: right;">0.000316</td>
<td class="confluenceTd" style="text-align: right;">0.3642063529</td>
</tr>
<tr>
<td class="confluenceTd" style="text-align: right;">30</td>
<td class="confluenceTd" style="text-align: right;">1</td>
<td class="confluenceTd" style="text-align: right;">1.072212</td>
<td class="confluenceTd" style="text-align: right;">0.000952</td>
<td class="confluenceTd" style="text-align: right;">0.08878841125</td>
</tr>
<tr>
<td class="confluenceTd" style="text-align: right;">30</td>
<td class="confluenceTd" style="text-align: right;">0.5</td>
<td class="confluenceTd" style="text-align: right;">0.807687</td>
<td class="confluenceTd" style="text-align: right;">0.000856</td>
<td class="confluenceTd" style="text-align: right;">0.1059816488</td>
</tr>
<tr>
<td class="confluenceTd" style="text-align: right;">30</td>
<td class="confluenceTd" style="text-align: right;">0.1</td>
<td class="confluenceTd" style="text-align: right;">0.199311</td>
<td class="confluenceTd" style="text-align: right;">0.000484</td>
<td class="confluenceTd" style="text-align: right;">0.242836572</td>
</tr>
<tr>
<td class="confluenceTd" style="text-align: right;">50</td>
<td class="confluenceTd" style="text-align: right;">1</td>
<td class="confluenceTd" style="text-align: right;">2.907888</td>
<td class="confluenceTd" style="text-align: right;">0.001935</td>
<td class="confluenceTd" style="text-align: right;">0.06654314059</td>
</tr>
<tr>
<td class="confluenceTd" style="text-align: right;">50</td>
<td class="confluenceTd" style="text-align: right;">0.5</td>
<td class="confluenceTd" style="text-align: right;">2.136653</td>
<td class="confluenceTd" style="text-align: right;">0.00127</td>
<td class="confluenceTd" style="text-align: right;">0.05943875772</td>
</tr>
<tr>
<td class="confluenceTd" style="text-align: right;">50</td>
<td class="confluenceTd" style="text-align: right;">0.1</td>
<td class="confluenceTd" style="text-align: right;">0.546068</td>
<td class="confluenceTd" style="text-align: right;">0.000728</td>
<td class="confluenceTd" style="text-align: right;">0.1333167298</td>
</tr>
<tr>
<td class="confluenceTd" style="text-align: right;">100</td>
<td class="confluenceTd" style="text-align: right;">1</td>
<td class="confluenceTd" style="text-align: right;">11.838261</td>
<td class="confluenceTd" style="text-align: right;">0.005805</td>
<td class="confluenceTd" style="text-align: right;">0.04903591837</td>
</tr>
<tr>
<td class="confluenceTd" style="text-align: right;">100</td>
<td class="confluenceTd" style="text-align: right;">0.5</td>
<td class="confluenceTd" style="text-align: right;">8.62645</td>
<td class="confluenceTd" style="text-align: right;">0.004177</td>
<td class="confluenceTd" style="text-align: right;">0.04842084519</td>
</tr>
<tr>
<td class="confluenceTd" style="text-align: right;">100</td>
<td class="confluenceTd" style="text-align: right;">0.1</td>
<td class="confluenceTd" style="text-align: right;">2.157522</td>
<td class="confluenceTd" style="text-align: right;">0.001609</td>
<td class="confluenceTd" style="text-align: right;">0.07457629633</td>
</tr>
<tr>
<td class="confluenceTd" style="text-align: right;">150</td>
<td class="confluenceTd" style="text-align: right;">1</td>
<td class="confluenceTd" style="text-align: right;">26.241357</td>
<td class="confluenceTd" style="text-align: right;">0.011655</td>
<td class="confluenceTd" style="text-align: right;">0.04441462383</td>
</tr>
<tr>
<td class="confluenceTd" style="text-align: right;">150</td>
<td class="confluenceTd" style="text-align: right;">0.5</td>
<td class="confluenceTd" style="text-align: right;">19.406512</td>
<td class="confluenceTd" style="text-align: right;">0.00836</td>
<td class="confluenceTd" style="text-align: right;">0.0430783234</td>
</tr>
<tr>
<td class="confluenceTd" style="text-align: right;">150</td>
<td class="confluenceTd" style="text-align: right;">0.1</td>
<td class="confluenceTd" style="text-align: right;">4.908961</td>
<td class="confluenceTd" style="text-align: right;">0.002741</td>
<td class="confluenceTd" style="text-align: right;">0.05583666279</td>
</tr>
<tr>
<td class="confluenceTd" style="text-align: right;">500</td>
<td class="confluenceTd" style="text-align: right;">1</td>
<td class="confluenceTd" style="text-align: right;">294.109574</td>
<td class="confluenceTd" style="text-align: right;">0.121817</td>
<td class="confluenceTd" style="text-align: right;">0.04141891688</td>
</tr>
<tr>
<td class="confluenceTd" style="text-align: right;">500</td>
<td class="confluenceTd" style="text-align: right;">0.5</td>
<td class="confluenceTd" style="text-align: right;">222.306764</td>
<td class="confluenceTd" style="text-align: right;">0.087188</td>
<td class="confluenceTd" style="text-align: right;">0.03921967934</td>
</tr>
<tr>
<td class="confluenceTd" style="text-align: right;">500</td>
<td class="confluenceTd" style="text-align: right;">0.1</td>
<td class="confluenceTd" style="text-align: right;">56.555782</td>
<td class="confluenceTd" style="text-align: right;">0.023976</td>
<td class="confluenceTd" style="text-align: right;">0.04239354342</td>
</tr>
</tbody>
</table>
표만봐도 알 수 있듯, 엄청난 효과를 가지고 시간이 단축되었음을 알 수 있다.

<a href="https://blog.dramancompany.com/wp-content/uploads/2016/11/image2016-11-8-15-54-18.png"><img class="alignnone size-full wp-image-709" src="https://blog.dramancompany.com/wp-content/uploads/2016/11/image2016-11-8-15-54-18.png" alt="image2016-11-8-15-54-18" width="581" height="332"></a>
<h1><strong>끝내며</strong></h1>
Ruby 코드에서 가장 많이 사용하는 성능 최적화 툴들과, 성능 최적화 단계들 그리고 실제 예시에 대하여 살펴보았습니다. ruby-prof는 여기에 적은 것보다 훨씬 더 다양한 기능들(다양한 값의 측정, Rails 지원, Multi-thread 지원 등)을 제공하고 있습니다. 필요한 상황에 맞춰서 더 용이하게 사용하실 수 있습니다.
또한 위 tool들외에도 드라마앤컴퍼니에서는 AWS cloudwatch, New Relic, ELK 등 다양한 tool을 이용하여 실시간+사후 성능 모니터링을 진행하고 있습니다. 다음 글에서는 이번 글의 예시보다 조금 더 복잡했던 Paperclip + AWS S3의 성능 튜닝에 대해서 다뤄보겠습니다 :D]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>693</wp:post_id>
		<wp:post_date><![CDATA[2016-11-28 12:25:19]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-11-28 03:25:19]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-02-23 23:32:09]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-02-23 14:32:09]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[ruby-%ec%bd%94%eb%93%9c-%ec%84%b1%eb%8a%a5-%ec%b5%9c%ec%a0%81%ed%99%94-feat-ruby-prof-benchmark]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="benchmark"><![CDATA[Benchmark]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[Rails]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="post_tag" nicename="ruby-prof"><![CDATA[ruby-prof]]></category>
		<category domain="category" nicename="develop"><![CDATA[Tech]]></category>
		<category domain="post_tag" nicename="%eb%a0%88%ec%9d%bc%ec%a6%88"><![CDATA[레일즈]]></category>
		<category domain="post_tag" nicename="%eb%a3%a8%eb%b9%84"><![CDATA[루비]]></category>
		<category domain="post_tag" nicename="%ec%84%b1%eb%8a%a5"><![CDATA[성능]]></category>
		<category domain="post_tag" nicename="%ec%b5%9c%ec%a0%81%ed%99%94"><![CDATA[최적화]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[4]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_8e538411f90b2af5780c50bd35b39d45]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[right-sidebar]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_slogan]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_subslogan]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_header_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_scroll_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_bottom_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_footer_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_view_post_info]]></wp:meta_key>
		<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_post_icons]]></wp:meta_key>
		<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729286508;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:966;}i:1;a:1:{s:2:"id";i:1416;}i:2;a:1:{s:2:"id";i:2174;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_single_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:17:{s:8:"subtitle";s:0:"";s:6:"format";s:8:"standard";s:5:"video";s:0:"";s:7:"gallery";s:0:"";s:11:"source_name";s:0:"";s:10:"source_url";s:0:"";s:8:"via_name";s:0:"";s:7:"via_url";s:0:"";s:8:"override";a:1:{i:0;a:11:{s:18:"single_blog_custom";s:0:"";s:7:"sidebar";s:0:"";s:14:"second_sidebar";s:0:"";s:14:"share_position";s:0:"";s:17:"share_float_style";s:0:"";s:16:"post_date_format";s:0:"";s:23:"post_date_format_custom";s:0:"";s:21:"post_reading_time_wpm";s:0:"";s:20:"zoom_button_out_step";s:1:"1";s:19:"zoom_button_in_step";s:1:"1";s:17:"number_popup_post";s:1:"1";}}s:14:"image_override";a:1:{i:0;a:2:{s:26:"single_post_thumbnail_size";s:0:"";s:24:"single_post_gallery_size";s:0:"";}}s:22:"trending_post_position";s:0:"";s:19:"trending_post_label";s:0:"";s:20:"sponsored_post_label";s:0:"";s:19:"sponsored_post_name";s:0:"";s:18:"sponsored_post_url";s:0:"";s:19:"sponsored_post_logo";s:0:"";s:19:"sponsored_post_desc";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle_flag]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1910]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_format_gallery_images]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:2:"id";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[아름다운 모델 구조를 찾아서]]></title>
		<link>https://blog.dramancompany.com/2017/03/%ec%95%84%eb%a6%84%eb%8b%a4%ec%9a%b4-%eb%aa%a8%eb%8d%b8-%ea%b5%ac%ec%a1%b0%eb%a5%bc-%ec%b0%be%ec%95%84%ec%84%9c/</link>
		<pubDate>Tue, 21 Mar 2017 07:29:46 +0000</pubDate>
		<dc:creator><![CDATA[rfrost]]></dc:creator>
		<guid isPermaLink="false">http://blog.dramancompany.com/?p=749</guid>
		<description></description>
		<content:encoded><![CDATA[어떤 소프트웨어든 OOP 기반이라면 모델 구조를 설계하는 것부터 시작합니다. 모델이라 함은 소프트웨어를 Object-Oriented로 만들기 위해 현실에 존재하는 개념을 묶은 객체를 의미합니다. 모델은 소프트웨어를 구성하는 작으면서도 근본적인 단위이기 때문에 처음 정의하는 것에 따라 구현방향과 성능에 영향을 미칩니다. 따라서 상황에 적절한 모델을 설계하고 활용하는 것이 중요합니다.

이번에 리멤버에서 메신저 기능을 추가하면서 지금까지와는 다른 속성의 모델들이 추가되었습니다. 자연히 상황에 따라 다르게 활용할 수 있는 유연한 모델 구조가 필요했고, 많은 리팩토링을 하였습니다. 이번 포스팅에서는 서비스를 만들면 누구나 하는, 사소하지만 중요한 모델에 대한 고민을, 안드로이드 클라이언트 개발자의 시선에서 나누려고 합니다.

&nbsp;

<hr>

<h1>시작하기</h1>
Card 라는 명함 모델이 하나 있다고 합시다. 이제부터 다양한 상황에 따라 발전시키면서 어떻게 모델이 진화하는가 살펴보겠습니다.
<pre class="lang:java decode:true" title="Card">public class Card {
    private long id;
    private String name;
    private String mobile;
    private String address;
    private String email;
    private String company;
    private String position;
    private Date createdAt;
    private Date updatedAt;
}</pre>
&nbsp;
<h3>1. 로컬에서만 돌아가는 서비스</h3>
로컬에서만 비즈니스 로직이 돌아가는 서비스는 구현한 모델에 따로 손을 대지 않고 바로 사용할 수 있습니다.

&nbsp;
<h3>2. API를 호출하는 서비스</h3>
이제 서비스가 로컬에서만 돌아가지 않고 서버를 이용하게 되었습니다. 그러면서 Card 모델을 사용하는 API가 추가되었습니다. 스펙은 Json으로 가정하여 다음과 같습니다.
<pre class="lang:default decode:true" title="Card API 스팩">{"card":{
    "id": 1,
    "name": "이승민",
    "mobile": "01012341234",
    "address": "서울시 ...",
    "email": "1234@dramancompany.com",
    "company": "드라마앤컴퍼니",
    "position": "안드로이드 개발자",
    "created_at": "2015-04-01T10:00:00.000+09:00",
    "updated_at": "2015-04-01T10:00:00.000+09:00"
    }
}</pre>
&nbsp;

Card를 받아오거나 Parameter로 보내는 등의 작업을 하기 위해서는 Card 모델의 변경이 필요합니다. 아직은 복잡한 비즈니스 로직이 없기 때문에 최대한 하나의 모델로 해결하고 싶습니다. Google의 Gson Library를 이용하여 기존 Card 모델로 API까지 사용할 수 있도록 개선합니다.
<pre class="lang:java decode:true" title="Card with Gson">public class Card {
    @SerializedName("id")
    private long id;

    @SerializedName("name")
    private String name;

    @SerializedName("mobile")
    private String mobile;

    @SerializedName("address")
    private String address;

    @SerializedName("email")
    private String email;

    @SerializedName("company")
    private String company;

    @SerializedName("position")
    private String position;

    @SerializedName("created_at")
    private Date createdAt;

    @SerializedName("update_at")
    private Date updatedAt;
}</pre>
[caption id="attachment_763" align="aligncenter" width="291"]<a href="https://blog.dramancompany.com/wp-content/uploads/2017/03/스크린샷-2017-03-23-오전-11.03.06.png"><img class="size-full wp-image-763" src="https://blog.dramancompany.com/wp-content/uploads/2017/03/스크린샷-2017-03-23-오전-11.03.06.png" alt="" width="291" height="88"></a> Gson Annotation을 이용하여 하나의 모델로 API 응답을 받아온다.[/caption]

&nbsp;
<h3>3. 로컬DB를 사용하는 서비스</h3>
인터넷이 연결되어있지 않아도 서비스를 사용할 수 있도록 해달라는 요구사항이 왔습니다. 서버에서 받아온 명함들을 로컬DB에 저장해야 합니다. 역시 아직은 복잡한 로직이 없기 때문에 최대한 하나의 모델로 해결하고 싶습니다. 이제 API, 비즈니스, 로컬DB에서 모두 사용가능한 모델로 개선해야 합니다. 로컬DB로 RDB를 사용하면 ORM을 이용하여 DB 스키마를 클래스로 변환해 모델로 바로 활용할 수 있습니다. 안드로이드 ORM 프레임워크 중 하나인 GreenDAO를 사용하여 개선해보겠습니다.
<pre class="lang:java decode:true" title="Card with Gson and greenDAO">@Entity
public class Card {
    @Id
    @SerializedName("id")
    private long id;

    @SerializedName("name")
    private String name;

    @SerializedName("mobile")
    private String mobile;

    @SerializedName("address")
    private String address;

    @SerializedName("email")
    private String email;

    @SerializedName("company")
    private String company;

    @SerializedName("position")
    private String position;

    @SerializedName("created_at")
    private Date createdAt;

    @SerializedName("update_at")
    private Date updatedAt;
}</pre>
[caption id="attachment_762" align="aligncenter" width="509"]<a href="https://blog.dramancompany.com/wp-content/uploads/2017/03/스크린샷-2017-03-23-오전-11.02.49.png"><img class="size-full wp-image-762" src="https://blog.dramancompany.com/wp-content/uploads/2017/03/스크린샷-2017-03-23-오전-11.02.49.png" alt="" width="509" height="95"></a> ORM을 이용하여 DB 스키마와 같은 모델을 그대로 비즈니스 모델로 사용한다.[/caption]

&nbsp;
<h3>4. API와 비즈니스의 분리</h3>
다양한 비즈니스 로직이 생기면서 API 스펙이 다음과 같이 복잡해졌습니다.
<pre class="lang:default decode:true" title="Card API 복잡한 스팩">{"card":{
    "id": 1,
    "data": {
        "name": "이승민",
        "mobile": "01012341234",
        "address": "서울시 ...",
        "email": "1234@dramancompany.com",
        "company": "드라마앤컴퍼니",
        "position": "안드로이드 개발자"
    },
    "created_at": "2015-04-01T10:00:00.000+09:00",
    "updated_at": "2015-04-01T10:00:00.000+09:00"
    }
}</pre>
&nbsp;

&nbsp;

이제 Depth가 생겨 하나의 모델 스키마로 자동매핑을 할 수 없게 되었습니다. 하지만 아직 비즈니스 로직은 하나의 모델로 간단하게 유지하고 싶습니다. 그래서 API 응답을 그대로 사용하지 않고 비즈니스 객체로 따로 매핑해주기로 하였습니다. 그러기 위해서는 다음과 같은 Mapper가 필요합니다.
<pre class="lang:java decode:true" title="API Mapper">public class CardAPIMapper {

    public void doMaterialize(JsonElement from, Card to) {
        JsonObject json = from.getAsJsonObject();

        JsonElement idJson = json.get("id");
        to.setId(idJson.getAsLong());

        Gson gson = new Gson();
        to.setCreatedAt(gson.fromJson(json.get("created_at"), Date.class));
        to.setUpdatedAt(gson.fromJson(json.get("updated_at"), Date.class));

        JsonObject dataJson = json.get("data").getAsJsonObject();

        to.setName(dataJson.get("name").getAsString());
        to.setMobile(dataJson.get("mobile").getAsString());
        to.setAddress(dataJson.get("address").getAsString());
        to.setEmail(dataJson.get("email").getAsString());
        to.setCompany(dataJson.get("company").getAsString());
        to.setPosition(dataJson.get("position").getAsString());
    }
}</pre>
&nbsp;

이제 API 스펙이 어떻게 복잡하게 되더라도 Mapper만 수정하면, 비즈니스 로직은 건드리지 않고 수정된 사항을 적용할 수 있게 되었습니다.

[caption id="attachment_764" align="aligncenter" width="502"]<a href="https://blog.dramancompany.com/wp-content/uploads/2017/03/스크린샷-2017-03-23-오전-11.04.14.png"><img class="size-full wp-image-764" src="https://blog.dramancompany.com/wp-content/uploads/2017/03/스크린샷-2017-03-23-오전-11.04.14.png" alt="" width="502" height="85"></a> API 응답은 이제 Mapper를 이용해 받아온다.[/caption]

&nbsp;
<h3>5. DB와 비즈니스의 분리</h3>
Card에 Primitive 타입이 아닌 변수가 추가되었습니다. Original, Preview 속성을 가진 이미지 모델이 앞면, 뒷면 총 2개가 있어야 합니다. DB 스키마와 같은 모델을 사용하고 있으므로 ORM으로 Relation도 함께 추가합니다.
<pre class="lang:java decode:true" title="Card with Image">@Entity
public class Card {
    @Id
    private long id;
    private String name;
    private String mobile;
    private String address;
    private String email;
    private String company;
    private String position;
    private Date createdAt;
    private Date updatedAt;

    @ToOne
    private Image front;
    @ToOne
    private Image back;
}

@Entity
public class Image {
    @Id
    private long id;
    private String original;
    private String preview;
}</pre>
&nbsp;

모델을 위와같이 만들고보니 DB에 Image 테이블을 추가하여 Card 테이블에 Relation을 추가해야 합니다. 하지만 Card에만 사용되는 Image라는 작은 요소로 인해 테이블을 추가해야 하는 부담감, 테이블을 구분하였을 때 생기는 Join 연산으로 인한 성능저하 등 우려되는 점이 있습니다. 그래서 DB에는 하나의 테이블에 변수을 몰아넣고, 비즈니스 모델과 분리하기로 하였습니다. 그러면 API와 마찬가지로 Mapper가 필요합니다.
<pre class="lang:java decode:true" title="CardDB">@Entity
public class CardDB {
    @Id
    private long id;
    private String name;
    private String mobile;
    private String address;
    private String email;
    private String company;
    private String position;
    private Date createdAt;
    private Date updatedAt;

    private String frontOriginal;
    private String frontPreview;
    private String backOriginal;
    private String backPreview;
}</pre>
<pre class="lang:java decode:true" title="CardDB Mapper">public class CardDBMapper {

    public void materialize(CardDB from, Card to) {
        to.setId(from.getId());
        to.setName(from.getName());
        to.setMobile(from.getMobile());
        to.setAddress(from.getAddress());
        to.setEmail(from.getEmail());
        to.setCompany(from.getCompany());
        to.setPosition(from.getPosition());
        to.setCreatedAt(from.getCreatedAt());
        to.setUpdatedAt(from.getUpdatedAt());

        Image front = new Image();
        front.setOriginal(from.getFrontOriginal());
        front.setPreview(from.getFrontPreview());
        to.setFront(front);

        Image back = new Image();
        back.setOriginal(from.getBackOriginal());
        back.setPreview(from.getBackPreview());
        to.setBack(back);
    }

    public void dematerialize(Card from, CardDB to) {
        to.setId(from.getId());
        to.setName(from.getName());
        to.setMobile(from.getMobile());
        to.setAddress(from.getAddress());
        to.setEmail(from.getEmail());
        to.setCompany(from.getCompany());
        to.setPosition(from.getPosition());
        to.setCreatedAt(from.getCreatedAt());
        to.setUpdatedAt(from.getUpdatedAt());

        to.setFrontOriginal(from.getFront().getOriginal());
        to.setFrontPreview(from.getFront().getPreview());
        to.setBackOriginal(from.getBack().getOriginal());
        to.setBackPreview(from.getBack().getPreview());
    }
}</pre>
&nbsp;

이제 DB 스키마도 비즈니스 모델과 분리되었습니다. API, 비즈니스, DB가 모두 분리되어 서로의 스키마가 변하더라도 Mapper만 손보면 영향 없이 모든 수정을 아름답게 적용할 수 있습니다. 하지만 서비스가 커질수록 이 구조는 아름답지 못했습니다.

[caption id="attachment_765" align="aligncenter" width="507"]<a href="https://blog.dramancompany.com/wp-content/uploads/2017/03/스크린샷-2017-03-23-오전-11.04.29.png"><img class="size-full wp-image-765" src="https://blog.dramancompany.com/wp-content/uploads/2017/03/스크린샷-2017-03-23-오전-11.04.29.png" alt="" width="507" height="66"></a> DB 스키마와 비즈니스 모델이 분리되었다. Mapper를 이용하여 서로 변환한다.[/caption]

&nbsp;
<h3>6. Mapping 작업의 성능향상</h3>
갑자기 사용자들로부터 CS가 들어오기 시작하였습니다. 앱이 점점 느려진다는 이야기 입니다. 몇 사용자는 아예 사용하지 못할 정도로 심하게 느려졌다고 합니다. 원인을 분석해보니, 사용자들이 점점 많은 갯수의 명함을 저장하면서 DB ORM 객체를 Mapper가 비즈니스 객체로 변환하는 과정에서 엄청난 성능 저하가 있었습니다. 모델을 하나로 사용하였을 때에는 없었던 객체 변환과정이 추가되면서, 예상하지 못했던 문제가 생긴 것입니다.

모델의 형태는 상황에 맞추어 결정한 사항이므로 변경하고 싶지 않습니다. 그래서 성능 저하가 있는 '변환' 부분만 손보기로 하였습니다. 먼저 인스턴스 변수를 모두 삭제합니다. 스키마를 갖춘 Getter, Setter는 그대로 유지합니다. 그리고 ORM 객체를 레퍼런스로 두고 Getter Setter에서 Proxy로 사용합니다. 이러면 객체를 변환하지 않고 Proxy로 사용하는 ORM 객체로부터 직접 값을 가져오므로, 변환으로 인한 성능 저하를 해소할 수 있습니다.
<pre class="lang:java decode:true " title="Card With Proxy">public class Card {
    private CardDB cardDB;

    public long getId() {return cardDB.getId();}
    public void setId(long id) {cardDB.setId(id);}
    public String getName() {return cardDB.getName();}
    public void setName(String name) {cardDB.setName(name);}
    public String getMobile() {return cardDB.getMobile();}
    public void setMobile(String mobile) {cardDB.setMobile(mobile);}
    public String getAddress() {return cardDB.getAddress();}
    public void setAddress(String address) {cardDB.setAddress(address);}
    public String getEmail() {return cardDB.getEmail();}
    public void setEmail(String email) {cardDB.setEmail(email);}
    public String getCompany() {return cardDB.getCompany();}
    public void setCompany(String company) {cardDB.setCompany(company);}
    public String getPosition() {return cardDB.getPosition();}
    public void setPosition(String position) {cardDB.setPosition(position);}
    public Date getCreatedAt() {return cardDB.getCreatedAt();}
    public void setCreatedAt(Date createdAt) {cardDB.setCreatedAt(createdAt);}
    public Date getUpdatedAt() {return cardDB.getUpdatedAt();}
    public void setUpdatedAt(Date updatedAt) {cardDB.setUpdatedAt(updatedAt);}

    public Image getFront() {
        Image image = new Image();
        image.setOriginal(cardDB.getFrontOriginal());
        image.setPreview(cardDB.getFrontPreview());
        return image;
    }

    public void setFront(Image front) {
        cardDB.setFrontOriginal(front.getOriginal());
        cardDB.setFrontPreview(front.getPreview());
    }

    public Image getBack() {
        Image image = new Image();
        image.setOriginal(cardDB.getBackOriginal());
        image.setPreview(cardDB.getBackPreview());
        return image;
    }

    public void setBack(Image back) {
        cardDB.setBackOriginal(back.getOriginal());
        cardDB.setBackPreview(back.getPreview());
    }
}</pre>
&nbsp;
<h3>7. Proxy 고도화</h3>
Proxy 방식으로 비즈니스와 DB 스키마를 분리하면서 성능을 유지할 수 있었습니다. 하지만 비즈니스 객체 안에서 여러 연산이 필요해지고 Relation, Depth 및 변수가 추가됨에 따라, 모든 변수를 Proxy로부터 가져오는 것이 개발자의 생산성을 크게 떨어뜨리게 되었습니다. 인스턴스 변수에 바로 접근하지 못하고 프록시를 거치게 되면 개발자가 한번 더 신경써줘야 하기 때문입니다. 그래서 다음과 같은 딜레마에 빠지게 되었습니다.
<ol style="list-style-type: lower-alpha;">
 	<li>비즈니스와 DB 모델의 스키마를&nbsp;분리하고싶다. 모델을 구분하고 Mapper를 두어 해결하였다.</li>
 	<li>둘 사이 변환 비용을 최소화 하고싶다. 비즈니스 모델에 인스턴스 변수를 배제하고 DB 객체 Proxy를 두어 해결하였다.</li>
 	<li>개발자 생산성을 위해 비즈니스 모델에서 인스턴스 변수를 유지하고싶다. - <strong>(b)와 모순된다!</strong></li>
</ol>
(b)와 (c)의 해결방법은 정반대 이므로 모든 장점을 취할 수는 없었습니다. 그래서 상황에 따라 부분적으로 선택하기로 하였습니다.

먼저 (c)는 모델을 정의하는 요구사항이므로 양보할 부분이 없습니다. 인스턴스 변수를 추가합니다.

이제 (b)가 무엇이 문제였는지 다시 살펴보면, 사용자가 인지할 정도의 성능저하가 생기는 것이 가장 큰 문제였습니다. 그러면 사용자가 인지할 정도의 성능저하가 나는 곳에서는 Proxy를 사용하고, 그정도의 저하가 일어나지 않는 곳에서는 원하는 객체로 변환하여 사용하면 될 것 같습니다. 그래서 Card를 상속하는 CardProxy 모델을 만들었습니다. 평소에는 Proxy 로부터 값을 직접 받아오지만, 필요할 때에 Card로 스스로 변환되어 활용되는 모델입니다.

이 모델의 핵심은 <strong>'부분적인 인스턴스 변수에 대해서'</strong>&nbsp;Proxy로부터 값을 직접 받아오는 것입니다. 성능에 가장 큰 영향을 주는 곳에서 사용하는 변수를 Proxy에서 직접 받아옵니다. 변환으로 인해 가장 느린 곳은 많은 Card를 DB로부터 한번에 불러오는 메인 리스트 화면 이였습니다. 메인 리스트에서 활용하는 Card의 인스턴스 변수는 id, name, company, position&nbsp;이라고 가정합니다. 그러면 해당 변수만 Proxy로 돌리고, 다른 값을 호출하였을 때에는 Mapper를 통해 변환 작업을 하도록 합니다. 이것을 정리한 모델의 형태는 다음과 같습니다.
<pre class="lang:java decode:true" title="CardProxy">public class CardProxy extends Card {

    private CardDB cardDB;
    private CardDBMapper mapper = new CardDBMapper();
    private boolean loaded = false;

    public CardProxy(CardDB cardDB) {
        this.cardDB = cardDB;
    }

    @Override
    public long getId() {
        // 리스트에 사용되는 변수는 CardDB 로부터 직접 값을 가져온다.
        if (!isLoaded()) return cardDB.getId();
        return super.getId();
    }

    @Override
    public String getName() {
        if (!isLoaded()) return cardDB.getName();
        return super.getName();
    }

    @Override
    public String getMobile() {
        // 리스트에 사용되지 않는 변수는 Mapper를 통해 변환 후 값을 가져온다.
        load();
        return super.getMobile();
    }

    @Override
    public String getAddress() {
        load();
        return super.getAddress();
    }

    @Override
    public String getEmail() {
        load();
        return super.getEmail();
    }

    @Override
    public String getCompany() {
        if (!isLoaded()) return cardDB.getCompany();
        return super.getCompany();
    }

    @Override
    public String getPosition() {
        if (!isLoaded()) return cardDB.getPosition();
        return super.getPosition();
    }

    @Override
    public Date getCreatedAt() {
        load();
        return super.getCreatedAt();
    }

    @Override
    public Date getUpdatedAt() {
        load();
        return super.getUpdatedAt();
    }

    ...

    // Mapper를 통해 변환되었는지 여부
    private boolean isLoaded() {
        return loaded;
    }

    // Mapper를 이용하여 Card Instance들을 채워준다.
    private void load() {
        if (loaded) return;
        mapper.materialize(cardDB, this);
        loaded = true;
    }
}</pre>
&nbsp;

위 코드에서 getId()와 같이 메인 리스트에서 사용되는 값을 가져올 때에는 Proxy로부터 바로 가져옵니다. 이것으로 성능을 보장합니다. getMobile()과 같이 메인 리스트에서 사용되지 않는 값을 가져올 때에는 Card로 스스로 변환되어 값을 가져옵니다. 이것으로 Card Interface의 사용성이 보장됩니다. 이 형태를 결과적으로 바라보면,<strong> '원하는 값을 조절할 수 있는 Lazy Loading 모델'</strong> 입니다. 비즈니스 로직에서는 Card를 Interface로 사용하면서 실제 객체는 CardProxy를 로드하면 원하는 Lazy Loading을 얻을 수 있습니다.

&nbsp;

이렇게 해서 다양한 형태의 API, 비즈니스, DB 스키마를 소화하는 유연성과, 사용자에게 만족스러운 속도를 보장하는 아름다운 Card 모델이 완성되었습니다.

<hr>

&nbsp;
<h1>마무리</h1>
사실 모델은 자체 구조뿐 아니라 모델을 활용하는 Controller, Presenter, Repository 등의 구조에도 많은 영향을 받습니다. 때문에 위처럼 구현한다고 당연히 만능이 되지 않습니다. 요구사항에 맞는 적절한 형태를 개발자가 그때그때 생각하고 결정해야 합니다. 제가 고민하고 적용했던 위와 같은 설계 외에도 더 좋은 많은 방식들이 있을 것입니다. 앞으로 어떤 복잡한 요구사항이 생겨 위 구조의 허점을 깨닫고 새롭게 구상해야할 수도 있습니다. 그러니 이것을 정답으로 생각하지 마시고 '아 리멤버는 저런 고민을 하였구나. 우리한테는 이런 것이 도움이 되겠다.' 정도로 느끼시기만 하셔도 저는 기쁠 것 같습니다.

모두 자신의 서비스에 맞는 효율적이면서 성능 좋은 유연한 구조를 잘 찾으시기를 바랍니다.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>749</wp:post_id>
		<wp:post_date><![CDATA[2017-03-21 16:29:46]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-03-21 07:29:46]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-02-23 23:28:04]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-02-23 14:28:04]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%ec%95%84%eb%a6%84%eb%8b%a4%ec%9a%b4-%eb%aa%a8%eb%8d%b8-%ea%b5%ac%ec%a1%b0%eb%a5%bc-%ec%b0%be%ec%95%84%ec%84%9c]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="develop"><![CDATA[Tech]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[4]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[right-sidebar]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_slogan]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_subslogan]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_header_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_scroll_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_bottom_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_footer_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_view_post_info]]></wp:meta_key>
		<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_post_icons]]></wp:meta_key>
		<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729415394;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:456;}i:1;a:1:{s:2:"id";i:515;}i:2;a:1:{s:2:"id";i:2528;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_dont_email_post_to_subs]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_single_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:17:{s:8:"subtitle";s:0:"";s:6:"format";s:8:"standard";s:5:"video";s:0:"";s:7:"gallery";s:0:"";s:11:"source_name";s:0:"";s:10:"source_url";s:0:"";s:8:"via_name";s:0:"";s:7:"via_url";s:0:"";s:8:"override";a:1:{i:0;a:11:{s:18:"single_blog_custom";s:0:"";s:7:"sidebar";s:0:"";s:14:"second_sidebar";s:0:"";s:14:"share_position";s:0:"";s:17:"share_float_style";s:0:"";s:16:"post_date_format";s:0:"";s:23:"post_date_format_custom";s:0:"";s:21:"post_reading_time_wpm";s:0:"";s:20:"zoom_button_out_step";s:1:"1";s:19:"zoom_button_in_step";s:1:"1";s:17:"number_popup_post";s:1:"1";}}s:14:"image_override";a:1:{i:0;a:2:{s:26:"single_post_thumbnail_size";s:0:"";s:24:"single_post_gallery_size";s:0:"";}}s:22:"trending_post_position";s:0:"";s:19:"trending_post_label";s:0:"";s:20:"sponsored_post_label";s:0:"";s:19:"sponsored_post_name";s:0:"";s:18:"sponsored_post_url";s:0:"";s:19:"sponsored_post_logo";s:0:"";s:19:"sponsored_post_desc";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle_flag]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1909]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_format_gallery_images]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:2:"id";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>958</wp:comment_id>
			<wp:comment_author><![CDATA[freeism]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[freeism@freeism.co.kr]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.freeism.co.kr</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[110.70.50.197]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-03-23 22:00:03]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-03-23 13:00:03]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[글 잘 읽었습니다 :)]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1490274003.276136;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>6486</wp:comment_id>
			<wp:comment_author><![CDATA[KwgdFeve]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[wiljweg2335gphi@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://researchpaperssfk.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.15.82]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2020-11-28 21:35:05]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2020-11-28 12:35:05]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[essay writing for mba <a href="https://researchpaperssfk.com/#" rel="nofollow ugc">essays about love</a> where can i buy essays]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1606566905.488756;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[AWS Code Deploy를 통한 배포 자동화]]></title>
		<link>https://blog.dramancompany.com/2017/04/aws-code-deploy%eb%a5%bc-%ed%86%b5%ed%95%9c-%eb%b0%b0%ed%8f%ac-%ec%9e%90%eb%8f%99%ed%99%94/</link>
		<pubDate>Mon, 17 Apr 2017 03:54:10 +0000</pubDate>
		<dc:creator><![CDATA[tom]]></dc:creator>
		<guid isPermaLink="false">http://blog.dramancompany.com/?p=770</guid>
		<description></description>
		<content:encoded><![CDATA[서버 배포는 단순하고 반복작업이지만 절차가 적지 않아 실수를 할 가능성이 높습니다. 또 한번의 실수는 커다란 시스템 장애로 이루어질 수 있기 때문에 많은 분들에게 배포란 꽤나 부담스럽고 큰 업무로 느껴집니다. 특히 하루에 여러번의 배포를 진행해야 하는 날이면 시간도 시간이지만 스트레스가 크죠.

드라마앤컴퍼니에서 이전까지는 서버 배포를 진행하는 개발자가 몇 없고 그들도 그 업무에 매우 익숙했기 때문에 큰 부담없이 진행할 수 있었지만, 배포를 진행해야 하는 개발자와 프로젝트의 수가 늘어남에 따라 배포로 인한 회사 전체의 업무 손실이 커졌습니다. 그래서 결국 계속 미뤄지던 배포 자동화의 첫 단계를 Code Deploy로 시작하기로 했습니다.

이번 글에서는 우선 Code Deploy가 생소한 분들을 위하여 개념을 쉽고 확실하게 설명드리고, 그 다음 최대한 삽질을 안하고 실제 적용을 하실 수 있도록 설명드리려고 합니다. 그리고 나서 저희는 어떻게 응용하여 사용하고 있는지, In-place와 새로 추가된 Blue/Green 배포 방식 등 이번에 알게 된 것들에 대하여 공유드리겠습니다.

&nbsp;
<h1><strong>1. 개념</strong></h1>
Code Deploy를 정말 간단히 설명하면 다음과 같습니다.
<blockquote>서버에 코드를 자동으로 배포해주는 서비스</blockquote>
<a href="https://aws.amazon.com/ko/codedeploy/">https://aws.amazon.com/ko/codedeploy/</a>

여기에 가보시면 친절한 설명 글과 멋져보이는 동영상 소개가 있습니다. 하지만 Code Deploy와 같은 개념이 생소하신 분들에게는 모호하게만 느껴질 수 있기 때문에 이 글에서는 천천히 설명드리려고 합니다.

&nbsp;

Code Deploy를 이용할 경우 배포는 다음과 같이 이루어집니다.
<ol>
 	<li>배포할 코드 준비</li>
 	<li>Code Deploy에게 특정 리비전의 코드를 배포해달라고 요청</li>
 	<li>Code Deploy가 미리 지정해놓은 설정에 따라 새로운 서버(EC2 instance) 준비</li>
 	<li>새로운 서버에 설치되어있는 Code Deploy Agent 프로그램이 배포할 코드를 다운받음</li>
 	<li>코드를 프로젝트 경로로 복사한 뒤 미리 정의된 스크립트 실행 (필요한 모듈, 라이브러리 설치 등등의 작업 수행)</li>
 	<li>새로운 코드 준비가 완료되면 옛날 코드를 갖고 있는 서버들을 새로운 서버로 대체</li>
 	<li>배포 끝!</li>
</ol>
<img class="alignnone size-full" src="http://docs.aws.amazon.com/codedeploy/latest/userguide/images/sds_architecture.png" width="784" height="420">

&lt;<a href="http://docs.aws.amazon.com/codedeploy/latest/userguide/welcome.html">http://docs.aws.amazon.com/codedeploy/latest/userguide/welcome.html</a>&gt;

큰 흐름은 위와 같고 각 프로젝트의 필요에 따라 여러 옵션들을 지원합니다.
<ul>
 	<li>코드를 Github에서 가져올지, S3에서 가져올지</li>
 	<li>기존에 실행되어있는 서버들에 배포를 진행(In-place deployment)할지 Blue/Green 방식으로 배포를 진행할지</li>
 	<li>실행되어있는 서버들이 여러개인 경우에 다양한 배포 전략 (한번에 하나씩 배포/절반씩 배포/전부 한꺼번에 배포)</li>
</ul>
이 외에도 AWS답게 많은 옵션들을 지원합니다.

&nbsp;

그럼 저희가 Code Deploy를 도입하여 배포 과정이 어떻게 변경되는지&nbsp;설명드리기 앞서 간략하게 저희의 배포 구조를 설명드리겠습니다.&nbsp;드라마앤컴퍼니에서는 무중단 배포를 위하여 AWS Elastic Load Balancer(이하 ELB)와 AWS Auto Scaling Group(이하 ASG)을 이용한 Blue/Green 배포 방식을 사용하고 있습니다.

평소에는 클라이언트의 요청을 ELB에서 받고 1번 ASG로 요청을 보내줍니다. 배포를 하려고 하면 1번 ASG와 똑같은 크기와 설정을 갖는 2번 ASG를 만든 뒤에 ASG 내부에 새로운 코드를 갖고 있는 서버들을 추가합니다. 그리고 ELB에 새로 들어온는 요청들을 1번 ASG에서 2번 ASG로 보내게 하여 무중단 배포를 진행합니다.

<a href="https://blog.dramancompany.com/wp-content/uploads/2015/09/스크린샷-2015-09-25-16.17.37.png"><img class="alignnone size-full wp-image-34" src="https://blog.dramancompany.com/wp-content/uploads/2015/09/스크린샷-2015-09-25-16.17.37.png" alt="" width="489" height="444"></a>

기존에 저희가 사용하고 있던 운영 서버 배포 절차는 다음과 같습니다.
<ol>
 	<li>Github에 코드 push</li>
 	<li>AMI용 instance 실행</li>
 	<li>코드 배포</li>
 	<li>실서버 테스트</li>
 	<li>AMI용 instance 종료</li>
 	<li>AMI 생성</li>
 	<li>Lauch Configuration 생성</li>
 	<li>Blue/Green 방식의 배포를 위하여 현재 활성화되어있지 않은 ASG (B 그룹)의 설정 변경(lauch configuration, scheduled action 등)</li>
 	<li>B그룹에 instance들 추가</li>
 	<li>Instance가 모두 생성되어 준비되면 ELB를 B그룹에 연결</li>
 	<li>A, B 그룹 모두 동시에 request를 보내다가 문제가 없으면 A그룹의 ELB를 연결 해제</li>
 	<li>모니터링을 진행하다가 문제가 없을 경우 A그룹의 instance 제거</li>
 	<li>A 그룹의 설정 변경 (scheduled action 등)</li>
</ol>
정말 세세하게 항목들을 나열해서 많긴 하지만... 실제로도 많습니다&nbsp;😭

Code Deploy를 이용하여 배포를 진행하면 배포 단계는 다음과 같이 바뀌게 됩니다.
<ol>
 	<li>Github에 코드 push</li>
 	<li>AWS Code Deploy Console에서 새로운 배포 클릭</li>
 	<li>Git의 commit ID 입력</li>
 	<li><span style="color: #999999;">(자동으로) Auto Scaling Group 내부에 instance들이 하나씩 업데이트 되는 것을 지켜봄</span></li>
</ol>
매우 간단해졌죠?

&nbsp;
<h1><strong>2. 실전</strong></h1>
<a href="http://docs.aws.amazon.com/codedeploy/latest/userguide/getting-started-codedeploy.html">http://docs.aws.amazon.com/codedeploy/latest/userguide/getting-started-codedeploy.html</a>

모든 과정은 이미 AWS에서 친절하고 자세하게 설명하고 있습니다. 이 글에서는 해당 문서에 숟가락만 얹어서 핵심 요약과 삽질 방지 팁을 알려드리도록 하겠습니다. 참고로 이 글은 Amazon Linux AMI, In-place 배포 방식을 기준으로 작성되었습니다.

&nbsp;
<h2><strong>2-1. Profile 등 기본 설정</strong></h2>
<h4>a. IAM User 생성</h4>
<div><a href="http://docs.aws.amazon.com/codedeploy/latest/userguide/getting-started-provision-user.html">http://docs.aws.amazon.com/codedeploy/latest/userguide/getting-started-provision-user.html</a></div>
<div>사람이 하는 일을 프로그램이 대체하는 것이니 action을 대신하여 처리할 IAM user를 생성합니다.</div>
&nbsp;
<h4>b. Service Role 생성</h4>
<div><a href="http://docs.aws.amazon.com/codedeploy/latest/userguide/getting-started-create-service-role.html">http://docs.aws.amazon.com/codedeploy/latest/userguide/getting-started-create-service-role.html</a></div>
<div>

앞서 만든 user가 AWS의 모든 서비스에 접근가능하면 안되겠죠? user에게 부여할 role을 만들어서&nbsp;접근 가능한 리소스들을 지정해둡니다.

&nbsp;

</div>
<h4>c. IAM instance profile 생성</h4>
<div><a href="http://docs.aws.amazon.com/codedeploy/latest/userguide/getting-started-create-iam-instance-profile.html">http://docs.aws.amazon.com/codedeploy/latest/userguide/getting-started-create-iam-instance-profile.html</a></div>
<div>추후 해당 user가 Github이나 S3에서 코드를 가져올 때 필요한 profile을 생성합니다.</div>
&nbsp;

&nbsp;
<h2><strong>2.2 Instance 준비</strong></h2>
<h4>a. AMI용 instance 생성</h4>
앞으로 배포를 하게될 EC2&nbsp;instance를 미리 만들어둬야 합니다. 새로운 instance를 생성할 때 IAM Role를 앞서 생성한 role로 지정해야 합니다. 그 다음은 이 instance에 Code Deploy를 연동하기 위한 환경을 구성해야 합니다.

&nbsp;
<h4>b. Code Deploy Agent 준비</h4>
<div>
<div><a href="http://docs.aws.amazon.com/codedeploy/latest/userguide/how-to-run-agent-install.html">http://docs.aws.amazon.com/codedeploy/latest/userguide/how-to-run-agent-install.html</a></div>
<div>서버가 실행됐을 때 우리가 지정한 코드를 불러와서 서버에 설치해주는 역할을 하는 Code Deploy Agent를 설치해둬야 합니다. Code Deploy Agent는 다음과 같이 동작합니다.</div>
</div>
<div>
<ol>
 	<li>서비스로 실행되어 서버가 시작될 때 같이 시작됨</li>
 	<li>새로 배포할 코드가 있다면 사용자가 지정한 코드 리비전을 다운받아서 임시 폴더에 저장</li>
 	<li>사용자가 정의해놓은 절차를 따라 script를 실행</li>
</ol>
Code Deploy Agent의 로그를 각 instance에서 보고 싶으시면 <span class="lang:default highlight:0 decode:true crayon-inline">/var/log/aws/codedeploy-agent</span>에서 확인할 수 있습니다.

&nbsp;
<h4>c. Cloud Watch로 로그를 보내도록 처리</h4>
<div><a href="https://aws.amazon.com/ko/blogs/devops/view-aws-codedeploy-logs-in-amazon-cloudwatch-console/">https://aws.amazon.com/ko/blogs/devops/view-aws-codedeploy-logs-in-amazon-cloudwatch-console/</a></div>
<div>각 instance 내부에서 Code Deploy Agent의 로그를 볼 수 있습니다. 하지만 나중에 여러대의 서버에 배포를 진행하는데 문제가 생겼을 경우 모든 instance에 각각 들어가서 볼 수는 없겠죠? Cloud Watch로 모든 로그를 보내도록 처리합니다.</div>
&nbsp;
<h4>d. AMI 생성</h4>
준비가 완료된 instance를 이용하여 AMI 이미지를 생성합니다.

&nbsp;
<h4>e. Launch Configuration 생성</h4>
Auto Scaling Group에서 새로운 instance를 추가할 때 어떤 instance를 생성할지 정의해놓는 launch configuration을 앞에서 만든 AMI 등을 이용하여 생성합니다.
<h5>Tip!</h5>
<ul>
 	<li>프로젝트 파일들이 존재해야 할 곳에는 배포될 파일과 같은 이름의 파일들은 모두 지워두셔야 합니다. dot-file(.으로 시작하는 파일들)까지도 잊지말고 지워주셔야 합니다!
<a href="http://docs.aws.amazon.com/ko_kr/codedeploy/latest/userguide/troubleshooting-ec2-instances.html#troubleshooting-same-files-different-app-name">http://docs.aws.amazon.com/ko_kr/codedeploy/latest/userguide/troubleshooting-ec2-instances.html#troubleshooting-same-files-different-app-name</a></li>
 	<li>이 글을 쓰는 시점에서는 codedeploy-agent이 특정 버전 이하의 aws-sdk-core에서만 동작하도록 처리되어있어서 aws-sdk-core의 버전이 너무 높으면 다음과 같은 메시지와 함께 에러가 나는 경우가 있습니다. (<em>Plugin codedeploy could not be loaded: Unable to activate codedeploy-commands-1.0.0, because aws-sdk-core-2.8.4 conflicts with aws-sdk-core (~&gt; 2.6.39)</em>)
이럴 경우 aws-sdk-core의 버전을 맞춰서 설치, 사용하면 됩니다.</li>
</ul>
</div>
&nbsp;
<h2><strong>2.3 Project 준비</strong></h2>
<h4>a.&nbsp;AppSpec.yml</h4>
<div><a href="http://docs.aws.amazon.com/codedeploy/latest/userguide/reference-appspec-file.html">http://docs.aws.amazon.com/codedeploy/latest/userguide/reference-appspec-file.html</a></div>
<div></div>
<div>Code Deploy Agent가 프로젝트 코드를 다운받은 뒤 서버에 제대로 설치할 수 있게 절차를 알려줘야 합니다.</div>
<div>해당 내용을 정의해두는 파일이 AppSpec.yml 파일입니다. 해당 파일은 크게 files, permissions, hooks 세 가지 section으로 나뉩니다.</div>
<h5><strong>files</strong></h5>
<div>Code Deploy Agent가 서버의 임시 폴더에 다운받은 코드 파일들을 서버의 어떤 위치로 이동할지 정의합니다.&nbsp;destination이 우리의 어플리케이션의 코드가 위치할 곳입니다.</div>
<h5><strong>permissions</strong></h5>
우리의 코드가 서버에서 제 위치를 찾은 뒤 어떤 permission을 갖고 있어야할지 정의해주는 부분입니다.
<h5><strong>hooks</strong></h5>
<div>
<div>코드만 제 위치에 둔다고 어플리케이션이 작동하지는 않겠죠? 필요한 라이브러리, 모듈 등을 업데이트 설치도하고 asset들도 precompile한다던지 다양한 일을 해야 합니다. 이런 작업들은&nbsp;script들로 미리 정의해둔 뒤에 필요한 시점에 호출할 수 있게 정의합니다.</div>
</div>
<ul>
 	<li>hook 문서&nbsp;<a href="http://docs.aws.amazon.com/codedeploy/latest/userguide/reference-appspec-file-structure-hooks.html">http://docs.aws.amazon.com/codedeploy/latest/userguide/reference-appspec-file-structure-hooks.html</a></li>
 	<li>예시&nbsp;<a href="https://github.com/awslabs/aws-codedeploy-samples">https://github.com/awslabs/aws-codedeploy-samples</a></li>
</ul>
<h5>Tip!</h5>
<ul>
 	<li>version은 무조건 0.0으로 고정해야 합니다. 실제 사용되는 값은 아니고 CodeDeploy에서 나중에 사용하려는 값으로 무조건 0.0을 입력하라고 하네요. 그러지 않을 경우 배포에 실패합니다.</li>
</ul>
&nbsp;
<h4>b. Script</h4>
<div>앞서 나온 AppSpec의 hooks 부분에서 호출할 스크립트들을 정의해둬야 합니다.</div>
<div>기호에 따라 두면 되겠지만 저는 project root에 scripts 디렉토리를 생성하여 내부에 shell script들을 작성해두었습니다.</div>
<div>저는 다음과 같은 script들을 사용합니다.</div>
<div>
<ul>
 	<li>서비스 시작</li>
 	<li>서비스 중지</li>
 	<li>서비스 정상 설치 확인
<pre class="lang:sh decode:true" title="validate 예시">result=$(curl -s http://localhost:80/hello/)

if [[ "$result" =~ "Success" ]]; then
    exit 0
else
    exit 1
fi</pre>
</li>
 	<li>Gem 설치</li>
 	<li>기타 등등</li>
</ul>
&nbsp;

</div>
<h5>Tip!</h5>
<ul>
 	<li>script 파일들은 실행 권한을 갖고 있는채로 Git에 업로드 되어야 합니다 &nbsp;<span class="lang:sh decode:true crayon-inline">chmod +x file_name</span></li>
 	<li>hook의 location은 프로젝트의 root 경로를 기준으로 상대 경로를 사용하면 됩니다.</li>
 	<li>해당 스크립트가 실행되는 경로는 프로젝트가 복사된 후의 경로가 아닌 Code&nbsp;Deploy Agent가 설치된 경로 입니다&nbsp;<span class="lang:default highlight:0 decode:true crayon-inline">/opt/codedeploy-agent</span>. 따라서 프로젝트의 내부에 있는 파일들을 접근하고 싶으시다면 cd를 이용하여 디렉토리를 이동하시거나 절대경로로 사용하셔야 합니다</li>
 	<li>script&nbsp;log 파일을 보면 script가 실행되면서 남긴 log를 볼 수 있습니다&nbsp;<span class="lang:sh highlight:0 decode:true crayon-inline ">/opt/codedeploy-agent/deployment-root/{deployment-group-ID}/{deployment-ID}/logs/scripts.log</span>.</li>
</ul>
&nbsp;
<h2><strong>2.4 Auto Scaling Group 설정</strong></h2>
이제 배포할 Auto Scaling Group을 지정합니다. 기존에 사용하던 ASG를 사용하셔도 됩니다. 대신 launch configuration은 이번에 생성한걸로 지정해줘야겠죠? 만약 특정 EC2 instance에 바로 배포를 진행하는 거라면 따로 처리하지 않으셔도 됩니다.

&nbsp;
<h2><strong>2.5 CodeDeploy 설정</strong></h2>
CodeDeploy에서는 Application, Deployment group, Deployment 세 가지의 개념을 이해하셔야 합니다.
<h3>a. Application</h3>
가장 상위 개념으로 CodeDeploy를 이용하여 배포를 진행할 프로젝트를 나타냅니다.

<a href="https://blog.dramancompany.com/wp-content/uploads/2017/03/Screen-Shot-2017-04-14-at-11.14.02.png"><img class="alignnone size-full wp-image-799" src="https://blog.dramancompany.com/wp-content/uploads/2017/03/Screen-Shot-2017-04-14-at-11.14.02.png" alt="" width="1666" height="604"></a>

&nbsp;
<h3>b. Deployment group</h3>
같은 application 내에 어떤 종류의 배포인지를 나타냅니다.
예를 들면 test/production 등 환경일 수 있고 특정 Auto Scaling Group일 수 있습니다.

<img class="alignnone size-full wp-image-797" src="https://blog.dramancompany.com/wp-content/uploads/2017/03/Screen-Shot-2017-04-14-at-11.15.31.png" alt="" width="2440" height="556">

생성 시 deployment type를 정할 수 있으며 배포할 대상(EC2, ASG 등)을 정할수도 있습니다.

<img class="alignnone size-full wp-image-798" src="https://blog.dramancompany.com/wp-content/uploads/2017/03/Screen-Shot-2017-04-14-at-11.16.50.png" alt="" width="1668" height="2044">

&nbsp;
<h3>c. Deployments</h3>
실제 배포 건을 나타냅니다.

<a href="https://blog.dramancompany.com/wp-content/uploads/2017/03/Screen-Shot-2017-04-14-at-11.42.27.png"><img class="alignnone size-full wp-image-800" src="https://blog.dramancompany.com/wp-content/uploads/2017/03/Screen-Shot-2017-04-14-at-11.42.27.png" alt="" width="2176" height="912"></a>

&nbsp;
<h2><strong>2.6 배포</strong></h2>
이제 배포를 진행합니다.
어떤 application의 어떤 그룹에다가 어떤 commit을 배포를 진행할지 적습니다.

<a href="https://blog.dramancompany.com/wp-content/uploads/2017/03/Screen-Shot-2017-04-14-at-12.03.26.png"><img class="alignnone size-full wp-image-801" src="https://blog.dramancompany.com/wp-content/uploads/2017/03/Screen-Shot-2017-04-14-at-12.03.26.png" alt="" width="1652" height="1718"></a>

배포 이력에서 배포 진행 현황을 살펴볼 수 있고, 성공 여부도 볼 수 있습니다.

<a href="https://blog.dramancompany.com/wp-content/uploads/2017/03/Screen-Shot-2017-04-14-at-12.03.51.png"><img class="alignnone size-full wp-image-802" src="https://blog.dramancompany.com/wp-content/uploads/2017/03/Screen-Shot-2017-04-14-at-12.03.51.png" alt="" width="3720" height="828"></a>

View Events를 통하여 각 hook 부분 당 얼만큼의 시간이 소요되었으며 현재 어떤 과정을 거치고 있는지 실시간으로 확인할 수 있습니다.

<a href="https://blog.dramancompany.com/wp-content/uploads/2017/03/Screen-Shot-2017-04-14-at-12.04.41.png"><img class="alignnone size-full wp-image-803" src="https://blog.dramancompany.com/wp-content/uploads/2017/03/Screen-Shot-2017-04-14-at-12.04.41.png" alt="" width="2186" height="1010"></a>

에러가 났을 경우에는 script 실행 중 어떤 로그를 발생하면서 에러가 났는지도 확인할 수 있습니다.

<a href="https://blog.dramancompany.com/wp-content/uploads/2017/03/Screen-Shot-2017-03-30-at-11.04.59.png"><img class="alignnone size-full wp-image-783" src="https://blog.dramancompany.com/wp-content/uploads/2017/03/Screen-Shot-2017-03-30-at-11.04.59.png" alt="" width="3698" height="724"></a>

&nbsp;
<h5>Tip!</h5>
<ul>
 	<li>CodeDeploy가 Rerouting traffic 단계로 넘어가기 전에 instance가 정상적으로 준비되었는지 확인하는 기준은 ELB의 health-check 경로입니다. 실제 instance에서 해당 주소를 호출했을 때 응답이 200으로 잘 오는지 확인하세요.</li>
</ul>
&nbsp;
<h1><strong>3. 그리고</strong></h1>
<h2>3.1 In-place vs Blue/Green Deployments</h2>
2017년 1월에 In-place 배포 방법 외에 Blue/Green의 배포 방식이 추가되었습니다.&nbsp;(<a href="https://aws.amazon.com/ko/about-aws/whats-new/2017/01/aws-codedeploy-introduces-blue-green-deployments/">https://aws.amazon.com/ko/about-aws/whats-new/2017/01/aws-codedeploy-introduces-blue-green-deployments/</a>)
Blue/Green의 배포 방식을 진행할 경우 다음과 같은 이점들이 있습니다.
<ul>
 	<li>서버에 코드를 배포한 뒤 실제 요청을 받기 전에 테스트용 ELB 연결하여 테스트를 진행해볼 수 있습니다.</li>
 	<li>만약 새로 배포된 코드에 문제가&nbsp;있을 경우, 요청을 예전 그룹으로 돌리기만 하기 때문에 재배포를 진행하는 것 보다 훨씬 빠르게 장애에 대응할 수 있습니다.</li>
 	<li>하나의 ASG에 3개의 서버가 떠있다고 가정했을 때, in-place 방식을 사용하면 최소 1대의 서버가 배포를 진행하느라 빠지기 때문에 나머지 서버들이 같은 양의 요청을 처리해야 합니다. 이는 장애의 위험을 증가시킵니다. Blue/Green 방식을 사용하면 기존의 3개는 요청을 처리하고 있고 새로운 3개가 추가되어 배포를 진행하기 때문에 이런 위험이 없습니다.</li>
</ul>
따라서 저희는 기존에 사용하기도 했던 Blue/Green 방식을 이용하여 배포를 하려고 했습니다. Blue/Green 배포 방식을 사용하면 하나의 Auto Scaling Group만 갖고 있어도 Code Deploy에서 자동으로 해당 ASG의 설정과 값들을 복사하여 배포를 진행합니다.&nbsp;하지만 나온지 얼마 되지 않은 기능이라 그런지 다음과 같은 이유들 때문에 사용하기 힘들다고 판단하여 in-place 방식을 택했습니다.
<ul>
 	<li>Auto Scaling Group의 description 탭에서 현재 이 Auto Scaling Group이 어떤 ELB에 물려있는지 확인해야 하는데, CodeDeploy로 생성된 그룹에서는 해당 ELB가 보이지 않습니다(마치 아무 ELB에도 연결되어있지 않는 것으로 보입니다). 실제로 요청은 올바르게 들어옵니다. ELB를 물렸다 빼는 일은 굉장히 자주 일어나는 일이기 때문에 이런 작동 방식은 문제를 일으킬 위험이 매우 높다고 판단되었습니다. (이는 AWS 문의 결과 정상이라고 합니다.)</li>
 	<li>하나의 ASG에 하나의 ELB밖에 연결할 수 없습니다. (이는 AWS에 문의 결과 인지하고 있으며, 개선을 고려하고 있다고 합니다.)</li>
 	<li>하나의 서버에 하나의 프로젝트밖에 배포할 수 없습니다. Blue/Green의 로직 상, 아무런 소스코드도 깔려있지 않은 AMI로 만든 깡통 인스턴스가 실행되고 거기에 프로젝트를 배포하는 것이기 때문에 하나의 서버에 여러 프로젝트를 배포할 수 없습니다. (이도&nbsp;AWS에 문의 결과 인지하고 있으며, 개선을 고려하고 있다고 합니다.)</li>
 	<li>새로 생성된 ASG은 임의의 이름으로 생성되기 때문에, CloudWatch alarm을 새로 만들어야 하고 CloudWatch dashboard에 새로 추가해야 합니다(..). 따라서 배포를 할 때마다 Scaling Policy를 위한 알람을 다시 매번 만들어주고 CloudWatch dashboard에 계속 추가하고 예전 그룹을 제거해줘야 합니다(...).</li>
</ul>
위 내용은 글이 작성된 시점 (2017년 4월)에 확인된 내용이니 미래에는 바뀔 수 있습니다.

&nbsp;
<h2>3.2 In-place 방식으로 Blue/Green 배포 진행하기</h2>
위의 이유 때문에 어쩔 수 없이 in-place 방식을 택했습니다만, 기존까지 사용했던 Blue/Green의 이점도 포기하기 힘들었습니다.
따라서 조금 더 수작업이 들어가더라도 배포 방식을 약간 더 변경했습니다.
<ul>
 	<li>기존처럼 ASG를 2개 만들어 둡니다.</li>
 	<li>새로 배포할 그룹에 배포를 in-place로 배포합니다.</li>
 	<li>테스트용 ELB를 물려서 테스트를 진행한 뒤 문제가 없을 경우 새로 배포된 그룹에 ELB를 물리고, 이전 그룹에서는 ELB를 제거합니다.</li>
</ul>
ELB를 직접 관리해야한다는 번거로움은 있지만, 가장 불편한 AMI, Launch configuration 생성 과정은 생략할 수 있고 Blue/Green의 이점을 가져올 수 있기 때문에 이 방법을 택하기로 했습니다.

&nbsp;
<h2>3.3 또 할 수 있는 것</h2>
<ul>
 	<li>이걸로 배포 자동화의 첫 단추를 끼웠습니다. 앞으로 Code Pipeline, Code Build 등와 연동하여 완성된 Continuous Delivery를 맞춰나갈 계획입니다.</li>
 	<li>예를 들면 Github webhook을 통해서 특정 branch에 배포가 이루어지면 자동으로 배포를 진행할 수 있습니다. 또한 Travis CI와 같은 CI tool들을 이용하신다면 빌드, 테스트가 성공적일 경우에 자동으로 배포를 진행할 수 있습니다.&nbsp;테스트 서버와 develop branch를 연결해두면 참 편리하겠죠?</li>
 	<li>배포 상태(진행, 성공, 실패 등)에 대하여 SNS를 통해 이메일, Slack&nbsp;등으로 알림도 받아볼 수 있습니다.</li>
 	<li>이 글에서는 Amazon Linux, Ruby 언어를 기준으로 배포를 진행했지만 Windows 등 다른 OS를 지원하고 코드의 언어에 전혀 종속적이지 않습니다.</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>770</wp:post_id>
		<wp:post_date><![CDATA[2017-04-17 12:54:10]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-04-17 03:54:10]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-02-23 23:28:00]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-02-23 14:28:00]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[aws-code-deploy%eb%a5%bc-%ed%86%b5%ed%95%9c-%eb%b0%b0%ed%8f%ac-%ec%9e%90%eb%8f%99%ed%99%94]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="aws"><![CDATA[AWS]]></category>
		<category domain="post_tag" nicename="code-deploy"><![CDATA[Code Deploy]]></category>
		<category domain="category" nicename="develop"><![CDATA[Tech]]></category>
		<category domain="post_tag" nicename="%eb%b0%b0%ed%8f%ac"><![CDATA[배포]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[4]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_f8ea289999c0b8dca5e95c28ecfa0dd1]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_852536303f7b571679b3ff8fd8af6267]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_a1559ade7aad0d8f881acdcb4d64f348]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[right-sidebar]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_slogan]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_subslogan]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_header_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_scroll_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_bottom_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_footer_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_view_post_info]]></wp:meta_key>
		<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_post_icons]]></wp:meta_key>
		<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729530614;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:19;}i:1;a:1:{s:2:"id";i:1081;}i:2;a:1:{s:2:"id";i:974;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_single_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:17:{s:8:"subtitle";s:0:"";s:6:"format";s:8:"standard";s:5:"video";s:0:"";s:7:"gallery";s:0:"";s:11:"source_name";s:0:"";s:10:"source_url";s:0:"";s:8:"via_name";s:0:"";s:7:"via_url";s:0:"";s:8:"override";a:1:{i:0;a:11:{s:18:"single_blog_custom";s:0:"";s:7:"sidebar";s:0:"";s:14:"second_sidebar";s:0:"";s:14:"share_position";s:0:"";s:17:"share_float_style";s:0:"";s:16:"post_date_format";s:0:"";s:23:"post_date_format_custom";s:0:"";s:21:"post_reading_time_wpm";s:0:"";s:20:"zoom_button_out_step";s:1:"1";s:19:"zoom_button_in_step";s:1:"1";s:17:"number_popup_post";s:1:"1";}}s:14:"image_override";a:1:{i:0;a:2:{s:26:"single_post_thumbnail_size";s:0:"";s:24:"single_post_gallery_size";s:0:"";}}s:22:"trending_post_position";s:0:"";s:19:"trending_post_label";s:0:"";s:20:"sponsored_post_label";s:0:"";s:19:"sponsored_post_name";s:0:"";s:18:"sponsored_post_url";s:0:"";s:19:"sponsored_post_logo";s:0:"";s:19:"sponsored_post_desc";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle_flag]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1908]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_format_gallery_images]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:2:"id";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>1107</wp:comment_id>
			<wp:comment_author><![CDATA[AWS 주간 소식 모음 – 2017년 4월 24일 - 지락문화예술공작단]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>https://jirak.net/wp/aws-%ec%a3%bc%ea%b0%84-%ec%86%8c%ec%8b%9d-%eb%aa%a8%ec%9d%8c-2017%eb%85%84-4%ec%9b%94-24%ec%9d%bc/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[175.192.82.158]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-05-02 14:43:46]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-05-02 05:43:46]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] AWS Code Deploy를 통한 배포 자동화 (2017-04-18) [&#8230;]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1493703826.283198;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>1442</wp:comment_id>
			<wp:comment_author><![CDATA[jeho]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[benj@outlook.kr]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[211.187.176.200]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-08-26 14:15:44]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-08-26 05:15:44]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[rss 가 고장나있는데 좀 고쳐주세요~]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1503724544.697898;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>1443</wp:comment_id>
			<wp:comment_author><![CDATA[jeho]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[benj@outlook.kr]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[211.187.176.200]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-08-26 14:16:27]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-08-26 05:16:27]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[https://blog.dramancompany.com/feed
rss 가 고장나있는데 좀 고쳐주세요~]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1503724587.72637;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>1447</wp:comment_id>
			<wp:comment_author><![CDATA[Tom Kim]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[tom.kim@dramancompany.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[106.250.181.163]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-08-28 15:05:17]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-08-28 06:05:17]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[https://www.feedvalidator.org/check.cgi?url=http%3A%2F%2Fblog.dramancompany.com%2Ffeed%2F

지금은 정상 작동하는 것으로 보입니다. 혹시 또 다시 정상 작동 하지 않으면 알려주세요!
감사합니다!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>1443</wp:comment_parent>
			<wp:comment_user_id>4</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1503900317.193176;s:5:"event";s:9:"check-ham";s:4:"user";s:3:"tom";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>1813</wp:comment_id>
			<wp:comment_author><![CDATA[현수]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[coding8282@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[220.117.48.125]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2018-01-12 13:23:37]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2018-01-12 04:23:37]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[안녕하세요, 저희도 codedeploy를 사용하려는데요 다른 availiability zone에는 배포가 실패하던데 이게 왜 그런지 홁시 아시는지요? 예를 들어, ASG 구성으로 ap-southeast-1a에는 3개, ap-southeast-1b 2개의 인스턴스가 떠 있고 원본AMI는 ap-southeast-1a에서 만들어진 걸로 했는데요, ap-southeast-1b에 있는 2개 인스턴스는 배포가 항상 실패합니다. log를 뒤져보니 on-premise 인스턴스로 인식하는 것 같거든요. 뭐가 잘못된 걸까요?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1515731017.303786;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>1830</wp:comment_id>
			<wp:comment_author><![CDATA[Tom Kim]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[tom.kim@dramancompany.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[14.63.29.196]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2018-01-19 20:48:06]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2018-01-19 11:48:06]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[안녕하세요 현수님 댓글 확인을 늦게해서 지금 답변드립니다!
저희도 다른 availiablity zone에 code deploy를 이용하여 특별한 추가 설정 없이 배포를 진행하고 있습니다. 혹시 다른 zone에 인스턴스가 다른 설정을 갖고있는건 아닐까요?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>1813</wp:comment_parent>
			<wp:comment_user_id>4</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1516362486.723774;s:5:"event";s:9:"check-ham";s:4:"user";s:3:"tom";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>1851</wp:comment_id>
			<wp:comment_author><![CDATA[현수]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[coding8282@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[220.117.48.125]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2018-01-26 12:44:54]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2018-01-26 03:44:54]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[답변 감사드립니다. 다행이 문제를 해결했구요, EC2 Windows 2016에서 설정을 했습니다.

https://stackoverflow.com/questions/48180531/aws-codedeploy-is-impossible-to-deploy-across-multiple-availability-zones-at-the/48455132#48455132]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>1830</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1516938294.529736;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>5176</wp:comment_id>
			<wp:comment_author><![CDATA[우미]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[bo314@naver.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://senticoding.tistory.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.103.12]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2020-01-14 09:43:44]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2020-01-14 00:43:44]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[잘 정리된 글 잘 보았습니다.
Role관련해서 의아한 내용이 있는데요.
EC2에 신뢰할 수 있는 서비스로 EC2가 설정된 Role을 붙여줘야 CodeDeploy가 동작하는 걸로 알고 있는데
그 Role이 어떤 policy를 가질 지는 중요하지 않은 건가요?
Role이 없으면 CodeDeploy가 동작하지 않는덕 Role을 주고 그 Policy는 아무거나 주어도 잘 동작하길래 의문입니다.(github을 통해 배포했습니다)]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1578962624.500834;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>5307</wp:comment_id>
			<wp:comment_author><![CDATA[AWS Code Deploy를 통한 배포 자동화 &#8211; app4me]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.1pick.kr/2020/02/06/aws-code-deploy%eb%a5%bc-%ed%86%b5%ed%95%9c-%eb%b0%b0%ed%8f%ac-%ec%9e%90%eb%8f%99%ed%99%94/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.13.229]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2020-02-06 15:14:37]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2020-02-06 06:14:37]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] 배포 자동화 https://blog.dramancompany.com/2017/04/aws-code-deploy%eb%a5%bc-%ed%86%b5%ed%95%9c-%eb%b0%b0%ed%8f%a&#8230; [&#8230;]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1580969677.487096;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>6866</wp:comment_id>
			<wp:comment_author><![CDATA[CodeDeploy &#8211; Lifetime behind every seconds]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>https://yonghyuc.wordpress.com/2021/01/12/codedeploy/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.28.217]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2021-01-12 17:14:37]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2021-01-12 08:14:37]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] https://blog.dramancompany.com/2017/04/aws-code-deploy를-통한-배포-자동화/ [&#8230;]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1610439277.465957;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[빅데이터 프레임워크를 활용한 데이터 인프라 구축]]></title>
		<link>https://blog.dramancompany.com/2017/08/%eb%b9%85%eb%8d%b0%ec%9d%b4%ed%84%b0-%ed%94%84%eb%a0%88%ec%9e%84%ec%9b%8c%ed%81%ac%eb%a5%bc-%ed%99%9c%ec%9a%a9%ed%95%9c-%eb%8d%b0%ec%9d%b4%ed%84%b0-%ec%9d%b8%ed%94%84%eb%9d%bc-%ea%b5%ac%ec%b6%95/</link>
		<pubDate>Tue, 29 Aug 2017 06:16:16 +0000</pubDate>
		<dc:creator><![CDATA[jo.kim]]></dc:creator>
		<guid isPermaLink="false">http://blog.dramancompany.com/?p=826</guid>
		<description></description>
		<content:encoded><![CDATA[빅데이터 분석을 위한 인프라 구축에 대한 경험을 공유하고자 합니다. 최근 데이터 분석을 위한 데이터 처리 시간의 증가로 기존 데이터 처리방법의 한계를 경험하였습니다. 결국 빅데이터 프레임워크를 검토하고 최종적으로 기술을 선정하여 도입하게 되었습니다. 이 과정에서의 경험이 비슷한 고민을 하는 사람들에게도 도움이 될 것으로 여겨 글을 작성하고 공유하게 되었습니다.

많은 회사에서 그렇듯이 데이터를 기반으로 현재 서비스의 현황을 정확하게 파악하고 합리적인 의사결정을 할 수 있도록 여러 지표를 만들고 이를 정기적으로 모니터링 합니다. 때에 따라서는 가설을 세우고 이를 확인하기 위해 데이터를 이용하여 분석을 합니다. 가설을 세우고 데이터를 만들어 분석하는 전담 부서를 두기도 하지만 업무에 대한 지식과 관련 데이터는 업무 담당자가 가장 잘 알 수 있는 부분이므로 데이터를 분석하는 것은 모두에게 필요한 부분이라 생각합니다.

하지만 전체 데이터의 구조나 관련 기술이 부족한 업무 담당자가 분석을 위한 데이터를 처음부터 찾아서 보는 것은 매우 어려운 작업입니다.

저는 이러한 사람들이 좀 더 쉽게 데이터를 통해 원하는 분석 결과를 얻을 수 있도록 데이터 추출과 분석을 지원하는 업무를 하고 있습니다.&nbsp;사내에서는 이를 'Data Intelligence'라고 부르고 있으며, 타 팀에서 데이터를 효과적으로 분석할 수 있도록 저장된 데이터를 가공하여 추출하며, 경우에 따라서는 데이터를 수집하는 업무를 하고 있습니다.

<a href="https://blog.dramancompany.com/wp-content/uploads/2017/08/a2.png"><img class="wp-image-877 aligncenter" src="https://blog.dramancompany.com/wp-content/uploads/2017/08/a2.png" alt="" width="648" height="365"></a>
<h3><strong>무엇이 문제인가?</strong></h3>
데이터 사이즈의 크기가 늘어나면서 더 높은 처리 속도가 필요하였고, API 로그 등의 데이터를 DB 데이터와 연동해서 봐야하는 Needs가 증가했습니다.

데이터 추출 작업을 생각해보면, 데이터가 DB 테이블에 저장 되었을 경우 간단히 SQL 쿼리를 통해 원하는 데이터를 찾을 수 있습니다. 이 경우 데이터 기준을 요청자와 논의하면서 적절한 쿼리를 작성 후 엑셀로 추출하여 요청자에게 전달하게 됩니다. 이때 데이터 조회 속도가 너무 오래 걸린다면 날짜와 같은 키로 쿼리로 나누어서 조회하기도 하고 인덱스 등을 조정하기도 합니다.

만약 데이터 추출이 쿼리로 불가능하거나 처리 속도를 높일 필요가 있을 경우 Python, Java 등의 언어로 프로그램을 만들어 추출하기도 합니다. 때에 따라서는 중복된 데이터 처리를 피하기 위해 중간 과정의 데이터를 만들어 활용하기도 하며, 서버 사양을 높이거나 병렬 처리를 통해 최종 데이터 생성의 속도를 높이는 시도를 하기도 합니다.

많은 노력에도 불구하고 어떤 데이터의 경우는 이틀 이상 소요되는 경우가 많아 졌습니다.

또한 API로그를 통해서만 볼 수 있는 분석에 대한 요청도 있었습니다. 앱에서 버그가 발생하여 동일 API가 여러 번 호출 되는 경우가 있었는데 이 버그의 영향이 어느 정도 영향을 미쳤는지 파악하기 위해 API 로그를 살펴보아야 했습니다. 이러한 케이스의 로그 데이터 분석은 &nbsp;<a href="https://blog.dramancompany.com/2015/12/%EC%95%88%EC%A0%95%EC%A0%81%EC%9D%B8-%EC%84%9C%EB%B9%84%EC%8A%A4-%EC%9A%B4%EC%98%81%EC%9D%84-%EC%9C%84%ED%95%9C-%EC%84%9C%EB%B2%84-%EB%AA%A8%EB%8B%88%ED%84%B0%EB%A7%81-1/">ELK</a>, AWS Cloud Watch에서는 살펴보기에는 어려움이 있었습니다.

이러한 과거 데이터 처리, 추출 방식의 한계와 향후 더 원할한 분석을 위해 빅데이터 분석을 위한 인프라 구축을 고려하게 되었습니다.
<h3><strong>우리에게 필요한 것은 무엇인가?</strong></h3>
가장 먼저 선행 했던 업무는 요구사항을 명확히 이해하는 것부터 시작하였습니다.

데이터를 자주 보는 업무 담당자들과의 인터뷰를 통해 현재 데이터 추출에서의 어려움 등을 듣고 향후 변경될 경우 어떤 기능이 필요한지에 대한 이야기를 들었습니다. 이를 통해 기능적 관점의 요구사항을 도출 하였습니다. 한편으로는 데이터 추출, 분석을 지원하는 입장에서의 기술적 요구사항을 정리해 보았습니다.

이러한 모든 요구사항을 취합하여 기술적 관점과 기능적 관점을 구분하여 정리하였습니다. 현재 현황이 어떠한지 요구사항별 중요도는 어떠한지 등을 파악해보았습니다.

<strong>기능적 관점에서의 요구사항</strong>
<table>
<tbody>
<tr>
<td><strong>구분</strong></td>
<td><strong>요구사항</strong></td>
<td><strong>우선순위</strong></td>
<td><strong>As-Is</strong></td>
<td><strong>To-Be</strong></td>
</tr>
<tr>
<td>데이터 연결</td>
<td>다양한 정형/ 비정형 데이터를 연결해서 볼 수 있어야 한다

날짜에 별도 Annotation을 달 수 있어야 한다</td>
<td style="text-align: center;">B</td>
<td style="text-align: center;">X</td>
<td style="text-align: center;">O</td>
</tr>
<tr>
<td>데이터 가공/

추출</td>
<td>비 개발자도 손쉽게 데이터를 가공/ 추출 할 수 있어야 한다
<ul>
 	<li>데이터의 중간 단계별 가공(예: 피벗)이 쉬워야 한다</li>
 	<li>동일 쿼리에 대해 변수값을 바꿔가며 돌릴 수 있어야 한다</li>
</ul>
</td>
<td style="text-align: center;">A</td>
<td style="text-align: center;">▵</td>
<td style="text-align: center;">O</td>
</tr>
<tr>
<td>Export</td>
<td>CSV와 같은 형식의 파일로 데이터를 추출 할 수 있어야 한다</td>
<td style="text-align: center;">B</td>
<td style="text-align: center;">O</td>
<td style="text-align: center;">O</td>
</tr>
<tr>
<td>데이터 공유</td>
<td>다른 사람이 작성한 추출 로직을 쉽게 공유할 수 있어야 한다</td>
<td style="text-align: center;">B</td>
<td style="text-align: center;">▵</td>
<td style="text-align: center;">O</td>
</tr>
<tr>
<td>데이터 시각화</td>
<td>다양한 그래프(히스토그램, 코호트 차트 등), 차트 등을 지원해야 한다</td>
<td style="text-align: center;">A</td>
<td style="text-align: center;">▵</td>
<td style="text-align: center;">O</td>
</tr>
<tr>
<td>알림</td>
<td>미리 정의한 알림을 메일, 슬랙 등 다양한 채널로 받을 수 있어야 한다

알림 조건을 쉽게 설정할 수 있어야 한다
<ul>
 	<li>특정 데이터의 증감이 있는 경우</li>
 	<li>클릭, 노출 등에 관한 지표의 이상 변화 감지</li>
</ul>
</td>
<td style="text-align: center;">A</td>
<td style="text-align: center;">▵</td>
<td style="text-align: center;">O</td>
</tr>
</tbody>
</table>
<strong>기술적 관점에서의 요구사항</strong>
<table style="height: 148px; width: 715px;">
<tbody>
<tr>
<td style="width: 114px; text-align: center;"><strong>구분</strong></td>
<td style="width: 411px; text-align: center;"><strong>요구사항</strong></td>
<td style="width: 87px; text-align: center;"><strong>우선순위</strong></td>
<td style="width: 70px; text-align: center;"><strong>As-Is</strong></td>
<td style="width: 85px; text-align: center;"><strong>To-Be</strong></td>
</tr>
<tr>
<td style="width: 114px;">추출 속도</td>
<td style="width: 411px;">데이터 추출 시간이 빨라야 한다</td>
<td style="width: 87px; text-align: center;">A</td>
<td style="width: 70px; text-align: center;">▵</td>
<td style="width: 85px; text-align: center;">O</td>
</tr>
<tr>
<td style="width: 114px;">보안</td>
<td style="width: 411px;">테이블 구조와 원본 데이터가 데이터를 직접 추출하는 사람들에게 노출되지 않아야 한다</td>
<td style="width: 87px; text-align: center;">A</td>
<td style="width: 70px; text-align: center;">O</td>
<td style="width: 85px; text-align: center;">O</td>
</tr>
<tr>
<td style="width: 114px;">비용</td>
<td style="width: 411px;">데이터 추출 비용을 최소화 해야 한다</td>
<td style="width: 87px; text-align: center;">B</td>
<td style="width: 70px; text-align: center;">▵</td>
<td style="width: 85px; text-align: center;">▵</td>
</tr>
<tr>
<td style="width: 114px;">개발 생산성</td>
<td style="width: 411px;">개발 생산성이 좋아야 한다
<ul>
 	<li>추출 프로그램 작성이 쉬워야 한다</li>
 	<li>추출 인프라 구성이 쉬워야 한다</li>
</ul>
</td>
<td style="width: 87px; text-align: center;">A</td>
<td style="width: 70px; text-align: center;">▵</td>
<td style="width: 85px; text-align: center;">O</td>
</tr>
<tr>
<td style="width: 114px;">장애 내구성/

안정성</td>
<td style="width: 411px;">장애가 발생할 경우 바로 인지 할 수 있어야 한다

장애 발생시 최대한 빠르게/ 자동으로 복구 되어야 한다</td>
<td style="width: 87px; text-align: center;">A</td>
<td style="width: 70px; text-align: center;">▵</td>
<td style="width: 85px; text-align: center;">O</td>
</tr>
<tr>
<td style="width: 114px;">확장성(Scalability)</td>
<td style="width: 411px;">확장성 있는 구조 설계가 되어야 한다</td>
<td style="width: 87px; text-align: center;">C</td>
<td style="width: 70px; text-align: center;">X</td>
<td style="width: 85px; text-align: center;">O</td>
</tr>
</tbody>
</table>
요구 사항 분석을 통해 향후 데이터 추출을 위한 빅데이터 인프라의 모습을 대략적으로 생각해 볼 수 있었습니다.

<strong>&nbsp;</strong>
<h3><strong>Hadoop? Spark?</strong></h3>
<a href="http://hadoop.apache.org/">아파치 하둡 플랫폼(Hadoop)</a>은 막대한 볼륨의 데이터를 저장할 수 있는 구글 파일 시스템과 이러한 데이터를 빠르고 안정적으로 처리할 수 있는 <a href="https://static.googleusercontent.com/media/research.google.com/ko//archive/mapreduce-osdi04.pdf">구글 맵리듀스(Google MapReduce) </a>기술의 오픈소스 버전이라고 할 수 있습니다. 많은 기업들이 빠르게 증가하는 데이터(구조적, 반구조적, 비구조적)를 관리하기 위해 하둡을 채택하였습니다.

적은 비용으로 페타바이트 급의 데이터를 안정적으로 처리할 수 있음이 입증 되면서 빅테이터를 위한 범용 저장소 및 분석 플랫폼으로서 업계의 인정을 받았습니다. (<a href="https://en.wikipedia.org/wiki/Apache_Hadoop">2009년 4월 야후는 하둡으로 1테라바이트를 62초에 정렬하였음을 발표</a>)

아파치 하둡 프로젝트 자체는 데이터를 분산하여 저장할 수 있는 파일시스템인 HDFS와 데이터를 분산하여 처리하는 맵리듀스(MapReduce)만을 포함합니다. 이는 빅데이터를 분석하기 위한 모든 범주를 포함하지 않으므로 이를 보완하기 위한 프로젝트들이 생기면서 하둡 생태계(Hadoop Ecosystem)가 이루어지게 되었습니다.

<a href="https://blog.dramancompany.com/wp-content/uploads/2017/08/hadoop-ecosystem.png"><img class="aligncenter wp-image-844 size-full" src="https://blog.dramancompany.com/wp-content/uploads/2017/08/hadoop-ecosystem.png" alt="" width="640" height="360"></a>

최근 들어서는 분산 파일 시스템인 HDFS를 대체 하는 기술들과 분산처리 기술인 맵리듀스(MapReduce)를 대체 하는 기술들도 이 생태계에 포함되었습니다.

특히 <a href="https://spark.apache.org/">아파치 스파크(Spark)</a>의 경우 맵리듀스(MapReduce)를 충분히 대체할 수 있는 기술입니다. 아파치 재단에 따르면 스파크는 하둡 맵리듀스보다 최대 100배 더 빠르다고 합니다. 왜냐하면 스파크는 하드 드라이브로 읽고 쓰는 대신에 인 메모리(In-Memory)로 동작하고,&nbsp;맵리듀스는 클러스터로부터 데이터를 읽고 연산을 수행하며 클러스터에 다시 결과를 작성하여 시간이 소요되는 반면에 스파크는 이 과정을 한 곳에서 수행하기 때문입니다. 아파치 스파크의 공식 자료에 따르면 <a href="https://spark.apache.org/news/spark-wins-daytona-gray-sort-100tb-benchmark.html">2016년 100테라바이트 정렬에 512개의 노드로 98.8초 만에 완료</a>하였다고 합니다. 스파크의 이러한 특징으로 인해&nbsp;반복된 연산이 많이 발생하는 머신러닝과 같은 분야에서 그 효과가 극대화 됩니다.
<h3><strong>새로운 기술을 도입하는 것은 우리에게 꼭 필요한가?</strong></h3>
여러 자료들을 살펴보고 간단한 작업들을 관련 기술들을 가지고 활용해 보았습니다. 그러는 과정에서 하둡이 좋고 스파크가 좋은 것은 알겠는데 그렇다면 그 기술을 도입하는 것이 현재 상황에서 적절한가를 고민해보았습니다. 기술을 도입하게 되면 서버도 필요하고 셋팅과 운영, 관리에 대한 리소스 뿐만 아니라 기술을 학습하는 시간도 필연적으로 필요하기 때문입니다.

이러한 의문에 대한 답을 찾기 위해 여러 번의 실험을&nbsp;진행하며 기술 도입에 대한 feasibility 검증을 진행해 보았습니다.

큰 데이터를 빠르고 안정적으로 처리하는 부분이 저희 상황에서는 중요했습니다. 그렇기 때문에 많은 기업에서 채택하였고, 그 안정성 면에서도 검증이 되었던 하둡 맵리듀스(Hadoop MapReduce)를 가장 먼저 살펴보았습니다. 맵리듀스 프로그램은 Java로 구현해햐 하는데 매우 많은 코드 작성이 필요하고 어렵기 때문에 개발 생산성이 떨어지는 편입니다. 이를 보완하기 위해 스크립트 언어로 쉽게 맵리듀스 프로그래밍을 할 수 있는 Pig와 많은 사람들에게 익숙한 SQL로 프로그래밍 할 수 있는 Hive가 등장하였습니다. 실험에서는 현재 데이터를 생성하는 것 중에 가장 느리고 오래 걸리는 부분을 맵리듀스와 Pig, Hive로 구현하여 테스트하고 그 결과를 비교해 보았습니다.

<strong>기존 오래 걸렸던 지표를 맵리듀스(MapReduce), Pig, Hive로 실험한 결과 요약</strong>
<ul>
 	<li>기존 계산 방식의&nbsp;10%의 소요시간으로 동일 작업을 완료</li>
 	<li>개발 생산성 면에서는 맵리듀스에 비해 Pig, Hive가 매우 높음 (코드 작성량 맵리듀스&nbsp;대비 5%)</li>
 	<li>속도 면에서는 대량의 자료를 처리시 Pig, Hive에 비해 맵리듀스가 약 20% 정도 빠름</li>
 	<li>맵리듀스는 컴파일과 배포과정이 추가적으로 필요</li>
 	<li>Pig, Hive의 경우 수행 시간 뿐만 아니라 리소스 점유율(CPU, 메모리)이 높음</li>
 	<li>맵리듀스, Pig, Hive로 분산 처리 배치를 개발 할 경우 최적화 및 운영에 많은 시간이 소요될 것으로 예상</li>
</ul>
이 실험을 통해 기술에 대한 충분한 학습시간 없이 테스트를 진행 했음에도 불구하고 그 결과는 꽤 만족스러웠습니다.

이 외에도 여러 번의 테스트와 데이터 요청에 대한 작업을 기존 방법이 아닌 맵리듀스, Pig, Hive, 스파크 등으로 테스트 해보면서 최종적으로는 빅데이터 분석을 위해 인프라를 구축하는 것이 좋겠다는 결론을 내렸습니다.
<h3><strong>어떤 기술들을 사용했을 때 문제를 해결할 수 있는가?</strong></h3>
빅데이터 분석 인프라 구축을 결정하고 적합한 기술들을 선정하는 작업을 진행하였습니다. 기술들을 종류별로 나누고 요구사항과 부합하는지와 기술들 간의 비교를 통해 최종 기술들을 선정하였습니다.

<strong>&nbsp;</strong>

<strong>데이터 처리는 스파크(Spark)!</strong>

인프라 구성의 핵심은 스파크(Spark)였습니다. 기술들을 선정하는 과정에서 다른 기술들의 선택은 스파크를 지원하거나 보완하기 위해 선정했다고 할 수 있을 정도로 가장 중요한 부분이였습니다.

데이터 처리 기술들을 검토하는 과정에서 6개월 정도의 API 로그(약 8억건, 700Gb)를 전수 살펴봐야 알 수 있는 데이터 요청 건이 있었습니다. 앱의 버그로 인해 API에 얼마나 많은 중복 요청이 발생하는지 파악하려는 이슈였습니다. 200ms의 시간내로 앱에서 API 서버로 같은 내용이 호출된 경우를 중복이라 가정하면 이른 기존 방법으로 분석하는 것은 쉽지 않은 작업입니다. 하지만 이를 스파크로 로직을 구현하고 AWS EC2의 c4.8xLarge 스펙의 인스턴스 1대에 셋팅하여 작업을 수행했을 때 4시간이라는 짧은 시간 동안 전체 데이터 분석을 완료할 수 있었습니다.

스파크는 쉽게 사용할 수 있습니다. 구현 자체는 Scala로 되어 있지만 Java, Scala, Python, R로 프로그래밍 할 수 있도록 API를 제공합니다. 파이썬으로 하둡 HDFS에 저장된 파일을 읽어서 단어별 발생한 횟수를 &nbsp;계산하는 프로그램을 아래와 같은 형식으로 구현할 수 있습니다.

<a href="https://blog.dramancompany.com/wp-content/uploads/2017/08/a3.png"><img class="alignnone size-full wp-image-878" src="https://blog.dramancompany.com/wp-content/uploads/2017/08/a3.png" alt="" width="358" height="100"></a>

스파크는 많은 기능(Library)을 제공합니다. 가공하던 데이터를 임의의 테이블을 생성하고 쿼리로 조회 할 수 있고(Spark SQL), 실시간 데이터 처리도 쉽게 할 수 있습니다(Spark Streaming). 뿐만 아니라 머신러닝(MLlib), 그래프 분석(GraphX)도 쉽게 할 수 있도록 라이브러리를 제공할 수 있습니다. 데이터 준비, 기술적 분석(Descriptive analysis), 검색, 예측 분석, 기타 머신 학습과 그래프 프로세싱 등과 같은 고급분석에서도 별도의 기술이나 툴이 필요없이 스파크&nbsp;만으로 가능합니다.

<strong>DB </strong><strong>데이터나 서버 로그를 가져오기 위한 Sqoop! Logstash!</strong>

분산되어 있는 데이터를 가져와서 가장 먼저 S3에 저장하고 있습니다. HDFS에 저장하는 것도 검토하였지만 속도차이가 생각보다 크지 않았고 비용, 안정성, 생산성, 관리 이슈 등 많은 부분에서 S3가 더 만족스러웠기 때문입니다.

DB에 있는 데이터는 데이터의 양이 많지 않으면 스파크에서 바로 가져와서 사용하고 있으며 데이터 양이 많을 경우 Sqoop을 이용해서 가져오고 있습니다. Sqoop은 HDFS, RDBMS, DW, NoSQL등 다양한 저장소에 대용량 데이터를 신속하게 전송할 수 있는 방법을 제공하고 있습니다. 이러한 다양한 저장소의 데이터를 Sqoop을 이용하면 간단히 매우 빠르게 가져올 수 있었습니다.

서버 로그의 경우는 Flume, Fluentd, Logstash 등을 이용해서 가져올 수 있는데 기존 부터 <a href="https://blog.dramancompany.com/2015/12/%EC%95%88%EC%A0%95%EC%A0%81%EC%9D%B8-%EC%84%9C%EB%B9%84%EC%8A%A4-%EC%9A%B4%EC%98%81%EC%9D%84-%EC%9C%84%ED%95%9C-%EC%84%9C%EB%B2%84-%EB%AA%A8%EB%8B%88%ED%84%B0%EB%A7%81-1/">ELK 스택을 이용해서 로그를 분석</a>하고 있었기 때문에 Logstash를 기존과 동일하게 사용하고 있으며 Elastic Search로 보낼 때 S3에도 함께 보내도록 설정하여 사용하고 있습니다.

<strong>로그 파일도 DB 테이블처럼, Presto! </strong>

스파크를 이용하여 충분히 만족스럽게 데이터를 처리할 수 있었지만 개발에 대한 지식이 없는 다른 팀에게 데이터를 스파크를 이용해서 보게 하는 것은 매우 비효율적입니다. 스파크의 경우 대규모 데이터베이스에 상호적이고(Interactive), 즉각적인 쿼리를 실행 하는데는 적합하지 않습니다. 이러한 스파크의 단점을 보완하기 위해 Presto를 이용하였습니다.

Presto는 데이터를 SQL로 분석하는 Interactive Analysis에 최적화된 오픈 소스 분산 SQL 쿼리 엔진입니다. 페이스북에서 데이터 300PB 이상의 데이터 분석을 위해 개발하여 공개하였고, 현재 아파치 재단의 Top-Level 프로젝트로 등록되어 있습니다. 넷플릭스, Airbnb 등 많은 회사에서 사용하여 그 성능이 입증되었습니다.

스파크와 마찬가지로 메모리 상에서 데이터를 처리하여 매우 빠르고 효율적입니다. Presto를 사용함으로 인해 S3에 저장된 로그 등의 파일로 이루어진 데이터를 DB 테이블과 쉽게 조인하여 빠르게 분석할 수 있었고 모든 데이터에 대한 접근을 Presto를 통해 접근하게 함으로써 데이터에 대한 권한 관리도 효율적으로 할 수 있었습니다.

<strong>어떤 데이터든 SQL로 조회하고 간단히 시각화 할 수 있는 Superset!</strong>

사실 Presto 자체는 데이터를 인터렉티브하게 조회 할 수 있는 엔진이기 때문에 다른 팀에서 사용하기에는 어려움이 있습니다. 단지 커맨드라인 툴만 제공하기 있기 때문에 SQL 명령어에 매우 익숙해야만 잘 사용할 수가 있습니다.

하지만 Superset을 이용하면 그런 불편함을 덜 수 있습니다. Superset은 데이터 분석을 쉽게 할 수 있도록 도와주는 Business Intelligence 웹 어플리케이션 입니다. Airbnb에서 개발하여 오픈소스로 공개한 프로젝트이며 현재는 Apache Incubating Project로 등록되어 있습니다.

<a href="https://blog.dramancompany.com/wp-content/uploads/2017/08/b.gif"><img class="wp-image-846 aligncenter" src="https://blog.dramancompany.com/wp-content/uploads/2017/08/b.gif" alt="" width="791" height="453"></a>

백엔드를 Presto를 두어 사용할 수 있기 때문에 누구나 쉽게 관계형 데이터베이스에 저장된 데이터, 파일로 이루어진 정형화된 데이터들을 쉽게 분석해 볼 수 있습니다. 또한 간단한 대쉬보드로도 활용할 있어 별도의 대쉬보드 솔루션을 사용하지 않는다면 만족스럽게 활용해 볼 수 있습니다.

<a href="https://blog.dramancompany.com/wp-content/uploads/2017/08/c.gif"><img class="wp-image-847 aligncenter" src="https://blog.dramancompany.com/wp-content/uploads/2017/08/c.gif" alt="" width="798" height="431"></a>

<strong>데이터를 자유 자재로 다룰 수 있게 도와주는 Zeppelin!</strong>

데이터를 가공하는 작업의 경우 각 단계별 많은 데이터 검증이 필요합니다. 그렇기 때문에 프로그램을 짜고 디버깅해서 보는 것보다 코드 몇 줄을 짜고 바로 데이터를 확인해 볼 수 있는 인터렉티브한 방식이 효율적일 때가 많습니다. 제플린은 이를 불편한 커맨드라인이 아닌 웹에서 쉽고 효율적으로 해줄 수 있는 어플리케이션입니다. 제플린은 한국의 NF랩스에서 2013년 개발하였고 2014년 12월 아파치 인큐베이터 프로그램에 편입되었다가 그 후 1년반만에 Top-Level 프로젝트까지 되었습니다.

<a href="https://blog.dramancompany.com/wp-content/uploads/2017/08/z.png"><img class="wp-image-848 aligncenter" src="https://blog.dramancompany.com/wp-content/uploads/2017/08/z.png" alt="" width="811" height="461"></a>

스파크로 데이터를 분석할 때 매우 편리함은 물론 다양한 데이터베이스, 언어들의 인터프리터를 제공하고 있어 매우 활용도가 높습니다. 유사한 Jupyter Notebook을 함께 고려하였지만 타 팀과의 협업을 할 경우 제플린이 여러면에서 더 좋겠다고 판단하여 최종적으로는 제플린을 사용하고 있습니다.

<strong>&nbsp;</strong>

<strong>데이터를 이 시간에 만들어줘! Airflow!</strong>

데이터에 대한 요청은 스팟성 분석에 대한 요청도 많지만 지표와 같이 계속적으로 봐야하는 데이터들도 많습니다. 그 양이 적었을 경우 간단히 프로그램을 만들고 크론탭에서 스케줄로 등록할 수 있습니다. 하지만 그러한 배치 프로그램을 증가 하면 고려해야 할 부분이 매우 많습니다. 태스크들 간의 종속성도 관리해야 하고, 배치가 실패 했을 경우 이를 빨리 파악해서 조치하는 것도 필요합니다. 또한 현재 등록된 배치를 관리하고 모니터링 하는 것이 쉽지만은 않습니다. 이러한 작업을 효율적으로 할 수 있는 많은 어플리케이션(Airflow, Luigi, Pinball, Azkaban, Oozie 등)들이 존재합니다. 여러 방면에서 비교 검토를 통해 최종적으로 Airflow를 사용하게 되었습니다.

<strong>&nbsp;<a href="https://blog.dramancompany.com/wp-content/uploads/2017/08/airflow.gif"><img class="aligncenter wp-image-867 size-full" src="https://blog.dramancompany.com/wp-content/uploads/2017/08/airflow.gif" alt="" width="1454" height="960"></a></strong>

Airflow를 사용함으로써 전체 등록된 배치 프로그램들을 한눈에 살펴 보는 것 뿐만 아니라 각각의 프로그램의 단계별 현황까지 확인 후 쉽게 데이터 재생성과 같은 조치를 취할 수 있습니다. Slack과의 연동을 통해 실패할 경우 바로 파악해 볼 수도 있습니다.
<h3><strong>최종적인 모습은?</strong></h3>
빅데이터 플랫폼을 활용한 데이터 인프라의 데이터 처리 단계별 사용하는 기술들의 흐름을 대략적으로 표현한 Conceptual Architecture는 아래와 같습니다.

크게는 데이터 다양한 데이터 저장소(Storage)에서 스케줄 등의 이벤트(Scheduling)를 통해 데이터를 가공(Processing)하여 저장(Warehouse) 하고,&nbsp; 저장된 데이터에서 최종적으로 사용자가 원하는 데이터를 쉽고 효율적으로 탐색 할 수 있게(Exploration) 하는 영역으로 나눌 수 있다. 경우에 따라서는 저장된 데이터를 효율적으로 볼 수 있도록 데이터의 구조 등을 저장(Meta Store)하여 활용될 수 있습니다.

<a href="https://blog.dramancompany.com/wp-content/uploads/2017/08/a1-1.png"><img class="size-full wp-image-876 aligncenter" src="https://blog.dramancompany.com/wp-content/uploads/2017/08/a1-1.png" alt="" width="1017" height="484"></a>

AWS의 EC2를 이용하여 인프라를 구성하였으며, Master Instance(m4.xlarge * 1개)와 Slave Instance Group(m4.xlarge * 2개) 로 이루어져 있습니다. Master Instance에는 분산 처리 솔류션들의 Master Process와 기타 솔류션들이 설치 되어 있으며, Slave Instance 그룹에는 분산 처리 솔류션들의 Slave Process들이 존재합니다.

<strong>&nbsp;</strong>
<h3><strong>되돌아보면...</strong></h3>
올해 초 검토를 시작으로 약 7개월 만에 현재와 같은 구성으로 운영되고 있습니다. 그동안 많은 분석 데이터와 지표들이 구성한 인프라를 통해 만들 졌으며, 많은 시행착오를 통해 현재는 어느 정도 안정적으로 운영되고 있습니다.

그 중 가장 큰 시행착오를 이야기하면 초기 Amazon EMR을 통해 인프라를 구성하였다가 EC2에서 새로 구성한 것을 말씀 드릴 수 있을 것 같습니다. Amazon EMR은 Spark, Presto, Zeppelin 등 다양한 분산처리 하둡 프레임워크를 매우 쉽고 비용 효율적으로 구성할 수 있는 서비스 입니다. AWS에서 미사용 EC2 인스턴스를 입찰하여 사용할 수 있는 스팟 인스턴스를 이용하게 되면 최대 90% 이상 할인된 가격으로도 이용할 수 있습니다.

하지만 스팟 인스턴스의 경우 입찰 비용을 초과하게 되면 서비스가 중단되는데, 인프라를 구성하는 과정에서 Superset, Airflow 등 중단되면 안되는 서비스가 추가되어 스팟 인스턴스를 이용할 수 없었고, 결정적으로는 EMR의 Master 서버가 예상치 못한 이슈로 중단되어 전체 구성을 복구했던 사건이 발생하여 검토 후 모두 EC2에서 새로 구성하는 작업을 하게 되었습니다. Master 서버가 중단된 이유는 서버의 디스크가 충분치 않아서 발생된 것으로 확인되었지만, Master 서버가 중단되면 EMR을 새로 구성해야 되는 것과 스팟 인스턴스를 사용할 수 없었던 이유로 인해 EC2로 전환하게 되었습니다. 현재 인프라로 처리하기 힘든 매우 큰 처리량이 필요한 스팟성 작업의 경우 EMR은 가장 먼저 검토할 것 같습니다.

최근 많은 빅데이터 인프라 구성에서 고려하는 실시간 처리나 더 빠르고 효율적인 스토리지, 데이터 분석 서비스 등이 빠져있다고 생각할 수 있습니다. 현재의 인프라가 물론 최적은 아닙니다. 언제든지 다시 검토되어 사용하는 솔류션들이 추가될 수 있습니다. 하지만 인프라를 구성하면서 우리의 상황에서 가장 필요로 하는 구성을 계속적으로 고민하였고 그 흔적을 최대한 이 글에 남기려고 하였습니다. 비슷한 고민을 하거나 이러한 분야에 관심을 가진 사람들에게 약간 이라도 도움이 되었길 바라며 이 글을 마칩니다.
<h3><strong>References</strong></h3>
<ul>
 	<li><a href="https://blog.dramancompany.com/2015/12/%EC%95%88%EC%A0%95%EC%A0%81%EC%9D%B8-%EC%84%9C%EB%B9%84%EC%8A%A4-%EC%9A%B4%EC%98%81%EC%9D%84-%EC%9C%84%ED%95%9C-%EC%84%9C%EB%B2%84-%EB%AA%A8%EB%8B%88%ED%84%B0%EB%A7%81-1/">안정적인 서비스 운영을 위한 서버 모니터링</a></li>
 	<li><a href="https://mydataexperiments.com/2017/04/11/hadoop-ecosystem-a-quick-glance/">Hadoop Ecosystem – A Quick Glance</a></li>
 	<li><a href="https://medium.com/airbnb-engineering/data-infrastructure-at-airbnb-8adfb34f169c">Data Infrastructure at Airbnb</a></li>
 	<li><a href="https://www.slideshare.net/JenAman/netflix-productionizing-spark-on-yarn-for-etl-at-petabyte-scale">Netflix - Productionizing Spark On Yarn For ETL At Petabyte Scale</a></li>
 	<li><a href="http://spark.apache.org/">Apache Spark</a></li>
 	<li><a href="http://hadoop.apache.org/">Apache Hadoop</a></li>
 	<li><a href="http://sqoop.apache.org/">Apache Sqoop</a></li>
 	<li><a href="https://superset.incubator.apache.org/">Apache Superset</a></li>
 	<li><a href="https://airflow.incubator.apache.org/">Apache Airflow</a></li>
 	<li><a href="https://zeppelin.apache.org/">Apache Zeppelin</a></li>
 	<li><a href="https://prestodb.io/">Presto</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>826</wp:post_id>
		<wp:post_date><![CDATA[2017-08-29 15:16:16]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-08-29 06:16:16]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-02-23 23:26:20]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-02-23 14:26:20]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%eb%b9%85%eb%8d%b0%ec%9d%b4%ed%84%b0-%ed%94%84%eb%a0%88%ec%9e%84%ec%9b%8c%ed%81%ac%eb%a5%bc-%ed%99%9c%ec%9a%a9%ed%95%9c-%eb%8d%b0%ec%9d%b4%ed%84%b0-%ec%9d%b8%ed%94%84%eb%9d%bc-%ea%b5%ac%ec%b6%95]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="airflow"><![CDATA[airflow]]></category>
		<category domain="post_tag" nicename="hadoop"><![CDATA[hadoop]]></category>
		<category domain="post_tag" nicename="presto"><![CDATA[presto]]></category>
		<category domain="post_tag" nicename="spark"><![CDATA[spark]]></category>
		<category domain="post_tag" nicename="superset"><![CDATA[superset]]></category>
		<category domain="category" nicename="develop"><![CDATA[Tech]]></category>
		<category domain="post_tag" nicename="zeppelin"><![CDATA[zeppelin]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[4]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_754e2b79afed4c3b95366b71fe52272a]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[right-sidebar]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_slogan]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_subslogan]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_header_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_scroll_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_bottom_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_footer_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_view_post_info]]></wp:meta_key>
		<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_post_icons]]></wp:meta_key>
		<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729509818;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:2847;}i:1;a:1:{s:2:"id";i:3642;}i:2;a:1:{s:2:"id";i:2629;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_single_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:17:{s:8:"subtitle";s:0:"";s:6:"format";s:8:"standard";s:5:"video";s:0:"";s:7:"gallery";s:0:"";s:11:"source_name";s:0:"";s:10:"source_url";s:0:"";s:8:"via_name";s:0:"";s:7:"via_url";s:0:"";s:8:"override";a:1:{i:0;a:11:{s:18:"single_blog_custom";s:0:"";s:7:"sidebar";s:0:"";s:14:"second_sidebar";s:0:"";s:14:"share_position";s:0:"";s:17:"share_float_style";s:0:"";s:16:"post_date_format";s:0:"";s:23:"post_date_format_custom";s:0:"";s:21:"post_reading_time_wpm";s:0:"";s:20:"zoom_button_out_step";s:1:"1";s:19:"zoom_button_in_step";s:1:"1";s:17:"number_popup_post";s:1:"1";}}s:14:"image_override";a:1:{i:0;a:2:{s:26:"single_post_thumbnail_size";s:0:"";s:24:"single_post_gallery_size";s:0:"";}}s:22:"trending_post_position";s:0:"";s:19:"trending_post_label";s:0:"";s:20:"sponsored_post_label";s:0:"";s:19:"sponsored_post_name";s:0:"";s:18:"sponsored_post_url";s:0:"";s:19:"sponsored_post_logo";s:0:"";s:19:"sponsored_post_desc";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle_flag]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1904]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_format_gallery_images]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:2:"id";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>1804</wp:comment_id>
			<wp:comment_author><![CDATA[강민수]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[wavity@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[183.98.136.133]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2018-01-09 16:34:24]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2018-01-09 07:34:24]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[정말 좋은 내용입니다.
잘 읽었고 많은 도움이 되었습니다.
고맙습니다.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1515483264.32807;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>2087</wp:comment_id>
			<wp:comment_author><![CDATA[yjkim]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[yjkim0083@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[121.165.242.49]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2018-05-11 16:35:56]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2018-05-11 07:35:56]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[잘 읽고 갑니다.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1526024156.309052;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>2158</wp:comment_id>
			<wp:comment_author><![CDATA[Kesus Kim]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[kesuskim@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://blog.kesuskim.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[147.46.67.170]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2018-07-03 10:01:17]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2018-07-03 01:01:17]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[좋은 경험담 공유 정말로 감사합니다.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1530579677.749307;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>2236</wp:comment_id>
			<wp:comment_author><![CDATA[김정훈]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[sotl495@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[218.234.56.116]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2018-08-30 17:58:29]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2018-08-30 08:58:29]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[좋은 경험 공유 감사합니다.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1535619509.3239;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>2361</wp:comment_id>
			<wp:comment_author><![CDATA[홍수영]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[soo1025@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://dodo-it.tistory.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[203.225.81.144]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2018-12-10 18:04:55]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2018-12-10 09:04:55]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[좋은내용 잘 읽고 갑니다. 고수시네요..^^]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1544432695.452692;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>2627</wp:comment_id>
			<wp:comment_author><![CDATA[김정민]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[wjdals0304@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.103.12]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2019-01-27 20:33:43]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2019-01-27 11:33:43]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[잘 읽었습니다!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1548588823.078793;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>4153</wp:comment_id>
			<wp:comment_author><![CDATA[최진호]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[jinho@actgames.co.kr]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.28.217]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2019-09-04 11:27:17]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2019-09-04 02:27:17]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[좋은 글 감사합니다.
DB에 있는 Log 데이터를 조회하고 분석하는 도구로, Zepplin 과 Superset 을 보고 있는데,
두 툴이 어떻게 다른지 경험해보신 경험을 바탕으로 조언 부탁드립니다.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1567564038.050284;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>6145</wp:comment_id>
			<wp:comment_author><![CDATA[한혜인]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[rainbow1722@naver.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.28.217]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2020-08-04 16:22:49]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2020-08-04 07:22:49]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[큰 그림을 잡는데 많은 도움이 되었습니다. 감사합니다!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1596525769.871522;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>6179</wp:comment_id>
			<wp:comment_author><![CDATA[서서준]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[ajdifo@naver.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.28.217]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2020-08-14 17:46:01]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2020-08-14 08:46:01]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[세상에... 내용이 많지만 빼놓고 읽을 부분이 하나도 없는 좋은 글입니다.. 정말 감사합니다!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1597394761.782608;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[Firebase Remote Config로 배포없이 운영하기]]></title>
		<link>https://blog.dramancompany.com/2018/04/firebase-remote-config%eb%a1%9c-%eb%b0%b0%ed%8f%ac%ec%97%86%ec%9d%b4-%ec%9a%b4%ec%98%81%ed%95%98%ea%b8%b0/</link>
		<pubDate>Mon, 09 Apr 2018 01:30:03 +0000</pubDate>
		<dc:creator><![CDATA[rfrost]]></dc:creator>
		<guid isPermaLink="false">http://blog.dramancompany.com/?p=923</guid>
		<description></description>
		<content:encoded><![CDATA[<p id="adeb" class="graf graf--p graf-after--h3">라이브로 운영하는 서비스는 항상 운영이슈가 존재합니다. 운영이슈는 사용자의 요구를 최대한 실시간으로 대응하여 불편함을 줄이고 만족도를 높이는 것을 의미합니다. 예를 들어 CS, 공지사항 부터 장애 모니터링 및 대응, 피드백 수집 후 개선까지도 모두 운영이슈로 볼 수 있습니다. 이 때 운영팀에서 가장 중요하게 생각하는 것은 실시간 입니다. 운영팀은 공지사항, 장애 등 이슈가 있을 때 원하는 시간에 바로바로 대응할 수 있는 시스템을 원합니다.</p>
<p id="7364" class="graf graf--p graf-after--p">하지만 앱은 개발, 리뷰, 테스트, 스토어 업로드 등 여러 과정을 거쳐야 하므로 변경사항을 바로 반영하기가 힘듭니다. 이는 운영팀이 원하는 실시간과 거리가 멉니다. 운영팀이 원하는 것은 다음과 같습니다.</p>

<ol class="postList">
 	<li id="ce07" class="graf graf--li graf-after--p">개발자를 통하지 않고 스스로 변경 가능하다.</li>
 	<li id="9079" class="graf graf--li graf-after--li">코드를 손대지 않고 안전하게 변경한다.</li>
 	<li id="3389" class="graf graf--li graf-after--li">배포하지 않고 변경사항을 적용한다.</li>
 	<li id="1895" class="graf graf--li graf-after--li">원하는 사용자에게만 변경사항을 적용한다.</li>
</ol>
<p id="1e47" class="graf graf--p graf-after--li">어떻게 운영팀이 원하는 이것을 이룰 수 있을까요?</p>

<figure id="3aba" class="graf graf--figure graf-after--p">
<div class="aspectRatioPlaceholder is-locked">
<div class="progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded" data-image-id="1*tadpqGa9KjLphMZYo6WgRA.jpeg" data-width="1920" data-height="1080" data-is-featured="true" data-action="zoom" data-action-value="1*tadpqGa9KjLphMZYo6WgRA.jpeg" data-scroll="native">

[caption id="" align="aligncenter" width="1600"]<img class="progressiveMedia-image js-progressiveMedia-image" src="https://cdn-images-1.medium.com/max/1600/1*tadpqGa9KjLphMZYo6WgRA.jpeg" alt="" width="1600" height="900" data-src="https://cdn-images-1.medium.com/max/1600/1*tadpqGa9KjLphMZYo6WgRA.jpeg"> 해답은... 리모트 컨피그[/caption]

</div>
</div></figure>
<p class="graf graf--p graf-after--figure">리모트 컨피그는 사용자가 앱 업데이트를 통하지 않고 동작을 변경할 수 있는 실시간 클라우드 서비스 입니다. 사용 시나리오는 다음과 같습니다.</p>

<ol class="postList">
 	<li id="6c24" class="graf graf--li graf-after--p">Firebase에 앱의 동작을 제어하는 값을 정의한다.</li>
 	<li id="43e0" class="graf graf--li graf-after--li">앱에서 Firebase에 정의된 값을 가져와 적용한다.</li>
 	<li id="bc28" class="graf graf--li graf-after--li">배포 없이 업데이트 된 새로운 동작을 확인하다.</li>
</ol>
<p id="8181" class="graf graf--p graf-after--li">2,3번의 작업을 미리 앱에 배포해 놓으면, 운영팀에서 1번의 작업을 통해 배포 없이 자동으로 앱 업데이트가 가능합니다. 그러면 이제 사용법을 익혀봅시다.</p>

<h3 class="graf graf--p graf-after--li">1. Firebase, 리모트 컨피그&nbsp;설치하기</h3>
<p id="0b88" class="graf graf--p graf-after--h4">Gradle에 의존성을 정의하고, Firebase Console에서 google-services.json을 받아와 app module에 추가합니다.</p>

<pre name="d0bb" id="d0bb" class="graf graf--pre graf-after--p">dependencies {
    classpath 'com.google.gms:google-services:3.0.0'
}</pre>
<pre name="57b9" id="57b9" class="graf graf--pre graf-after--pre">dependencies {
    compile 'com.google.firebase:firebase-core:10.2.0'
    compile 'com.google.firebase:firebase-config:10.2.0'
}

// Add this at the bottom of build.gradle in app module
apply plugin: 'com.google.gms.google-services'</pre>
<figure id="ea11" class="graf graf--figure graf-after--pre">
<div class="aspectRatioPlaceholder is-locked">
<div class="aspectRatioPlaceholder-fill">

[caption id="" align="aligncenter" width="1600"]<img class="progressiveMedia-image js-progressiveMedia-image" src="https://cdn-images-1.medium.com/max/1600/1*HwLZ93J-UwQSFGclrLbQkA.png" alt="" width="1600" height="410" data-src="https://cdn-images-1.medium.com/max/1600/1*HwLZ93J-UwQSFGclrLbQkA.png"> google-services.json을 다운로드 후 app module에&nbsp;위치[/caption]

</div>
</div></figure>
<h3 id="4daa" class="graf graf--h4 graf-after--figure">2. 구글 플레이 서비스 설치&nbsp;체크</h3>
<p id="64f9" class="graf graf--p graf-after--h4">리모트 컨피그는 구글 플레이 서비스가 기기에 설치되어 있어야 사용 가능합니다. 앱을 시작할 때 구글 플레이 서비스 설치 여부를 확인하고, 안되어있다면 사용자에게 설치를 유도할 수 있도록 에러 팝업을 띄어줍니다.</p>

<pre class="lang:default decode:true ">private void checkGooglePlayServices() {
    GoogleApiAvailability googleApiAvailability = GoogleApiAvailability.getInstance();
    int status = googleApiAvailability.isGooglePlayServicesAvailable(context);

    if (status != ConnectionResult.SUCCESS) {
        Dialog dialog = googleApiAvailability.getErrorDialog(activity, status, -1);
        dialog.setOnDismissListener(dialogInterface -&gt; finish());
        dialog.show();

        googleApiAvailability.showErrorNotification(context, status);
    }
}</pre>
&nbsp;
<h3 id="6b6f" class="graf graf--h4 graf-after--pre">3. 어드민에 값&nbsp;추가하기</h3>
<p id="f846" class="graf graf--p graf-after--h4">이제 운영팀이 자유롭게 변경하고 싶은 값을 정의해봅시다. 값 정의는 Fireabse 콘솔에 있는 리모트 컨피그 어드민에서 가능합니다.</p>

<figure id="686d" class="graf graf--figure graf-after--p">
<div class="aspectRatioPlaceholder is-locked">
<div class="aspectRatioPlaceholder-fill">

[caption id="" align="aligncenter" width="1600"]<img class="progressiveMedia-image js-progressiveMedia-image" src="https://cdn-images-1.medium.com/max/1600/1*Sc1x-W2LSitCNELLgqvqhQ.png" alt="" width="1600" height="600" data-src="https://cdn-images-1.medium.com/max/1600/1*Sc1x-W2LSitCNELLgqvqhQ.png"> 리모트 컨피그 어드민에서 매개변수를 key, value 형태로 추가할 수&nbsp;있습니다.[/caption]

</div>
</div>
<figcaption class="imageCaption"></figcaption><figcaption class="imageCaption">

[caption id="" align="aligncenter" width="1600"]<img class="progressiveMedia-image js-progressiveMedia-image" src="https://cdn-images-1.medium.com/max/1600/1*eujrvHoc_GAhs4BFdi3J6g.png" alt="" width="1600" height="741" data-src="https://cdn-images-1.medium.com/max/1600/1*eujrvHoc_GAhs4BFdi3J6g.png"> 추가된 값들은 다음과 같이&nbsp;보여집니다.[/caption]

</figcaption></figure>
<h3 id="fa49" class="graf graf--h4 graf-after--figure">4. 리모트 컨피그&nbsp;초기화하기</h3>
<p id="b374" class="graf graf--p graf-after--h4">어드민에서 정의한 값들을 받아오기 위해 리모트 컨피그 객체를 초기화 합니다.</p>

<pre class="lang:default decode:true">public static void initialize() {
    FirebaseRemoteConfig remoteConfig = FirebaseRemoteConfig.getInstance();
    FirebaseRemoteConfigSettings configSettings = new FirebaseRemoteConfigSettings.Builder()
            // Debug일 때 Developer Mode를 enable 하여 캐쉬 설정을 변경한다.
            .setDeveloperModeEnabled(BuildConfig.DEBUG)
            .build();

    remoteConfig.setConfigSettings(configSettings);
    // 로컬 기본값을 저장한 xml을 설정한다.
    remoteConfig.setDefaults(R.xml.remote_config_defaults);

    // 기본 캐쉬 만료시간은 12시간이다. Developer Mode 여부에 따라 fetch()에 적설한 캐시 만료시간을 넘긴다.
    remoteConfig.fetch(0).addOnCompleteListener(task -&gt; {
        if (task.isSuccessful()) remoteConfig.activateFetched();
    });
}</pre>
<p id="5cf4" class="graf graf--p graf-after--pre">setDefaults()로 설정한 remote_config_defaults.xml 에서는 어드민에서 값을 못받아올 경우 사용할 로컬 기본값들을 정의합니다.</p>

<pre class="lang:default decode:true ">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;defaultsMap&gt;
&lt;entry&gt;
    &lt;key&gt;example_key&lt;/key&gt;
    &lt;value&gt;example local default value&lt;/value&gt;
&lt;/entry&gt;
&lt;entry&gt;
    &lt;key&gt;condition_example_key&lt;/key&gt;
    &lt;value&gt;condition example local default value&lt;/value&gt;
&lt;/entry&gt;
&lt;/defaultsMap&gt;</pre>
&nbsp;
<h3 class="graf graf--h4 graf-after--pre">5. 어드민에서 값&nbsp;가져오기</h3>
<p id="cfa5" class="graf graf--p graf-after--h4">리모트 컨피그 객체의 getString() 메소드를 활용하여 넘겨준 key의 value를 가져옵니다.</p>

<pre class="lang:java decode:true  ">public static String getConfigValue(String key) {
    FirebaseRemoteConfig remoteConfig = FirebaseRemoteConfig.getInstance();
    return remoteConfig.getString(key);
}</pre>
<h3 id="9be9" class="graf graf--h3 graf-after--pre">리멤버에서의 활용&nbsp;예시</h3>
<p id="e5b0" class="graf graf--p graf-after--h3">현재 리멤버에서는 다음과 같은 시나리오에서 리모트 컨피그를 활용하고 있습니다.</p>

<h4>1. 메인 공지사항 팝업 이미지 및 액션</h4>
<figure id="37cc" class="graf graf--figure graf-after--li">
<div class="aspectRatioPlaceholder is-locked">
<div class="progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded" data-image-id="1*4Nke7QJjcHtVrY00oAhbVw.png" data-width="567" data-height="1008" data-scroll="native"><canvas class="progressiveMedia-canvas js-progressiveMedia-canvas" width="42" height="75"></canvas><img class="progressiveMedia-image js-progressiveMedia-image" src="https://cdn-images-1.medium.com/max/1600/1*4Nke7QJjcHtVrY00oAhbVw.png" data-src="https://cdn-images-1.medium.com/max/1600/1*4Nke7QJjcHtVrY00oAhbVw.png"></div>
</div></figure>
<h4 id="b24d" class="graf graf--p graf-after--figure">2. Drawer 추천유도 텍스트</h4>
<figure id="7ea8" class="graf graf--figure graf-after--p">
<div class="aspectRatioPlaceholder is-locked">
<div class="progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded" data-image-id="1*51OLlpcxdoQJPc_onVu6gQ.png" data-width="567" data-height="1008" data-scroll="native"><canvas class="progressiveMedia-canvas js-progressiveMedia-canvas" width="42" height="75"></canvas><img class="progressiveMedia-image js-progressiveMedia-image" src="https://cdn-images-1.medium.com/max/1600/1*51OLlpcxdoQJPc_onVu6gQ.png" data-src="https://cdn-images-1.medium.com/max/1600/1*51OLlpcxdoQJPc_onVu6gQ.png"></div>
</div></figure>
<h4 id="aef8" class="graf graf--p graf-after--figure">3. 촬영 후 추천유도 텍스트, 이미지 및 액션</h4>
<figure id="df55" class="graf graf--figure graf-after--p">
<div class="aspectRatioPlaceholder is-locked">
<div class="progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded" data-image-id="1*woMr0GB9XjTCdekR66V3lQ.png" data-width="567" data-height="1008" data-scroll="native"><canvas class="progressiveMedia-canvas js-progressiveMedia-canvas" width="42" height="75"></canvas><img class="progressiveMedia-image js-progressiveMedia-image" src="https://cdn-images-1.medium.com/max/1600/1*woMr0GB9XjTCdekR66V3lQ.png" data-src="https://cdn-images-1.medium.com/max/1600/1*woMr0GB9XjTCdekR66V3lQ.png"></div>
</div></figure>
<h4 id="b1ef" class="graf graf--p graf-after--figure">4. FAB 가이드 이미지 및 액션</h4>
<figure id="9176" class="graf graf--figure graf-after--p">
<div class="aspectRatioPlaceholder is-locked">
<div class="progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded" data-image-id="1*AUIopIeFfevdP0Px7YrpFw.png" data-width="567" data-height="1008" data-scroll="native"><canvas class="progressiveMedia-canvas js-progressiveMedia-canvas" width="42" height="75"></canvas><img class="progressiveMedia-image js-progressiveMedia-image" src="https://cdn-images-1.medium.com/max/1600/1*AUIopIeFfevdP0Px7YrpFw.png" data-src="https://cdn-images-1.medium.com/max/1600/1*AUIopIeFfevdP0Px7YrpFw.png"></div>
</div></figure>
<h4 id="6cab" class="graf graf--p graf-after--figure">5. 대기명함 가이드 텍스트</h4>
<div class="section-inner sectionLayout--outsetRow" data-paragraph-count="2">
<figure id="8e34" class="graf graf--figure graf--layoutOutsetRow is-partialWidth graf-after--p" data-scroll="native">
<div class="aspectRatioPlaceholder is-locked">
<div class="progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded" data-image-id="1*MF3mZlOk0oOnyPjK6RWfYw.png" data-width="566" data-height="544" data-action="zoom" data-action-value="1*MF3mZlOk0oOnyPjK6RWfYw.png" data-scroll="native"><canvas class="progressiveMedia-canvas js-progressiveMedia-canvas" width="75" height="71"></canvas><img class="progressiveMedia-image js-progressiveMedia-image" src="https://cdn-images-1.medium.com/max/1200/1*MF3mZlOk0oOnyPjK6RWfYw.png" data-src="https://cdn-images-1.medium.com/max/1200/1*MF3mZlOk0oOnyPjK6RWfYw.png"></div>
</div></figure>
<figure id="49db" class="graf graf--figure graf--layoutOutsetRowContinue is-partialWidth graf-after--figure" data-scroll="native">
<div class="aspectRatioPlaceholder is-locked">
<div class="aspectRatioPlaceholder-fill"></div>
<div class="progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded" data-image-id="1*zeFioOHYR16x_LutWWkWqQ.png" data-width="567" data-height="424" data-action="zoom" data-action-value="1*zeFioOHYR16x_LutWWkWqQ.png" data-scroll="native"><canvas class="progressiveMedia-canvas js-progressiveMedia-canvas" width="75" height="55"></canvas><img class="progressiveMedia-image js-progressiveMedia-image" src="https://cdn-images-1.medium.com/max/1200/1*zeFioOHYR16x_LutWWkWqQ.png" data-src="https://cdn-images-1.medium.com/max/1200/1*zeFioOHYR16x_LutWWkWqQ.png"></div>
</div></figure>
</div>
<div class="section-inner sectionLayout--insetColumn">
<h3 class="graf graf--h3 graf-after--figure"></h3>
<h3 id="d8d4" class="graf graf--h3 graf-after--figure">리모트 컨피그의 장점</h3>
<h4 id="468b" class="graf graf--h4 graf-after--h3">1. 실시간 운영변수 변경 시스템 구축이&nbsp;쉽다.</h4>
<p id="7e04" class="graf graf--p graf-after--h4">보통 라이브로 운영하는 서비스는 이러한 실시간 운영변수 변경 시스템을 직접 구축하여 사용합니다. 리멤버 또한 리모트 컨피그를 사용하기 전까지는 자체 시스템이 있었습니다. 하지만 직접 구현하는 것은 많은 리소스가 필요합니다. 리모트 컨피그를 사용하면 이런 시스템을 쉽게 갖출 수 있습니다.</p>

<h4 id="a536" class="graf graf--h4 graf-after--p">2. 값을 단순히 변경하는 것 뿐만 아니라 대상을 선택하여 배포할 수&nbsp;있다.</h4>
<p id="1425" class="graf graf--p graf-after--h4">사용자 또는 기기 속성에 따라 값을 분기하여 배포하는 것은 유용한 기능이지만 개발하려면 손이 많이 가는 일입니다. 리모트 컨피그를 사용하면 쉽게 대상을 선택하여 배포할 수 있습니다.</p>

<h3 class="graf graf--h3 graf-after--p"></h3>
<h3 id="a679" class="graf graf--h3 graf-after--p">마무리</h3>
<p id="7ecc" class="graf graf--p graf-after--h3 graf--trailing">리모트 컨피그는 라이브 서비스에게 매우 중요한 기능을 쉽고 빠르게 적용할 수 있도록 돕습니다. 저는 Firebase에서 가장 가성비가 좋은 기능이 리모트 컨피그가 아닌가 생각합니다. 이제 리모트 컨피그로 운영팀의 걱정을 덜어주세요.</p>
<p class="graf graf--p graf-after--h3 graf--trailing"></p>

</div>
<blockquote id="8381" class="graf graf--blockquote graf--leading">- 이 글에 첨부된 코드는&nbsp;<a class="markup--anchor markup--blockquote-anchor" href="https://github.com/rfrost77/DroidKnights-RemoteConfig" target="_blank" rel="nofollow noopener noreferrer" data-href="https://github.com/rfrost77/DroidKnights-RemoteConfig">https://github.com/rfrost77/DroidKnights-RemoteConfig</a>&nbsp;에 있습니다.</blockquote>
<blockquote id="9418" class="graf graf--blockquote graf-after--blockquote graf--trailing">- 이 글은 미디엄에 쓴 포스팅을 옮겨왔습니다. <a href="http://bit.ly/2usHPvs">http://bit.ly/2usHPvs</a></blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>923</wp:post_id>
		<wp:post_date><![CDATA[2018-04-09 10:30:03]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-04-09 01:30:03]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-02-23 23:26:20]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-02-23 14:26:20]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[firebase-remote-config%eb%a1%9c-%eb%b0%b0%ed%8f%ac%ec%97%86%ec%9d%b4-%ec%9a%b4%ec%98%81%ed%95%98%ea%b8%b0]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="develop"><![CDATA[Tech]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[4]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[right-sidebar]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_slogan]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_subslogan]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_header_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_scroll_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_bottom_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_footer_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_view_post_info]]></wp:meta_key>
		<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_post_icons]]></wp:meta_key>
		<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729535911;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:2047;}i:1;a:1:{s:2:"id";i:1850;}i:2;a:1:{s:2:"id";i:331;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_single_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:17:{s:8:"subtitle";s:0:"";s:6:"format";s:8:"standard";s:5:"video";s:0:"";s:7:"gallery";s:0:"";s:11:"source_name";s:0:"";s:10:"source_url";s:0:"";s:8:"via_name";s:0:"";s:7:"via_url";s:0:"";s:8:"override";a:1:{i:0;a:11:{s:18:"single_blog_custom";s:0:"";s:7:"sidebar";s:0:"";s:14:"second_sidebar";s:0:"";s:14:"share_position";s:0:"";s:17:"share_float_style";s:0:"";s:16:"post_date_format";s:0:"";s:23:"post_date_format_custom";s:0:"";s:21:"post_reading_time_wpm";s:0:"";s:20:"zoom_button_out_step";s:1:"1";s:19:"zoom_button_in_step";s:1:"1";s:17:"number_popup_post";s:1:"1";}}s:14:"image_override";a:1:{i:0;a:2:{s:26:"single_post_thumbnail_size";s:0:"";s:24:"single_post_gallery_size";s:0:"";}}s:22:"trending_post_position";s:0:"";s:19:"trending_post_label";s:0:"";s:20:"sponsored_post_label";s:0:"";s:19:"sponsored_post_name";s:0:"";s:18:"sponsored_post_url";s:0:"";s:19:"sponsored_post_logo";s:0:"";s:19:"sponsored_post_desc";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle_flag]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1903]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_format_gallery_images]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:2:"id";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Fabric Branch로 사용자 행동 분석하기]]></title>
		<link>https://blog.dramancompany.com/2018/04/fabric-branch%eb%a1%9c-%ec%82%ac%ec%9a%a9%ec%9e%90-%ed%96%89%eb%8f%99-%eb%b6%84%ec%84%9d%ed%95%98%ea%b8%b0/</link>
		<pubDate>Fri, 20 Apr 2018 02:39:37 +0000</pubDate>
		<dc:creator><![CDATA[rfrost]]></dc:creator>
		<guid isPermaLink="false">http://blog.dramancompany.com/?p=934</guid>
		<description></description>
		<content:encoded><![CDATA[<section class="section section--body">
<h1 class="section-divider">Fabric Branch 사용&nbsp;배경</h1>
<div class="section-content">
<div class="section-inner sectionLayout--insetColumn">
<p class="graf graf--p">대부분의 회사는 마케팅을 합니다. 그리고 서비스를 운영하는 회사는 퍼포먼스 마케팅을 합니다.</p>

<figure class="graf graf--figure"><img class="graf-image" src="https://cdn-images-1.medium.com/max/1600/1*3WmEk8QT7uCdszO0isqwwA.jpeg" data-image-id="1*3WmEk8QT7uCdszO0isqwwA.jpeg" data-width="5443" data-height="3054"></figure>
<h3 class="graf graf--h4">퍼포먼스 마케팅이란?</h3>
<p class="graf graf--p">홍보뿐만 아니라 원하는 행동을 유도하는 마케팅 입니다. 퍼포먼스 마케팅에서 중요한 것은 캠페인을 통해 원하는 행동을 얼마나 잘 유도하였나 측정하는 것입니다. 측정을 어떤식으로 하는지, 마케팅 채널 별 신규유입을 측정 하는 것으로 예시를 들어보겠습니다.</p>
<p class="graf graf--p">(1) 마케팅으로 사용할 스토어 링크에 레퍼러를 삽입합니다.</p>

<figure class="graf graf--figure">

[caption id="" align="aligncenter" width="1600"]<img class="graf-image" src="https://cdn-images-1.medium.com/max/1600/1*pnQIE0wVrxHHYjQjPbwlLA.png" alt="" width="1600" height="240" data-image-id="1*pnQIE0wVrxHHYjQjPbwlLA.png" data-width="2034" data-height="306"> 스토어 링크에 utm 속성을&nbsp;붙입니다.[/caption]</figure>
<p class="graf graf--p">(2) 레퍼러가 삽입된 링크를 통해 스토어에 들어오면 콘솔에 레퍼러 속성이 기록됩니다.</p>
<p class="graf graf--p">(3) 기록된 레퍼러를 필터로 구분하여 마케팅 채널 별 신규유입을 측정할 수 있습니다.</p>

<figure class="graf graf--figure">

[caption id="" align="aligncenter" width="1600"]<img class="graf-image" src="https://cdn-images-1.medium.com/max/1600/1*T5QYPROjMq3xVWpfUYdeAQ.png" alt="" width="1600" height="713" data-image-id="1*T5QYPROjMq3xVWpfUYdeAQ.png" data-width="3338" data-height="1488"> 콘솔에서 레퍼러로 구분된 숫자들을 확인할 수&nbsp;있습니다.[/caption]</figure>
<h3 class="graf graf--h4">하지만…</h3>
<p class="graf graf--p">하지만 우리는 단순 다운로드를 넘어 가입, 결제 등의 행동까지 유도하고, 앱 내에서 행동을 수행한 숫자를 알고 싶습니다. 하지만 이것은 위 스토어 레퍼러로는 불가능합니다. 레퍼러 값이 스토어까지는 유지되지만 앱을 다운로드 받고 진입한 후에는 사라지기 때문입니다. 행동을 측정하기 위해서는 레퍼러 구분값이 앱에 들어와서도 유지되어야 합니다. 이것은 어떻게 구현할까요?</p>

<figure class="graf graf--figure">

[caption id="" align="aligncenter" width="350"]<img class="graf-image" src="https://cdn-images-1.medium.com/max/1600/1*YyciMtfkausaCgncrEBnaA.png" alt="" width="350" height="443" data-image-id="1*YyciMtfkausaCgncrEBnaA.png" data-width="350" data-height="443"> 우리는 앱에 들어온 후에도 특정 행동을 유도하고, Step에 따라 측정하고&nbsp;싶습니다.[/caption]</figure>
<h3 class="graf graf--h4">Deeplink로 앱 진입을&nbsp;유도하자</h3>
<p class="graf graf--p">행동을 유도하기 위해서는 스토어로만 보내는 링크보다는 Deeplink가 필요합니다. Deeplink는 앱이 설치되어 있다면 앱을, 없다면 Failover가 동작하는 링크입니다. Failover는 보통 스토어를 열어줍니다. Deeplink로 자연스럽게 행동을 위한 앱 진입을 유도할 수 있습니다. 하지만 Deeplink 또한 레퍼러 값이 앱에 진입하면 소실됩니다.</p>

<figure class="graf graf--figure"><img class="graf-image aligncenter" src="https://cdn-images-1.medium.com/max/1600/1*YwmqEKXCDKgpp2XtnmLFfQ.png" data-image-id="1*YwmqEKXCDKgpp2XtnmLFfQ.png" data-width="700" data-height="300"></figure>
<h3 class="graf graf--h4">Deferred Deeplink로 레퍼러를&nbsp;유지하자</h3>
<p class="graf graf--p">Deferred Deeplink는 기본적으로 Deeplink와 똑같이 동작하지만 링크 속성이 앱에 들어와서도 유지됩니다. 어떤 마케팅 캠페인으로부터 왔는지 구분할 수 있기 때문에 행동을 직접 유도하고, 실제로 도달하였는지 측정할 수 있습니다.</p>

<figure class="graf graf--figure">

[caption id="" align="aligncenter" width="864"]<img class="graf-image" src="https://cdn-images-1.medium.com/max/1600/1*ZnZyXEDotV04II1lOpndsw.jpeg" alt="" width="864" height="500" data-image-id="1*ZnZyXEDotV04II1lOpndsw.jpeg" data-width="864" data-height="500"> Deeplink는 단순히 앱에 진입시키지만, Deferred Deeplink는 유지되는 레퍼러 값을 이용하여 행동을 유도할 수&nbsp;있습니다.[/caption]</figure>
<h3 class="graf graf--h4">Deferred Deeplink를 어떻게&nbsp;구현하지?</h3>
<p class="graf graf--p">Deferred Deeplink를 이용하면 우리가 원하는 행동 유도 및 분석이 가능함을 알아보았습니다. 그렇다면 Deferred Deeplink는 어떻게 구현할까요? Firebase DynamicLink 등 다양한 라이브러리가 있지만 저는 Fabric의 Branch를 소개하려고 합니다. (이 시점에는 Fabric이 Twitter 소속이였는데 지금은 Firebase와 같은 Google 소속이네요!)</p>

<figure class="graf graf--figure"><img class="graf-image aligncenter" src="https://cdn-images-1.medium.com/max/1600/1*izJL3ZCJvoa7dWWJsQakRA.png" data-image-id="1*izJL3ZCJvoa7dWWJsQakRA.png" data-width="1200" data-height="900" data-is-featured="true"></figure>
<h3 class="graf graf--h3"></h3>
<h1 class="graf graf--h3">Branch 사용하기</h1>
<p class="graf graf--p">Branch는 대시보드에서 대부분의 작업을 할 수 있습니다. 대시보드를 활용하여 Branch를 사용하는 것을 하나씩 살펴보겠습니다.</p>

<h3 class="graf graf--h4">(1) 대시보드&nbsp;메인화면</h3>
<p class="graf graf--p">대시보드에서 링크 생성, 설정 그리고 분석까지 모두 할 수 있습니다. 메인화면에 각 기능으로 이어지는 메뉴들이 있습니다.</p>

<figure class="graf graf--figure">

[caption id="" align="aligncenter" width="1600"]<img class="graf-image" src="https://cdn-images-1.medium.com/max/1600/1*wdlL7Tew_t5xAHwSW711JA.png" alt="" width="1600" height="742" data-image-id="1*wdlL7Tew_t5xAHwSW711JA.png" data-width="2856" data-height="1326"> Create Link, Link Settings, Sources 등의 메뉴에서 생성, 설정, 분석을 할 수&nbsp;있습니다.[/caption]</figure>
<h3 class="graf graf--h4">(2) 링크&nbsp;생성</h3>
<p class="graf graf--p">Create Link 기능으로 링크를 생성할 때 Deeplink Path, Failover link, Custom Tag, OG title 등의 설정을 함께 할 수 있습니다.</p>

<figure class="graf graf--figure">

[caption id="" align="aligncenter" width="1600"]<img class="graf-image" src="https://cdn-images-1.medium.com/max/1600/1*up8O8vrYLpKDbRusTZjBFQ.png" alt="" width="1600" height="655" data-image-id="1*up8O8vrYLpKDbRusTZjBFQ.png" data-width="2410" data-height="988"> 링크를 생성 할 때 기본적인 설정을 함께 할 수&nbsp;있습니다.[/caption]</figure>
<h3 class="graf graf--h4">(3) 링크&nbsp;설정</h3>
<p class="graf graf--p">Link Settings 메뉴에서 생성할 링크의 기본 설정을 정의할 수 있습니다.</p>

<figure class="graf graf--figure">

[caption id="" align="aligncenter" width="1600"]<img class="graf-image" src="https://cdn-images-1.medium.com/max/1600/1*fFUnA0zWI58cg9HHYg8EwQ.png" alt="" width="1600" height="684" data-image-id="1*fFUnA0zWI58cg9HHYg8EwQ.png" data-width="2360" data-height="1010"> Deeplink Path의 Scheme, Failover URL 등을 정의할 수&nbsp;있습니다.[/caption]</figure>
<h3 class="graf graf--h4">(4) 데이터&nbsp;분석</h3>
<p class="graf graf--p">Sources 메뉴에서 사용자들이 Deeplink를 이용한 데이터를 분석할 수 있습니다. 링크를 생성할 때 설정한 Custom Tag까지 측정이 가능합니다. 여기서 Custom Tag는 우리가 유도하려는 행동을 의미할 것입니다. 아래 그림에서는 SIGNUP 이라는 Tag가 있습니다.</p>

<figure class="graf graf--figure">

[caption id="" align="aligncenter" width="1600"]<img class="graf-image" src="https://cdn-images-1.medium.com/max/1600/1*F0mdjxZwcmu6FKlujtRpTA.png" alt="" width="1600" height="576" data-image-id="1*F0mdjxZwcmu6FKlujtRpTA.png" data-width="2400" data-height="864"> 단계별 수치 및 Custom Tag가 불린 수치까지 한눈에 볼 수 있습니다. 필터 또한&nbsp;제공됩니다.[/caption]</figure>
<p class="graf graf--p">하지만 Deeplink는 어떤 행동이 일어났는지를 스스로 알 수 없습니다. Custom Tag 수치를 측정하기 위해서는 앱에서 넘어온 링크 데이터로 시점을 판단하고, 적절한 시점에서 행동이 일어났을 때 Custom Tag에 해당하는 이밴트를 호출해주어야 합니다. 그러면 먼저 시점을 판단하기 위한 Deferred Link 데이터를 받는 방법을 알아보겠습니다.</p>

<h1 class="graf graf--h3">Deferred Link에서 데이터&nbsp;받아오기</h1>
<p class="graf graf--p">Branch SDK를 이용해 Intent로 넘어오는 Deferred Link 데이터를 Json 형태로 넘겨받습니다. initSession() 메소드에 콜백을 등록해 받을 수 있습니다.</p>

<pre class="lang:java decode:true">public class MainActivity extends AppCompatActivity {
    @Override
    protected void onNewIntent(Intent intent) {
        super.onNewIntent(intent);
        // Intent로 넘어오는 Deferred Deeplink를 받기위해 호출합니다.
        setIntent(intent);
    }
    @Override
    protected void onStart() {
        super.onStart();
        // onNewIntent()가 호출된 후 Branch Session을 초기화 합니다.
        initializeBranch();
    }
}

private void initializeBranch() {
    Branch branch = Branch.getInstance(this);
    branch.initSession(new Branch.BranchReferralInitListener() {
        @Override
        public void onInitFinished(JSONObject referringParams, BranchError error) {
            if (error != null) return;
            // Parse and Deep Link Parameters from referringParams
        }
    });
}</pre>
<p class="graf graf--p">Json 형태로 넘어오는 Deferred Deeplink 데이터를 파싱하면 앱 세션이 어디에서 왔는지를 구분할 수 있습니다. 이제 이밴트를 보내야 합니다.</p>

<pre name="c02f" class="graf graf--pre">Branch branch = Branch.getInstance(this);
branch.userCompletedAction("sign_up");</pre>
<p class="graf graf--p">userCompletedAction()를 Tag와 함께 호출하면 이밴트를 보낼 수 있습니다. 성공적으로 userCompletedAction()가 호출되면 대시보드에서 Tag에 해당하는 수치가 올라갑니다.</p>

<h3 class="graf graf--h4">(부록) 앱에서 Deferred Link&nbsp;만들기</h3>
<p class="graf graf--p">추천하기 등의 기능은 앱에서 마케팅 링크를 생성해 공유할 수 있어야 합니다. Branch는 앱에서도 Deferred Link를 만들 수 있도록 SDK를 제공합니다.</p>

<pre class="lang:java decode:true ">public void createDeferredDeepLinkWithBranch() {
    BranchUniversalObject branchUniversalObject = new BranchUniversalObject();
    LinkProperties linkProperties = new LinkProperties();

    // 링크 속성 설정
    linkProperties.setChannel("facebook");
    linkProperties.setFeature("invite");
    linkProperties.setCampaign("teambook");
    linkProperties.addTag("inapp");

    linkProperties.addControlParameter("$og_title", "리멤버 팀 명함첩에 초대합니다.");
    linkProperties.addControlParameter("$og_description", "어서오세요.");

    // 링크 생성
    branchUniversalObject.generateShortUrl(this, linkProperties, new BranchLinkCreateListener() {
        @Override
        public void onLinkCreate(String url, BranchError error) {
            if (error != null) return;
            // Share url to marketing channel
        }
    });
}</pre>
<p class="graf graf--p">LinkProperties 객체에 속성을 설정하고, generateShortUrl() 메소드로 대시보드에서 만드는 것과 같은 Deferred Deeplink를 생성할 수 있습니다. 만들어진 링크의 활용, 분석은 위에서 설명한 것과 같습니다.</p>

<h1 class="graf graf--h3">Branch Deferred Deeplink 활용&nbsp;Flow</h1>
<p class="graf graf--p">지금까지 설명드린 링크 생성, 활용, 분석은 다음 그림 하나로 요약할 수 있습니다.</p>

<figure class="graf graf--figure">

[caption id="" align="aligncenter" width="1600"]<img class="graf-image" src="https://cdn-images-1.medium.com/max/1600/1*s59uah-bTGANSOPo3rrdQA.png" alt="" width="1600" height="605" data-image-id="1*s59uah-bTGANSOPo3rrdQA.png" data-width="1696" data-height="642"> 단계별 도달율이 대시보드에 모두&nbsp;기록됩니다.[/caption]</figure>
<h1 class="graf graf--h3">마무리</h1>
<p class="graf graf--p">저는 다음과 같은 순서로 Branch를 성공적으로 도입하였습니다.</p>
<p class="graf graf--p">(1) 측정하고 싶은 데이터 결정 — 마케팅 채널 별로 가입자 수를 알고 싶다.</p>
<p class="graf graf--p">(2) 측정 방법 조사 — Deferred Deeplink가 필요하다.</p>
<p class="graf graf--p">(3) 측정 수단 결정, 적용 및 분석 — Fabric Branch 적용</p>
<p class="graf graf--p">Branch 자체를 이해하는 것도 좋지만, 더 중요한 것은 데이터의 중요성을 이해하고 적설한 수단을 찾아 적용하려는 마음가짐이라고 생각합니다. Branch 보다 좋은 방법도 분명히 많이 있을 것입니다. 각자 상황에 맞는 수단을 찾아 원하는 데이터를 반드시 측정하며 좋은 서비스를 만들어가시기를 바랍니다.</p>

<blockquote>
<p class="graf graf--p">이 글은 미디엄에 쓴 포스팅을 옮겨왔습니다.&nbsp;<a href="http://bit.ly/2HMW4hE">http://bit.ly/2usHPvs</a></p>
</blockquote>
</div>
</div>
</section>
<section class="section section--body">
<div class="section-content"></div>
</section>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>934</wp:post_id>
		<wp:post_date><![CDATA[2018-04-20 11:39:37]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-04-20 02:39:37]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-02-23 23:24:37]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-02-23 14:24:37]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[fabric-branch%eb%a1%9c-%ec%82%ac%ec%9a%a9%ec%9e%90-%ed%96%89%eb%8f%99-%eb%b6%84%ec%84%9d%ed%95%98%ea%b8%b0]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="develop"><![CDATA[Tech]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[4]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[right-sidebar]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_slogan]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_subslogan]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_header_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_scroll_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_bottom_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_footer_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_view_post_info]]></wp:meta_key>
		<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_post_icons]]></wp:meta_key>
		<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729438312;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:2019;}i:1;a:1:{s:2:"id";i:3594;}i:2;a:1:{s:2:"id";i:2124;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_single_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:17:{s:8:"subtitle";s:0:"";s:6:"format";s:8:"standard";s:5:"video";s:0:"";s:7:"gallery";s:0:"";s:11:"source_name";s:0:"";s:10:"source_url";s:0:"";s:8:"via_name";s:0:"";s:7:"via_url";s:0:"";s:8:"override";a:1:{i:0;a:11:{s:18:"single_blog_custom";s:0:"";s:7:"sidebar";s:0:"";s:14:"second_sidebar";s:0:"";s:14:"share_position";s:0:"";s:17:"share_float_style";s:0:"";s:16:"post_date_format";s:0:"";s:23:"post_date_format_custom";s:0:"";s:21:"post_reading_time_wpm";s:0:"";s:20:"zoom_button_out_step";s:1:"1";s:19:"zoom_button_in_step";s:1:"1";s:17:"number_popup_post";s:1:"1";}}s:14:"image_override";a:1:{i:0;a:2:{s:26:"single_post_thumbnail_size";s:0:"";s:24:"single_post_gallery_size";s:0:"";}}s:22:"trending_post_position";s:0:"";s:19:"trending_post_label";s:0:"";s:20:"sponsored_post_label";s:0:"";s:19:"sponsored_post_name";s:0:"";s:18:"sponsored_post_url";s:0:"";s:19:"sponsored_post_logo";s:0:"";s:19:"sponsored_post_desc";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle_flag]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1900]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_format_gallery_images]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:2:"id";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[리멤버 지원자분들이 묻는 질문 Top 4]]></title>
		<link>https://blog.dramancompany.com/2019/03/%eb%a6%ac%eb%a9%a4%eb%b2%84-%ec%a7%80%ec%9b%90%ec%9e%90%eb%b6%84%eb%93%a4%ec%9d%b4-%eb%ac%bb%eb%8a%94-%ec%a7%88%eb%ac%b8-top-4/</link>
		<pubDate>Tue, 12 Mar 2019 05:16:08 +0000</pubDate>
		<dc:creator><![CDATA[tom]]></dc:creator>
		<guid isPermaLink="false">http://blog.dramancompany.com/?p=966</guid>
		<description></description>
		<content:encoded><![CDATA[안녕하세요 정말 오랜만에 쓰는 글입니다. 글이 안올라와서 "이 회사 망한거 아니야?"라는 생각을 갖으셨을수도 있겠지만 그런건 아니고 지난 기간동안 리멤버는 큰 성장을 만들어내는데 정말 많이 바빴습니다. 핑계지만 바쁘다는 이유로 글을 거의 쓰지 못했습니다^^;

드라마앤컴퍼니도 대부분의 IT 업체와 마찬가지로 훌륭한 동료분을 모시기 위하여 개발자 채용에 매우 열심히 노력하고 있고 그 결과 면접도 많이 보고 있습니다. 면접에서 대부분의 지원자분들이 항상 공통적으로 물어봐주시는 질문이 있습니다. 지원하시기 전에 제대로 알려드리지 못한 저희의 잘못도 크고 매번 같은 얘기를 하는 것 보다는 글로 정리하는 것이 훨씬 효율적일 것 같다고 생각하여 이번 글에서는 서버 파트 지원자분들께 자주 받는 질문 4개와 그에 대한 답변을 정리해보고자 합니다.

&nbsp;
<h2>[질문 1] 왜 Ruby on Rails를 사용하나요?</h2>
<a href="https://blog.dramancompany.com/wp-content/uploads/2019/03/rails.png"><img class="size-full wp-image-967 aligncenter" src="https://blog.dramancompany.com/wp-content/uploads/2019/03/rails.png" alt="" width="300" height="105"></a>

우선 드라마앤컴퍼니에서는 API, 어드민, 리멤버 Web 버전을 포함한 거의 모든 백엔드 프로젝트에 Ruby 언어와 Ruby on Rails(이하 RoR) 프레임워크를 사용하고 있습니다. 이 질문은 "저 Ruby 안 해봤는데 괜찮은가요?", "언제 다른 언어로 바꾸나요?" 등의 질문과 함께 가장 많이 받는 질문입니다. 아무래도 국내에서는 Java가 압도적으로 대세인 언어이고, Ruby보다는 Python이나 Node.js가 더 인기가 많다 보니 Ruby라는 언어를 굉장히 생소하고 낯설게 느끼시는 분들이 많은 것 같습니다. 물론 저도 처음에는 그랬고요.

드라마앤컴퍼니는 회사를 처음 시작할 때부터 RoR을 사용했습니다. 기존에 Java 개발자셨던 분이 리멤버를 만들 때쯤 RoR를 접하고 엄청난 생산성에 반해 API, 타이피스트, 어드민 등 모든 시스템을 RoR로 만드셨습니다. 이분 이후로도 드라마앤컴퍼니에서 RoR를 사용하셨던 개발자분들이 10명이 넘는데, 한 분을 제외하고는 Ruby에 대해 거의 아무것도 모르는 상태로 입사하셨습니다.

저희는 언어와 프레임워크는 모두 "도구"일 뿐이라고 생각합니다. 그리고 "뛰어난 개발자는 어떤 도구를 사용해도 잘한다."라는 생각이 있죠. 물론 언어와 프레임워크에 대한 이해도도 매우 중요하기 때문에 그 도구를 제대로 사용하기 위해서는 어느 정도의 숙련이 필요한 것이 사실입니다. 따라서 아무리 뛰어난 개발자여도 처음 하는 언어와 프레임워크를 접하면 처음에는 좋은 품질의 코드를 만들기 힘들다고 생각합니다.

하지만 저희는 기존 코드도 계속 리팩토링하면서 완성도를 높여왔으며 테스트 코드와 문서화도 꽤 잘되어있는 편이기 때문에 한 가지 이상의 언어에 능통하시고 뛰어난 개발자라면 1주일도 안 돼서 좋은 코드를 만드실 수 있는 환경이라고 생각합니다.

"RoR은 매우 느리기 때문에 바꿔야 하지 않는가?"라는 질문도 있습니다. 물론 같은 로직을 구현하는 경우 C나 Java에 비해 느린 것이 사실입니다. 하지만 애플리케이션이 느린 원인은 언어의 성능보다는 사람이 만든 로직이나 설계에 있는 경우가 훨씬 많습니다. 그리고 리멤버가 온라인 게임이나 대규모 메시징 앱처럼 실시간 속도가 엄청나게 중요한 서비스가 아니기 때문에 이 부분은 크게 문제 되지 않는다고 생각합니다.

GitHub, Airbnb, Twitter, Twitch 등 세계적으로 큰 회사들이 지금도 혹은 국내에서 접할 수 있는 것보다 훨씬 큰 규모의 서비스가 될 때까지 RoR를 메인 프레임워크로 사용한 것을 보면 한동안은 계속 사용할 수 있다고 생각합니다. 그리고 무엇보다도 사내에서 RoR을 제대로 사용해보신 분들은 모두 RoR의 편의성과 생산성에 대해 매우 만족해하고 있습니다.

&nbsp;
<h2>[질문 2] 기술 스택이 어떻게 되나요?</h2>
우선 앞서 말씀드린 것처럼 웹 프레임워크로는 Ruby on Rails를 사용하고 있습니다. 그리고 인프라는 AWS, 인 메모리 DB는 Redis, 로그 관리는 ELK stack, APM은 NewRelic, 비동기 job 처리는 Sidekiq, 테스트 프레임웍은 Rspec을 사용하고 있습니다. 그리고 이 기술들을 어느 정도는 잘 쓰고 있다고 생각합니다.

예를 들어 RoR과 같은 경우 여러 번 리팩토링을 거치면서 더 나은 코드 구조를 만들기 위해 노력하고 있으며 거의 모든 경우 테스트 코드를 작성하고 있습니다. 그 결과 API의 메인 프로젝트의 테스트 코드의 수만 7,000개가 넘습니다.

AWS의 경우 기본적인 EC2와 S3부터 Lambda, SQS, Route 53, API Gateway, CloudWatch, CodeDeploy, CodePipeline, CodeBuild, ElastiCache, ElasticBeanstalk, ECR 등 많은 서비스를 사용하고 있습니다. 다음은 저희가 AWS를 잘 활용하고 있다고 생각하는 몇 가지 예시들입니다.
<ul>
 	<li>Auto Scaling으로 API 서버의 인스턴스의 수가 매일 3대에서 70대까지 변합니다.</li>
 	<li>데일리 컨텐츠 푸시를 위하여 주중 아침마다 AWS SNS를 이용하여 200만 개 이상의 디바이스에 푸시를 한 번에 발송합니다.</li>
 	<li>테스트 코드가 많다 보니 테스트 코드를 실행하는 데만 2시간이 걸리기 때문에 Jenkins, CodeBuild, ECR을 이용하여 BuildFarm을 만들었습니다. CodeBuild를 이용하여 원하는 수 만큼의 Slave를 만들어 병렬로 테스트 코드를 돌립니다.</li>
</ul>
&nbsp;
<h2>[질문 3] 어떤 개발 문화를 갖고 있나요?</h2>
우선 첫 번째 회고와 오버 커뮤니케이션을 굉장히 중요하게 생각합니다. 저희는 팀의 규모가 작을때 부터 커진 지금도 주기적인 회고를 통하여 어떤 문제점이 있는지 발견하고 그 문제점을 개선하기 위하여 계속 노력합니다. 그 결과 개발팀이 5명도 안되게 작을때부터 20명이된 지금까지 끊임없이 현재 저희에게 맞는 업무 구조와 프로세스를 찾기 위하여 많은 변화를 시도했습니다.

오버 커뮤니케이션을 위해 매일 아침마다 제품 개발에 관련된 모든 인원이 모여 데일리 스크럼 미팅을 진행합니다. 개발, 기획, 디자인 팀 구성원들이 보여서 회사에 크게 진행되고 있는 이슈들에 대해서 진행 상황과 문제 상황등을 동기화하는 시간을 갖습니다. 그리고 업무시간 종료 직전에 하루 일과에 대한 공유 시간을 갖습니다. 오늘은 어떤 일이 진행됐고 어떤 문제가 있는지를 동기화하면서 서로 도움을 줄 수 있는 부분을 찾습니다.

회고와 오버커뮤니케이션에 대해서는 드라마앤컴퍼니 CTO이신 세준님의 <a href="https://post.naver.com/viewer/postView.nhn?volumeNo=17104973&amp;memberNo=39874958">사내 인터뷰</a>에(https://post.naver.com/viewer/postView.nhn?volumeNo=17104973&amp;memberNo=39874958)서 더 자세하게 확인하실 수 있습니다.

두 번째 페어 프로그래밍, 코드 리뷰를 적극 활용합니다. 페어 프로그래밍과 코드 리뷰 모두 장단점을 갖고 있는 방법입니다. 개발자가 한 명이 개발에 집중할 수 있는 시간이 줄어든다는 단점이 있지만 업무 스타일이나 코딩 스타일, 다른 사람이 작업한 영역 등을 굉장히 효율적으로 동기화할 수 있고 까다로운 작업을 할 땐 버그의 위험성을 매우 낮춰주는 등 많은 장점들이 있습니다. 모든 일에 대해 적용한다면 매우 비효율적이겠지만 특정 상황에서는 이만큼의 좋은 효율성을 내는 방법도 없다고 생각합니다. 저희는 이 방법론이 가장 큰 효율을 낼 수 있을 때마다 잘 사용하고 있습니다.

<a href="https://blog.dramancompany.com/wp-content/uploads/2019/03/pr.png"><img class="size-full wp-image-968 aligncenter" src="https://blog.dramancompany.com/wp-content/uploads/2019/03/pr.png" alt="" width="1996" height="1558"></a>

세 번째 문서화가 매우 잘 되어있습니다. 웬만한 업무는 다 Jira 이슈로 관리되며 처리된 내용은 Jira 이슈나 Confluence Wiki 페이지로 관리됩니다. Wiki 페이지, Git 커밋 메시지, Pull Request, 릴리즈 노트 등 모든 곳에 지라 이슈 번호가 따라다닙니다. 서식을 맞추는 데 힘을 빼는 문서화가 아닌 기록을 위한 문서로 만듭니다. 최대한 힘을 안 들이고 쓰되 나중에 이 이슈를 다시 봐야 하는 경우 이 당시 상황을 이해할 수 있을 정도로만 문서를 작성합니다.

마지막으로 기술을 제대로 사용할 줄 아는 팀이라고 생각합니다. 개발자가 더 나은 기술을 좇는 것은 좋은 자세지만 이 자세가 과하면 일을 망치는 경우가 많습니다. 기술은 개발자 개인의 만족감을 채워주는 것이 아니라 우리 이루고자 하는 목적을 위해 필요한 것입니다. 따라서 많은 개발자가 쉽게 빠질 수 있는 오버 엔지니어링과 Hype Driven Development(설레발 주도 개발)은 피합니다. 그렇다고 절대로 과거 기술에만 머물러있지는 않습니다. 신기술들을 계속 살펴보며 우리에게 정말 도움이 된다면 바로 사용합니다. 예를 들어 몇 년전 Electron의 아직 정식 버전이 나오기도 전에 리멤버 웹 버전의 데스크톱 개발을 위하여 사용하여 좋은 리텐션 증가를 만들어낸 이력이 있습니다. 기술을 사용하는 이 부분에 대한 보다 자세한 내용은 제가 한 <a href="https://post.naver.com/viewer/postView.nhn?volumeNo=17322226&amp;memberNo=39874958">사내 인터뷰 글</a>(https://post.naver.com/viewer/postView.nhn?volumeNo=17322226&amp;memberNo=39874958)에서 더 자세하게 확인하실 수 있습니다.

&nbsp;
<h2>[질문 4] 앞으로 리멤버의 계획은 어떻게 되나요?</h2>
지금까지의 리멤버는 명함관리 유틸리티일 뿐이었지만 저희는 단 한 번도 명함관리앱을 최종 목표로 삼은 적이 없습니다. 이미 그 다음 단계로 넘어가기 위한 작업이 한창입니다. 여기서 모든 내용을 설명하자면 글이 너무 길어질 것 같으니 자세한 건 다음 기사들을 읽어보시면 도움이 될 것 같습니다.

<a href="https://news.joins.com/article/23401613">[단독] 네이버 리멤버, 명함관리 넘어 ‘한국판 링크드인’ 띄운다</a>&nbsp;(https://news.joins.com/article/23401613)

<a href="http://www.etnews.com/20181119000331">믿을만한 전문가 찾는다면…명함 앱 리멤버, 매칭 서비스 출시</a>&nbsp;(http://www.etnews.com/20181119000331)

<a href="http://view.asiae.co.kr/news/view.htm?idxno=2019020715282622041">[히든히어로즈(39)] "앞으론 리멤버에서 인맥 찾으세요"</a>&nbsp;(http://view.asiae.co.kr/news/view.htm?idxno=2019020715282622041)

&nbsp;
<h2>[마무리]</h2>
이 글을 보시고 리멤버에 대한 궁금증이 조금 풀리셨길 기대해봅니다. 혹시 이 글을 보시고 리멤버에서 함께 일하고 싶은 마음이 생기셨다면 주저말고 지원 해주시길 바랍니다.&nbsp;<a href="http://dramancompany.com/joinus/">http://dramancompany.com/joinus/</a> 페이지에서 리쿠르팅중인 포지션에 대한 보다 자세한 내용을 확인하실 수 있습니다.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>966</wp:post_id>
		<wp:post_date><![CDATA[2019-03-12 14:16:08]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-03-12 05:16:08]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-02-23 23:20:57]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-02-23 14:20:57]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%eb%a6%ac%eb%a9%a4%eb%b2%84-%ec%a7%80%ec%9b%90%ec%9e%90%eb%b6%84%eb%93%a4%ec%9d%b4-%eb%ac%bb%eb%8a%94-%ec%a7%88%eb%ac%b8-top-4]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="develop"><![CDATA[Tech]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[4]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[right-sidebar]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_slogan]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_subslogan]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_header_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_scroll_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_bottom_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_footer_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_view_post_info]]></wp:meta_key>
		<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_post_icons]]></wp:meta_key>
		<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729445440;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:2174;}i:1;a:1:{s:2:"id";i:1416;}i:2;a:1:{s:2:"id";i:1783;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_single_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:17:{s:8:"subtitle";s:0:"";s:6:"format";s:8:"standard";s:5:"video";s:0:"";s:7:"gallery";s:0:"";s:11:"source_name";s:0:"";s:10:"source_url";s:0:"";s:8:"via_name";s:0:"";s:7:"via_url";s:0:"";s:8:"override";a:1:{i:0;a:11:{s:18:"single_blog_custom";s:0:"";s:7:"sidebar";s:0:"";s:14:"second_sidebar";s:0:"";s:14:"share_position";s:0:"";s:17:"share_float_style";s:0:"";s:16:"post_date_format";s:0:"";s:23:"post_date_format_custom";s:0:"";s:21:"post_reading_time_wpm";s:0:"";s:20:"zoom_button_out_step";s:1:"1";s:19:"zoom_button_in_step";s:1:"1";s:17:"number_popup_post";s:1:"1";}}s:14:"image_override";a:1:{i:0;a:2:{s:26:"single_post_thumbnail_size";s:0:"";s:24:"single_post_gallery_size";s:0:"";}}s:22:"trending_post_position";s:0:"";s:19:"trending_post_label";s:0:"";s:20:"sponsored_post_label";s:0:"";s:19:"sponsored_post_name";s:0:"";s:18:"sponsored_post_url";s:0:"";s:19:"sponsored_post_logo";s:0:"";s:19:"sponsored_post_desc";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1899]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[30]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle_flag]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_format_gallery_images]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:2:"id";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>6508</wp:comment_id>
			<wp:comment_author><![CDATA[anonymous]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.7.247]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2020-12-06 15:10:33]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2020-12-06 06:10:33]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[안녕하세요

대기업 위주의 회사에서 근무 하다가 최근 스타트업에 합류하게 된 Java 개발자 입니다.
저희 회사 또한 백앤드 언어로 ruby on rails를 사용하고 있습니다.
rails 를 접했을때 느낌은 개발을 잘 이해하지 못해도 생산성 높은 구현이 가능 하구나... 하는 생각을 하였습니다.

이에 영향을 받아 Java 진영에서도 빠른 생산성을 위한 spring boot등이 나오고 이미 많은 곳에서 사용되어 지고 있습니다.
빠른 개발과 생산성을 위해 rails를 선택해야 하는 이유는 이제는 없어졌다고 할 수 있을 것 같다는 개인적인 견해 입니다.

아직은 전자 정부 프레임워크가 JAVA로 되어 있고 정부나 학교에서도 계속 Java개발자를 양성하는 측면, 국내 풍부한 Java 개발 커뮤니티와 레퍼런스,
서비스 규모가 커 질수록 네이버와, 쿠팡 처럼 수천명의 개발자들을 수급하기 위해 어쩔수 없이 Java 언어를 선택 할 수 밖에 없는 이유도 또한 크다고 생각합니다.

“뛰어난 개발자는 어떤 도구를 사용해도 잘한다.” 는 말에는 지극히 동감 합니다.
하지만 “뛰어난 개발자는 좋은 도구를 사용한다." 라는 말을 더 선호 하는 편입니다.

저희 회사도 클라우드 대용량 분산 환경에서는 Rails로 지속하기에는 적합한 생태계가 마련되어 있지 않다고 판단
Java플랫폼으로의 전환 MSA 고도화 프로젝트를 계획 하고 있습니다.

리멤버 또한 향 후 대 용량 트래픽을 감당하기 위한 어떤 로드맵을 그리고 있을지 궁금하네요.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1607235033.412033;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>6509</wp:comment_id>
			<wp:comment_author><![CDATA[anonymous]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.15.82]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2020-12-06 15:15:18]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2020-12-06 06:15:18]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[댓글에 실명이 바로 공개가 되는군요 개인 적인 견해에 대해 이렇게 실명이 공개적으로 노출되는 부분을 원하지 않으니
해당 댓글과 원 댓글은 삭제 조치 부탁 드리겠습니다. ^^]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1607235318.227915;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>6511</wp:comment_id>
			<wp:comment_author><![CDATA[Tom Kim]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[tom.kim@dramancompany.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.15.82]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2020-12-07 10:18:19]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2020-12-07 01:18:19]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[익명으로 변경해드렸습니다 :)]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>6509</wp:comment_parent>
			<wp:comment_user_id>4</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1607303899.438376;s:5:"event";s:9:"check-ham";s:4:"user";s:3:"tom";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>6512</wp:comment_id>
			<wp:comment_author><![CDATA[Tom Kim]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[tom.kim@dramancompany.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.103.12]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2020-12-07 12:29:51]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2020-12-07 03:29:51]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[네 말씀하신대로 Spring Boot가 나오면서 생산성이 많이 향상된 것으로 알고 있습니다.
그리고 말씀하신대로 국내는 워낙 Java, Spring이 De facto standard다 보니 인력을 구하는데 있어서도 압도적 우위를 갖고 있는 것도 사실이고요 ^^

만약에 2020년 말인 지금 리멤버를 새로 만든다면 꼭 Rails를 고집하지는 않을 것 같습니다. 하지만 리멤버는 2013년도 말에 개발을 시작하여 2014년도 1월부터 서비스를 시작했는데요 그때는 좋은 선택을 했다고 생각합니다. 리멤버에서 오랜 시간동안 발전시킨 Rails 스타일 표준이나 가이드 등으로 Rails를 꽤 제대로 활용하고 있다고 생각합니다. Rails를 처음 접해보신 분들도 기존의 가이드에 맞춰 굉장히 빠른 기간에 적응하고 계시고 내부 설문 조사를 해봐도 Rails를 이용하는 것에 개발자들의 만족도도 높은 편이고요.

거의 유일하게 아쉬운 건 인력 수급 문제인데 아직 네이버, 쿠팡처럼 대규모로 채용을 하지 않았기 때문에 엄청 큰 문제로 느껴지지는 않았던 것 같습니다.
다만 서비스 규모가 커지면서 더 빠른 인력 수급이 필요하거나 해당 역할에 맞는 framework이 필요한 경우 새로운 기술 스택을 추가하는 것을 적극적으로 열려있습니다 :)

추가로 Spring, Rails와 관련하여 최근에 올라온 글이 있으니 해당 글도 읽어보시면 도움이 되실 것 같습니다.
https://blog.dramancompany.com/2020/11/java-spring-ruby-on-rails/]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>6508</wp:comment_parent>
			<wp:comment_user_id>4</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1607311791.260619;s:5:"event";s:9:"check-ham";s:4:"user";s:3:"tom";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>6703</wp:comment_id>
			<wp:comment_author><![CDATA[리멤버 서버/웹 팀은 어떻게 일을 하는가? | DRAMA&amp;COMPANY]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>https://blog.dramancompany.com/2020/12/%eb%a6%ac%eb%a9%a4%eb%b2%84-%ec%84%9c%eb%b2%84-%ec%9b%b9-%ed%8c%80%ec%9d%80-%ec%96%b4%eb%96%bb%ea%b2%8c-%ec%9d%bc%ec%9d%84-%ed%95%98%eb%8a%94%ea%b0%80/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.28.217]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2020-12-23 12:14:08]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2020-12-23 03:14:08]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] 리멤버 지원자분들이 묻는 질문 Top 4 [&#8230;]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1608693248.485407;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[리멤버 QA팀이 하는 일]]></title>
		<link>https://blog.dramancompany.com/2019/03/%eb%93%9c%eb%9d%bc%eb%a7%88-qa%ed%8c%80%ec%9d%b4-%ed%95%98%eb%8a%94-%ec%9d%bc/</link>
		<pubDate>Mon, 18 Mar 2019 09:16:13 +0000</pubDate>
		<dc:creator><![CDATA[sumin]]></dc:creator>
		<guid isPermaLink="false">http://blog.dramancompany.com/?p=974</guid>
		<description></description>
		<content:encoded><![CDATA[<p style="text-align: left;">안녕하세요. 드라마앤컴퍼니 QA팀 곽수민입니다. <span style="font-weight: 400;">이번 포스팅에서 드라마의 QA팀은 어떠한 업무를 하고 있는지 소개하려 합니다. </span></p>
<p style="text-align: left;"><span style="font-weight: 400;">삐까뻔쩍한 최신형 휴대폰을 사용해보았더니, 막상 전화 거는 방법도 모르겠고, 키보드를 사용하는 방법도 어렵고, 기본으로 설치된 애플리케이션이 강제 종료되어 작업 중인 내용이 사라진다면 어떨까요? 소비자들로부터 품질 관련 불만이 봇물처럼 터져나오고 아무도 그 휴대폰을 구매하려고 하지 않을 것입니다. 그래서 개발 결과물에 대한 QA 검수가 매우 중요합니다.</span></p>
QA 검수 단계에서는 크게 다음 두 가지 관점으로 검수를 진행합니다.
<ul>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">기능적 관점: 버그 없이 기능이 잘 동작하는지 </span></li>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">사용자 UI/UX 관점: 각종 버튼/텍스트/화면 레이아웃 등 </span>UI가 올바르게 표시되는지</li>
</ul>
<b>UX가 잘 설계되었는지 여부</b><span style="font-weight: 400;">는 기획자 분들도 이미 많은 고민을 하신 이유로 QA 검수를 넘어서 판단하기 조심스러운 영역인 것 같습니다.</span>
<p style="text-align: center;"><a href="https://blog.dramancompany.com/wp-content/uploads/2019/03/network-1987209_960_720.jpg"><img class="alignnone size-full wp-image-1055" src="https://blog.dramancompany.com/wp-content/uploads/2019/03/network-1987209_960_720.jpg" alt="" width="960" height="640" /></a></p>
QA 검수는 정확성이 생명이기 때문에 최대한 효율적이고, 넓은 테스트 Coverage를 가지고 진행되어야 합니다. 검수가 제대로 이루어지지 않는다면 서비스의 품질과 사용자 Retention은 낮아지고, 결국 사용자에게 사랑받지 못하는 서비스가 되고 맙니다. 따라서 드라마 QA팀에서는 더 정확하고 꼼꼼한 검수를 위해 다양한 방법을 사용하고 있습니다.

<strong>- QA의 꽃 : 기능 / UI 테스트</strong>

<span style="font-weight: 400;">안드로이드 디바이스는 이슈에 따라 디바이스 또는 OS 환경에 영향을 받는 경우가 매우 많습니다. (저는 그래서 iOS 검수를 좋아하는 편입니다.) 정확히 추산할 수 없지만, 리멤버의 구글 플레이 스토어 배포 단계에서 설치 가능한 디바이스들을 조회해보면 약 11,500개 정도의 디바이스들이 보여집니다. 그러니 전세계의 안드로이드 디바이스들을 모두 전수 테스트한다는 것은 말도 안되는 일이죠. 그래서 사용자들이 많이 사용하는 디바이스들을 고려하여, 비교적 넓은 Coverage를 가진 범용적인 디바이스들로 테스트 기기를 선정하는 것이 매우 중요합니다. (다행히 한국은 삼성에서 나온 디바이스들의 점유율이 높아 어렵지는 않았습니다.)</span>

<span style="font-weight: 400;">테스트 기기 선정을 마쳤다면, 테스트 시나리오도 준비합니다. 보통 모든 기능을 테스트하는 전수테스트(Full 테스트)와 각 기능별 주요 요소를 빠르게 점검하기 위한 기능테스트(Simple 테스트)가 있습니다. 그 외 배포 후 빠르게 UI 요소들을 점검할 수 있는 테스트 시나리오, 테스트 환경 (QA 검수 환경, Staging 환경, 운영 환경 등)에 따른 테스트 시나리오도 있습니다. 다양한 상황에서 다양한 목적으로 테스트할 수 있도록 여러 테스트 시나리오를 만들고, 이를 상황에 맞게 적절히 조합하여 활용하는 것이 중요합니다.</span>

<span style="font-weight: 400;">이제 테스트를 진행합니다. 구현된 기능은 문제가 없는지, 다양한 환경에서 앱이 잘 구동되는지의 여부, 레이아웃이나 워딩 등에 문제는 없는지, 입력된 데이터는 정상적으로 등록되어 앱에 표시되는지 등의 사용자 케이스를 충분히 고려하면서 검수를 진행하게 됩니다.</span>

<span style="font-weight: 400;">사실 위에서 언급한 QA 검수는 모든 QA 조직에서 잘하고 계신 부분입니다.  </span><span style="font-weight: 400;">그러나 드라마 QA팀에는 다른 조직과는 구별되는 여러 특징들이 존재합니다. 그 중 첫 번째는 바로 서버 API를 QA검수와 버그 원인 추적에 매우 잘 활용한다는 것입니다.</span>

<strong>- 최고의 보조 도구 : API</strong>

<span style="font-weight: 400;">서비스마다 차이가 있지만, 리멤버에서는 로컬에서만 동작 가능한 기능도 있고, API 라는 서버와의 통신을 통해 앱을 조종하는(?) 녀석이 있습니다. 저도 이 API 영역이 처음에는 매우 어렵고, 개발자들만 아는 기술인 줄 알았습니다. </span>

<span style="font-weight: 400;">보통 테스트 업무를 하기 위해서 테스트용 더미 데이터를 쌓거나, 수십개의 계정이 필요한 경우들이 있습니다. 또한, 버그의 내용 파악을 위해서 ‘노가다’로 재현단계에 필요한 데이터를 쌓거나, 부족한 정보들로 파악해볼 수 밖에 없습니다. 저도 역시 그러한 과정을 통해서 많은 시간을 날려(?)보았던 경험이 있습니다. 더 나은 프로세스를 만들기 위해서 여러가지 방법을 찾아본 끝에 내부 API를 활용해보기로 하였고, 결과는 상상을 초월할 정도로 QA 업무에 많은 도움이 되었습니다.</span>

<span style="font-weight: 400;">보통 식당에서는 손님이 메뉴판에서 원하는 메뉴를 골라 직원에게 주문을 합니다, 그러면 주방에서는 요리를 하고, 음식이 완성되면 직원이 손님에게 가져다줍니다. 이를 API 개념에 빗대어보면 다음과 같습니다.</span>
<p style="text-align: center;"><span style="font-weight: 400;">‘손님’ = ‘클라이언트’,</span></p>
<p style="text-align: center;"><span style="font-weight: 400;">‘메뉴’ = ‘서비스가 제공하는 기능',</span></p>
<p style="text-align: center;"><span style="font-weight: 400;">‘주방’ = ‘서버',</span></p>
<p style="text-align: center;"><span style="font-weight: 400;">‘직원' = ’API’</span></p>
<span style="font-weight: 400;">손님(클라이언트)은 주방(서버)에서 메뉴(기능)가 어떻게 만들어지는지 모르고 또 알 필요도 없습니다. 다만, 손님은 직원(API)을 통해서 요청(주문)을 보낼 수 있고, 요청의 결과(직원이 내가 주문한 메뉴를 가져다주는지)가 정상인지 확인할 수 있습니다. 예를 들면 우리는 서비스에 로그인을 하기 위해, 로그인 버튼을 누릅니다. 그러면 사용자 입장에서는 그냥 ‘로그인' 버튼만 눌렀다고 인지하게 됩니다. 하지만 실제로 우리가 주목해야 될 내용은</span>
<ul>
 	<li style="font-weight: 400;"><span style="font-weight: 400;">‘화면에서 보이는 버튼 중 로그인 버튼을 누름'  = ‘</span><b>로그인 요청 API를 서버로 전송</b><span style="font-weight: 400;">'</span></li>
</ul>
<span style="font-weight: 400;">입니다. (당연히 ‘로그인’ 버튼을 눌렀는데, ‘회원가입' API가 호출되면 안 됩니다. 식당에서 부대찌개를 시켰는데, 김치찌개가 나오면 안되잖아요?)</span>

<span style="font-weight: 400;">API를 활용할 줄 알면 단순히 화면을 보고, 테스트 시나리오대로 검증하는 역할을 넘어서, 다양한 QA 업무를 더욱 단순하고 빠르게 해결할 수 있습니다. 드라마 QA팀은 팀명함첩 결제 기능처럼 복잡하거나, 반복적으로 이루어지는 테스트에 API를 활용하고 있습니다. 대량의 테스트 데이터를 만들 때도 사용합니다. 프로세스에 대한 고도화가 점점 되어가면서 테스트 API 서버가 여러 번 뻗기도 하였고, 생각지도 못한 기능들의 문제들도 발견할 수 있었습니다. (때문에 서버 개발팀이 고생 많이 하셨죠..) </span><span style="font-weight: 400;">그 외에도 사용자 혹은 사내에서 보고되는 버그들의 원인 파악에도 유용하고 쓰고 있습니다. 그 결과 노가다성 업무들은 60%이상 줄게 되었습니다.</span>
<p style="text-align: center;"><a href="https://blog.dramancompany.com/wp-content/uploads/2019/03/스크린샷-2019-03-18-오후-5.25.25.png"><img class="alignnone size-full wp-image-978" src="https://blog.dramancompany.com/wp-content/uploads/2019/03/스크린샷-2019-03-18-오후-5.25.25.png" alt="" width="389" height="398" /></a></p>
<p style="text-align: center;"><span style="font-weight: 400;">&lt;회원가입_인증번호 전송을 위한 API 호출&gt;</span></p>
<span style="font-weight: 400;">위 이미지에서와 같이 API 호출 시 파라미터에 유효한 값, 유효하지 않은 값 등 다양한 값을 입력하고, 서버의 응답 결과를 확인합니다. 이를 통해 기능 요구사항에 맞는 API가 호출되는지, 앱에서는 API 응답을 화면에 잘 보여주는지 등을 확인해보면 실제로 소스 코드에 버그가 있는지, 그 원인은 무엇인지 파악할 수 있습니다.</span>

<a href="https://blog.dramancompany.com/wp-content/uploads/2019/03/스크린샷-2019-03-13-오후-12.38.49.jpg"><img class="alignnone wp-image-1010 aligncenter" src="https://blog.dramancompany.com/wp-content/uploads/2019/03/스크린샷-2019-03-13-오후-12.38.49.jpg" alt="" width="381" height="372" /></a>

<a href="https://blog.dramancompany.com/wp-content/uploads/2019/03/스크린샷-2019-03-18-오후-6.53.41.png"><img class="alignnone wp-image-1008 aligncenter" src="https://blog.dramancompany.com/wp-content/uploads/2019/03/스크린샷-2019-03-18-오후-6.53.41.png" alt="" width="399" height="622" /></a>
<p style="text-align: center;"><span style="font-weight: 400;">&lt;내부에서 신고된 버그를 해결해나가는 과정&gt;</span></p>
<span style="font-weight: 400;">테스트 중 발견되거나 사용자에게 제보된 버그들을 전달할 때, “이거 안되는거 같아요"라고 단순하게 전하기 보다는 “API 호출을 해보니 서버에서는 정상적으로 잘 처리가 되는 걸 보면 앱에 문제가 있는 것 같아요”하고 더욱 구체적인 내용을 전달해줄 수 있습니다. 덕분에 버그의 원인을 빠르게 잡아내고, 사용자의 불편함을 원활하게 해결하고 있습니다. </span>

<span style="font-weight: 400;">개발팀 외 다른 팀이 서버 API의 내용을 잘 숙지하고 활용하면 조직 전체에 매우 큰 도움이 되는 것을 보여주는 사례이기도 합니다.</span>

<b>자체 TASK</b>

<span style="font-weight: 400;">1. 기능별 시나리오 분할과 Function-Tree</span>

<span style="font-weight: 400;">드라마앤컴퍼니 QA 팀은 현재에 안주하지 않고 ‘일이 되게하는 방향'을 찾기 위해서 계속해서 시도하고, 빠르게 변화하는 업무 방식을 추구하고 있습니다. 예를 들면 과거 기능별 TF (하나의 기능 개발을 위해 기획, UI/UX, 개발, QA가 하나의 임시 팀을 이루는 것) 체제로 일을 한 적이 있었습니다. 이 때 여러 기능별 TF에서 각 기능 개발이 동시다발적으로 진행되면 QA팀의 리소스가 매우 부족했었습니다. 모든 기능을 매번 ‘전수 테스트' 한다는 것은 말도 안되는 엄청난 양이기도 하고, 매일 밤늦게까지 고생하면서 업무를 진행하기에는 팀원들의 사기도 매우 걱정이 되었습니다. 또한, 서비스에 기능이 계속 추가되면서 테스트 시나리오는 나날이 늘어만 가는 와중에 일정 수준의 테스트 Coverage를 만족시키는 것도 매우 부담스러웠습니다. 그에 더해 배포 주기도 점점 짧아지면서 기존의 시나리오로 매번 검증하는 방법은 너무 비효율적이었습니다.</span>

<span style="font-weight: 400;">그래서 이를 해결해보고자 TF체제에 적합한 테스트 시나리오 관리 방법부터 고민했습니다. 우선 기존 전수테스트의 모든 Test Case들을 ‘기능' 단위별로 분할했습니다. 새롭게 추가되는 기능들도 같은 방식으로 모두 분할하여 관리하기 시작했습니다. (당연히 전수 테스트 시나리오에도 함께 반영이 되었고요.)</span>

<span style="font-weight: 400;">이후에 각 TF에서 QA 검수를 요청하면 미리 검수용 시나리오를 분할해 둔 덕분에 해당 기능 및 연관된 기능만 테스트할 수 있었습니다. 이를 통해 테스트 범위를 대폭 축소시키면서도 일정한 수준의 Coverage를 확보할 수 있었습니다. QA 검수 효율이 매우 좋아지는 게 눈에 보였고, 더불어 팀의 리소스도 충분히 확보할 수 있었습니다.</span>

<span style="font-weight: 400;">하지만 그 행복은 길지 않았습니다. 각 TF별로 단일 기능이 개발된 빌드의 검수가 필요할 때는 매우 적합했지만, 각 TF에서 개발한 여러 기능을 합친 빌드를 검수할 때가 문제였습니다. 분할된 기능의 테스트 시나리오를 일일이 찾아서 취합시켜야 하는 번거로움이 뒤따랐고, 테스트 결과의 History 관리가 매우 힘들다는 문제점이 있었습니다.</span>

<span style="font-weight: 400;">사실상 테스트 시나리오를 일일이 찾아본다면 대응 가능하기도 하고, 여러 기능들이 합쳐져 검수해야 할 범위가 복합적이라면 전수 테스트를 돌려버리면 그만일수도 있습니다. 하지만 그만큼 코드 수정이 일어나지 않은 부분을 포함하여 불필요한 테스트를 반복하게 되면 아까운 테스트 리소스가 소모됩니다. 또, 광고, PR이나 마케팅 일정 등이 맞물려 배포 일정이 중요한 시기에 배포 타이밍을 놓치게 된다면 회사에 큰 손실을 입히게 됩니다. (여담이지만.. 그래서 QA팀은 정말 좋은 판단력을 지녀야 합니다. 어떻게 해서든 배포하기 전 완벽한 컨디션을 가진 서비스를 세상에 내놓아야 하니까요.)</span>

<span style="font-weight: 400;">리멤버에서는 어떠한 기능을 수정 한다면, 똑같은 기능을 제공하는 다른 뷰, 또 다른 진입 Point, 숨어있는 관련 뷰 등이 많이 있습니다. 그래서 최소한의 Coverage를 유지하면서 모든 기능을 빠르고, 완벽하게 검수하는 방법을 찾아야 했습니다. 고민 끝에 서비스의 모든 기능과 기능 간 영향도를 한눈에 파악할 수 있도록 Function-Tree를 제작했습니다. (서비스의 기능이 추가/변경/삭제되면서 끝없는 현재 진행형입니다.)</span>
<p style="text-align: center;"><b></b><a href="https://blog.dramancompany.com/wp-content/uploads/2019/03/스크린샷-2019-03-18-오후-5.28.35.png"><img class="alignnone size-full wp-image-982" src="https://blog.dramancompany.com/wp-content/uploads/2019/03/스크린샷-2019-03-18-오후-5.28.35.png" alt="" width="584" height="563" /></a></p>
<p style="text-align: center;"><b>&lt;Function-Tree 사용 예시&gt;</b></p>
<span style="font-weight: 400;">이렇게 간단하게 기능만 나열해놓은 것 같지만, 위의 사용 예시처럼 ‘이메일'에 대한 앱 내 모든 위치와 함께 코드 수정에 따른 영향도가 있을 만한 기능들을 한눈에 검색하여 파악할 수 있습니다. 이를 통해 테스트 범위를 정확하고 효율적으로 판단할 수 있음은 물론이고, 과거에 놓치고 있었던 부분까지 검증할 수 있었습니다.</span>

<strong>2. 테스트 자동화(Test Automation)</strong>

<span style="font-weight: 400;">시간이 흐름에 따라 서비스의 기능이 점점 늘어나면 테스트 범위도 함께 늘어납니다. 그런데 빡빡한 일정에 맞춰서 검수를 마치려면, 시간이 없다는 이유로 전체적인 Test Coverage를 타협해야 하는 경우도 많습니다. 하지만 이렇게 하면 문제를 발견하지 못할 확률이 높아지고 최상의 컨디션을 가진 제품을 보장하지 못합니다.</span>

<span style="font-weight: 400;">드라마의 QA팀에서는 이러한 문제를 해결하고자 테스트 자동화를 도입하여 Appium 서버와 Selenium Library에 기반한 자동화 스크립트를 개발하고 있습니다.</span>
<p style="text-align: center;"><a href="https://blog.dramancompany.com/wp-content/uploads/2019/03/temp_1552898906654.-1590457630.gif"><img class="alignnone size-full wp-image-988" src="https://blog.dramancompany.com/wp-content/uploads/2019/03/temp_1552898906654.-1590457630.gif" alt="" width="390" height="360" /></a></p>
<p style="text-align: center;"><span style="font-weight: 400;">&lt;자동화 스크립트가 작동되는 모습.gif&gt;</span></p>
<span style="font-weight: 400;">테스트 시나리오 중 굳이 사람 손을 타지 않아도 되는 기능들을 테스트 자동화하면 테스트에 소요되는 리소스를 절감하고 테스트 속도를 크게 향상시킬 수 있습니다. 또한 QA 직무의 특성상 같은 시나리오로 테스트를 반복하다보면 지루해지기 쉽고, 그러면 실수할 수 있는 확률이 높아집니다. 그러나 스크립트는 사람과 달리 지루함을 느끼지도 않고, 실수하지도 않기 때문에, ‘일관성’ 있는 테스트 결과를 받아볼 수 있습니다. 또한, 자동화 스크립트가 점점 쌓여가면서 컴퓨터가 할 수 있는 Test Coverage가 점점 더 늘어나면, QA 엔지니어의 리소스를 테스트 시나리오 고도화 등 다른 더 가치 있는 작업에 사용할 수 있다는 장점이 있습니다.</span>

<span style="font-weight: 400;">반면, 테스트 자동화의 단점은 기능의 추가/수정이 일어나면 관리해야 될 소스 코드의 양도 늘어난다는 것입니다. 추후에 대규모 UI 또는 기능 변경이 일어난다면 관련 코드를 수정해야 하므로 예상치 못한 큰 Cost가 발생할 수 있습니다. 따라서, 어떤 부분을 자동화하고, 어떤 부분을 하지 말아야 할 지 잘 판단해야 합니다.</span>

<a href="https://blog.dramancompany.com/wp-content/uploads/2019/03/스크린샷-2019-03-18-오후-5.43.07.png"><img class="alignnone wp-image-987 aligncenter" src="https://blog.dramancompany.com/wp-content/uploads/2019/03/스크린샷-2019-03-18-오후-5.43.07.png" alt="" width="905" height="626" /></a>
<p style="text-align: center;"><span style="font-weight: 400;">&lt;실제 리멤버 앱에서 테스트가 수행되는 Step을 구현한 소스 일부&gt;</span></p>
<span style="font-weight: 400;">스크립트는 ‘기본 기능 검증’ 위주로 작성해야 합니다. ‘기본 기능 검증' 은 여러가지 의미가 있을 수 있지만 저희는 보통 ‘Happy Path’(예외 또는 오류의 발생 없이 정상적으로 수행되는 기본 시나리오)로 설정하고 있습니다. 기획 내용을 바탕으로 예상한 대로 잘 동작하는지, 특정 상황에서 정의된 에러 메시지(ex. ‘비밀번호를 잘못 입력하셨습니다.’ 등의 메시지(API의 경우 200 OK 응답))가 잘 보여지는지 확인합니다. (참고로 예상치 못한 404, 500 등의 API 에러가 발생하는 경우는 ‘Happy Path’가 아닙니다.)</span>

‘Happy Path’ 위주의 검증 방법을 채택한 이유는 모든 테스트 시나리오에 대해 코드를 작성하면, 무수히 많은 Case들을 고려해야 하므로 결국은 사람이 직접 손으로 테스트를 하는 것보다 훨씬 더 비효율적이기 때문입니다. 너무 많은 테스트 케이스로 인한 스크립트 관리/유지보수의 부담과 Code Quality의 저하로 인해 사람의 손을 더 타게 된다면 배보다 배꼽이 더 큰 상황을 초래할 수 있습니다. <span style="font-weight: 400;">또한, 서비스 기능별로 ‘단위 테스트' 방식 기반으로 스크립트를 작성하였고, 때때로 전체 테스트가 필요하면 모든 단위 테스트를 한번에 모아서 ‘통합 테스트'를 실행하도록 시스템을 구축하였습니다. 이렇게 하면 마이너한 앱 기능 수정(전체 테스트가 필요 없는 코드 수정)이나 빠르게 해결되어야 하는 hotfix(긴급패치) 대응을 위한 테스트를 빠르게 진행하기 쉽습니다. </span>

이렇게 만들어진 Script는 마치 사람이 실제 앱을 사용하는 것처럼 클라이언트를 조작할 수 있고, 정의된 시나리오대로 앱의 기능 테스트를 수행하게 됩니다.

<b>마무리</b>

<span style="font-weight: 400;">다음에는 위에 소개한 내용 중 드라마 QA팀이 자동화 시스템을 구축하면서 겪은 시행착오와 구축방법을 본격적으로 소개해보려고 합니다.</span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>974</wp:post_id>
		<wp:post_date><![CDATA[2019-03-18 18:16:13]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-03-18 09:16:13]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-11-13 18:30:36]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-11-13 09:30:36]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%eb%93%9c%eb%9d%bc%eb%a7%88-qa%ed%8c%80%ec%9d%b4-%ed%95%98%eb%8a%94-%ec%9d%bc]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="develop"><![CDATA[Tech]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[4]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[right-sidebar]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_slogan]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_subslogan]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_header_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_scroll_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_bottom_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_footer_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_view_post_info]]></wp:meta_key>
		<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_post_icons]]></wp:meta_key>
		<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729537511;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:2124;}i:1;a:1:{s:2:"id";i:1078;}i:2;a:1:{s:2:"id";i:2603;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_single_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:6:"format";s:8:"standard";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1055]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[30]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>3495</wp:comment_id>
			<wp:comment_author><![CDATA[ash]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[moond9103@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[211.60.2.130]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2019-06-11 11:16:28]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2019-06-11 02:16:28]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[안녕하세요 function tree 작성하실때 사용하신 툴이 어떤 건지 알수있을까요?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1560219388.705053;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>3507</wp:comment_id>
			<wp:comment_author><![CDATA[sumin]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[sm.kwak@dramancompany.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[211.249.71.223]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2019-06-14 19:06:37]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2019-06-14 10:06:37]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[안녕하세요, 저희는 마인드마이스터라는 웹 기반으로 만들어진 서비스를 이용합니다. 무료 버전으로 사용하고 있지만, 현재까지는 큰 불편함없이 잘 이용하고 있습니다.

관련 내용은 아래 페이지로 이동해보세요^^ 감사합니다.
http://www.mindmeister.com]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>3495</wp:comment_parent>
			<wp:comment_user_id>20</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1560506797.77858;s:5:"event";s:9:"check-ham";s:4:"user";s:5:"sumin";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>4124</wp:comment_id>
			<wp:comment_author><![CDATA[Asdf]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[ssjaks07@naver.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[223.38.28.179]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2019-08-30 17:48:07]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2019-08-30 08:48:07]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[다음편은 언제쯤 나오나요
기다려도 안나와서ㅜㅜㅜ
 -자동화에 목마른 1인-]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1567154887.763881;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>4148</wp:comment_id>
			<wp:comment_author><![CDATA[sumin]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[sm.kwak@dramancompany.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.28.217]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2019-09-03 16:12:36]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2019-09-03 07:12:36]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[관심있게 봐주셔서 감사합니다!
다음글부터 본격적으로 자동화에 관련된 글로 포스팅을 열심히 준비중입니다.

좋은하루 보내세요^^]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>4124</wp:comment_parent>
			<wp:comment_user_id>20</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1567494756.9141;s:5:"event";s:9:"check-ham";s:4:"user";s:5:"sumin";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>4231</wp:comment_id>
			<wp:comment_author><![CDATA[Hyunsue Lee]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[hanpurn@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.28.217]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2019-09-13 06:02:09]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2019-09-12 21:02:09]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[영어 UI 필요합니다...]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1568322129.710232;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>4265</wp:comment_id>
			<wp:comment_author><![CDATA[sumin]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[sm.kwak@dramancompany.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[211.249.71.223]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2019-09-17 17:42:06]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2019-09-17 08:42:06]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[안녕하세요. Hyunsue Lee님
문의해주신 내용이 해당 글의 영문판이 필요하다는 것인가요?
만약 그렇다면, 영문판은 따로 제공이 힘든 점 알려드립니다.ㅠㅠ
혹시 다른 내용의 문의라면 댓글 남겨 주세요! 감사합니다.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>4231</wp:comment_parent>
			<wp:comment_user_id>20</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1568709726.220459;s:5:"event";s:9:"check-ham";s:4:"user";s:5:"sumin";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>5145</wp:comment_id>
			<wp:comment_author><![CDATA[유강용]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[kkang_yong@naver.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.15.82]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2020-01-07 11:10:06]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2020-01-07 02:10:06]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[포스팅 재미있게 잘보고있습니다. 개꿀~]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1578363006.167849;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>5154</wp:comment_id>
			<wp:comment_author><![CDATA[sumin]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[sm.kwak@dramancompany.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.27.94]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2020-01-09 17:51:35]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2020-01-09 08:51:35]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[안녕하세요, 유강용님
포스팅에 관심가져주셔서 감사합니다.

더 나은 글들을 연재할 수 있도록 노력하겠습니다.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>5145</wp:comment_parent>
			<wp:comment_user_id>20</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1578559895.520483;s:5:"event";s:9:"check-ham";s:4:"user";s:5:"sumin";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>5402</wp:comment_id>
			<wp:comment_author><![CDATA[강은진]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[merry6659@naver.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.19.107]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2020-03-05 08:53:46]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2020-03-04 23:53:46]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[테스트 툴은 어떤거 쓰세요?
QA이시면 코딩도하실줄아시나요?
펌웨어 및 모바일앱 검증하려고하는데 테스트 툴 추천해주세요 ( PYTHON)]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1583366026.415562;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>6238</wp:comment_id>
			<wp:comment_author><![CDATA[CK]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[chriskang9@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.28.217]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2020-08-26 10:19:54]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2020-08-26 01:19:54]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[리멤버가 자꾸 강제 종료됩니다.  뭐가 문제일지요?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1598404794.168698;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[리멤버는 어떻게 명함을 정확히 인식할까? : OpenCV 이미지 프로세싱]]></title>
		<link>https://blog.dramancompany.com/2019/03/opencv%eb%a1%9c-%ec%8b%a4%ec%8b%9c%ea%b0%84-%eb%aa%85%ed%95%a8-%ec%9d%b8%ec%8b%9d%ed%95%98%ea%b8%b0/</link>
		<pubDate>Thu, 21 Mar 2019 02:27:51 +0000</pubDate>
		<dc:creator><![CDATA[sm.im]]></dc:creator>
		<guid isPermaLink="false">http://blog.dramancompany.com/?p=1016</guid>
		<description></description>
		<content:encoded><![CDATA[리멤버 모바일 애플리케이션의 핵심 기능은 단연 카메라일 것입니다. 명함으로 연결되는 세상을 꿈꾸는 리멤버에게 카메라는 오프라인의 명함을 온라인상의 내 인맥으로 만드는 출발점이기 때문이죠. 그렇기 때문에 최대한 명함을 깔끔하게 인식하고, 깨끗하게 처리해서 타이피스트가 정확하게 입력할 수 있도록 전달하는 것이 리멤버 앱의 핵심 임무 중 하나입니다. 몇 년 전에 저희의 이러한 고민을 담아 <a class="external-link" href="https://blog.dramancompany.com/2016/04/crop/" rel="nofollow">블로그 글</a>을 공개했었는데요, 새롭게 개발된 리멤버 안드로이드 앱의 카메라 기능을 소개합니다.
<h3 id="OpenCV를이용한명함인식알고리즘개발-변한것들">새로운 카메라 엔진의 필요성</h3>
작년 5월, 리멤버가 대대적인 UI 개편을 하면서 카메라 UI 역시 크게 바뀌었습니다. 기존에는 아래와 같이 가로로 명함을 찍도록 유도하는 화면이었다면, 이제는 대부분의 카메라 앱과 마찬가지로 한손으로 편하게 휴대폰을 잡은 방향 그대로 촬영할 수 있도록 하는 것이죠. 하지만 지난 블로그에서 언급한 것처럼, 리멤버 안드로이드 앱에서는 개발의 용이성을 위해서 휴대폰 방향과 평행한 명함만 인식하게 되어있었습니다. 덕분에 많은 개발 리소스를 아낄 수 있었지만, 비스듬히 놓이거나, 휴대폰과 수직으로 놓인 명함은 전혀 인식하지 못했고, 이는 새로운 UI에서 매우 치명적인 허점이었습니다. 따라서 리멤버 리뉴얼을 위해서 새로운 카메라 엔진 개발은 필수적이었습니다.

[caption id="attachment_1032" align="aligncenter" width="570"]<a href="https://blog.dramancompany.com/wp-content/uploads/2019/03/blog_rememeber-e1553139108727.png"><img class="wp-image-1032" src="https://blog.dramancompany.com/wp-content/uploads/2019/03/blog_rememeber.png" alt="" width="570" height="356" /></a> 좌: 기존의 카메라 UI 우: 리뉴얼 후 카메라 UI[/caption]

또한, 리멤버 안드로이드 앱의 카메라 성능에 대한 피드백이 꾸준히 제기되고 있었습니다. 전반적으로는 괜찮은 성능을 보이지만, 미묘하게 가장자리가 제대로 인식되지 못하거나, 복잡한 배경 위에서는 명함을 제대로 인식하지 못하거나, 명함 촬영 가이드라인이 심하게 흔들리는 등 사용자의 촬영 경험에 좋지 않은 영향을 미치는 요소들이 매우 많았습니다. BoofCV 라이브러리의 한계와 레거시 코드의 영향으로 간단하고 사소한 개선이 불가능한 상태였고, 저희는 완전히 새로운 로직과 코드 위에서 카메라 엔진을 새롭게 만들기로 결심했습니다.
<h3 id="OpenCV를이용한명함인식알고리즘개발-그대로인것들"></h3>
<h1 id="OpenCV를이용한명함인식알고리즘개발-명함인식알고리즘">명함 인식 알고리즘</h1>
저희의 1차적인 목표는 명함이 어떻게 배치되어 있든 명함을 인식할 수 있도록 하는 것이었습니다. 그러기 위해서는 기존에 사용하던 <a class="external-link" href="https://boofcv.org/index.php?title=Main_Page" rel="nofollow">BoofCV</a> 라이브러리를 포기해야 했습니다. 수직, 수평 방향 직선을 찾는 데에만 최적화되어 있고, Hough Transform을 제외한 모든 연산에서 좋지 않은 성능을 보였기 때문에 실시간 이미지 프로세싱에서 가장 방대한 레퍼런스를 제공하고 있는 <a class="external-link" href="https://opencv.org/" rel="nofollow">OpenCV</a>를 사용하기로 했습니다. 리멤버 앱의 명함 인식은 크게 아래와 같은 과정을 거칩니다.
<ol>
 	<li>Pre-Processing</li>
 	<li>Edge Detection</li>
 	<li>Find Contours</li>
 	<li>Find Rectangle</li>
</ol>
<h2 id="OpenCV를이용한명함인식알고리즘개발-Pre-Processing">Pre-Processing</h2>
리멤버 앱에서는 실시간으로 이미지를 처리하고, 사용자에게 명함의 위치를 보여줘야 했기 때문에 최대한 빠르게(100ms 이내) 이미지를 분석하고 그 안에서 명함을 찾아내야 했습니다. 하지만 요즘 스마트폰에서 보내주는 이미지는 해상도가 매우 높기 때문에 원본을 그대로 사용하면 이미지 처리에 매우 많은 시간이 걸립니다. 명함을 찾기 위해서 고화질의 이미지가 필요하지는 않으므로, 저희는 약 480px 수준으로 원본 이미지를 줄여서 사용했습니다.

이미지를 줄인 후, 최대한 타겟으로 하는 명함 이미지가 두드러져 보이도록 여러 가지 전처리 작업을 해주었습니다. 저희는 명함과 뒷배경의 대비가 명확하고 uniform 한 경우는 물론이고, 명함과 비슷한 색의 배경, 또는 매우 지저분한 배경에서도 명함이 높은 확률로 인식될 수 있게 하고 싶었습니다. 특히 아래와 같은 상황들은 눈으로도 구분 짓기 어려운 경계선을 찾아내거나, 명확한 직선을 찾는 것을 방해하는 수많은 장애물을 최대한 걷어내야 했습니다.

<a href="https://blog.dramancompany.com/wp-content/uploads/2019/03/blog_original-e1553139395490.png"><img class="wp-image-1033 aligncenter" src="https://blog.dramancompany.com/wp-content/uploads/2019/03/blog_original.png" alt="" width="790" height="280" /></a>

따라서 자잘한 디테일은 숨기고, 큰 변화들이 두드러지는 데에 중점을 두고 이미지를 처리했습니다. 이를 위해서 먼저 OpenCV에서 제공하는 다양한 Image Blurring(Image Smoothing) 필터를 통해서 명함과 배경을 혼동하게 만드는 지저분한 정보들을 지운 뒤, Edge Preserving Filter를 통해 명함과 배경 사이의 흐려진 경계선을 최대한 복구했습니다. Edge Preserving Filter들은 이미지를 전반적으로는 부드럽게 만들지만, Edge라고 판단되는 곳, 즉 색상의 급격한 변화가 있는 곳은 더욱 뚜렷하게 만드는 효과가 있습니다.

전처리를 거친 이미지는 아래와 같이 경계선을 판별하기 매우 좋은 상태로 다시 태어나게 됩니다.

<a href="https://blog.dramancompany.com/wp-content/uploads/2019/03/blog_preprocess.png"><img class="wp-image-1034 aligncenter" src="https://blog.dramancompany.com/wp-content/uploads/2019/03/blog_preprocess.png" alt="" width="790" height="280" /></a>
<h2 id="OpenCV를이용한명함인식알고리즘개발-EdgeDetection">Edge Detection</h2>
이전보다 깔끔해진 이미지를 가지고 본격적으로 명함의 경계선을 찾아야 합니다. 이를 위해서 저희는 간단한게 OpenCV의 <a class="external-link" href="https://en.wikipedia.org/wiki/Canny_edge_detector" rel="nofollow">Canny Edge Detector</a>를 사용했습니다. Canny Edge Detector는 다섯 단계를 통해서 경계선을 추출해냅니다. 일반적인 사무실 책상에서 찍은 아래의 예시를 보겠습니다.

[caption id="attachment_1039" align="aligncenter" width="1827"]<a href="https://blog.dramancompany.com/wp-content/uploads/2019/03/blog_canny-1-e1553140028785.png"><img class="size-full wp-image-1039" src="https://blog.dramancompany.com/wp-content/uploads/2019/03/blog_canny-1.png" alt="" width="1827" height="443" /></a> 왼쪽부터 원본, 전처리, Canny Edge Detection 결과[/caption]

위와 같이 전처리와 경계선 추출을 통해서 드디어 명함의 윤곽이 제대로 드러나기 시작했습니다! 이제 매우 간단하게 직사각형을 찾아낼 수 있을 것 같지만, 저희의 목적은 일반적인 사무실 책상 위의 하얀색 명함이 아니라, 그 어떤 명함과 배경에서도 성공적으로 명함을 찾아내는 것입니다. 따라서 한 가지 작업을 더 해주어야 했습니다. 다양한 배경에 명함이 위치하다보면, 명함의 경계선 중 일부분이 배경색과 같은 경우가 종종 있습니다. 이런 경우에는 Canny Edge Detector에서 찾아낸 Edge가 이어져있지 않고 끊어져있을 때도 있습니다. 사소한 균열일 수도 있지만, 매우 복잡한 배경 속에서 완벽하게 이어져있지 않은 직사각형은 종종 걸림돌이 되곤 했습니다. 따라서 저희는 <a class="external-link" href="https://en.wikipedia.org/wiki/Mathematical_morphology" rel="nofollow">Morphology 연산</a>을 통해서 최대한 균열을 메꾸고자 했습니다.

Morphology 연산에는 주변의 가장 밝은 픽셀로 자신을 대체하는 팽창(Dilate)과, 가장 어두운 픽셀로 자신을 대체하는 침식(Erode) 연산이 있습니다. 팽창 연산을 하면 밝은 부분이 늘어나면서 서로 조금씩 떨어져 있던 파편들이 하나로 합쳐지게 되겠죠? 그리고 그 과정에서 하얀색이 차지하는 영역도 늘어나게 될 것입니다. 이 이미지에 침식 연산을 하면 영역은 원래의 크기대로 돌아가지만, 파편들은 여전히 붙어있게 됩니다. 결과적으로 영역의 크기는 유지하면서, 최대한 한 덩어리의 영역으로 합쳐진 이미지를 얻게 되는 것이죠. 아래의 그림을 보면 조금 이해가 되시나요?

[caption id="attachment_1029" align="aligncenter" width="900"]<a href="https://blog.dramancompany.com/wp-content/uploads/2019/03/blog_whale-e1553137438937.png"><img class="wp-image-1029" src="https://blog.dramancompany.com/wp-content/uploads/2019/03/blog_whale.png" alt="" width="900" height="202" /></a> 왼쪽부터 원본, 팽창 연산 후, 침식 연산 후.[/caption]

이처럼 팽창 후 침식 연산을 하는 것을 닫기(Close) 연산이라고 부릅니다. 이 닫기 연산을 통해서 Canny Edge Detection을 거친 뒤의 이미지의 균열을 보정했습니다.
<h2 id="OpenCV를이용한명함인식알고리즘개발-FindContours">Find Contours</h2>
Contour, 혹은 윤곽선은 같은 색을 가지는 모든 연속적인 점들을 둘러싼 곡선이라고 할 수 있습니다. 이전 Edge Detection에서 찾은 명함은 정확히 직사각형도 아닐 것이고, 주변의 수많은 방해물들로 둘러싸여 있을 테니, 일단 이들을 포괄하는 윤곽선들을 찾는 것입니다. 이렇게 찾은 윤곽선의 면적이 원본 이미지의 10% 이상을 차지하면, 이 윤곽선은 저희가 찾는 명함일 가능성이 있다고 판단하고 새로운 캔버스에 그려 넣습니다. 이렇게 작거나 쓸모없는 윤곽선을 쳐내고 나면, 명함 내부의 글씨나 책상 위의 무늬들은 사라지고 명함 자체의 윤곽선만 남게 됩니다.

[caption id="attachment_1042" align="aligncenter" width="755"]<a href="https://blog.dramancompany.com/wp-content/uploads/2019/03/blog_edge_1-e1553140319764.png"><img class="wp-image-1042" src="https://blog.dramancompany.com/wp-content/uploads/2019/03/blog_edge_1.png" alt="" width="755" height="269" /></a> 좌: Edge Detection 후 우: 이미지에서 찾아진 Contours[/caption]

이미지 처리는 이 단계로 끝입니다. 이제 정말로 직선과 직사각형을 찾으러 가봅시다!
<h2 id="OpenCV를이용한명함인식알고리즘개발-FindRectangle">Find Rectangle</h2>
가장 먼저 <a class="external-link" href="https://en.wikipedia.org/wiki/Hough_transform" rel="nofollow">Hough Transform</a>을 이용해 이미지에서 직선을 찾습니다. 하지만 아무리 깔끔하게 윤곽선을 만들어 냈더라도, 아직 이미지에 남아있는 약간의 노이즈와 이미지 축소의 영향으로 완벽한 직선이 만들어지지 않을 수도 있습니다. 그 중 가장 대표적인 케이스는 끊어진 직선입니다. 따라서 저희는 만들어진 직선을 순회하면서 다음과 같은 조건을 찾습니다.
<ul>
 	<li>평행한 두 직선</li>
 	<li>한 끝점이 다른 직선과 매우 가까이 붙어있는 직선</li>
</ul>
위 두 조건이 만족하면, 두 직선은 하나의 직선으로 간주하고 병합했습니다. 좀 더 배경이 복잡한 예시 이미지를 들고 와봤습니다. 아래 이미지를 전처리한 후 Hough Transform을 통해 직선을 찾아보니, 처음에는 왼쪽과 같이 14개의 직선이 발견되었습니다. 하지만 위와 같은 조건에 맞는 직선들을 찾아보니, 명함의 윗변과 아랫변을 이루는 각각 세 개의 직선들이 하나로 합쳐진 것을 볼 수 있습니다. 오른쪽 변에서도 직선 두 개가 합쳐져서, 이제 9개의 직선만 남게 되었습니다.

[caption id="attachment_1043" align="aligncenter" width="843"]<a href="https://blog.dramancompany.com/wp-content/uploads/2019/03/blog_lines-e1553152046565.png"><img class="wp-image-1043" src="https://blog.dramancompany.com/wp-content/uploads/2019/03/blog_lines.png" alt="" width="843" height="298" /></a> 좌: Hough Transform으로 찾은 직선들 우: 병합 후 남은 직선들[/caption]

이렇게 찾은 직선들을 가지고 직사각형을 만들어나가는데요, 사실상 직선들의 모든 조합을 가지고 가장 직사각형스러운 조합을 찾는 과정입니다. 하지만 꼭 모든 조합을 테스트해볼 필요는 없었습니다. 일단 직선 하나를 기준으로 본다면, 자신과 평행한 직선들과 수직인 직선들을 찾을 수 있겠죠. 평행한 직선들은 직사각형에서 자신과 마주 보는 변이라고 가정하고, 수직인 직선들은 자신과 인접한 변이라고 생각한다면 이 직선들 간의 관계를 규정할 수 있을 겁니다. 아래는 명함의 윗변을 기준으로 평행인 직선과 수직인 직선을 찾은 예시입니다.

[caption id="attachment_1045" align="aligncenter" width="837"]<a href="https://blog.dramancompany.com/wp-content/uploads/2019/03/blog_parallel-e1553153707691.png"><img class="wp-image-1045" src="https://blog.dramancompany.com/wp-content/uploads/2019/03/blog_parallel.png" alt="" width="837" height="294" /></a> 좌: 기준선과 평행한 직선들 우: 기준선과 수직인 직선들[/caption]

예를 들어서 위의 이미지에서 빨간색 직선이 사각형의 한 변이라고 가정하고, 나머지 직선들을 살펴봅시다. 수직인 직선들을 1, 2, 3번이라고 표시해 두었습니다. 우선 1번과 2번 직선을 뽑아서 평가해 봅시다. 두 직선은 서로 거의 평행이기 때문에 사각형의 마주 보는 두 변이라고 해도 좋을 정도입니다. 하지만 두 직선 사이의 거리를 구해보니, 너무 가까이 붙어있어서 이 두 직선이 사각형의 마주 보는 두 변이라고 판단하기는 어렵습니다. 그렇다면 2번 직선을 두고, 1번과 3번 직선을 바라보면 어떨까요? 두 직선은 기준선과도 수직이고, 서로 평행하며 적당한 거리만큼 떨어져 있습니다. 그렇다면 1번과 3번 직선은 기준선과 함께 직사각형을 이루고 있을 수 있다고 판단하는 것입니다. 이렇게 기준선과 수직인 직선의 쌍을 찾아냈으면, 이들을 왼쪽 이미지에 있는 모든 평행한 직선과 조합해보면서 직사각형이 될 수 없는 조합들을 탈락시킵니다. 이렇게 상대적인 위치를 기준으로 직사각형이 될 수 있는 4개의 직선의 조합들을 찾을 수 있습니다.

이렇게 만들어진 직선의 조합들을 모두 합당한 명함이라고 보기는 어려울 것입니다. 그래서 직사각형의 후보군을 가지고 형태가 너무 일그러져 있지는 않은지, 저희가 찾고자 하는 평균적인 명함의 비율(1 : 1.8)과 너무 크게 벗어나지는 않는지를 확인합니다. 그렇게 해서 남은 직사각형들 중 가장 큰 직사각형을 명함이라고 판단합니다. 이 모든 과정을 거치면 아래 그림과 같이 아주 깔끔하게 명함을 찾을 수 있습니다.

<a href="https://blog.dramancompany.com/wp-content/uploads/2019/03/blog_result_1.png"><img class=" wp-image-1047 aligncenter" src="https://blog.dramancompany.com/wp-content/uploads/2019/03/blog_result_1-290x220.png" alt="" width="328" height="249" /></a>

&nbsp;
<h1 id="OpenCV를이용한명함인식알고리즘개발-맺으며">맺으며</h1>
리멤버의 명함 인식 기능은 많은 시행착오를 통해서 만들어졌습니다. 수없이 많은 환경에서 촬영을 하며 필터값을 조정하고, 최대한 Edge case를 걷어낼 수 있는 로직을 추가해 나갔습니다. 이 블로그 글이 마법처럼 코드 한 줄로 돌아가는 명함 인식 기능을 소개해드리지는 못하지만, 비슷한 목표를 가진 분들께 좋은 출발점이 되기를 바랍니다.

사용자들에게 최대한 빠르게 보다 좋은 퀄리티의 이미지를 제공하기 위해서는 앞으로도 갈 길이 멉니다. 좀 더 다양한 환경에서 더 정확하게 명함 이미지를 크랍해내야 하고, 잘라낸 이미지를 타이피스트가 읽기 쉽게 깨끗하게 가공하고 필터링하는 것도 고도화해 나가야 합니다. 더 나아가서는 가로 명함과 세로 명함을 구분 짓고, OCR을 통해 실시간으로 명함 정보를 읽어내는 것도 저희의 남은 과제입니다. 앞으로 계속해서 발전해나갈 리멤버의 카메라를 기대해주세요.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1016</wp:post_id>
		<wp:post_date><![CDATA[2019-03-21 11:27:51]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-03-21 02:27:51]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-04-03 14:46:57]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-04-03 05:46:57]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[opencv%eb%a1%9c-%ec%8b%a4%ec%8b%9c%ea%b0%84-%eb%aa%85%ed%95%a8-%ec%9d%b8%ec%8b%9d%ed%95%98%ea%b8%b0]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="android"><![CDATA[Android]]></category>
		<category domain="post_tag" nicename="camera"><![CDATA[Camera]]></category>
		<category domain="post_tag" nicename="image-processing"><![CDATA[Image Processing]]></category>
		<category domain="post_tag" nicename="opencv"><![CDATA[OpenCV]]></category>
		<category domain="category" nicename="develop"><![CDATA[Tech]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[4]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[right-sidebar]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_slogan]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_subslogan]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_header_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_scroll_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_bottom_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_footer_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_view_post_info]]></wp:meta_key>
		<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_post_icons]]></wp:meta_key>
		<wp:meta_value><![CDATA[off]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729520204;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:3374;}i:1;a:1:{s:2:"id";i:176;}i:2;a:1:{s:2:"id";i:64;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1047]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>2902</wp:comment_id>
			<wp:comment_author><![CDATA[나그네]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[sm.im@dramancompany.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.13.201]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2019-04-03 15:09:47]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2019-04-03 06:09:47]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[좋은 글 감사합니다!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1554271787.803906;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>3501</wp:comment_id>
			<wp:comment_author><![CDATA[지]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[jiop11@naver.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[14.37.81.164]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2019-06-13 11:58:11]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2019-06-13 02:58:11]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[좋은글감사합니다!! 리맴버 화이팅]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1560394691.766643;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>4009</wp:comment_id>
			<wp:comment_author><![CDATA[박이안]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[bijjaru@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[121.119.136.219]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2019-08-12 13:28:19]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2019-08-12 04:28:19]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[OCR 은 Tesseract 와 같은 알고리즘을쓰시는지 아니면 다른 클라우드 API 를 쓰시는지 궁금합니다.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1565584099.056844;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>6676</wp:comment_id>
			<wp:comment_author><![CDATA[damagucci]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[jsr9874@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.15.82]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2020-12-21 01:08:08]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2020-12-20 16:08:08]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[좋은 글 감사합니다!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1608480488.537542;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>8457</wp:comment_id>
			<wp:comment_author><![CDATA[XueQing]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[devjesus25@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://krsoft.atlassian.net/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.30.61]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2021-04-08 17:00:14]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2021-04-08 08:00:14]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[원천코드를 공개해주실수 있습니까?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1617868814.335482;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[모바일 UI 테스트 자동화 구축하기]]></title>
		<link>https://blog.dramancompany.com/2019/09/%eb%aa%a8%eb%b0%94%ec%9d%bc-ui-%ed%85%8c%ec%8a%a4%ed%8a%b8-%ec%9e%90%eb%8f%99%ed%99%94-%ea%b5%ac%ec%b6%95%ed%95%98%ea%b8%b0/</link>
		<pubDate>Thu, 05 Sep 2019 03:06:29 +0000</pubDate>
		<dc:creator><![CDATA[sumin]]></dc:creator>
		<guid isPermaLink="false">http://blog.dramancompany.com/?p=1078</guid>
		<description></description>
		<content:encoded><![CDATA[안녕하세요. 드라마앤컴퍼니의 곽수민입니다.

지난 포스팅에 이어서 모바일에서 UI 테스트 자동화를 실행하기 위한 Setting 방법과 실제 디바이스에 설치되어 있는 제품과의 연결을 시도해보려고 합니다.
<h3><strong>개발환경 Setting</strong></h3>
기본적으로 자동화 시스템을 구축하는 것도 실제 개발하는 것과 환경이 크게 차이가 없습니다. 제가 사용하고 있는 MAC OS 기준으로 환경정보를 구성하는 방법을 소개하겠습니다.
<table style="width: 98.5572%;">
<tbody>
<tr style="height: 152px;">
<td style="width: 14.1935%; text-align: center; height: 311.438px;" rowspan="2">OS :
Mac 10.14 (최신버전)</td>
<td style="width: 76.2903%; text-align: left; height: 152px;">iOS
- MAC OS 최신버전
- node.js (10.6) 최신버전
- Xcode 10.1 이상
- Apple Developer Tools (iOS simulator SDK&lt; command line tools)
* iOS Simulator 사용에 대한 인증 필요
- Apache Maven 설치 및 환경변수 Setting
- Appium Server (CUI/GUI)
* Appium에서 제공하는 ‘WebdriverAgent’ Remote Application</td>
</tr>
<tr style="height: 159.438px;">
<td style="width: 76.2903%; height: 159.438px;">Android
- node.js (10.6) 최신버전
- Android SDK 및 환경변수 설정
- Android tool (API Level)
- JDK 설치 및 환경변수 Setting (JAVA, JAVAC)
- Apache Maven 설치 및 환경변수 Setting
- ADB (Android Debug Bridge)
- Appium Server (CUI/GUI)</td>
</tr>
</tbody>
</table>
* 필수 : Apple의 Developer 계정(개인 계정도 관계 없음)을 생성해두어야 합니다. Xcode Build 옵션 중 Test 모드에서 WebdriverAgent 을 실제 기기에 빌드할 때 올바른 서명을 포함해야 하기 때문입니다.

위 도구들의 셋팅 방법은 구글링이나 포털 검색을 통해서 차근차근 진행해보시기 바랍니다.
<h3><strong>Appium (자동화 도구)</strong></h3>
세상에는 여러가지 자동화 도구들이 있습니다.

그 중에서도 저희가 Appium을 이용하여 자동화를 구축한 이유는 다음과 같습니다.
<ol>
 	<li>iOS / Android 모두 지원</li>
 	<li>다양한 Scripting 언어를 지원 (JAVA, Python, Ruby, C# 등...)</li>
 	<li>Multi-Testing</li>
</ol>
Appium 서버는 개발자가 테스트 프레임워크에서 제공하는 API(WebDriver JSON Wire Protocol)를 사용한 다양한 언어 베이스의 스크립트를 HTTP Commands로 받아주고 스크립트 상의 명령어들을 디바이스에 전송하여 실행하고, 그 결과를 받아와서 Console에 기록해줍니다.

우리가 원하는 모바일의 대표적인 OS를 모두 지원하였고, 다양한 스크립트 언어로 본인이 원하는 방식의 스크립트를 짤 수 있었던게 가장 큰 핵심이었습니다. 또한, 안드로이드의 경우 여러가지 앱을 ADB(Android Debug Bridge)로 병렬 연결하여 한번에 여러 디바이스의 테스트도 가능합니다. (안드로이드는 보통 환경적인 이슈도 많다보니, QA검수 때 iOS보다 환경 선택의 커버리지가 넓은 편이기 때문에 여러 디바이스를 동시에 테스트 할 수 있는 부분이 매력적이었습니다.)

하지만 단점으로는 오픈소스 라이센스의 특성 상 여러가지 문제 (1. 진입 장벽이 높다. 2. Customer Service의 장벽 3. 구글링을 통한 내용들이 잘못된 정보일수도 있다.) 들이 존재하기도 합니다.
<p style="text-align: center;"><a href="https://blog.dramancompany.com/wp-content/uploads/2019/09/스크린샷-2019-09-03-오후-5.19.08.png"><img class="alignnone size-full wp-image-1128" src="https://blog.dramancompany.com/wp-content/uploads/2019/09/스크린샷-2019-09-03-오후-5.19.08.png" alt="" width="958" height="488" /></a></p>
<p style="text-align: right;">          출처 : appium.io</p>
국내에는 UI 테스트 자동화 관련 서적은 있지만 초보자가 책을 다뤄보기에는 큰 진입장벽이 있고, 더불어 프로그래밍 지식이 없다면 정보가 매우 제한적일 수 있습니다. 하지만 이 포스팅으로 많은 분들이 더 나은 환경을 구축해보셨으면 좋겠습니다.
<p style="text-align: center;"><a href="https://blog.dramancompany.com/wp-content/uploads/2019/09/스크린샷-2019-09-05-오전-11.51.24.png"><img class="alignnone size-full wp-image-1196" src="https://blog.dramancompany.com/wp-content/uploads/2019/09/스크린샷-2019-09-05-오전-11.51.24.png" alt="" width="389" height="104" /></a></p>
<p style="text-align: right;">출처 : appium.io</p>
Appium GUI에서는 모바일 화면의 <strong>모든 Element</strong>에 대해서 개발에 필요한 기본 초석이 되는 리소스들을 사용자에게 제공해줍니다. (아래는 간략한 방법입니다.)

우선 디바이스와 Appium을 연결해주어야 합니다. 위에서 설명드린 것처럼 iOS는 WebDriverAgent라는 Remote앱을 미리 Xcode에서<strong> Test모드로 빌드</strong>한 상태여야 합니다. (이 부분은 내용이 매우 복잡한 관계로 추후에 다루겠습니다.) Android OS는 'USB 디버깅' 모드가 활성화 되고 ADB를 통하여 PC와 연결된 후에 아래 내용을 진행할 수 있습니다.
<strong><em>(*참고로 USB 디버깅 모드를 활성화 시키려면 휴대폰의 설정&gt; 휴대전화 정보&gt; 소프트웨어 정보&gt; '빌드번호' 내역을 여러번 터치하면 개발자 모드를 활성화 시킬 수 있고, 다시 휴대폰의 설정&gt;개발자 옵션을 통하여 'USB 디버깅' 모드를 활성화 시킬 수 있습니다.)</em></strong>

<a href="https://blog.dramancompany.com/wp-content/uploads/2019/09/스크린샷-2019-09-04-오후-5.31.00-1.png"><img class="alignnone wp-image-1166 aligncenter" src="https://blog.dramancompany.com/wp-content/uploads/2019/09/스크린샷-2019-09-04-오후-5.31.00-1.png" alt="" width="657" height="610" /></a>

Appium의 처음 실행화면입니다. Host와 Port를 직접 구성하여 쓸 수 있는데, 동일한 Host를 구성하여 Appium을 열어주었다면 실행이 불가능해질 수 있으므로 잘 체크하도록 합시다.

<a href="https://blog.dramancompany.com/wp-content/uploads/2019/09/스크린샷-2019-09-04-오후-5.31.06-2.png"><img class="alignnone wp-image-1170 aligncenter" src="https://blog.dramancompany.com/wp-content/uploads/2019/09/스크린샷-2019-09-04-오후-5.31.06-2.png" alt="" width="657" height="600" /></a>

Appium이 정상적으로 실행된 모습입니다. 상단 '돋보기' 모양의 버튼을 눌러 Starter inspector Session 설정창을 띄워줍니다.

<a href="https://blog.dramancompany.com/wp-content/uploads/2019/09/스크린샷-2019-09-04-오후-5.32.06-1.png"><img class="alignnone wp-image-1168 aligncenter" src="https://blog.dramancompany.com/wp-content/uploads/2019/09/스크린샷-2019-09-04-오후-5.32.06-1.png" alt="" width="832" height="548" /></a>

Inspector Session에서 Custom Server탭으로 구성하여 서버를 초기에 생성한 Host와 Port란을 채워줍니다.

디바이스와의 연결을 위하여 이미지를 참고해서 platformName, PlatforVersion, BundleID(실행해야 할 어플리케이션), automationName, udid, deviceName등을 위의 예시처럼 기입해줍시다.

<a href="https://blog.dramancompany.com/wp-content/uploads/2019/09/스크린샷-2019-09-04-오후-5.36.40-1.png"><img class="alignnone wp-image-1169 aligncenter" src="https://blog.dramancompany.com/wp-content/uploads/2019/09/스크린샷-2019-09-04-오후-5.36.40-1.png" alt="" width="973" height="605" /></a>

연결이 정상적으로 완료되었다면 다음과 같은 화면이 나타나고, 우리가 해야할 자동화 스크립트 생산에 필요한 정보들을 습득할 수 있습니다. 보통 iOS 기준으로는 accessibility id, name주로 쓰게 되는데, 때로는 xpath값을 쓰기도 합니다. (xpath의 치명적인 단점으로 왠만하면 모든 'Element'들을 쉽게 다룰 수 있지만, 검색속도가 느려 전체적인 자동화 속도에 크게 영향을 미칩니다.) 어디에, 어떻게 해당 Element를 적절하게 활용해야 하는지는 추후 자동화 스크립트를 본격적으로 개발하면서 설명드리겠습니다.
<h3><strong>자동화 스크립트를 개발하기전에!</strong></h3>
자동화 스크립트를 개발하기 위해서는 우선 Eclipse에서 Maven Project 를 생성하고 <strong>pom.xml 파일에 자동화 개발 관련 Appium과의 Dependency를 설정</strong>해주어야 합니다. (해당 글에서는 Eclipse 도구를 이용하여 진행하겠습니다.)

먼저 설치한 Eclipse를 실행합니다.

<a href="https://blog.dramancompany.com/wp-content/uploads/2019/09/Elipse-프로젝트-생성-화면.png"><img class="alignnone wp-image-1182 aligncenter" src="https://blog.dramancompany.com/wp-content/uploads/2019/09/Elipse-프로젝트-생성-화면.png" alt="" width="781" height="529" /></a>

해당 화면에서 [File] &gt; [New] &gt; [Maven Project] 메뉴를 선택해 줍니다.

<a href="https://blog.dramancompany.com/wp-content/uploads/2019/09/스크린샷-2019-09-05-오전-10.24.12.png"><img class="alignnone wp-image-1180 aligncenter" src="https://blog.dramancompany.com/wp-content/uploads/2019/09/스크린샷-2019-09-05-오전-10.24.12.png" alt="" width="746" height="634" /></a>

New Maven Project창에서 Next를 누르다가 해당 화면이 나오면 Group ID, artifact Id를 입력하고 [Finish] 버튼을 눌러줍시다.

<a href="https://blog.dramancompany.com/wp-content/uploads/2019/09/스크린샷-2019-09-05-오전-11.01.40.png"><img class="alignnone wp-image-1183 aligncenter" src="https://blog.dramancompany.com/wp-content/uploads/2019/09/스크린샷-2019-09-05-오전-11.01.40.png" alt="" width="781" height="548" /></a>

메이븐 프로젝트가 정상적으로 생성되었으면, Pakage Explorer영역에서 pom.xml 파일을 접근한 뒤, Selenium, TestNG, junit, Appium Java Client 과의 Dependency 를 이미지와 같이 설정해줍니다. 이렇게 하면 자동화를 위한 기본 Setting은 모두 완료되었습니다.
<h3><strong>자동화 스크립트</strong></h3>
자동화는 반복되는 작업들을 '자동화' 함으로써 리소스 확보는 물론 제품의 갯수가 늘고 앱의 기능이 추가/변경되어 전체적인 볼륨이 커지는 상황에서도 빛을 발할 수 있습니다. 또한, 이전 포스팅에서도 언급했듯이 컴퓨터는 짜여진 코드 구성으로 반복적인 일을 하게 됨으로써 <strong>일관성 있는 테스트 결과를 받아볼 수 있는데 큰 장점</strong>이 있습니다.

저희는 Eclipse 또는 Visual Studio Code 도구를 이용하여 Selenium Library에 기반한 자동화 관련 소스를 생산해내고 있습니다. 실제 테스트는 코딩 도구의 MarketPlace에서 활용할 수 있는 Extensions 중 <strong>Java Test Runner</strong>라는 Extension을 활용하여 테스트 기기나 가상 머신을 제어할 수 있도록 구성하였습니다.

우선, 생성된 프로젝트 내에 있는 src/test/java 경로 하위에 클래스를 생성해 줍니다.

<a href="https://blog.dramancompany.com/wp-content/uploads/2019/09/스크린샷-2019-09-05-오전-11.20.38.png"><img class="alignnone wp-image-1186 aligncenter" src="https://blog.dramancompany.com/wp-content/uploads/2019/09/스크린샷-2019-09-05-오전-11.20.38.png" alt="" width="1020" height="253" /></a>

이렇게 생성된 클래스에서 실제 개발을 진행하게 되는데, 해당 바디는 크게 <strong>선처리, 후처리, 테스트 동작 메소드를</strong> 구성하게 됩니다. (해당 포스팅에서는 '선처리' 부분까지만 다루겠습니다.)

<a href="https://blog.dramancompany.com/wp-content/uploads/2019/09/스크린샷-2019-09-05-오전-11.25.52.png"><img class="alignnone wp-image-1187 aligncenter" src="https://blog.dramancompany.com/wp-content/uploads/2019/09/스크린샷-2019-09-05-오전-11.25.52.png" alt="" width="805" height="371" /></a>

<strong>선처리</strong>는 기본 개발환경을 세팅하고, appium과의 연결을 처리해주는 부분으로 이해할 수 있습니다. 기본적으로 디바이스 이름/버전 , 플랫폼 이름/버전, Product의 Bundle ID, 기기 고유번호, RemoteUrl(appium local host, port)등이 포함됩니다.

참고로 각 모바일 환경마다 선처리(환경정보 세팅) 방법에 대한 코드 예제는 아래와 같습니다.
<pre class="lang:default decode:true" title="iOS BeforeSuite">@BeforeSuite //iOS Device
public void Setting() throws Exception
{
        DesiredCapabilities capabilities = new DesiredCapabilities();

         capabilities.setCapability("automationName", "{XCUITest}");
         capabilities.setCapability("platformName", "{iOS}"); // 환경
         capabilities.setCapability("deviceName", "{디바이스 이름}"); // 디바이스 이름
         capabilities.setCapability("platformVersion", "{12.0.1}"); // OS 버전
         capabilities.setCapability("bundleId", "{앱 패키지 네임}"); //앱 패키지 네임
         capabilities.setCapability("udid", "{Device UDID}"); // 디바이스 고유 UDID (iOS)
         capabilities.setCapability("noReset", true); // 테스트전에 리셋할건지 여부(true/false)

         URL remoteUrl = new URL("http://0.0.0.0:4723/wd/hub"); //WebDriver Hub ip/port (앱피움에서 확인)
         wd = new IOSDriver(remoteUrl, capabilities);
}</pre>
<p style="text-align: center;"><strong>-iOS 선처리 예제-</strong></p>

<pre class="lang:default decode:true" title="Android BeforeSuite">@BeforeSuite //Android Device
public void Setting() throws Exception
{

        DesiredCapabilities capabilities = new DesiredCapabilities();

        capabilities.setCapability("appium-version", "{1.12.1}"); //UI Automator  사용하기 위함
        capabilities.setCapability("automationName", "{uiautomator2}"); //Android 8.0 이상 필수
        capabilities.setCapability("platformName", "{Android}");
        capabilities.setCapability("platformVersion", "{9}");
        capabilities.setCapability("deviceName", "{디바이스 이름}");
        capabilities.setCapability("appPackage", "{앱 패키지 name}");
        capabilities.setCapability("appActivity", "{스플래시 Activity name}");
        capabilities.setCapability("noReset", true);
        capabilities.setCapability("unicodeKeyboard", true); //appium 전용 keyboard 이용하기 위함

        URL remoteUrl = new URL("http://0.0.0.0:7273/wd/hub"); //WebDriver Hub ip/port (앱피움에서 확인)
        wd = new AndroidDriver(remoteUrl, capabilities);
}</pre>
<p style="text-align: center;"><strong>-Android 선처리 예제-</strong></p>
<p style="text-align: left;">위와 같이 각 환경정보에 필요한 내용들을 먼저 체크한 뒤 이후의 후처리 및 테스트 코드가 정상적으로 수행됩니다.</p>

<h3>맺으며</h3>
저희는 직접 프로그래밍 기초 지식을 쌓는 동시에 수 만번의 시행착오를 겪으며 점진적으로 테스트 자동화 시스템을 구축 하였습니다. 그 결과 전체적인 QA팀 리소스 활용과 실제 검수 업무에도 큰 도움이 되었고, 사내 DTT(Drama Tech Talk)에도 소개할만큼 많은 분들께서 관심을 가져주시고 계십니다. 이 글을 쓰는 이유도 '많은 QA 직무에 있으신 분들이 테스트 자동화에 대한 관심을 가지고 더 나은 업무 프로세스를 만들 수 있도록 도움을 드릴 수 있겠다.' 였습니다.

아직 포스팅으로 설명해야 할 부분들이 매우 많이 남았지만, 개발 환경 세팅을 하고 Appium과 실제 디바이스를 연결한 것만으로도 크게 한걸음 나아갔다고 해도 과언이 아닐 것 입니다.

다음화는 iOS에서 가장 중요한 '<strong>WebDriverAgent Test모드로 빌드하기'</strong> 로 찾아 뵙겠습니다. 긴 글 읽어주셔서 감사합니다.

P.S 잘 이해가지 않는 부분이 있다면 언제든, 어느분이든 댓글 남겨주세요.
<h3><strong>Appium 자동화 관련 참고링크</strong></h3>
<ul>
 	<li><a href="http://www.automationtestinghub.com/">http://www.automationtestinghub.com/</a></li>
 	<li><a href="https://domich.wordpress.com/2016/01/11/appium-%ec%95%a0%ed%94%bc%ec%9b%80-%ed%94%84%eb%a1%9c%ed%8c%8c%ec%9d%bc%eb%a7%81-%ea%b8%b0%eb%b0%98-ui-%ed%85%8c%ec%8a%a4%ed%8a%b8-%ec%9e%90%eb%8f%99%ed%99%94-%eb%8f%84%ea%b5%ac/">https://domich.wordpress.com/2016/01/11/appium-%ec%95%a0%ed%94%bc%ec%9b%80-%ed%94%84%eb%a1%9c%ed%8c%8c%ec%9d%bc%eb%a7%81-%ea%b8%b0%eb%b0%98-ui-%ed%85%8c%ec%8a%a4%ed%8a%b8-%ec%9e%90%eb%8f%99%ed%99%94-%eb%8f%84%ea%b5%ac/</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1078</wp:post_id>
		<wp:post_date><![CDATA[2019-09-05 12:06:29]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-09-05 03:06:29]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-01-17 16:58:29]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-01-17 07:58:29]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%eb%aa%a8%eb%b0%94%ec%9d%bc-ui-%ed%85%8c%ec%8a%a4%ed%8a%b8-%ec%9e%90%eb%8f%99%ed%99%94-%ea%b5%ac%ec%b6%95%ed%95%98%ea%b8%b0]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="appium"><![CDATA[Appium]]></category>
		<category domain="post_tag" nicename="automation-test"><![CDATA[Automation Test]]></category>
		<category domain="post_tag" nicename="mobile-test"><![CDATA[Mobile Test]]></category>
		<category domain="post_tag" nicename="qa-test"><![CDATA[QA Test]]></category>
		<category domain="category" nicename="develop"><![CDATA[Tech]]></category>
		<category domain="post_tag" nicename="test-automation"><![CDATA[Test Automation]]></category>
		<category domain="post_tag" nicename="ui-automation"><![CDATA[UI Automation]]></category>
		<category domain="post_tag" nicename="ui-test"><![CDATA[UI Test]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[20]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[right-sidebar]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_slogan]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_subslogan]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_header_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_scroll_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_bottom_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_footer_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_view_post_info]]></wp:meta_key>
		<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_post_icons]]></wp:meta_key>
		<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729444623;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:974;}i:1;a:1:{s:2:"id";i:3445;}i:2;a:1:{s:2:"id";i:183;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1128]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_social_counter_last_update]]></wp:meta_key>
		<wp:meta_value><![CDATA[1605541320]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_single_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:2:{s:8:"subtitle";s:0:"";s:6:"format";s:8:"standard";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle_flag]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>4172</wp:comment_id>
			<wp:comment_author><![CDATA[뚱징어]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[ck1214.lee@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.28.217]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2019-09-06 07:32:44]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2019-09-05 22:32:44]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[포스팅 매우 잘 읽었습니다! 질문 3가지가 있습니다
스크립팅 언어를 JAVA로 선택한 이유가 있으신가요
?
빌드 도구 같은것에 물려서 daily 테스팅 수행하시는지요?
안드로이드 기기도 적용되어져 있나요?
※ pythone 오타 제보 드립니다.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1567722764.983225;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>4175</wp:comment_id>
			<wp:comment_author><![CDATA[질문입니다]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[freedddom@naver.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.28.217]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2019-09-06 09:49:13]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2019-09-06 00:49:13]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[관련 자료 찾기가 너무 힘들었습니다 포스팅 감사합니다.
Q1. 반복적인 동작도 테스트 가능하다고 하셨는데 예를 들어 리멤버 기준으로 사진촬영을 무한번 테스트 수행한다던지 하는 특정액션도 가능한가요?

Q2. 선처리, 후처리, 테스트 메소드를 나누어주는 기준은 어떻게 되나요?

Q3. 아이폰 X 이상부터 UDID가 변경된걸로 아는데 어떻게 확인하시고 코드에 처리하셨나요?

한국에는 몇 안되는 너무 좋은정보들이라 다음편돚기대하고 있겠습니다. 감사합니다!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1567730953.927073;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>4176</wp:comment_id>
			<wp:comment_author><![CDATA[sumin]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[sm.kwak@dramancompany.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[211.249.71.223]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2019-09-06 10:14:18]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2019-09-06 01:14:18]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[안녕하세요. 뚱징어님! 해당 포스팅에 관심을 가지고 댓글 주신 점 감사합니다.
1. 스크립팅 언어를 JAVA로 선택한 이유는 크게 없습니다. 가장 저희에게 친숙했던 언어가 JAVA였던걸로..
(하지만 다른 언어도 Selenium Library를 지원하기 때문에 언어 선택에 큰 장벽이 있지는 않습니다.)
2. 실제로 저희가 해당 시스템을 사용하는 방법들은 크게 3가지가 있습니다
   a. 자동화가 가능한 모든 영역에 대한 QA검수
   b. 반복적인 작업을 통하여 데이터를 생성해야 할 경우 (ex. 수백, 수천개의 테스트 계정이 필요하거나, 앱 내의 초대 기능을 이용하여 수천명의 구성원을 만들거나)
   c. 넓은 환경의 커버리지를 가지기 위한 병렬 테스트 (Only Android)
3. 저희는 안드로이드 기기도 적용되어 있습니다. (혹여나 Windows OS로 환경 세팅을 한다면 Android 디바이스 밖에 구축하지 못합니다. iOS는 Xcode가 필수이기 때문에..)
* 오타 지적 감사합니다! 수정해두겠습니다.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>4172</wp:comment_parent>
			<wp:comment_user_id>20</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1567732458.46586;s:5:"event";s:9:"check-ham";s:4:"user";s:5:"sumin";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>4177</wp:comment_id>
			<wp:comment_author><![CDATA[sumin]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[sm.kwak@dramancompany.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.103.12]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2019-09-06 10:20:49]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2019-09-06 01:20:49]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[안녕하세요! 질문입니다 님.
1. 당연히 가능합니다. 저희는 위의 댓글처럼 몇가지 자주 사용하는 코드들을 모아서 실제로 테스트 데이터 생성 작업에 활용하기도 합니다. (다만, 말씀하신 카메라 부분은 사람의 직관적인 판단이 테스트 할 때 더 정확하기 때문에 구축하지는 않았습니다.)

2. 선처리, 후처리, 테스트 메소드를 나눠주는 '메소드'를 이용합니다. 예를 들어 선처리는 @BeforeSuite, 후처리는 @AfterMethod, 테스트는 @Test를 사용하는데 정해져 있는 것이 아닌 우선순위 기준으로 코드가 동작하게 됩니다. 이것 말고도 매우 많은 '메소드'들이 있는데, 더욱 자세한 설명은 다음 포스팅에서 설명드릴 수 있도록 하겠습니다.

3. UDID 양식이 바뀌었습니다. 총 24자리 난수로 표시되어 있는데, 코드에서는 8자리 뒤 '-'(하이픈)으로 처리해주었고, 실제 테스트 과정에 이상없었습니다.

해당 포스팅이 더 나은 프로세스를 만들기를 기원합니다!
감사합니다.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>4175</wp:comment_parent>
			<wp:comment_user_id>20</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1567732849.941381;s:5:"event";s:9:"check-ham";s:4:"user";s:5:"sumin";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>4201</wp:comment_id>
			<wp:comment_author><![CDATA[뚱징어]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[ck1214.lee@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.15.82]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2019-09-09 15:20:53]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2019-09-09 06:20:53]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[안녕하세요. sumin님 ^^
친절하고 상세한 답변 감사드려요.

※ E-mail 알림 기능이 정상동작하나유?
댓글 알림 이메일 받기 그리고 새 글 알림 이메일 받기 모두 체크 해뒀었는데 안 왔어요. ㅠㅠ
수동으로 들어왔답니다!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1568010053.778879;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>4264</wp:comment_id>
			<wp:comment_author><![CDATA[sumin]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[sm.kwak@dramancompany.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[211.249.71.223]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2019-09-17 17:39:48]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2019-09-17 08:39:48]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[안녕하세요 뚱징어님
감사합니다.

말씀해주신 현상은 한번 확인해보도록 하겠습니다.
좋은 하루 되세요!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>4201</wp:comment_parent>
			<wp:comment_user_id>20</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1568709588.292621;s:5:"event";s:9:"check-ham";s:4:"user";s:5:"sumin";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>4737</wp:comment_id>
			<wp:comment_author><![CDATA[Jay]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[wjdqls62@naver.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.108.78]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2019-11-01 16:05:30]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2019-11-01 07:05:30]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[안녕하세요. 우선 포스팅 내용정리가 잘되어있어 여러부분이 공감됩니다.
저는 단말제어(Mobile Device Management) 솔루션 관련된  일부 기능을 자동화로 개발할 계획입니다. UiAutomator, Selenium로 자동화를 개발경력은 있으나 Appium은 만져보질않았네요..

1. Jenkins 연동여부
아마 사내에서 Commit || Daily || Weekly 단위로 자동화 테스트를 진행 하실것 같습니다. Jenkins에 자동화 프로젝트를 물려놓으셨을거라 예상되는데 실제 물리적 단말을 젠킨스 또는 젠킨스와 연동된 테스트서버에 상시 물려놓고 진행하시는지요? 아니면 아마존AWS의 Device Farm같은 솔루션을 이용하시는지요??

2. Appium의 Control Coverage
 저희 솔루션은 단말의 특정 시스템기능이나 특정앱이 사용되지 못하도록 기능을 차단하는 솔루션입니다. 예를들면 보안구역에서 특정앱(카메라 등)을 차단한다던가 MTP차단, 전화수발신등 시스템의 수많은 기능을 선택적으로 차단하는 솔루션인데요. Appium에서는 테스트를 돌릴 패키지를 정확히 명시하여 해당 앱에서만 테스트가 도는것이 Rule인거 같습니다. 만약 저희같은 OS시스템의 수많은 기능을 제어하려 한다면 특정 앱이 아니라 시스템단위 혹은 불특정 다수의 앱일 수 있습니다. 이런경우 Appium에서 커버가 가능한지 궁금하네요. Appium의 경우 Apple기기까지 커버, 멀티디바이스 테스트가 가능한점이 장점이나 저희는 시스템(OS)영역을 다뤄야 하는 입장이라 안드의 경우 UiAutomator로 개발을 생각하고 있습니다. 의견이 궁금합니다 :)]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1572591930.508922;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>4755</wp:comment_id>
			<wp:comment_author><![CDATA[sumin]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[sm.kwak@dramancompany.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.12.79]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2019-11-04 10:33:09]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2019-11-04 01:33:09]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[안녕하세요 Jay님, 포스팅 읽어주셔서 감사합니다.
질문주신 내용에 대해 답변드립니다.

1. Jenkins 연동여부
개발자들과 관련한 내용을 연동하기 위해서 논의는 나누어봤지만, 아직 도입은 하지 못한 상태입니다. 이유는 아직은 해당 시스템의 신뢰도의 측정을 위해서(검수 시간, 정확성, 버그 fix, 최적의 사용자 경로 등을 고려하는 중) QA 검수 업무에 Support적인 역할로 두고 있기 때문입니다.
작업이 어느정도 고도화가 이루어지고, 신뢰도가 쌓이면 충분히 고려할 수 있는 요소로 생각하고 있습니다.

2. Appium Control Coverage
말씀하신 것처럼 패키지를 정확하게 명시하여 앱 안에서의 동작을 제어하는 방식이 기본입니다. 그래서 실제로 외부앱을 연동한다던지 등의 동작들은 제한적인 요소가 매우 많이 있습니다. 다만 Appium같은 경우에도 UiAutomator2 라이브러리를 기본적으로 제공하고 있고, 관련한 시스템적인 영역에서는 다음 페이지에서 제공하는 API들을 확인하실 수 있습니다. http://appium.io/docs/en/about-appium/getting-started/?lang=en 페이지 상단의 Commands> Device 에서 지원하는 API들을 살펴보시면 도움이 되실지도 모르겠습니다.

충분한 답변을 드린 것인지 잘 모르겠지만, 도움이 되시길 바랍니다.
또 궁금한 점 있으면 언제든 댓글 달아주세요. 감사합니다.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>4737</wp:comment_parent>
			<wp:comment_user_id>20</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1572831189.891024;s:5:"event";s:9:"check-ham";s:4:"user";s:5:"sumin";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>5127</wp:comment_id>
			<wp:comment_author><![CDATA[Ray Woo]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[pellius00@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.103.12]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2019-12-30 22:10:40]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2019-12-30 13:10:40]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[오랜만에 Fuction test 앱 자동화 테스트에 대해 포스팅하신 내용을 즐겁게 읽어보았습니다.
그런데 iOS의 경우 디바이스 드라이버 문제나 해상도의 파편화가 적은 편인 반면에 Android의 경우 디바이스 드라이버 문제, 해상도 파편화 등 변수가 큰 부분에 대해 어떤 방식으로 해결을 하셨는지 궁급 합니다.
그리고 자동화의 경우 결과 Report를 받기위해 Testlink나 기타 오픈소스와 연동해서 사용하는게 편하셨을 것 같은데 이런 업무적인 자동화는 어떻게 진행하셨는지도 궁금 하고요.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1577711440.539368;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>5133</wp:comment_id>
			<wp:comment_author><![CDATA[sumin]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[sm.kwak@dramancompany.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.15.82]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2020-01-02 14:26:20]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2020-01-02 05:26:20]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[안녕하세요 Ray Woo님, 포스팅에 관심을 가져주셔서 감사합니다.
아직 설명해야 할 내용들이 많이 남았고, 포스팅 업로드가 늦어져 궁금한점이 많으실 것 같습니다.

말씀하신 부분들에 대한 부분에 대한 답변드립니다.
1) 해상도의 파편화
해상도에 따라 다양한 문제가 발생할 수 있기 때문에 저희는 모든 화면 내 리소스들을 하드코딩하여 변수를 생성해주었습니다.
 - [시작] 버튼의 '위치'를 찾으라가 아닌, [시작] 버튼을 찾으라로 명령을 한다고 이해하시면 될 것 같습니다.
화면 내 리소스에 대한 변수들을 생성하고 잘 관리 해준다면, 다양한 해상도의 디바이스에서도 문제 없이 해결 가능합니다. 간혹, Resource ID가 누락되거나, 변수를 지정할만한 재료가 없다면 강제 삽입이나 여러 방법들을 찾을 수 있을테지만 이러한 방법들은 재사용 할 수 있는 코드로는 쓸 수 없기에 아직 고민되는 부분이 많습니다.

2) 리포트 관련
테스트 리포트는 우선은 Java Test Runner에서 기본으로 제공하는 리포트를 받아서 쓰고 있습니다. 고도화 하면서 테스팅에 필요한 정보들이 많아질 수록 다양한 오픈소스와의 연동을 고민해볼 수 있겠으나, 아직은 크게 추가적으로 고려하고 있는 부분은 없습니다. (현재까지 구현된 테스트 코드를 가지고 신뢰성을 더 확보하는게 주력하고 있어서, side적인 일들은 크게 고려하지는 않고 있다는 이유입니다.)

충분한 답변이 되셨는지는 잘 모르겠지만, 더 나은 프로세스를 위해서 도움이 되길 바랍니다.
또 궁금한 점 있다면 댓글 주세요. 감사합니다.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>5127</wp:comment_parent>
			<wp:comment_user_id>20</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1577942780.605707;s:5:"event";s:9:"check-ham";s:4:"user";s:5:"sumin";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>5212</wp:comment_id>
			<wp:comment_author><![CDATA[Cerari]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[kalinzt@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.13.229]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2020-01-21 11:30:34]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2020-01-21 02:30:34]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[안녕하세요. 자동화에 관심이 많은 QA 종사자 입니다.

해상도의 파편화와 관련하여 추가 질문드리고 싶은데요.
파편화를 해결하기 위해 화면 내 리소스들에 대해 하드코딩을 했다고 하셨는데 그럼 UI의 일부 변경이 발생하거나 앱개편이 진행될때는 해당 리소스들을 어떻게 관리하실 생각이신지요?
예를들어 하드코딩된 리소스들을 리스트로 별도로 관리한다던가 SVC툴을 통해서 변경점을 찾아서 수정하거나 하는 등의 고안된 방안들이 있으실까요?

저도 하드코딩된 부분들에 대한 테스트 코드 유지보수 때문에 고민이라 질문 드려봅니다]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1579573834.150691;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>5305</wp:comment_id>
			<wp:comment_author><![CDATA[모바일 UI 테스트 자동화 구축하기 &#8211; app4me]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.1pick.kr/2020/02/06/%eb%aa%a8%eb%b0%94%ec%9d%bc-ui-%ed%85%8c%ec%8a%a4%ed%8a%b8-%ec%9e%90%eb%8f%99%ed%99%94-%ea%b5%ac%ec%b6%95%ed%95%98%ea%b8%b0/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.103.12]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2020-02-06 15:08:45]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2020-02-06 06:08:45]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] with appiumhttps://blog.dramancompany.com/2019/09/%EB%AA%A8%EB%B0%94%EC%9D%BC-ui-%ED%85%8C%EC%8A%A4%ED%8A%B8-%E&#8230; [&#8230;]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1580969325.604987;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>6409</wp:comment_id>
			<wp:comment_author><![CDATA[QA12]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[megadolx@naver.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.103.12]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2020-11-06 14:46:05]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2020-11-06 05:46:05]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[안녕하세요!  QA 12년차 직장인입니다.
우연이 앱피움 검색을 하다가 들어오게 되었는데요.

제가 앱피움 자동화테스트 스터디그룹을 이제 막 운영하기 시작하였습니다!
지금은 스터디그룹으로 소소하게 시작하지만,
QA커뮤니티를 크게 이끌어보고자 하고 있습니다.

혹시 관심이 있으시면 아래 이메일로 카카오톡 아이디를 남겨주시면 연락드리겠습니다!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1604641565.272831;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>6815</wp:comment_id>
			<wp:comment_author><![CDATA[정다운]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[jungdw0723@naver.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.106.86]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2021-01-07 11:43:54]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2021-01-07 02:43:54]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[안녕하세요.
현재 회사 내에서 CS와 더불어 QA를 맡아서 업무를 보고 있는데요,
동작이 단순한 어린이 게임들이라 제가 소프트웨어 관련 전공자가 아님에도
일단은 테스터 개념으로 현재 QA업무를 보고 있습니다.

다만, 앞으로 QA로써 현재 업무에 조금 더 도움이 되고
자기 개발이 필요한 분야라 생각이 되어
QA가 할 수 있는 여러가지 기능 향상에 대해 고민하던 중에

appium 자동화 시스템에 관련된 내용에 대해 알게 되었는데요,
혹시 이와 관련하여 공부하기 위해선 어떤 과정들을 미리 공부해두면 좋을까요?

여러 포스팅을 찾아보고는 있지만
개발쪽 관련 지식이 없이 보려니 작동 방식에 대한 간단한 개념은 이해가 되지만
용어나, 디테일한 지식에 관하여서는 이해가 되지 않아서...

가장 먼저 공부하면 좋을게 뭐가 있을까 싶습니다.

*찾아보니 G+Aider 라는 자동화 소프트웨어가 있어 무료 버전으로 사용해보았는데
혹시 관련하여 QA업문에 이요하시는 분들도 있으실까요?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>6409</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1609987434.536846;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>6816</wp:comment_id>
			<wp:comment_author><![CDATA[정다운]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[jungdw0723@naver.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.28.217]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2021-01-07 11:44:11]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2021-01-07 02:44:11]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[안녕하세요.
현재 회사 내에서 CS와 더불어 QA를 맡아서 업무를 보고 있는데요,
동작이 단순한 어린이 게임들이라 제가 소프트웨어 관련 전공자가 아님에도
일단은 테스터 개념으로 현재 QA업무를 보고 있습니다.

다만, 앞으로 QA로써 현재 업무에 조금 더 도움이 되고
자기 개발이 필요한 분야라 생각이 되어
QA가 할 수 있는 여러가지 기능 향상에 대해 고민하던 중에

appium 자동화 시스템에 관련된 내용에 대해 알게 되었는데요,
혹시 이와 관련하여 공부하기 위해선 어떤 과정들을 미리 공부해두면 좋을까요?

여러 포스팅을 찾아보고는 있지만
개발쪽 관련 지식이 없이 보려니 작동 방식에 대한 간단한 개념은 이해가 되지만
용어나, 디테일한 지식에 관하여서는 이해가 되지 않아서...

가장 먼저 공부하면 좋을게 뭐가 있을까 싶습니다.

*찾아보니 G+Aider 라는 자동화 소프트웨어가 있어 무료 버전으로 사용해보았는데
혹시 관련하여 QA업문에 이요하시는 분들도 있으실까요?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1609987452.016159;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>7241</wp:comment_id>
			<wp:comment_author><![CDATA[배움]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[-eunlight-@hanmail.net]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.28.217]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2021-02-01 13:46:09]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2021-02-01 04:46:09]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[앱피움에 대해서 공부하다가 외국어로 되어있으니 답답했는데
한국어로 설명이 되어있으니 한결 좋습니다.
이 회사가 명함 회사던데..혹시 개인적으로 앱피움을 1~2회배울 순 없을까요
QA에 근무중이며 자동화테스터 공부중인데. 속성으로 가르쳐주는 곳이 있으면 너무 좋겠습니다ㅠㅠ]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1612154769.687063;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>10472</wp:comment_id>
			<wp:comment_author><![CDATA[박진영]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[sukji12@naver.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.7.228]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2021-07-29 16:11:44]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2021-07-29 07:11:44]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[안녕하세요.

앱피움 스터디그룹 참여를 희망합니다

확인 부탁드립니다]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>6409</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1627542705.064081;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[AWS로 서버 없이 웹 서비스 운영하기 - 1]]></title>
		<link>https://blog.dramancompany.com/2019/09/aws%eb%a1%9c-%ec%84%9c%eb%b2%84-%ec%97%86%ec%9d%b4-%ec%9b%b9-%ec%84%9c%eb%b9%84%ec%8a%a4-%ec%9a%b4%ec%98%81%ed%95%98%ea%b8%b0-1/</link>
		<pubDate>Thu, 05 Sep 2019 10:59:45 +0000</pubDate>
		<dc:creator><![CDATA[qkraudghgh]]></dc:creator>
		<guid isPermaLink="false">http://blog.dramancompany.com/?p=1081</guid>
		<description></description>
		<content:encoded><![CDATA[최근 드라마앤컴퍼니에서는<strong> <a href="https://career.rememberapp.co.kr/talent">리멤버 커리어</a></strong>라는 구직자와 리쿠르터를 연결해주는 서비스를 출시하였습니다 :)

저는<strong> 리멤버 커리어</strong> 프로젝트를 진행하면서 S3, CloudFront, Route53, CodePipeline, CodeBuild, Lambda@Edge를 사용하여 웹 서비스 배포, 배포 자동화 구축, Server Side Rendering 없이 SEO하기 등 다양한 작업을 진행하였는데요, 리멤버 커리어를 만들면서 경험한 것들을 글로 옮겨 서버 없이 웹을 배포하려고 하는 사람들에게 도움이 되고자 글을 작성하게 되었습니다.

이번 글에서는 서버리스 아키텍쳐의 필요성에 대해 간략히 공유하고, <strong>S3</strong>와 <strong>CloudFront</strong>, <strong>Route53</strong>을 이용해 서버 없이 React Project를 배포하는 방법에 대해 얘기해보도록 하겠습니다.
<h1>서버리스 아키텍쳐의 필요성</h1>
웹 서버가 존재한다는 것은 서버 관리 비용 또한 존재한다는 것을 의미합니다. 작게는 OS 보안 업데이트에 따른 새로운 AMI 생성부터 크게는 EC2 인스턴스 장애 해결까지 다양한 관리 비용 생깁니다. 드라마앤컴퍼니에서는 DevOps 엔지니어가 따로 존재하지 않고 Server/Web 팀에서 자신이 개발하는 프로젝트의 코드뿐만 아니라 인프라도 함께 유지보수 및 관리를 하고 있기 때문에 <strong>서버 관리 비용이 늘어날수록 서비스 개발 속도에 제동</strong>이 걸리는 문제가 있습니다.

그렇기 때문에 더욱 서버리스 아키텍쳐를 선택할 수 밖에 없었는데, 서버리스 아키텍쳐로 서비스를 운영한다는 것은 서버 관리에 대한 대부분을 Cloud Service 사업자, 즉 AWS가 많은 부분을 관리해 준다는 것이고, 이러한 장점은 <strong>개발자가 코드를 작성하는 것에 더 많은 시간을 투자 </strong>할 수 있게 도와준다는 것을 의미합니다.

또한, 관리 비용 측면 이외에도 <strong>가격이 저렴</strong>하다는 장점도 있는데요, AWS에서 제공하는 비용 계산기로 아주 간단하게 기존 리멤버에서 사용하던 Instance 사양과 가격 그리고 리멤버 커리어의 비용을 비교해 보았습니다.

[caption id="attachment_1091" align="aligncenter" width="1864"]<a href="https://blog.dramancompany.com/wp-content/uploads/2019/09/스크린샷-2019-09-03-오후-3.11.39.png"><img class="size-full wp-image-1091" src="https://blog.dramancompany.com/wp-content/uploads/2019/09/스크린샷-2019-09-03-오후-3.11.39.png" alt="" width="1864" height="258" /></a> 리멤버 서비스에서 실제로 사용중인 t2.medium 2대 기준 24시간 한달 비용 $89.02 (트래픽 증가시 +a 금액 있음)[/caption]

[caption id="attachment_1093" align="aligncenter" width="2540"]<a href="https://blog.dramancompany.com/wp-content/uploads/2019/09/스크린샷-2019-09-03-오후-3.17.44.png"><img class="size-full wp-image-1093" src="https://blog.dramancompany.com/wp-content/uploads/2019/09/스크린샷-2019-09-03-오후-3.17.44.png" alt="" width="2540" height="390" /></a> S3 1G 적재 및 100만 request, CloudFront 월 1G Data transfer 기준 (Lambda@Edge는 포함하지 않음)[/caption]

리멤버에서 실제로 사용하고 있는 t2.medium 인스턴스 2대의 한 달 가격은 <strong>매달 89달러</strong>의 비용이 들지만 서버리스 아키텍쳐로 구성한 리멤버 커리어의 가격을 간단히 계산해보면 <strong>약 1/200의 비용</strong>으로 한 달을 운영 할 수 있다는 것을 알 수 있습니다.
<h1>서버리스 아키텍쳐로 웹 배포하기</h1>
[caption id="attachment_1097" align="aligncenter" width="584"]<a href="https://blog.dramancompany.com/wp-content/uploads/2019/09/Career-web_Infra_1.png"><img class="wp-image-1097 size-full" src="https://blog.dramancompany.com/wp-content/uploads/2019/09/Career-web_Infra_1.png" alt="" width="584" height="121" /></a> 예제를 통해 완성될 인프라 구조[/caption]

앞에서도 얘기했듯이 <strong>리멤버 커리어</strong>는 S3와 CloudFront 그리고 Route53을 기본으로 사용하여 서비스하고 있는데요, 리멤버 커리어 서비스를 만든 방법 그대로 S3 Bucket 생성부터 CloudFront Distribution 생성, Route53 연동까지 스크린샷과 설명을 통해 하나씩 살펴보도록 하겠습니다 :)
<ul>
 	<li>이 예제에서는 <strong>CRA(create-react-app)</strong>로 만든 기본 App을 이용합니다.</li>
 	<li>CRA로 만든 초기 코드에 <strong>react-router-dom</strong>을 이용하여 <strong>/test </strong>route를 추가하였습니다.</li>
</ul>
<h2>1. S3 Bucket만들기</h2>
<a href="https://blog.dramancompany.com/wp-content/uploads/2019/09/스크린샷-2019-09-02-오후-5.16.43.png"><img class="aligncenter wp-image-1099 " src="https://blog.dramancompany.com/wp-content/uploads/2019/09/스크린샷-2019-09-02-오후-5.16.43.png" alt="" width="674" height="476" /></a>

AWS S3에 들어가 버킷 생성을 누른 후 버킷의 이름을 설정합니다. 버킷의 이름은 원하는 이름으로 생성하면 되지만 추후 사용할 Domain을 그대로 사용하는 것이 관리에 용이합니다. 버킷의 옵션들은 따로 설정하지 않고 진행하겠습니다.
<h2>2. S3 Bucket에 React Build File Upload 하기</h2>
[caption id="attachment_1100" align="aligncenter" width="3154"]<a href="https://blog.dramancompany.com/wp-content/uploads/2019/09/스크린샷-2019-09-02-오후-5.28.23.png"><img class="size-full wp-image-1100" src="https://blog.dramancompany.com/wp-content/uploads/2019/09/스크린샷-2019-09-02-오후-5.28.23.png" alt="" width="3154" height="1544" /></a> yarn build를 통해 build된 파일들을 S3에 업로드한 모습[/caption]

버킷을 생성하셨다면 로컬에서 Build 한 React app을 업로드 해주어야 합니다.

업로드가 완료되었다면 CloudFront Distribution을 생성해봅시다.
<h2>3. CloudFront Distribution 생성하기</h2>
<a href="https://docs.aws.amazon.com/ko_kr/AmazonCloudFront/latest/DeveloperGuide/Introduction.html">Amazon CloudFront</a>는 .html, .css, .js 및 이미지 파일과 같은 정적 및 동적 웹 콘텐츠를 사용자에게 더 빨리 배포하도록 지원하는 CDN 서비스이며 CloudFront는 엣지 로케이션이라고 하는 데이터 센터를 통해 사용자에게 빠르게 콘텐츠를 전달해 줄 수 있습니다. 또한 CloudFront를 사용해야만 SSL 인증서를 사용할 수 있습니다. 그러면 바로 생성을 해보도록 하겠습니다. CloudFront Dashboard에 들어가서 Create Distribution 버튼을 눌러 Distribution을 만들 준비를 합니다.

<a href="https://blog.dramancompany.com/wp-content/uploads/2019/09/스크린샷-2019-09-02-오후-5.33.59.png"><img class="aligncenter size-full wp-image-1101" src="https://blog.dramancompany.com/wp-content/uploads/2019/09/스크린샷-2019-09-02-오후-5.33.59.png" alt="" width="2782" height="1092" /></a>

저희는 Web을 배포할 것이기 때문에 Web의 Get Started를 눌러 다음 단계로 넘어가 주세요.
<h3>Origin Settings</h3>
<a href="https://blog.dramancompany.com/wp-content/uploads/2019/09/스크린샷-2019-09-02-오후-5.36.18.png"><img class="aligncenter size-full wp-image-1102" src="https://blog.dramancompany.com/wp-content/uploads/2019/09/스크린샷-2019-09-02-오후-5.36.18.png" alt="" width="2796" height="1002" /></a>

가장 먼저 보이는 Origin Setting에서는 Origin Server에 대한 설정을 해줄 수 있습니다.
<ul>
 	<li><strong>Origin Domain Name</strong>을 세팅해줍니다.
Origin Domain은 CloudFront가 web content를 받아 올 서버의 Domain을 뜻하며 우리가 만들었던 S3의 버킷에서 content들을 받아와야 하므로 아까 만들어둔 S3 Bucket의 Domain을 찾아 설정해줍니다. 자동완성이 되기 때문에 쉽게 찾을 수 있습니다.</li>
</ul>
다음은 보안 설정을 해주어야 합니다. 해당 설정을 통해 원치 않는 경로로 Bucket Object에 접근하는 요청을 막을 수 있습니다. (ex. S3 Domain을 알아내서 특정 파일을 탈취)
<ul>
 	<li><strong>Restrict Bucket Access​</strong>를 <strong>yes</strong>로 만들어 줍니다. 이 설정을 키게 되면 S3 Domain으로 직접 접근하는 요청을 막아주고 Cloudfront에서 정해진 규칙에 맞는 요청만 Bucket의 Object에 접근 할 수 있도록 해줍니다. 이 정해진 규칙에는 signed cookies나 signed URL 그리고 OAI(Origin Access Identity)가 있고 이 중에서 저희는 OAI를 이용하여 설정할 예정입니다.</li>
 	<li><strong>Origin Access Identity</strong> 설정에서 <strong>Create a New Identity</strong>를 선택합니다</li>
 	<li><strong>Grant Read Permissions on Bucket</strong> 설정에서 <strong>Yes, Update Bucket Policy</strong>를 선택합니다. 이렇게 되면 OAI가 자동으로 생성되며 S3의 Buckey Policy에 해당 OAI를 가진 User만 (이 경우엔 Cloudfront) Bucket의 Object에 접근하도록 자동으로 설정을 해줍니다.</li>
</ul>
<h3>Default Cache Behavior Settings</h3>
<a href="https://blog.dramancompany.com/wp-content/uploads/2019/09/스크린샷-2019-09-02-오후-5.36.49.png"><img class="aligncenter wp-image-1103" src="https://blog.dramancompany.com/wp-content/uploads/2019/09/스크린샷-2019-09-02-오후-5.36.49.png" alt="" width="629" height="550" /></a>

Default Cache Behavior Settings에서는 Path Pattern을 눈여겨봐야 합니다. Default로 설정이 되어있고 이는 바꿀 수 없는데요(Distribution 생성 후 Behavior 추가 가능), 모든 path의 요청에 대해서 Cloudfront가 Request에 대해 어떠한 처리를 할 것인지 설정할 수 있습니다.
<ul>
 	<li><strong>Viewer Protocol Policy</strong>를 <strong>Redirect HTTP to HTTPS</strong>로 선택해줍니다.</li>
</ul>
<h3>Distribution Setting<a href="https://blog.dramancompany.com/wp-content/uploads/2019/09/스크린샷-2019-09-02-오후-6.23.30.png"><img class="aligncenter size-full wp-image-1104" src="https://blog.dramancompany.com/wp-content/uploads/2019/09/스크린샷-2019-09-02-오후-6.23.30.png" alt="" width="2394" height="2004" /></a></h3>
Distribution Setting에서는 CloudFront 자체에 대해서 설정을 해줄 수 있습니다. Domain이나 SSL 등이 이에 해당합니다.
<ul>
 	<li><strong>Alternate Domain Names</strong>: Route53에 등록할 Domain을 적는다.
(단, Custom Domain을 사용하지 않고 *.cloudfront.net 도메인을 쓰려면 공란으로 놔둠)
(예제일 경우 sample.dramancompany.com)</li>
 	<li><strong>SSL Certificate</strong>: Custom SSL Certificate
(도메인에 맞는 인증서를 선택, 예제일 경우 *.dramancompany.com.)
(단, Custom Domain을 사용하지 않고 *.cloudfront.net 도메인을 쓰려면 Default 선택)
(SSL 인증서는 us-east-1 region에 존재해야 사용할 수 있다)</li>
 	<li><span data-token-index="4" data-reactroot=""><strong>Default Root Object</strong>: </span>index.html
(sample.dramncompany.com/ 으로 request가 들어오면 sample.dramncompany.com/index.html로 request를 바꾸어줌)</li>
</ul>
<h3>Distribution 생성 마무리</h3>
모든 설정을 완료했다면 마지막으로 생성 버튼을 눌러 Distribution을 생성해야 합니다. 생성하고 나면 <strong>InProgress</strong> 상태의 Distribution을 확인 할 수 있는데 모든 작업이 완료되고 <strong>Deployed</strong> 상태가 되는 데까지 약 20분의 시간이 걸립니다.

Deployed 상태가 되었다면 <span style="font-family: monospace;">*.cloudfront.net</span>과 같은 pattern의 Domain이 주어지는데 이를 통해 웹에 접근 할 수 있습니다.

<a href="https://blog.dramancompany.com/wp-content/uploads/2019/09/스크린샷-2019-09-02-오후-7.55.17.png"><img class="aligncenter wp-image-1107" src="https://blog.dramancompany.com/wp-content/uploads/2019/09/스크린샷-2019-09-02-오후-7.55.17.png" alt="" width="646" height="340" /></a>

지금처럼 각자 S3에 업로드 해놓은 page가 뜬다면 성공입니다.
<h2>4. 생성된 Distribution에 Error pages 설정 추가하기</h2>
지금까지 S3 Bucket을 생성하고 Cloudfront에 S3를 연결하여 웹페이지를 배포하는 것까지 진행하였습니다.

하지만 아직 끝난 게 아닙니다. 우리가 개발하고 있는 Web App들에는 Route마다 보여야 하는 페이지가 다를 수 있습니다. 만약 예를 들어 /test라는 route가 존재한다고 하면 현재 상태에서 해당 route로 접근 시 에러가 발생하게 됩니다. 내가 react-router-dom 등을 이용하여 앱 내부적으로 Route를 나누었어도 실제론 제대로 동작하지 않습니다.

[caption id="attachment_1109" align="aligncenter" width="2996"]<a href="https://blog.dramancompany.com/wp-content/uploads/2019/09/스크린샷-2019-09-02-오후-8.01.12.png"><img class="size-full wp-image-1109" src="https://blog.dramancompany.com/wp-content/uploads/2019/09/스크린샷-2019-09-02-오후-8.01.12.png" alt="" width="2996" height="1578" /></a> /test로 접근시 에러가 나는 모습[/caption]

그 이유는 바로 Cloudfront가 test라는 File을 찾아 유저에게 전달하려고 하기 때문입니다. cloudfront는 단순히 S3의 Object들을 유저에게 가장 가까운 Edge에 Caching 해두어 요청이 왔을 때 보다 빠르게 Object를 전달해주기 위해 만들어진 서비스이기 때문이죠.

즉 우리는 에러가 났을 때도 index.html로 접근 할 수 있도록 설정해 주어야 합니다.

이러한 설정은 어떻게 할 수 있을까요? 바로 Error pages 설정을 가지고 해결 할 수 있습니다.

서버에 정해진 File이 존재하지 않을 때 발생하는 Error인 <strong>403 Forbidden</strong>의 response로 index.html을 대신 전달하게 하면 문제를 해결 할 수 있습니다.
<h3>Error Pages</h3>
우리가 만들어놓은 Distribution의 Dash Board에 진입하면 상단에 Error Pages라는 Tab을 볼 수 있습니다.

[caption id="attachment_1110" align="aligncenter" width="2584"]<a href="https://blog.dramancompany.com/wp-content/uploads/2019/09/스크린샷-2019-09-02-오후-8.07.06.png"><img class="size-full wp-image-1110" src="https://blog.dramancompany.com/wp-content/uploads/2019/09/스크린샷-2019-09-02-오후-8.07.06.png" alt="" width="2584" height="570" /></a> Error Pages 탭[/caption]

Create Custom Error Response를 클릭하여

<a href="https://blog.dramancompany.com/wp-content/uploads/2019/09/스크린샷-2019-09-02-오후-8.08.25.png"><img class="aligncenter size-full wp-image-1111" src="https://blog.dramancompany.com/wp-content/uploads/2019/09/스크린샷-2019-09-02-오후-8.08.25.png" alt="" width="1464" height="742" /></a>

다음과 같이 설정 후에 Create를 눌러줍니다. 반영되는 시간이 조금 걸리니 일정 시간이 흐른 후 /test에 다시 접근해 보도록 합시다.

[caption id="attachment_1112" align="aligncenter" width="646"]<a href="https://blog.dramancompany.com/wp-content/uploads/2019/09/스크린샷-2019-09-02-오후-8.17.02.png"><img class="wp-image-1112" src="https://blog.dramancompany.com/wp-content/uploads/2019/09/스크린샷-2019-09-02-오후-8.17.02.png" alt="" width="646" height="421" /></a> /test path에 제대로 접근 된 모습[/caption]

설정 후 Error가 뜨지 않고 제대로 Rendering 되는 모습을 볼 수 있습니다.
<h2>5. Route53에 CloudFront Domain 설정하기</h2>
이제 거의 막바지 작업입니다. 우리는 CloudFront Default Domain으로 서비스를 할 것이 아니기 때문에 Route53에서 우리가 만든 Domain Record와 CloudFront의 Default Domain을 연결해줘야 합니다.

일단 AWS의 Route53 Dashboard에 접근하여 위에 CloudFront 생성 시 등록했던 Domain의 호스팅 영역을 생성 혹은 Dashboard에 진입합니다. (예제일 경우 dramancompany.com)

진입 후에는 레코드 세트 생성 버튼을 클릭하여 다음과 같이 설정합니다.

유형은 <strong>A - IPv4 주소</strong>, 별칭은 <strong>예</strong>를 선택하며 별칭 대상으로는 CloudFront의 Default domain으로 검색하면 CloudFront 배포 항목으로 자동 완성되며 선택 후 레코드 생성을 완료하면 됩니다.

<a href="https://blog.dramancompany.com/wp-content/uploads/2019/09/스크린샷-2019-09-02-오후-8.26.19.png"><img class="aligncenter wp-image-1114 " src="https://blog.dramancompany.com/wp-content/uploads/2019/09/스크린샷-2019-09-02-오후-8.26.19.png" alt="" width="420" height="542" /></a>

Route53 설정까지 완료됐다면 해당 Domain으로 접근했을 때 성공적으로 Web이 뜨고 자물쇠 모양도 잘 보인다면 성공입니다!

[caption id="attachment_1115" align="aligncenter" width="646"]<a href="https://blog.dramancompany.com/wp-content/uploads/2019/09/스크린샷-2019-09-02-오후-7.38.44.png"><img class="wp-image-1115" src="https://blog.dramancompany.com/wp-content/uploads/2019/09/스크린샷-2019-09-02-오후-7.38.44.png" alt="" width="646" height="533" /></a> 성공적으로 Domain에 연결 된 모습[/caption]
<h2>6. 간단한 배포 스크립트 만들기</h2>
지금까지 S3와 CloudFront 그리고 Route53을 통해서 웹을 배포해보았습니다. 하지만 배포는 한번 하고 끝나는 것이 아닌 개발이 완료될 때마다 해야 하는 반복 작업이기 때문에 배포를 쉽게 해주는 작업이 매우 중요합니다. 따라서 배포 스크립트를 작성해보도록 하겠습니다.
<ul>
 	<li>기본적으로 아래의 script를 사용하려면 local에 aws cli 설정이 되어있어야 합니다.</li>
</ul>
<h3>build</h3>
<pre class="theme:sublime-text lang:js decode:true">"build": "react-scripts build"</pre>
<ul>
 	<li>create-react-app으로 project를 만들었다면 처음부터 만들어져 있는 Build script입니다.</li>
 	<li>해당 스크립트를 실행하고 나면 Project의 Root에 build라는 폴더가 만들어집니다.</li>
</ul>
<h3>sync</h3>
<pre class="theme:sublime-text lang:js decode:true">"sync": "aws s3 sync ./build s3://S3-Bucket-Name --delete"</pre>
<ul>
 	<li>S3 bucket에 local에 있는 build 폴더를 sync 합니다.</li>
 	<li>스크립트에서 S3-Bucket-Name에는 각자의 Bucket Name을 적습니다 (예: s3://sample.dramancompany.com)</li>
 	<li>delete option을 주어 이전 버전의 File들을 자동으로 삭제하도록 하여 불필요하게 S3 bucket의 용량이 늘어나는 것을 방지합니다.</li>
</ul>
<h3>invalidations</h3>
<pre class="theme:sublime-text lang:js decode:true">"invalidations": "aws cloudfront create-invalidation --distribution-id Distribution-ID --paths '/*'"</pre>
<ul>
 	<li>CloudFront는 유저의 요청을 기본 24시간 동안 Caching 해두기 때문에 캐시 무효화 작업을 해주지 않으면 유저는 이전 버전의 파일들을 CloudFront에 요청하게 됩니다.</li>
 	<li>캐시 무효화 작업을 해주는 것을 invalidations라고 하며 스크립트에서 Distribution-ID에는 각자 생성한 Distribution의 ID 값을 넣어 사용합니다.</li>
</ul>
<h3>deploy</h3>
<pre class="theme:sublime-text lang:js decode:true">"deploy": "react-scripts build &amp;&amp; aws s3 sync ./build s3://S3-Bucket-Name --delete &amp;&amp; aws cloudfront create-invalidation --distribution-id Distribution-ID --paths '/*'",</pre>
<ul>
 	<li>build → sync → invalidations 작업을 순차적으로 진행합니다.</li>
</ul>
<h1>맺으며</h1>
이렇게 React​를 S3와 CloudFront 그리고 Route53을 이용해 서버 없이 배포하는 법에 대해 살펴보았는데요, 초기 서버 세팅 시간도 많이 들지 않고 간단하게 서비스를 배포할 수 있으면서, 비용적인 측면에서도 많은 장점이 있는 운영 방식인 것 같습니다.

다음 포스트에서는 Github, CodePipeline, CodeBuild를 이용하여 자동 배포 시스템을 구축하고 Lambda@Edge를 사용하여 Server Side Rendering을 하지 않고도 특정 page의 meta data를 다르게 해주는 SEO 방법에 대해 알아보도록 하겠습니다.

그리고 글이 도움이 되셨다면 <a href="https://career.rememberapp.co.kr/talent">리멤버 커리어</a>를 한번 써보시는 것은 어떨까요? 나의 가치를 알아주는 회사가 더 높은 연봉과 함께 찾아올지도 모릅니다! :)
드라마앤컴퍼니 또한 언제나 문이 열려있으니 관심 있으시면 <a href="http://dramancompany.com/joinus/">지원</a>해보시는 것도 좋을 것 같습니다. 감사합니다.
<h1>참고 링크</h1>
<ul>
 	<li><a href="https://aws.amazon.com/ko/premiumsupport/knowledge-center/cloudfront-serve-static-website/">https://aws.amazon.com/ko/premiumsupport/knowledge-center/cloudfront-serve-static-website/</a></li>
 	<li><a href="https://docs.aws.amazon.com/ko_kr/AmazonCloudFront/latest/DeveloperGuide/Introduction.html">https://docs.aws.amazon.com/ko_kr/AmazonCloudFront/latest/DeveloperGuide/Introduction.html</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1081</wp:post_id>
		<wp:post_date><![CDATA[2019-09-05 19:59:45]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-09-05 10:59:45]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-09-05 20:08:14]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-09-05 11:08:14]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[aws%eb%a1%9c-%ec%84%9c%eb%b2%84-%ec%97%86%ec%9d%b4-%ec%9b%b9-%ec%84%9c%eb%b9%84%ec%8a%a4-%ec%9a%b4%ec%98%81%ed%95%98%ea%b8%b0-1]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="aws"><![CDATA[AWS]]></category>
		<category domain="post_tag" nicename="code-deploy"><![CDATA[Code Deploy]]></category>
		<category domain="category" nicename="develop"><![CDATA[Tech]]></category>
		<category domain="post_tag" nicename="%eb%b0%b0%ed%8f%ac"><![CDATA[배포]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[21]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[right-sidebar]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_slogan]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_subslogan]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_header_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_scroll_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_bottom_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_footer_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_view_post_info]]></wp:meta_key>
		<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_post_icons]]></wp:meta_key>
		<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729500762;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:1850;}i:1;a:1:{s:2:"id";i:2174;}i:2;a:1:{s:2:"id";i:19;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_7d61f1b9fd73c7ebd984b6ae003941d9]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1096]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>4179</wp:comment_id>
			<wp:comment_author><![CDATA[hare]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[h_hare@naver.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[121.165.242.138]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2019-09-06 16:11:53]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2019-09-06 07:11:53]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[안녕하세요. 포스팅 잘봤습니다.
s3를 통해 클라이언트를 배포하면 실제 운영중의 서버와의 통신은 도메인이 달라서 cors가 발생할텐데,
해당 부분은 어떻게 처리 하셨나요?
cors를 서버단에서 허용해도 클라이언트의 다른 요청 메소드(put/delete)를 사용 못하는데 어떻게 처리 하셨는지 궁금합니다.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1567753913.606858;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>4181</wp:comment_id>
			<wp:comment_author><![CDATA[박 명호]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[myoungho.pak@dramancompany.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[211.249.71.223]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2019-09-06 19:06:13]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2019-09-06 10:06:13]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[안녕하세요 hare 님, 읽어주셔서 감사합니다 :)
두 가지 질문을 주셨는데요,
1. s3를 통해 클라이언트를 배포하면 실제 운영 중의 서버와의 통신은 도메인이 달라서 cors가 발생할 텐데,
해당 부분은 어떻게 처리하셨나요?
-> 리멤버에서는 cors 요청이 필요할 경우 서버 단에서 cors 요청을 허용 해주고 있습니다. 또한, cross-origin HTTP 요청을 제한하는 것은 보안상의 이유로 브라우저 단에서 제한하는 것이기 때문에 S3로 배포한 것과는 상관이 없습니다.

2. cors를 서버단에서 허용해도 클라이언트의 다른 요청 메소드(put/delete)를 사용 못 하는데 어떻게 처리하셨는지 궁금합니다.
-> 서버단에서 cors 허용 메소드 또한 설정 할 수 있습니다. put과 delete에 대해서도 추가로 허용해주시면 될 것 같습니다.

원하시는 답변이 되었는지 모르겠습니다 :) 궁금한 점이 있다면 댓글로 남겨주세요.

제가 공부했던 링크를 추가로 전달 드립니다. 감사합니다.
https://developer.mozilla.org/ko/docs/Web/HTTP/Access_control_CORS
https://developer.mozilla.org/ko/docs/Web/HTTP/Headers/Access-Control-Allow-Headers]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>4179</wp:comment_parent>
			<wp:comment_user_id>21</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1567764373.82672;s:5:"event";s:9:"check-ham";s:4:"user";s:10:"qkraudghgh";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>4207</wp:comment_id>
			<wp:comment_author><![CDATA[hare]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[h_hare@naver.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.15.82]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2019-09-10 09:03:57]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2019-09-10 00:03:57]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[답변 정말 감사드립니다!!
서버단에서 다른 메소드도 허용할 수 있었군요!!
정보 정말 감사드립니다!!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>4181</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1568073838.073041;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>4330</wp:comment_id>
			<wp:comment_author><![CDATA[AZBZA]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[aet789@naver.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.103.12]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2019-09-23 17:19:58]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2019-09-23 08:19:58]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[좋은 글 정말 감사합니다!!
저도 기존사이트 aws로 웹호스팅 하려고 하는데
seo 부분이 잘 안되더라고요.
"Server Side Rendering 없이 SEO하기" 글이 기대됩니다 ㅎㅎㅎ]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1569226798.239418;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>4415</wp:comment_id>
			<wp:comment_author><![CDATA[AWS 주간 소식 모음 – 2019년 9월 30일 &#8211; 지락문화예술공작단]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>https://jirak.net/wp/aws-%ec%a3%bc%ea%b0%84-%ec%86%8c%ec%8b%9d-%eb%aa%a8%ec%9d%8c-2019%eb%85%84-9%ec%9b%94-30%ec%9d%bc/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.28.217]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2019-09-30 08:34:49]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2019-09-29 23:34:49]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] AWS로 서버 없이 웹 서비스 운영하기 – 1 (2019-09-27) [&#8230;]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1569800089.380905;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>4479</wp:comment_id>
			<wp:comment_author><![CDATA[bing]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[ekagud@naver.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.1.76]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2019-10-04 10:21:36]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2019-10-04 01:21:36]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[도움이 많이 됐습니다!
다음 편도 기대되네요 :)]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1570152096.846994;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>4594</wp:comment_id>
			<wp:comment_author><![CDATA[팽펑]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[roeniss2@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.15.82]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2019-10-16 15:38:46]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2019-10-16 06:38:46]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[다음편 고대하고 있습니다!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1571207926.603704;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>5239</wp:comment_id>
			<wp:comment_author><![CDATA[ㄱㅈㅇ]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[whytimes@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.103.12]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2020-01-25 09:25:27]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2020-01-25 00:25:27]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[안녕하세요 내용 잘 봤습니다 그럼 web server 단을 완전히 S3로 대체 할 수 있다는 말씀이신지 궁금합니다]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1579911927.825922;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>5306</wp:comment_id>
			<wp:comment_author><![CDATA[AWS로 서버 없이 웹 서비스 운영하기 – 1 &#8211; app4me]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.1pick.kr/2020/02/06/aws%eb%a1%9c-%ec%84%9c%eb%b2%84-%ec%97%86%ec%9d%b4-%ec%9b%b9-%ec%84%9c%eb%b9%84%ec%8a%a4-%ec%9a%b4%ec%98%81%ed%95%98%ea%b8%b0-1/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.15.82]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2020-02-06 15:13:51]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2020-02-06 06:13:51]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] 서버리스 아키텍쳐https://blog.dramancompany.com/2019/09/aws%eb%a1%9c-%ec%84%9c%eb%b2%84-%ec%97%86%ec%9d%b4-%ec%9b%b9-&#8230; [&#8230;]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1580969631.381174;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>8837</wp:comment_id>
			<wp:comment_author><![CDATA[seosansegi]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[d6596@daum.net]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.25.208]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2021-05-03 13:57:35]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2021-05-03 04:57:35]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[aws카드등록 안하면 회원 가입이 되지 않읍니다. 결론은 해지 힘들고, 각종 걸림돌이 많아서 일단 과금 된다고 보시면 됩니다.
과금이 된다는 말은 사용도 안했는데 돈이 나간다는 것입니다. 아이디비번 잊어버리면 영원히 돈 내야 합니다. 조심하세요...잘하면 문제 없지만 매번 잘할수 없기에 경험담을 전파합니다.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1620017855.257223;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[Java&Spring 개발자가 Ruby on Rails 를 해보고 마주친 생각들]]></title>
		<link>https://blog.dramancompany.com/2020/11/java-spring-ruby-on-rails/</link>
		<pubDate>Mon, 16 Nov 2020 03:40:46 +0000</pubDate>
		<dc:creator><![CDATA[hb.lee]]></dc:creator>
		<guid isPermaLink="false">https://blog.dramancompany.com/?p=1416</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>안녕하세요? 리멤버를 개발하는 드라마앤컴퍼니 서버/웹팀의 서버 개발자 이한별입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>저는 Spring Framework 로 제품 개발을 3년 정도를 했습니다. 이후 최근 11개월동안은 Rails 로 제품 개발을 하고 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Spring 개발자가 왜 Rails 에 관심을 갖게 됐는가?</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Spring, 특히 Spring Boot 라는 Framework 에 부족함을 느끼지 못했습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>그런데 왜 지금 리멤버를 서비스하고 있는 드라마앤컴퍼니에 와서 Rails 로 개발을 하고 있는지를 떠올려봅니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>언제인지 정확한 기억은 나지 않지만, Ruby 의 기초를 공부한 적이 있었는데 문법이 저랑 잘 맞을 것 같단 느낌과 함께 마냥 긍정적인 시각이 생겼습니다. 많은 현대 Web Framework 들에 영감을 준 Ruby on Rails 에 대해서도 궁금증이 생겼습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>그 이후, 기회가 되면 Ruby 로 개발해보면 재밌겠다라는 생각이 들었고, 드라마앤컴퍼니로 이직하는 것이 계기가 되어 Rails 로 개발을 하고 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:separator -->
<hr class="wp-block-separator"/>
<!-- /wp:separator -->

<!-- wp:paragraph -->
<p>이 글에서는 Spring 으로 개발하던 사람이 Ruby on Rails 로 개발을 해보고 난 후 드는 생각들을 정리해봤습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Ruby on Rails 프레임워크의 철학</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Ruby on Rails 는 MVC 패턴 기반의 개발을 빠르고 편리하게 해주는 Web Framework 이며, Rails 의 철학은 아래 두가지의 주요한 가이딩 원칙을 바탕으로 하고 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>- DRY(Don't Repeat Yourself)</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>- CoC(Convention over Configuration)</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>&nbsp; &nbsp; - Spring Boot 가 나오게 된 배경도 Spring MVC 만을 사용할때 비즈니스 로직보다 설정에 관련된 코드를 많이 작성해야했기 때문인 점과 일맥상통하다고 볼 수 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:tadv/classic-paragraph -->
<pre class="striped:false marking:false ranges:false nums:false nums-toggle:false show-plain-default:true lang:vim highlight:0 decode:true" title="Rails - guiding principles 에 대한 설명">The Rails philosophy includes two major guiding principles:
Don't Repeat Yourself:
DRY is a principle of software development which states that "Every piece of knowledge must have a single, unambiguous, authoritative representation within a system." By not writing the same information over and over again, our code is
Convention Over Configuration:
Rails has opinions about the best way to do many things in a web application, and defaults to this set of conventions, rather than require that you specify minutiae through endless configuration files.
</pre>
<!-- /wp:tadv/classic-paragraph -->

<!-- wp:paragraph -->
<p><em>from <a href="https://guides.rubyonrails.org/getting_started.html">Ruby on Rails 공식 가이드</a></em></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Ruby on Rails 의 강점</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>위 가이딩 원칙을 포함하는 철학을 바탕으로 Rails 는 확실하게 아래와 같은 강점이 있다고 느꼈습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>낮은 진입 장벽</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>- Ruby 는 프로그래밍을 해보지 않은 사람에게 입문용으로 추천해줄 수 있을 정도로 쉬운 문법을 채택하였고, Rails 는 러닝 커브가 가파르지 않은 Web Framework 입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>- Spring 도 완전 초기 진입 장벽 자체는 낮다고 볼 수 있으나, 주요 개념인 IoC, DI, Container 등에 대한 이해가 매우 중요합니다. Rails 에서도 이 개념들에 대해 알아야 하지만, Spring 에서 보다는 천천히 알아가도 괜찮다고 생각합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>- Rails 를 전혀 해보지 않은 상태인 저도 Ruby 문법 책(a.k.a. 곡괭이 책) 1독과 좋은 튜토리얼 하나로 금방 Rails 에 대해 어느정도 이해가 생겼습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>- 리멤버에 합류할 때도 3개월 내에 프로젝트에 투입되는 것을 목표로 삼았는데, 불과 2~3주 만에 프로젝트에 투입될 수 있었습니다. 물론 다른 동료분들의 도움이 필요했지만, 반대로 Rails 를 했다가 Spring 을 하게 됐을 때 과연 제가 2~3주 만에 프로젝트에 투입될 수 있었을까? 를 생각해보면 좀 더 많은 시간을 필요로 했을 것 같습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>- Rails 는 웹 애플리케이션을 쉽게 만들어주는 Framework 이긴 하지만, Ruby 언어의 확장판 정도로 이해하는 관점도 있습니다. 그 말은, Ruby 언어에 대한 기초 지식이 있으면 별도의 프로그래밍 언어 자체에 대한 공부를 타언어에 비해 많이 요구하지 않습니다. Rails 를 공부하는 것이 곧 Ruby 를 공부하는 것이죠.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>- Spring 을 개발할 때는 Java 나 Kotlin 언어의 특징이 Ruby 에 비해서는 알아야 할 것들이 많다는 점과 비교된다고 할 수 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Ruby 언어의 강력함</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>- Ruby 는 정말 인간 중심으로 설계된 언어라는 것을 체감하였습니다. Ruby world 에서는 모든 것이 Object 인 점을 만족하는 순수 객체지향 언어인 점은 Rails 라는 Framework 로 확장하는데 아주 큰 역할을 하였습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>- 새로운 클래스, 메소드를 만들지 않고 기존 클래스의 기능을 손쉽게 확장 가능합니다. (meta programming)</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>&nbsp; &nbsp; - Kotlin 을 활용하여 Spring 으로 개발하면 이 장점을 활용할 것 같기도 합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>- 이를 바탕으로 만들어진 여러 메소드들은 실제 Rails 에서 개발할 때 아주 활용도가 높습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>- 이 점은 Java 에서 각종 Util 성 메소드를 모아놓은 class 를 별도로 만들어 쓰는 것과 대조적입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>- 그리고 duck typing 이 가능하기 때문에 좀 더 간결하게 코드를 작성하는데도 도움이 됩니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>rails console</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>- IRB(Interactive Ruby) 와 같이 Rails 에서 제공하고 있는 REPL(Read-Evaluate-Print-Loop) 도구인 rails console 을 통해 방금 작성한 코드의 실제 실행 결과를 바로바로 눈으로 확인할 수 있습니다. 이 점은 개발 과정에서도 아주 유용하게 사용됩니다. 특히, 저는 환경 설정 파일에 설정해놓은 key,value 값들이 실제로 잘 로드되었는지 확인하는데 많이 쓰고 있습니다. 그리고 TDD 로 개발한다고 하더라도 복잡한 계산을 요하는 로직을 개발하다보면, Java + Spring 에서는 debug 모드로 중간 중간 값들을 확인/변경하면서 잘 된 것인지, 잘못됐다면 어디가 잘못된 것인지 확인하게 되는데, rails console 을 이용하면 debug 모드로 확인하는 것보다 훨씬 빠르게 작업을 마칠 수 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>- 그리고 운영 업무 시 아주 막강한 힘을 발휘합니다. Java + Spring 의 경우에는 실행이 필요한 코드 스니펫을 작성해놓으면 서버에 배포를 해야만, 코드 실행이 가능한데 rails console 을 이용하면 실행 전에 sandbox 모드를 이용하여 미리 dry-run 에 가깝게 실행 과정을 예상해볼 수 있고, 코드를 배포하지 않고도 원하는 코드 스니펫을 실행시킬 수 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>- 이 점은 어떤 관점에서 보면 단점이 될 수 있기도 합니다. rails console 을 실행할 수 있는 권한이 있는 누군가가 알아차리기 힘든 실수를 할 가능성도 함께 있기 때문입니다. 그렇지만 rails console 은 rails 로 개발하는 데 있어 아주 편리한 도구인 것은 틀림없는 사실입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":1924,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/02/rails-console-example-1.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/02/rails-console-example-1.png" alt="" class="wp-image-1924"/></a><figcaption>rails console 실행 예시</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>- spring-shell 이라는 프로젝트도 있고, Java 9 부터 도입된 JShell 이라는 REPL 도 있지만, rails console 에서 제공하는 편의성과는 결이 다르고 목적이 다릅니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>테스트 코드 작성의 편리성</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>- Rails 를 처음 입문했을 때 가장 충격받았던 점은 테스트 코드를 작성하기가 너무 쉽고, 편해서 TDD 를 학습하는 게 너무 자연스러웠던 것이었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>- 웬만한 Rails tutorial 코드를 봐도 테스트를 가장 먼저 작성합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>- RSpec 이라는 테스팅 라이브러리가 가장 많이 사용되고 있는데, 사람이 작성하고 읽기 편한 테스트를 작성하도록 자연스럽게 이끌고 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>- 그리고 테스트에 필요한 여러 Fixture 를 편리하게 만들어주는 Faker, FactoryBot 등은 접해보지 않은 사람들은 놀랄 정도로 테스트 작성에 부스터 역할을 하고 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>- 이렇게 테스트 코드 작성이 편리하니, 테스트 작성을 통해 얻을 수 있는 장점을 모두 쉽게 얻을 수 있으며 리멤버 커리어 서비스의 API 프로젝트의 테스트 커버리지를 분석해보면 85% 이상을 유지하고 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:tadv/classic-paragraph -->
<figure class="wp-block-image size-large">
</figure>
<!-- /wp:tadv/classic-paragraph -->

<!-- wp:image {"align":"center","id":1925,"sizeSlug":"large","linkDestination":"media","className":"wp-image-1549 size-full"} -->
<div class="wp-block-image wp-image-1549 size-full"><figure class="aligncenter size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/02/test-coverage-example.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/02/test-coverage-example-1024x109.png" alt="" class="wp-image-1925"/></a><figcaption>리멤버 API 테스트 커버리지</figcaption></figure></div>
<!-- /wp:image -->

<p>- 개인적으로 Java, spring boot 로 개발할 때 테스트 코드를 작성하긴 했지만, 지금 와서 생각해보면 Rails 에서 작성하고 있는 테스트에 비하면 작성했다고 말하기 부끄러울 정도입니다.</p>
<h3>날짜 관련</h3>
<p>- 한 마디로 정의하기 어려운 Rails way 를 나날이 습득하다보면서 생산성이 증가함을 느낄 수 있었습니다.</p>
<p>- 언어 차원에서 단수/복수를 고려하고 있다는 자체가 사람 중심의 언어라는 증거 중 하나입니다.</p>
<p>- 그 중 날짜/시간 관련 클래스의 강력한 메소드들이 기본적으로 사람이 이해하기 쉬운 메소드 이름으로 표현되어 있습니다.</p>
<pre class="lang:ruby decode:true " title="Ruby on Rails 에서의 사람 중심적인 날짜 표현 방법">1.day.ago.all_day
2.months.ago.all_quarter
3.days.from_now
Time.current.yesterday.beginning_of_day</pre>
<p>- Java 에서도 1.8 버전 이전에는 날짜관련 API 가 매우 빈약하여, Joda 라는 라이브러리를 사용하기도 했는데, 1.8버전 이후로는 개선된 API 가 나와서 편리해지긴 했지만 여전히 Rails way 로 구현된 Rails 의 API 에 비하면 많이 부족한 것 같습니다.</p>
<h3>DB 스키마 관리</h3>
<p>- Rails 에서는 DB 스키마가 code level 에서 관리되고 있습니다. Java + Spring Boot 의 경우에는 이를 개발자가 별도의 노력으로 관리를 해야만 code level 에서 확인하고 유지보수를 할 수 있는 반면, Rails 에서는 DB 스키마 변화에 대한 이력 관리가 거의 강제됩니다. 그래서 현재 상태만 표현하는 DB 의 이력 변화 내용을 code level 에서 확인할 수 있습니다.</p>
<p>- DB 스키마 관리 방법도 2가지 이상 제공되고 있어서, 개발자(팀)의 선호도에 따라 그 방법을 선택할 수 있게 해준 점도 Rails 에서 잘 한 점이라고 생각합니다.</p>
<p>&nbsp; &nbsp; - strucuture.sql, schema.rb, db/migration</p>
<p>- 한 가지 아쉬운점으로는, 이 스키마 파일을 바탕으로 Rails 에서 알아서 column 값에 대한 getter, setter 메소드를 자동으로 만들어주기 때문에 ActiveModel 클래스만 보고 어떤 필드를 갖고 있는지 확인하기 어렵고, 스키마 파일을 봐야만 한다는 점은 다소 아쉽긴 합니다.</p>
<p>- Spring 에서 거의 de facto 로 사용되고 있는 JPA 를 이용한 코드를 보면 Entity class 에서 애플리케이션에 필요한 컬럼이 무엇인지 모두 확인이 가능한 부분은 명시적인 코드 측면에서 더 좋았다고 느꼈습니다.</p>
<h3>이메일 발송 Preview</h3>
<p>- Rails 에서는 기본적으로 이메일 발송 기능도 내장되어 있고, template 으로 작성된 이메일을 미리 볼 수 있는 Preview 를 제공합니다.</p>
<p>- Spring Boot 에서도 개발자가 그런 기능을 만들어서 활용할 수도 있겠지만, 제 경험으로는 그 목적으로 작성된 코드를 못봤고, Spring Framework 자체에서 지원하지 않습니다. 모를 땐 괜찮았는데, 알고 나니 Preview 가 없이는 작업하기가 매우 번거로울 것 같다는 생각이 들었습니다.</p>

<!-- wp:tadv/classic-paragraph -->
<figure class="wp-block-image size-large">
</figure>
<!-- /wp:tadv/classic-paragraph -->

<!-- wp:image {"align":"center","id":1926,"sizeSlug":"large","linkDestination":"media","className":"wp-image-1565"} -->
<div class="wp-block-image wp-image-1565"><figure class="aligncenter size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/02/email-preview-example.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/02/email-preview-example.png" alt="" class="wp-image-1926"/></a><figcaption>rails email preview exmaple</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:heading {"level":3} -->
<h3>비동기 로직 처리를 위한 sidekiq</h3>
<!-- /wp:heading -->

<!-- wp:tadv/classic-paragraph -->
<p>- 서버 코드를 작성하다보면 시간이 오래 걸리거나, 비즈니스 로직과 직접적인 관련이 없지만 실행되어야 하는 로직들이 종종 있는데, 이를 비동기로 처리하는 경우가 많이 있습니다.</p>
<!-- /wp:tadv/classic-paragraph -->

<!-- wp:tadv/classic-paragraph -->
<p>- Rails 진영에서는 sidekiq 이라는 Backgroud Processing 도구를 많이 쓰는 것 같습니다.</p>
<!-- /wp:tadv/classic-paragraph -->

<!-- wp:paragraph -->
<p>- sidekiq 에서는 여러 작업 queue 를 제공하고 있고, 각 qeuue 에 작업(Job)을 넣는 것 만으로도 안정적으로 해당 비동기 작업이 정상처리될 것임을 보장받을 수 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>- Spring 에서는 비동기 로직을 처리하기 위해 메소드에 @Async 라는 어노테이션을 지정하는 방식을 많이 쓰고 있고, 또는 Future, CompletableFuture 의 API 를 활용하는 경우가 많은데 이 땐 실제로 잘 처리 중인지, 아닌지 확인하기가 많이 어렵습니다. 코드에 버그라도 있으면 실패를 알아차리지도 못하고, 실행되어야 하는 로직은 실행이 되지 못하고 종료처리되는 경우도 생길 수 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>- 반면 sidekiq 에서는 Web UI 를 제공하여 실패한 Job 목록을 볼 수도 있고 재시도 알고리즘에 의해 한 번 실패했더라도 여러번 재시도를 통해 실행될 것임을 확인할 수 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>- 또한 cron 으로 표현되는 Scheduled Job 도 손쉽게 스케줄링할 수 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>- Spring 진영에서도 Spring Batch, Spring Quartz 라는 대안이 있긴 있지만, 약간의 러닝 커브가 있고 단순 비동기 로직을 실행시키기 위한 Framework 로서는 너무 비대합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>여기까지 Ruby on Rails 의 강점에 대해 정리해봤습니다. 다음으로 Spring 의 강점을 정리해보겠습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:separator -->
<hr class="wp-block-separator"/>
<!-- /wp:separator -->

<!-- wp:heading -->
<h2>Spring 의 강점</h2>
<!-- /wp:heading -->

<!-- wp:heading {"level":3} -->
<h3>선언적인 API endpoints routing</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>- Rails 에서는 routes.rb 파일에 웹 어플리케이션의 모든 API endpoint 들을 정의하게 되어있습니다. Spring 에서는 Controller 클래스들과 Controller 의 메소드들에 개별적으로 어노테이션을 이용하여 선언하도록 되어있습니다. 선호도의 차이가 있을 수는 있지만, 선언적인 방식을 사용하는 Spring 의 방식이 훨씬 좋다고 생각합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>- rotues.rb 에 모든 endpoints 를 정의했다고 하더라도, 연결된 controller 코드를 보면 어떤 endpoint 에 연결되어있는지 찾기가 쉽지 않습니다. 이를 보완하기 위해 컨트롤러 메소드 위에 endpoint 를 주석으로 달아놓기도 하지만, 그런다는 자체가 Spring 의 선언적인 방식을 쓰는 것이 더 좋다는 것을 인정하는 것처럼 느껴지기도 합니다. 주석으로 달아놓은 것은 실제로 실행되는 코드와는 무관하고, 틀릴 수도 있어서 팀에서 잘 관리하지 않으면 안 됩니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>- 그리고 특정 오류가 생긴 API 를 로그 시스템으로부터 발견하여 어떤 컨트롤러의 어떤 메소드에서 실행되는 코드인 것인지 찾기 위해 들이는 시간이 Spring 의 선언적인 방법으로 했을 때가 훨씬 적게 듭니다.</p>
<!-- /wp:paragraph -->

<!-- wp:tadv/classic-paragraph -->
<pre class="lang:java decode:true " title="Spring 에서의 Endpoint 선언 방식">  class UserController {
    @GetMapping("/users/{userId}")
    ResponseEntity getUser(@PathVariable("userId") Long userId) {
      // ...
      return ...;
    }
  }
</pre>
<!-- /wp:tadv/classic-paragraph -->

<!-- wp:tadv/classic-paragraph -->
<pre class="lang:ruby decode:true" title="Ruby on Rails 에서의 Endpoint 설정 방식">  # in routes.rb
  resources :users
  # in user_controller.rb
  class UsersController &lt; ApplicationController
    # GET /users/:id       # &lt;-- 이것처럼 주석으로 작성해둬야 찾기가 편합니다.
    def show
      # ...
    end
  end
</pre>
<!-- /wp:tadv/classic-paragraph -->

<!-- wp:paragraph -->
<p>- 또한, 점점 더 많은 endpoint 가 필요할 수록, Rails 의 routes.rb 를 이용한 방식은 routes.rb 자체에 대한 도메인 지식도 요구하고 복잡해지는 경향이 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>선언적인 DB 트랜잭션 관리</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>- Rails 에서도 DB 트랜잭션 관리를 위한 API 가 있습니다. Spring 의 그것에 비하면 기능이 너무 제한적입니다. 그리고 트랜잭션 관리를 하기 위해 개발자가 직접 트랜잭션을 여는 코드를 비즈니스 로직 내에 작성하도록 되어 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>- Spring 에서는 아래와 같이 @Transactional 을 메소드 바깥에 선언하므로서 비즈니스 로직과 분리하여 생각할 수 있게 해줍니다.</p>
<!-- /wp:paragraph -->

<!-- wp:tadv/classic-paragraph -->
<pre class="lang:java decode:true " title="Spring 의 DB 트랜잭션 관리 예시">    @Transactional
    public List saveUser(User user) {
      return userRepository.save(user);
    }
</pre>
<!-- /wp:tadv/classic-paragraph -->

<!-- wp:paragraph -->
<p>- Rails 에서는 아래와 같이 비즈니스 로직(메소드) 안에서 작성해야 합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:tadv/classic-paragraph -->
<pre class="lang:ruby decode:true " title="Ruby on Rails 의 DB 트랜잭션 관리 예시">    def save_user(user)
      User.transaction do
        user.save!
      end
    end
</pre>
<!-- /wp:tadv/classic-paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Container 와 DI</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>- Spring 에서 Container, DI, IoC 에 대해 얘기해보자면 끝이 없는 이야기가 될 정도로 중요한 개념일 것입니다. 이 글은 그걸 설명하기 위한 글은 아니라 Spring 의 강점으로 Container 와 DI 를 떠올린 이유 정도만 얘기해보겠습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>- Spring 에서 넘어와 Rails 를 하면서 가장 큰 충격을 받았던 부분 중 하나로 비즈니스 로직 처리를 담당하는 Service Layer 를 구성하고 있는 클래스의 인스턴스들을 직접 new 키워드를 통해 생성하고 있던 부분이었습니다. 그러다 보니 상태를 갖는 객체들을 개발자가 직접 컨트롤 해야하는 위험에 빠지기 쉬운 것 같습니다. 이를 조금이나마 방지하기 위해 class method (루비에서 모든 것은 객체이기 때문에 진정한 의미에서의 class method 는 아니지만) 를 정의하는 방법을 사용하기도 합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>- Spring 에서는 Bean 이라고 부르는 객체들의 라이프 사이클을 관리해주는 Container 가 있습니다. Bean 객체들은 이 Container 가 생성해주고 해당 Bean 들이 필요한 곳에서는 의존성을 주입(DI) 받아서 사용하는 형태가 일반적이기 때문이었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>- 상태(변경이 가능한 인스턴스 변수)를 갖는 객체들이 많다보면 코드의 흐름을 파악하는데 있어서 매우 복잡해짐을 느끼는데, Rails 에서는 Framework 차원에서 이를 방지하기 위한 장치가 없다는 것이 아쉬웠습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>DB Entity layer 와 Query layer 의 명확한 분리</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>- Spring 에서는 DB Entity 를 표현하는 class 와 Query 실행을 담당하는 class 가 명확하게 나뉘어져 있습니다. 굳이 분리하지 않고 개발하려면 불가능하진 않겠지만요.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>- Rails 에서도 이를 분리하기 위해 layer 를 만들어 관리할 수 도 있지만, 태생적으로 모든 곳에서 접근이 가능한 ActiveModel 특성이 있기 때문에 그렇게 한다 하더라도 코드가 복잡해지면 코드를 읽거나 작성하는데 어려움이 생기게 됩니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>- Spring 에서는 아주 일부 케이스를 제외하고는, 실행해야하는 쿼리를 명시적으로 선언을 해야만 쿼리를 실행시킬 수 있습니다. 동적인 쿼리가 필요해서 별도의 코드(Predicate, query-dsl 등)를 작성하더라도 Query layer 에서만 살펴보면 됩니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>- Rails 에서는 그냥 쿼리가 필요한 어느 곳에서든 ActiveModel 을 이용하여 자유롭게 쿼리를 생성할 수 있는데, 이는 하나의 클래스가 여러 역할을 하므로서 복잡도가 매우 커진다는 느낌을 받고 있습니다. ActiveModel 의 높은 자유도는 작은 웹 애플리케이션인 경우에는 괜찮을 수도 있지만, 점점 커지는 웹 애플리케이션이라면 관리하기가 어려워지는 것 같습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>- 한편, Rails 의 ActiveModel 은 Java 진영의 SQL Framework 인 jooq 와 비슷한 것 같다는 생각도 들었지만, jooq 를 잘 써본 것은 아니라 충분히 다른 견해가 있을 수 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>cloud platform, MSA</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>- Spring 진영에는 분산 시스템의 공통된 패턴을 빠르게 구축하기 위한 도구를 제공하는 spring cloud 라는 Framework 가 마련되어 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>- 외부 서비스를 사용하지 않고도 손쉽게 Service Discovery(Eureka) 와 Feign 이라는 선언적인 Rest Client 만으로도 작은 MSA 를 구축할 수 있었습니다. (꼭 Feign 을 써야할 필요는 없습니다.)</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>- 또한 복잡하고 큰 MSA 를 구현함에 있어서도 spring cloud 의 여러 도구들을 활용하면 분산 시스템을 구축하기가 쉽고 편합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:tadv/classic-paragraph -->
<pre class="lang:java decode:true " title="Service Discovery(Eureka) 와 RestClient(Feign)  이용 Spring cloud 예시 코드">  // Eureka Server
  @SpringBootApplication
  @EnableEurekaServer // Eureka 서버로 사용할 애플리케이션에 이 어노테이션만 달아주면 기본적인 설정은 끝
  public class Application {
      public static void main(String[] args) {
          new SpringApplicationBuilder(Application.class).web(true).run(args);
      }
  }
  // Feign
  @FeignClient("stores") // Service Discovery(Spring Eureka) 를 통해 stores 라는 서비스를 이용하는 Client 로 선언
  public interface StoreClient {
      @RequestMapping(method = RequestMethod.GET, value = "/stores")
      List getStores();
      @RequestMapping(method = RequestMethod.POST, value = "/stores/{storeId}", consumes = "application/json")
      Store update(@PathVariable("storeId") Long storeId, Store store);
  }
</pre>
<!-- /wp:tadv/classic-paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Static Type (Java, Kotlin)</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>- Spring 을 개발할 때 주로 사용하는 언어인 Java 와 Kotlin 은 static type 을 채택하였습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>- 최근 TypeScript 의 성장세, Ruby 도 3.0 버전 이후부터는 static type 을 지원하는 추세로 봐서는 엔터프라이즈 웹 어플리케이션을 개발할 때는 static type 이 더 유리하다는 쪽으로 점점 기울고 있다는 생각이 듭니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>개발 생태계</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>- Java 는 Oracle, Spring 은 Pivotal 이라는 기업에서 governorship 을 가지고 유지보수를 하고 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>- 반면에 Ruby 와 Rails 모두 오픈 커뮤니티에 의존하고 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>- 각 언어, 프레임워크의 발전 속도, 안정성 측면에서 본다면, 아무래도 Java, Spring 쪽의 미래가 더 밝을 것이라고 예상해봅니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>openapi 문서 작성의 편의성</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>- Rails 에서도 API 문서를 작성하기 위해 직접 openapi.json(yml) 을 코드에서 관리할 수도 있고, 이를 편리하게 작성할 수 있도록 한 여러 시도들이 있습니다. 하지만 개발자가 신경을 써야하는 부분이 많다고 느꼈습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>- 저희 리멤버에서도 openapi.yaml 파일로 API 문서를 관리하고 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>- Spring 진영에서는 springfox 라는 오픈소스 커뮤니티에서 제공하는 swagger-ui 라이브러리를 이용하면 Java 어노테이션을 이용하여 보다 더 쉽게 작성을 할 수가 있습니다. Static Type 을 자동으로 읽어서 처리되기 때문에 개발자가 직접 properties 를 나열할 필요가 없습니다. 파라미터에 대한 세부 설명 또한 어노테이션으로 표현이 가능합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:tadv/classic-paragraph -->
<pre class="lang:java decode:true " title="Spring 에서 openapi 작성 예시 코드">  @ApiOperation(value = "Find pet by Status",
                notes = "${SomeController.findPetsByStatus.notes}"...)
  @RequestMapping(value = "/findByStatus", method = RequestMethod.GET, params = {"status"})
  public Pet findPetsByStatus(
    @ApiParam(value = "${SomeController.findPetsByStatus.status}",
              required = true,...)
    @RequestParam("status", defaultValue="${SomeController.findPetsByStatus.status.default}") String status) {
       //...
   }
  @ApiOperation(notes = "Operation 2", value = "${SomeController.operation2.value}"...)
  @ApiImplicitParams(
      @ApiImplicitParam(name="header1", value="${SomeController.operation2.header1}", ...)
  )
  @RequestMapping(value = "operation2", method = RequestMethod.POST)
  public ResponseEntity operation2() {
     return ResponseEntity.ok("");
  }
</pre>
<!-- /wp:tadv/classic-paragraph -->

<!-- wp:paragraph -->
<p><em>from <a href="https://springfox.github.io/springfox/docs/current/">springfox 공식 문서</a></em></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>- 이걸 더 복잡하다고 생각하시는 분들도 계시겠지만, 저는 별도의 openapi.yml 파일을 직접 관리하는 것보다 더 좋았다고 느꼈습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>- springfox 에서 webflux, Kotlin 에 대한 대응이 늦는 등의 문제가 있어서 최근에는 <a href="https://springdoc.org">springdoc</a>&nbsp;을 더 많이 사용하는 추세라고 하네요.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>여기까지 제가 생각한 'Spring 이 Rails 에 비해 더 강점인 부분들' 을 정리해봤습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:separator -->
<hr class="wp-block-separator"/>
<!-- /wp:separator -->

<!-- wp:heading -->
<h2>다른 이야기</h2>
<!-- /wp:heading -->

<!-- wp:heading {"level":3} -->
<h3>생산성</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>- Rails 는 생산성이 좋은 Web Application Framework 로 유명합니다. Spring 진영에서도 Spring Boot 가 나온 이래로 생산성은 Rails 못지 않다고 생각합니다. 단순히 생산성 측면 때문에 Spring 이 아니라 Rails 를 선택하는 일은 더 이상 존재하지 않는다고 생각합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>- 오히려 IDE 에서 제공하는 강력한 기능과 관련해서는 static typing 을 하고 있는 언어인 Java, Kotlin 을 사용할 때가 더 유리하다고 생각합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Case convention</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>- Ruby 는 snake_case 를, Java 에서는 camelCase 를 변수명, 메소드명을 지을 때의 관례로 사용하고 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>- 개인적으로는 snake_case 보다 camelCase 가 가독성이 더 좋다고 생각하기도 하며, snake_case 를 사용할 때는 언더스코어라는 문자를 하나 더 입력해야하기 때문에 변수명, 메소드명이 좀 더 길어질 수 있는데 사소하지만, 언더스코어 문자 때문에 길어지는 것 자체는 다소 불편하다고 생각했습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>마무리</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>이전에는 Rails 만이 갖고 있던 강점들이 두드러졌으나, 시간이 지나면서 Spring 진영이 매우 빠른 속도로 진보하여 Rails 의 강점이 더 이상 Rails 만의 강점이라고 하기 어려워 진 것 같습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>하지만 Ruby on Rails 도 Spring 만큼 성숙한 Framework 이며 오픈소스 커뮤니티만으로도 지속적인 진보를 이뤄내고 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>지금 저희 개발팀은 Ruby on Rails로 리멤버라는 서비스를 빠르고 안정적으로 서비스를 확장해나가고 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Spring 을 했다가 지금은 Rails 로 개발하고 있는 저로서는 <strong>Rails 도 만족스러운 Framework 이며 실제로 저희 개발팀 내부 설문조사에서도 만족도가 높다는 결과가 나왔습니다.</strong></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>하지만 대규모 채용, 서비스 확장을 준비하는 과정에서 Spring Framework 등 새로운 기술 스택을 도입하는 것에 검토하고 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>새로운 기술 스택을 도입하려면 매우 큰 비용을 지불해야하는 일이기도 하고 단순히 개발자의 새로운 것에 대한 호기심/갈망만으로 새로운 기술 스택 도입을 하는 실수를 범하지 않기 위해 신중히 논의중에 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>팀에서 필요성에 대한 공감대가 충분히 형성되면 머지 않은 미래에 점진적으로 도입을 시도해볼 것이라 예상해봅니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><strong>Rails 에 대한 경험이 없는 개발자들도 Rails 로 개발해보며 강점들을 느껴보면 시니어 개발자가 되기 위한 시야와 지식의 폭이 더 넓어지지 않을까요?</strong></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>읽어주셔서 감사합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:tadv/classic-paragraph /-->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1416</wp:post_id>
		<wp:post_date><![CDATA[2020-11-16 12:40:46]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-11-16 03:40:46]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-02-24 00:39:26]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-02-23 15:39:26]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[java-spring-ruby-on-rails]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="backend"><![CDATA[Backend]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="post_tag" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
		<category domain="post_tag" nicename="spring"><![CDATA[Spring]]></category>
		<category domain="post_tag" nicename="springboot"><![CDATA[SpringBoot]]></category>
		<category domain="category" nicename="develop"><![CDATA[Tech]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[4]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[8]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[right-sidebar]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_slogan]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_subslogan]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_header_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_scroll_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_bottom_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_footer_sidebar]]></wp:meta_key>
		<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_view_post_info]]></wp:meta_key>
		<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jaxlite_post_icons]]></wp:meta_key>
		<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_format_gallery_images]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_social_meta]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:8:"fb_title";s:0:"";s:14:"fb_description";s:0:"";s:8:"fb_image";s:0:"";s:13:"twitter_title";s:0:"";s:19:"twitter_description";s:0:"";s:13:"twitter_image";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_override_counter]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:4:{s:19:"view_counter_number";s:1:"0";s:20:"share_counter_number";s:1:"0";s:19:"like_counter_number";s:1:"0";s:22:"dislike_counter_number";s:1:"0";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_template_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[wp-post]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_version]]></wp:meta_key>
		<wp:meta_value><![CDATA[3.0.13]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1928]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[spring]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[%%sitename%% %%page%% %%sep%% %%sitename%%]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[54]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_single_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:17:{s:8:"subtitle";s:0:"";s:6:"format";s:8:"standard";s:5:"video";s:0:"";s:7:"gallery";s:0:"";s:11:"source_name";s:0:"";s:10:"source_url";s:0:"";s:8:"via_name";s:0:"";s:7:"via_url";s:0:"";s:8:"override";a:1:{i:0;a:11:{s:18:"single_blog_custom";s:0:"";s:7:"sidebar";s:0:"";s:14:"second_sidebar";s:0:"";s:14:"share_position";s:0:"";s:17:"share_float_style";s:0:"";s:16:"post_date_format";s:0:"";s:23:"post_date_format_custom";s:0:"";s:21:"post_reading_time_wpm";s:0:"";s:20:"zoom_button_out_step";s:1:"1";s:19:"zoom_button_in_step";s:1:"1";s:17:"number_popup_post";s:1:"1";}}s:14:"image_override";a:1:{i:0;a:2:{s:26:"single_post_thumbnail_size";s:0:"";s:24:"single_post_gallery_size";s:0:"";}}s:22:"trending_post_position";s:0:"";s:19:"trending_post_label";s:0:"";s:20:"sponsored_post_label";s:0:"";s:19:"sponsored_post_name";s:0:"";s:18:"sponsored_post_url";s:0:"";s:19:"sponsored_post_logo";s:0:"";s:19:"sponsored_post_desc";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle_flag]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:2:"id";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729530330;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:2174;}i:1;a:1:{s:2:"id";i:966;}i:2;a:1:{s:2:"id";i:1850;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>6463</wp:comment_id>
			<wp:comment_author><![CDATA[스와니강]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[darkrich@hanmail.net]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.106.86]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2020-11-20 12:03:44]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2020-11-20 03:03:44]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[백엔드로 Java+SpringBoot, JS/TS + Node.js 로 백엔드를 해오다
루비 2.1에 레일즈는 4.1 로 된 조금 오래된 프로젝트에 들어갔습니다.
루비라는 언어와 루비 온 레일즈 프레임워크 자체는 좋다고 생각됩니다.
다만 루비 언어 자체는 쉬운데 레일즈 프레임워크를 제대로 이해를 해야 한다는 부분이 좀 어려웠고
숙련된 RoR 개발자 구하는 문제, 버전이 오래되었다보니 로컬에 개발환경 구축도 쉽지 않았고
Ruby, RubyOnRails 버전 업그레이드를 못하는 문제 등....

그래서 저희 회사에서는 kotlin+SpringBoot 로 이전하려고 합니다.
잘 될지는 모르겠네요.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1605841424.380475;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>6493</wp:comment_id>
			<wp:comment_author><![CDATA[이 한별]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[hanbyul.lee@dramancompany.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.28.217]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2020-12-02 13:00:44]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2020-12-02 04:00:44]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[스와니강님, 안녕하세요? 댓글 남겨주셔서 감사합니다. :)

저희 리멤버에도 오래된 프로젝트는 Ruby 2.3.3 + Rails 4.2 버전을 사용하고 있는데요.
어떤 프레임워크를 사용하더라도 현실의 복잡한 요구사항을 쉬운 코드로 풀어내기 위해서는, 언젠가는 그 프레임워크를 제대로 이해해야하기 마련인 것 같습니다.
Spring 에 비해서 Rails 에서는 그 "언젠가"라는 시가가 좀 더 늦게 다가온다고 생각해서 초반의 학습 곡선이 Spring 에 비해 낮다고 생각합니다.
버전 업그레이드 관련해서는 저희도 잘 못해왔었던 부분이었고, 최근에는 버전 업그레이드에 대한 필요성을 강하게 느껴 실천하고 있는 부분도 생기고 있습니다. 그 중 버전 업그레이드를 완료한 프로젝트도 있고, 로컬 개발환경을 dockerize 도 완료한 프로젝트도 있습니다. 미처 완료하지 못한 프로젝트들도 계속 현재 진행형입니다. 한 번에 모든 것을 바꾸긴 어렵지만, 점진적으로 하다보면 충분히 최신 버전을 따라 잡을 수 있을 것 같습니다.

예전에 Java + SpringBoot 를 해보셨으니 Kotlin + SpringBoot 로의 이전이 아주 어려울 거라고 생각되진 않습니다. 건투를 빕니다!

성공/실패 상관없이 이전을 하면서 마주치는 여러가지들을 공유해주시면 정말 좋을 것 같습니다!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>6463</wp:comment_parent>
			<wp:comment_user_id>24</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1606881644.561614;s:5:"event";s:9:"check-ham";s:4:"user";s:6:"hb.lee";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>6496</wp:comment_id>
			<wp:comment_author><![CDATA[재현]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[rururu0729@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.103.12]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2020-12-03 00:01:54]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2020-12-02 15:01:54]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[좋은 글 감사합니다.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1606921315.143759;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>6706</wp:comment_id>
			<wp:comment_author><![CDATA[리멤버 서버/웹 팀은 어떻게 일을 하는가? | DRAMA&amp;COMPANY]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>https://blog.dramancompany.com/2020/12/%eb%a6%ac%eb%a9%a4%eb%b2%84-%ec%84%9c%eb%b2%84-%ec%9b%b9-%ed%8c%80%ec%9d%80-%ec%96%b4%eb%96%bb%ea%b2%8c-%ec%9d%bc%ec%9d%84-%ed%95%98%eb%8a%94%ea%b0%80/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.7.247]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2020-12-23 16:52:06]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2020-12-23 07:52:06]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] Java&amp;Spring 개발자가 Ruby on Rails 를 해보고 마주친 생각들 [&#8230;]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1608709926.928031;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>9081</wp:comment_id>
			<wp:comment_author><![CDATA[루비공부]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[minhos3389@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.5.237]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2021-05-10 11:10:58]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2021-05-10 02:10:58]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[좋은 글 감사합니다. 비교가 잘 되어 있네요]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1620612658.747721;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1620631911.760666;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"hb.lee";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>11295</wp:comment_id>
			<wp:comment_author><![CDATA[리멤버의 온보딩 과정을 소개합니다 | DRAMA&amp;COMPANY]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>https://blog.dramancompany.com/2021/08/%eb%a6%ac%eb%a9%a4%eb%b2%84%ec%9d%98-%ec%98%a8%eb%b3%b4%eb%94%a9-%ea%b3%bc%ec%a0%95%ec%9d%84-%ec%86%8c%ea%b0%9c%ed%95%a9%eb%8b%88%eb%8b%a4/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.7.109]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2021-08-30 11:12:43]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2021-08-30 02:12:43]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] Ruby on Rails에는 어떤 특징이 있는지 궁금하신 분이 계신다면, 이 주제로 기술 블로그에 작성된 글이 있으니, 읽어보시는 것을 추천합니다! [&#8230;]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1630289563.111611;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1630291612.054778;s:5:"event";s:15:"status-approved";s:4:"user";s:3:"tom";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>15532</wp:comment_id>
			<wp:comment_author><![CDATA[deck]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[dlehals2@daum.net]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.28.59]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-09-09 09:25:33]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-09-09 00:25:33]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[글 잘 읽었습니다. 혹시 지금은 다시 스프링으로 돌아간 것인지 아니면 아직 루비를 사용하시는지 궁금합니다 ㅎㅎ]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1725841533.236399;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[[인터뷰] “6개월 전의 코드가 부끄럽고 아쉬웠어요.”]]></title>
		<link>https://blog.dramancompany.com/2020/11/%ec%9d%b8%ed%84%b0%eb%b7%b0-6%ea%b0%9c%ec%9b%94-%ec%a0%84%ec%9d%98-%ec%bd%94%eb%93%9c%ea%b0%80-%eb%b6%80%eb%81%84%eb%9f%bd%ea%b3%a0-%ec%95%84%ec%89%ac%ec%9b%a0%ec%96%b4%ec%9a%94/</link>
		<pubDate>Mon, 30 Nov 2020 13:59:33 +0000</pubDate>
		<dc:creator><![CDATA[tom]]></dc:creator>
		<guid isPermaLink="false">https://blog.dramancompany.com/?p=1783</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:tadv/classic-paragraph -->
<p><span style="font-weight: 400;">‘성장’을 갈망하는 4년차 개발자 인터뷰<br /></span><span style="font-weight: 400;">Server/Web팀 강태화님, 이민구님이 리멤버를 선택한 이유.</span></p>
<p>&nbsp;</p>
<!-- /wp:tadv/classic-paragraph -->

<!-- wp:image {"align":"center","id":1935,"sizeSlug":"large","linkDestination":"media","className":"is-style-default"} -->
<div class="wp-block-image is-style-default">
<figure class="aligncenter size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/02/201113_태화님_민구님_1-min-1.png"><img class="wp-image-1935" src="https://blog.dramancompany.com/wp-content/uploads/2021/02/201113_태화님_민구님_1-min-1-1024x576.png" alt="" /></a>
<figcaption>강태화님 : 4년차 개발자이자 리멤버 서버 개발자. ‘세상을 변화시키는 작은 조직’에 동참하고 싶다는 그는 사진앱을 개발하다, IoT 회사의 펌웨어 개발자를 거쳐 리멤버 서버 개발자로 합류</figcaption>
</figure>
</div>
<!-- /wp:image -->

<!-- wp:image {"align":"center","id":1936,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image">
<figure class="aligncenter size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/02/201113_태화님_민구님_2-min-1.png"><img class="wp-image-1936" src="https://blog.dramancompany.com/wp-content/uploads/2021/02/201113_태화님_민구님_2-min-1-1024x576.png" alt="" /></a>
<figcaption>이민구님 : 4년차 프론트 엔드 개발자. 교양 수업이 지루해서 뒷 자리에 앉아 Linux를 공부했다는(?) 문과 출신 개발자. SaaS형 APM을 개발하는 회사에서 프론트 웹 개발자로 개발 경험을 쌓고 리멤버에 합류</figcaption>
</figure>
</div>
<!-- /wp:image -->

<!-- wp:tadv/classic-paragraph -->
<h3><span style="font-weight: 400;">담당하고 계신 업무와 기술 스택에 대해 소개 부탁 드립니다.</span></h3>
<p><span style="font-weight: 400;">강태화 : 현재 Server/Web팀과 채용공고 크루(Crew*)에 속해있습니다. 리멤버 커리어가 잠재적 구직자의 이직을 도와주는 서비스를 먼저 선보였는데요, 적극적 구직자를 위한 서비스를 지원하기 위해 채용공고 서비스를 만들어가고 있습니다.</span> <span style="font-weight: 400;">Server/Web 팀에는 5명의 서버 개발자와 1명의 DevOps 개발자가 있습니다. Ruby on Rails로 대부분의 API 서버를 구현하고 있으며 인프라는 AWS를 이용합니다.<br /></span><em><span style="font-weight: 400;">(*Crew : 서비스별 미션을 달성하기 위한 조직으로, 각 미션별로 적합한 기획, 개발, 디자인, 사업 등의 다양한 크루원을 모집하여 구성) </span></em></p>
<p><br /><span style="font-weight: 400;">이민구 : 지금은 인재추천 크루(Crew)에서 사내에 계신 헤드헌터분들이 빠르고 효율적으로 후보자를 찾을 수 있는 admin을 개발 중입니다. 프론트 엔드 개발자 5명과 함께 리멤버 커리어 웹서비스와 리멤버 커뮤니티 웹서비스를 만들기도 했고요. 기술 스택은 React를 사용하고 있습니다. SEO 등 back-end가 필요한 경우에는 Next.js를 사용, 그렇지 않은 경우에는 serverless하게 서비스를 만듭니다</span><span style="font-weight: 400;">.</span></p>
<p>&nbsp;</p>
<h3><span style="font-weight: 400;">두 분은 어떤 이유로 리멤버를 선택하셨나요?</span></h3>
<p><span style="font-weight: 400;">강태화 : 이전 회사들에서 아쉬웠던 점을 생각했어요. 첫 회사에서는 개발자가 저 혼자여서 ‘맞는 방향으로 성장하고 있는건가’, ‘다른 사람 대비 잘하고 있나’를 알 수 없었죠. 좋은 동료와 함께 한다면 시행착오를 줄일 수 있을텐데 라며 아쉬웠고요. 다음 회사는 이 부분을 고민해서 선택했지만 top-down으로 ‘돈 벌어와라’라고 하다 보니 정부 지원 사업, SI성 프로젝트를 주로 하게 되었고, 결국엔 협업을 하기 보다는 또 혼자서 개발을 하고 있더라고요. </span><span style="text-decoration: underline;"><strong>개발 팀이 잘 갖춰진 곳, 개발 문화가 잘 갖춰진 곳을 찾았어요.</strong></span></p>
<p><span style="font-weight: 400;">리멤버 인터뷰를 봤는데 테스트 코드가 7천개가 넘는다는 내용이 인상적이었어요. 대부분의 조직에서 테스트를 작성하고 싶어하지만 유지보수 가능하게 작성하는 방법을 모르거나, 일정이 빡빡해서 넘어가곤 하잖아요. </span><span style="text-decoration: underline;"><strong>테스트 커버리지가 90%를 넘어가고, 코드 퀄리티를 중시하는 조직</strong></span><span style="font-weight: 400;">이라는 점이 매력적이었죠. 제가 생각하는 개발 문화가 잘 갖춰진 곳이라고 생각했습니다. 참고로 <span style="text-decoration: underline;"><strong>지금 API 프로젝트들의 테스트 코드 수는 9천개가 넘습니다</strong></span>.</span></p>
<p><a href="https://blog.dramancompany.com/wp-content/uploads/2020/11/Screen-Shot-2020-12-23-at-16.55.08.png"><img class="alignnone wp-image-1942 size-medium" src="https://blog.dramancompany.com/wp-content/uploads/2020/11/Screen-Shot-2020-12-23-at-16.55.08-300x226.png" alt="" width="300" height="226" /></a></p>
<p><span style="font-weight: 400;">회사의 사업 방향에 대해 공감한 부분도 있고요. ‘명함앱으로 알고 있었는데 리멤버 커리어 등 다양한 서비스가 있구나.’ CEO면접에서 재호님께서 앞으로의 서비스/사업 방향에 대해 굉장히 잘 설명해주셨어요. 리멤버가 유틸리티 앱에서 끝나는 게 아니라 <span style="text-decoration: underline;"><strong>‘</strong></span></span><span style="text-decoration: underline;"><strong>커리어의 생애주기를 책임지는 비즈니스 플랫폼으로 나아가려 하구나</strong></span><span style="font-weight: 400;"><span style="text-decoration: underline;"><strong>’</strong></span>, 그리고 ‘이제 막 그 일을 시작해서 재미있는 일들이 많겠다!’</span></p>
<p><span style="font-weight: 400;">이민구 : 두 가지 이유가 있었는데요. 첫 번째는 ‘내가 쓰고 싶은 서비스를 많이 만들어보고 싶다’에 대한 니즈가 컸어요. 리멤버는 명함관리 기능을 넘어서 커리어, 커뮤니티 등 </span><span style="text-decoration: underline;"><strong>직장인들을 위한 서비스가 많아질 것</strong></span><span style="font-weight: 400;">이라고 생각했고, B2C 제품을 경험하며 다수 유저의 피드백을 받고 싶었어요. 두 번째는 ‘개발자 개인으로서가 아니라 개발팀의 팀원으로 개발해보고 싶다’에 대한 갈증이 있었던 것 같아요. 이전에는 회사의 전략상 빠르게 많은 제품을 만들어야 하다보니 효율적으로 업무를 배분해서 각자 개발을 진행하는 방식이었어요. 다른 분이 무슨 일을 하는지 전혀 몰랐죠. 면접에서 개발 문화에 대해 많이 질문 드렸는데 </span><span style="text-decoration: underline;"><strong>코드 리뷰나 페어 프로그래밍 등이 잘 정착</strong></span><span style="font-weight: 400;">되어 있다고 생각해 합류하게 되었습니다. </span></p>
<p>&nbsp;</p>
<h3><span style="font-weight: 400;">면접에서 많은 이야기를 나눈다해도<br /></span><span style="font-weight: 400;">입사해서 다녀보지 않으면 모르는 부분이 많을 수밖에 없죠. <br /></span><span style="font-weight: 400;">입사해보니 ‘입사 전엔 예상하지 못했다’라는 부분이 있으셨나요?</span></h3>
<p><span style="font-weight: 400;">이민구 : 회고가 굉장히 잘 정착되어 있어요. 전 회사에서도 회고가 없었던 건 아니에요. 분기에 한 번 정도 있었죠. </span><span style="font-weight: 400;"><span style="text-decoration: underline;"><strong>리멤버에서는 매주 금요일 회고를 진행하는데 모든 개발자분들이 굉장히 엄격한 마음가짐으로 회고에 임하고 계세요</strong></span>. </span><span style="font-weight: 400;">회고를 반복하다보면 어떤 문제가 지속적으로 발생하는지 알 수 있고, 그 문제를 어떻게 해결할 수 있는지에 대해 논의해볼 수 있어 좋아요.</span> <span style="font-weight: 400;">회고 외에도 많은 양의 코드 리뷰가 이루어져요. 페어 프로그래밍도 자주 진행하는데, 사실 뭐가 도움이 될까 싶었어요. 생산성이 절반이 되는 거 아닌가 싶기도 했고요. 막상 페어 프로그래밍을 진행하니 그동안 내가 잘못 생각해왔구나 싶었죠. 개발 실력을 비약적으로 성장시킬 수 있었던 데에는 개발 문화가 잘 뿌리내려져 있는 점이 큰 것 같아요.</span></p>
<p><span style="font-weight: 400;">강태화 : 스타트업인데 체계가 잘 갖춰져 있어요. 자유로움이 없다는 것이 아니라 자율과 책임을 잘 발휘되도록 바운더리를 잘 잡아주고 있다는 느낌이 들어요. 특히 ‘드라마앤컴퍼니 생활백서’를 보고 많이 놀랐어요. 회사 생활에 대한 거의 모든 내용이 다 정리되어 있거든요. 입사 초반엔 으레 ‘어떻게 여기에 적응해야 하나’에 대한 고민이 많은데 생활백서를 통해 도움을 많이 받았죠.</span></p>
<p><span style="font-weight: 400;">‘Server/Web 팀에 대한 모든 것’이라는 문서도 있는데, 입사 첫날 개발 환경을 어떻게 세팅해야 하는지, 어떤 계정을 신청하는지부터 업무와 관련된 내용이 체계적으로 정리되어 있어요. 첫 날에 뭘해야 하는지 몰라 느끼는 당황스러움을 줄여주고, 일하면서도 참고가 되서 자주 보는 문서에요.</span></p>
<p><span style="font-weight: 400;">이민구 : 맞아요. 이전 회사에서 문서화를 안했던 것은 아닌데, 이렇게 잘 정리되어 있는 문서는 처음 봤던 것 같아요. 처음 입사한 사람이라도 바로 개발을 시작할 수 있겠다라는 느낌이 들 정도죠. 작성하는 과정에서는 고통스러우셨을 것 같은데, 이렇게 정리해두는 게 훨씬 효율적이라고 생각해요. 웹 개발자, 서버 개발자분들이 들어오셨을 때 많은 도움을 요청하지 않아도 적응하실 수 있어요.</span></p>
<p><span style="font-weight: 400;">강태화 : 얘기가 나온 김에.. 모든 내용을 문서화 해놓으니 어떤 부분이 문제가 됐고, 왜 이런 코드를 짜게 된거고, 어떤 기획에서 나왔는지 디버깅할 때도 쉽고, 히스토리를 찾는 데도 도움이 돼요. 코드도 짜고 문서도 쓰는 게 귀찮을 수 있는데 개발 프로세스를 효율적으로 가져간다는 측면에서 훨씬 좋아요.</span></p>
<p>&nbsp;</p>
<h3><span style="font-weight: 400;">태화님은 서버 개발 경험이 없는데 잘 적응해주고 계신 것 같아요.</span></h3>
<p><span style="font-weight: 400;">강태화 : 온보딩 과제가 도움이 많이 된 것 같아요. 채용 과정에서 진행한 과제를 다시 한 번 해보는데 코드 스타일이나 업무 스타일에 대해 잘 알 수 있었어요. 코드 리뷰를 받으니 모르는 부분도 쉽게 물어볼 수 있고 팀의 스타일이나 컨벤션을 더 쉽게 습득할 수 있었던 것 같고요.</span><span style="font-weight: 400;"> </span></p>
<p>&nbsp;</p>
<h3><span style="font-weight: 400;">리멤버는 채용 과정에서 과제가 필수이죠. <br /></span><span style="font-weight: 400;">다른 회사에서 일반적으로 진행하는 알고리즘 테스트, 코딩 테스트가 아닌 ‘48시간 과제’를 진행하는데 이 부분은 어떠셨나요?</span></h3>
<p><span style="font-weight: 400;">강태화 : 과제가 있다고 했을 때 부담스럽긴 했어요. 코딩 테스트는 그냥 가서 하면 되는데, 과제는 제 손을 떠날 때까지 찜찜한 기분이 계속 되잖아요. 막상 과제를 받아보니 ‘겉보기에’ 엄청 어려운 과제는 아니었어요. 면접을 진행하면서 ‘생각보다 심오하구나’ 라고 느꼈죠. 많은 걸 확인할 수 있는 과제라는 생각이 들었고, 역량을 검증하는 데에 도움이 되는 과제였다고 생각합니다.</span></p>
<p><span style="font-weight: 400;">이민구 : 다른 회사의 과제와 비교해봤을 때 과제가 합리적이라고 생각했어요. 생각보다 그렇지 않은 과제들도 많거든요. 자격 요건 이상의 것을 요구하거나, 현실과 맞지 않는 기술을 요구하는 경우도 많고요. 실제로 회사와 잘 맞는 사람인가를 보는 과정이라고 느꼈습니다. 시간도 길지 않았고요.</span></p>
<p>&nbsp;</p>
<h3><span style="font-weight: 400;">면접도 회사마다 스타일이 다른데 리멤버의 면접은 어떠셨나요?</span></h3>
<p><span style="font-weight: 400;">강태화 : 과제를 시현하면서 면접이 시작되는데요. </span><span style="text-decoration: underline;"><strong>평가가 아니라 피드백을 받는 느낌이어서 면접 자체가 </strong></span><span style="font-weight: 400;"><span style="text-decoration: underline;"><strong>나에게 도움이 된다고 생각했어요</strong></span>.</span><span style="font-weight: 400;"> 내가 더 잘 성장할 수 있는 곳인가에 대한 궁금증을 해소할 수 있었고요. 압박 없이 편안하게 면접을 볼 수 있었습니다.</span></p>
<p><span style="font-weight: 400;">이민구 : 면접관이 면접의 난이도를 조절하는 게 쉽지 않다고 생각해요. 그렇다보니 지원자 입장에서 불쾌했던 면접도 있고, 반대로 이 포지션에 대해 잘 알고 면접을 진행하는 걸까하는 생각이 드는 면접도 있었어요. 그런 측면에서 리멤버의 면접은 면접관분들이 내가 속한 직군에 대해 잘 이해하고 질문하신다고 느꼈습니다. 실무에 딱 맞는 기술에 대해 질문하시고, 면접이 나를 평가하려는 자리가 아니라 </span><span style="text-decoration: underline;"><strong>회사는 필요한 인재를 찾고, 지원자도 가고 싶은 회사인지 확인하는 자리 같다는 느낌</strong></span><span style="font-weight: 400;">을 받았어요.</span></p>
<!-- /wp:tadv/classic-paragraph -->

<!-- wp:image {"align":"center","id":1937,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image">
<figure class="aligncenter size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/02/201113_태화님_민구님_4-min-1.png"><img class="wp-image-1937" src="https://blog.dramancompany.com/wp-content/uploads/2021/02/201113_태화님_민구님_4-min-1-1024x684.png" alt="" /></a></figure>
</div>
<!-- /wp:image -->

<!-- wp:tadv/classic-paragraph -->
<h3><span style="font-weight: 400;">두 분이 생각하시는<br /></span><span style="font-weight: 400;">리멤버의 강점은 무엇인가요?</span></h3>
<p><span style="font-weight: 400;">이민구 : 회사의 측면에서 보면, 사내 조직간의 소통이 굉장히 원활해요. 소통이 원활하다보니 자유롭게 의견을 개진하고, 뜻이 맞는 사람들끼리 원하는걸 구현해볼 수 있어요. 팀 측면에서는 굉장히 개발문화가 잘 잡혀있다는 큰 장점이 있고요.</span></p>
<p><span style="font-weight: 400;">강태화 : 민구님의 말씀에 동의해요. 열정을 가진 뛰어난 동료들이 많이 있다보니 커뮤니티 웹 서비스의 경우에도 웹 개발자분들이 먼저 제안하고 진행했어요. 가장 큰 강점 중의 하나라고 생각해요. </span></p>
<p><span style="font-weight: 400;">over-communication을 지향해서 모든 정보가 공유될 수 있도록 노력하죠. 대부분의 조직에서 경영진만 알고 있는 정보가 있는데, 웬만한 정보는 전사에 공유가 잘 되고 있어요. 우리 회사가 어느 방향으로 가고 있으니, 나는 어떻게 기여해야겠구나를 분명히 알 수 있죠.</span></p>
<p><span style="font-weight: 400;">데이터팀(Data Intelligence팀)이 따로 있어서 데이터를 많이 갖고 있을 뿐 아니라 잘 활용하고, 데이터를 기반으로 의사결정을 해요. 스타트업에서는 그냥 추측만으로 결정 내리고 방향을 잡기 쉬운데 데이터로 결정 내리는 것이 인상적이었죠.</span></p>
<p>&nbsp;</p>
<h3><span style="font-weight: 400;">리멤버 개발자로서 좋은 점은 무엇일까요?</span></h3>
<p><span style="font-weight: 400;">이민구 : 기술적인 부분에서 뒤쳐지지 않기 위해서 이전 프로젝트에서 겪었던 문제의 해결 방안을 항상 모색해요. </span><span style="font-weight: 400;"><span style="text-decoration: underline;"><strong>새로 진행하는 프로젝트마다 최신 기술을 수용하기 위해서 항상 노력하고요. 빠르게 변화하는 웹 개발 트렌드에서 뒤쳐지지 않아요</strong></span>.</span></p>
<p><span style="font-weight: 400;">현재 나와있는 major 기술은 거의 다 사용해보고 있어요. Redux를 많이 사용했는데 생각보다 저희 사용 시나리오에 맞지 않다고 판단해서 Context API를 적극적으로 사용해보았고, 그 다음 프로젝트에서는 테스트 코드를 도입해보고 싶어 테스트 코드를 넣고 코드 리뷰 과정에 편입시켰습니다. 그 다음 프로젝트에서는 타입 스크립트와 swr을 적극적으로 도입했어요. 최근에 내부 시스템은 실험적인 기능 도입을 위해 Recoil, Suspese 같이 아직 다소 experimental한 기능들도 부분적으로 사용하고 있습니다.</span></p>
<p><span style="font-weight: 400;">강태화 : 크루로 일하면서 </span><span style="font-weight: 400;"><span style="text-decoration: underline;"><strong>개발자로서 단순히 기능을 구현하는 것이 아니라 제품을 구현하고 있다고 느껴요</strong></span>.</span><span style="font-weight: 400;"> 개발자는 정해진 기획서를 개발만하는 로봇처럼 일하게 되는 경우도 많은데, 기획에 직접 참여하고 자율적으로 일하고 있죠.</span></p>
<p><span style="font-weight: 400;">테스트 코드를 필수적으로 작성하고, 코드 리뷰를 적극적으로 진행해서 퀄리티 있는 코드를 갖춰가고 있고, 회고를 통해 매주 어떤 점은 잘했고, 아쉬운 점은 어떻게 보완할까에 대해 자주 이야기를 나눠요. 더 나은 조직을 만들어나가기 위한 문화가 잘 되어 있다고 느끼죠.</span></p>
<p>&nbsp;</p>
<h3><span style="font-weight: 400;">회고, 회의하다보면 개발은 언제하냐라고 생각하시는 분들도 계시더라고요.<br /></span><span style="font-weight: 400;">이런 의견에 대해서는 어떻게 생각하시나요?</span></h3>
<p><span style="font-weight: 400;">강태화 : 회고와 회의를 어떻게 하는지에 따라 다른 것 같아요. 의미 없는 회의가 계속되면 개발자가 참여하는 의미가 당연히 없겠죠? 리멤버에 합류하고 나서는 기획에 참여하는 것이 오히려 개발 시간을 줄일 수 있다고 생각하고 있어요. 왜 이런 기획이 나왔는지에 대한 배경을 알고 있으면, 기획서에서 놓치고 있는 부분을 파악할 수 있어서 불필요한 수정사항이 줄어 들거든요.</span></p>
<p><span style="font-weight: 400;">이민구 : 솔직히.. 처음에 합류했을 때에는 긴 회고 시간에 대해 회의적이었던 것 같아요. 일하는 것도 바쁜데 이렇게 오랜시간 회고해야 하나라고 생각하기도 했고요. 저희의 회고 방법이 점점 발전하고 있는데요. 처음에는 각자에게 무제한으로 시간을 주며 진행했는데, 사람이 많아지니 미리 설문지를 받기도 하고 개개인별로 시간 제한을 두고 있어요. 모든 일이 시행착오를 거치지 않으면 발전할 수 없다는 걸 알게 되었어요. 회고가 시간 낭비라고 느끼는 조직도 많을텐데, 충분한 시간을 갖고 발전시켜나가면 효과적으로 동료들과 커뮤니케이션 할 수 있는 좋은 시간이라고 생각합니다. 이제는 회고 없으면 안돼요.</span></p>
<p><a href="https://blog.dramancompany.com/wp-content/uploads/2020/11/Screen-Shot-2021-02-24-at-0.59.29.png"><img class="alignnone wp-image-1941 size-medium" src="https://blog.dramancompany.com/wp-content/uploads/2020/11/Screen-Shot-2021-02-24-at-0.59.29-237x300.png" alt="" width="237" height="300" /></a></p>
<p>&nbsp;</p>
<h3><span style="font-weight: 400;">아쉬운 점도 물론 있으시겠죠?</span></h3>
<p><span style="font-weight: 400;">강태화 : 하려는 서비스가 많은데 리소스가 부족해요. </span><span style="font-weight: 400;"><span style="text-decoration: underline;"><strong>더 많은 분들이 오셔서 같이 제품을 만들었으면 좋겠어요</strong></span>.</span></p>
<p>&nbsp;</p>
<h3><span style="font-weight: 400;">어떤 분이 저희랑 잘 맞을까요?</span></h3>
<p><span style="font-weight: 400;">강태화 : 자율적이고 주도적으로 일하기를 즐거워하시는 분이요. ‘내가 해야 할 일을 누가 알려주겠지’라는 분 보다는 ‘내가 이걸 해야겠다, 만들어봐야겠다’며 팀 플레이어로 함께 만들어가는 것을 좋아하는 분이면 잘 맞을 것 같아요.</span></p>
<p><span style="font-weight: 400;">이민구 : 스스로 목표를 설정하고 이루기 위해 달리는 분이라면 누구나 환영입니다. 업무가 내려오길 기다리는 분이라면 만족하지 못하실 것 같아요. 의견 개진을 적극적으로 하고, 스스로 개척하는 역량을 요구하는 곳이라고 생각해요.</span></p>
<p><span style="font-weight: 400;">저희 팀분들을 보면 다 각기 다른 강점과 관심사가 있어요. UI디자인에 관심 있는 분, 웹 기술에 관심 있는 분 등등 다양한데, </span><span style="font-weight: 400;"><span style="text-decoration: underline;"><strong>그 분만의 강점이 있는 분이 오셨으면 좋겠어요. 그 분의 강점이 저희 조직에 녹아서 시너지가 날 수 있는 분이요</strong></span>.</span><span style="font-weight: 400;"> </span></p>
<p>&nbsp;</p>
<h3><span style="font-weight: 400;">지원을 망설이고 있는 미래의 동료분께 한 말씀 드린다면?</span></h3>
<p><span style="font-weight: 400;">이민구 : 개인적으로 회사를 고려할 때에 가장 중요한 키워드가 ‘성장’이라고 생각해요. 내가 여기서 성장할 수 있을까에 대한 질문을 끊임없이 하거든요. 어떤 작가가 그러더라고요. 본인이 쓴 글을 다시 되돌아 봤을 때 부끄럽지 않다면 성장하지 않은 거라고.. 최근에 6개월 전에 쓴 코드를 다시 봤는데, 부끄럽고 아쉬움이 많이 남았어요. 왜 이런 선택을 했을까? 아마 그 당시에는 최선의 선택이었고, 그 때보다 제가 성장했다는 반증이기도 하겠죠. </span><span style="font-weight: 400;"><span style="text-decoration: underline;"><strong>성장에 대해 고민하고 계신 분이라면 꼭 오셨으면 합니다</strong></span>.</span><span style="font-weight: 400;"> 웹 개발 측면으로 보면, 시장에서 보이는 React 관련 최신 기술을 다 써보고 있다고 자신있게 말씀 드리고 싶어요.</span></p>
<p><span style="font-weight: 400;">강태화 : 리멤버에 맞는 분이라면 ‘성장’을 중요시하고, 커리어에 대해 항상 고민하는 분이라고 생각해요. 성장에 대한 갈망이 있는 분이라면 혼자가 아닌 좋은 동료와 어떻게 하면 더 잘할 수 있을지에 대해 함께 고민할 수 있어요. 그런 분들이 지원해주시면 좋을 것 같습니다.</span></p>
<p>&nbsp;</p>
<p><em>인터뷰 진행: 김담형 (Server/Web 팀)</em><br /><em>인터뷰 정리: 인수진, 정혜경 (People 팀)</em><br /><em>사진 촬영: 전진형 (Marketing&amp;Communication 팀)</em></p>
<p>&nbsp;</p>
<h4><a href="https://bit.ly/2Vr1vdG">👉 더 많은 리멤버 동료 보러 가기</a></h4>
<h4><a href="https://bit.ly/37pv05f">👉 리멤버 채용 페이지 보러 가기</a></h4>
<!-- /wp:tadv/classic-paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1783</wp:post_id>
		<wp:post_date><![CDATA[2020-11-30 22:59:33]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-11-30 13:59:33]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-02-24 01:10:07]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-02-23 16:10:07]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%ec%9d%b8%ed%84%b0%eb%b7%b0-6%ea%b0%9c%ec%9b%94-%ec%a0%84%ec%9d%98-%ec%bd%94%eb%93%9c%ea%b0%80-%eb%b6%80%eb%81%84%eb%9f%bd%ea%b3%a0-%ec%95%84%ec%89%ac%ec%9b%a0%ec%96%b4%ec%9a%94]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="rails"><![CDATA[Rails]]></category>
		<category domain="post_tag" nicename="react"><![CDATA[React]]></category>
		<category domain="post_tag" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
		<category domain="category" nicename="develop"><![CDATA[Tech]]></category>
		<category domain="post_tag" nicename="%ea%b0%9c%eb%b0%9c%eb%ac%b8%ed%99%94"><![CDATA[개발문화]]></category>
		<category domain="post_tag" nicename="%ea%b0%9c%eb%b0%9c%ec%9e%90"><![CDATA[개발자]]></category>
		<category domain="post_tag" nicename="%ec%84%9c%eb%b2%84"><![CDATA[서버]]></category>
		<category domain="post_tag" nicename="%ec%9b%b9"><![CDATA[웹]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729523912;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:966;}i:1;a:1:{s:2:"id";i:1850;}i:2;a:1:{s:2:"id";i:2174;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_single_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:20:{s:11:"source_name";s:0:"";s:10:"source_url";s:0:"";s:8:"via_name";s:0:"";s:7:"via_url";s:0:"";s:17:"override_template";s:1:"0";s:8:"override";a:1:{i:0;a:30:{s:18:"single_blog_custom";s:0:"";s:8:"parallax";s:1:"0";s:10:"fullscreen";s:1:"0";s:7:"sidebar";s:0:"";s:14:"second_sidebar";s:0:"";s:14:"sticky_sidebar";s:1:"0";s:14:"share_position";s:0:"";s:17:"share_float_style";s:0:"";s:18:"show_share_counter";s:1:"0";s:17:"show_view_counter";s:1:"0";s:13:"show_featured";s:1:"0";s:14:"show_post_meta";s:1:"0";s:16:"show_post_author";s:1:"0";s:22:"show_post_author_image";s:1:"0";s:14:"show_post_date";s:1:"0";s:16:"post_date_format";s:0:"";s:23:"post_date_format_custom";s:0:"";s:18:"show_post_category";s:1:"0";s:22:"show_post_reading_time";s:1:"0";s:21:"post_reading_time_wpm";s:0:"";s:16:"show_zoom_button";s:1:"0";s:20:"zoom_button_out_step";s:1:"1";s:19:"zoom_button_in_step";s:1:"1";s:13:"show_post_tag";s:1:"0";s:19:"show_prev_next_post";s:1:"0";s:15:"show_popup_post";s:1:"0";s:17:"number_popup_post";s:1:"1";s:15:"show_author_box";s:1:"0";s:17:"show_post_related";s:1:"0";s:24:"show_inline_post_related";s:1:"0";}}s:19:"override_image_size";s:1:"0";s:14:"image_override";a:1:{i:0;a:2:{s:26:"single_post_thumbnail_size";s:0:"";s:24:"single_post_gallery_size";s:0:"";}}s:13:"trending_post";s:1:"0";s:22:"trending_post_position";s:0:"";s:19:"trending_post_label";s:0:"";s:14:"sponsored_post";s:1:"0";s:20:"sponsored_post_label";s:0:"";s:19:"sponsored_post_name";s:0:"";s:18:"sponsored_post_url";s:0:"";s:26:"sponsored_post_logo_enable";s:1:"0";s:19:"sponsored_post_logo";s:0:"";s:19:"sponsored_post_desc";s:0:"";s:8:"subtitle";s:0:"";s:6:"format";s:8:"standard";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle_flag]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[4]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_format_gallery_images]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:2:"id";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1931]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
		<wp:meta_value><![CDATA[‘성장’을 갈망하는 4년차 개발자 인터뷰Server/Web팀 강태화님, 이민구님이 리멤버를 선택한 이유.]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_format_video_embed]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[리멤버 서버/웹 팀은 어떻게 일을 하는가?]]></title>
		<link>https://blog.dramancompany.com/2020/12/%eb%a6%ac%eb%a9%a4%eb%b2%84-%ec%84%9c%eb%b2%84-%ec%9b%b9-%ed%8c%80%ec%9d%80-%ec%96%b4%eb%96%bb%ea%b2%8c-%ec%9d%bc%ec%9d%84-%ed%95%98%eb%8a%94%ea%b0%80/</link>
		<pubDate>Mon, 21 Dec 2020 01:00:41 +0000</pubDate>
		<dc:creator><![CDATA[tom]]></dc:creator>
		<guid isPermaLink="false">https://blog.dramancompany.com/?p=1850</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:jetpack/markdown {"source":"## 들어가며\n\n안녕하세요 리멤버를 서비스하고 있는 드라마앤컴퍼니의 개발실 리더 김담형입니다.\n\n다른 회사의 개발팀은 어떻게 일을 하고 있을지 궁금하신 적 없으신가요? 친구나 모임을 통해서 건너 듣는 얘기도 한계가 있고 회사 홍보 글도 보면 추상적인 경우가 많아서 감이 잘 안 오곤 합니다. 그래서 이번 글에서는 ***코드부터 Slack, Confluence*** 등 실제 ***스크린 샷***을 최대한 담아 서버/웹 팀이 어떻게 일을 하는지 ***개발자의 입장***에서 있는 그대로 보여드리려고 합니다.\n\n이 글에서는 다음 내용을 다루고 있습니다.\n\n- **테크 스택**은 이렇습니다 - AWS, Ruby on Rails, React, UI Components\n- **코드 퀄리티**를 중시합니다 - 코드 리뷰와 테스트 코드\n- **오버 커뮤니케이션**을 지향합니다 - Slack, 업무내용 공유와 회고\n- **문서화**를 중요하게 생각합니다 - Jira와 Confluence\n\n\n## 리멤버"} -->
<div class="wp-block-jetpack-markdown"><h2>들어가며</h2>
<p>안녕하세요 리멤버를 서비스하고 있는 드라마앤컴퍼니의 개발실 리더 김담형입니다.</p>
<p>다른 회사의 개발팀은 어떻게 일을 하고 있을지 궁금하신 적 없으신가요? 친구나 모임을 통해서 건너 듣는 얘기도 한계가 있고 회사 홍보 글도 보면 추상적인 경우가 많아서 감이 잘 안 오곤 합니다. 그래서 이번 글에서는 <em><strong>코드부터 Slack, Confluence</strong></em> 등 실제 <em><strong>스크린 샷</strong></em>을 최대한 담아 서버/웹 팀이 어떻게 일을 하는지 <em><strong>개발자의 입장</strong></em>에서 있는 그대로 보여드리려고 합니다.</p>
<p>이 글에서는 다음 내용을 다루고 있습니다.</p>
<ul>
<li><strong>테크 스택</strong>은 이렇습니다 - AWS, Ruby on Rails, React, UI Components</li>
<li><strong>코드 퀄리티</strong>를 중시합니다 - 코드 리뷰와 테스트 코드</li>
<li><strong>오버 커뮤니케이션</strong>을 지향합니다 - Slack, 업무내용 공유와 회고</li>
<li><strong>문서화</strong>를 중요하게 생각합니다 - Jira와 Confluence</li>
</ul>
<h2>리멤버</h2>
</div>
<!-- /wp:jetpack/markdown -->

<!-- wp:image {"align":"center","id":1951,"width":1024,"height":683,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large is-resized"><a href="https://blog.dramancompany.com/wp-content/uploads/2020/12/Untitled.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2020/12/Untitled-1024x683.png" alt="" class="wp-image-1951" width="1024" height="683"/></a></figure></div>
<!-- /wp:image -->

<!-- wp:jetpack/markdown {"source":"리멤버는 국민 명함앱으로 시작하여 지금은 350만 명에 가까운 직장인 회원과 2.5억 장에 가까운 명함을 보유하고 있습니다. 350만이라는 회원 수가 많지 않아 보일 수 있지만, 전체 회원의 70%가 가장 구매력이 강한 30~40대 직장인이라는 굉장히 유니크한 사용자들이 애용하는 서비스입니다.\n\n이런 사용자들이 모여있다 보니 채용, 네트워킹, 광고 등의 영역에서 강점을 갖고 사업을 진행할 수 있습니다. 실제로  리멤버 커리어, 리멤버 커뮤니티, 리멤버 나우, 광고 등 다양한 서비스들이 각자 시장에서 존재감을 보여주면서 커나가고 있습니다.\n\n순조롭게 명함 관리 앱 리멤버에서 비즈니스 플랫폼의 리멤버로 진화를 하고 있으며 내년에는 각 서비스를 더 고도화해 나가면서 새로운 시도들도 계속 시도해볼 계획을 갖고 있습니다.\n\n## Team\n\n리멤버를 서비스하는 드라마앤컴퍼니에는 2020년 말 현재, 총 80명이 넘는 구성원이 있으며 이 중 30명이 약간 안 되는 인원이 엔지니어링과 관련된 업무를 하고 있습니다. 팀들의 목록은 다음과 같습니다.\n\n- Server/Web 팀: Front-end web 개발자와 Back-end server 개발자들이 함께 있는 팀입니다. 7명의 server 개발자와 4명의 front-end web 개발자들로 구성되어있습니다. 몇 분들은 상황에 따라 full-stack으로 개발하시는 경우도 있습니다.\n- App 팀: Android 개발자와 iOS 개발자들이 함께 있는 팀입니다. 4명의 Android 개발자와 3명의 iOS 개발자들로 구성되어있습니다.\n- BDC: 리멤버는 2억 장이 넘는 명함과 직장인들의 네트워크 데이터를 가진 데이터 중심 회사입니다. Big Data Center에서는 이 데이터를 수집, 정제, 가공하여 부가가치를 창출해 낼 수 있도록 하는 일을 맡고 있습니다. 데이터를 관리하고 그 시스템을 만드는 데이터 팀 개발자 2명, 머신러닝 등 데이터로 여러 실험을 하는 리서치 엔지니어 4명과 그 외 데이터를 관리, 기획 등 여러 운영 업무를 맡고 계신 비 개발자분들도 함께 계십니다.\n- 그 외 리멤버 최종 서비스 품질을 관리하는 QA 팀, 보안을 책임지는 Privacy \u0026 Information Security 팀, Data Engineer 분이 계신 Data Intelligence 팀 등이 있습니다.\n\n## Tech Stack\n\n### AWS\n\n리멤버 서비스의 99%는 AWS 위에 올라가 있습니다. 서버의 경우 EC2와 Auto Scaling Group을 많이 이용하기도 하며 Fargate에 올라가있는 서비스들도 일부 있습니다. 최근에는 서비스들을 점차 container로 옮겨가고 있는 중입니다. 웹의 경우 서버가 필요하지 않은 경우에는 CloudFront를 이용하여 serverless하게 운영하고 있습니다.\n\n적은 인원으로 최대한 효율적으로 서비스를 운영하려다 보니 AWS의 서비스들을 최대한 많이 이용하고 있는 편입니다. AWS를 특이하게 사용하는 몇 가지 예시를 들어보면 다음과 같습니다.\n\n- 매일 아침 리멤버 나우 수신자들을 위하여 200만대가 넘는 device에 대해 SNS Topic을 이용하여 한 번에 push를 발송합니다. Elastic Load Balancer에서 이런 traffic spike를 받아줄 수 있도록 AWS에 ELB prewarm을 요청하여 트래픽에 대응하고 있습니다.\n- 테스트 코드를 직렬로 돌리기에는 시간이 너무 오래 걸려서 하나의 Jenkins master가 CodeBuild를 이용하여 필요할 때 마다 여러 개의 slave를 만들어서 테스트를 분산 처리하고 있습니다.\n\n### Ruby on Rails\n\n현재 리멤버 API의 99%는 Ruby on Rails로 이루어져 있습니다. RoR에 대해서는 블로그 글을 이미 두 개나 적은 적이 있기 때문에 현재 저희의 생각을 단순히 요약하면 다음과 같습니다.\n\n- 리멤버에 입사한 거의 모든 개발자들은 여기서 RoR를 처음 접해보았다.\n- 최근 진행한 내부 개발자 만족도 조사 결과 대부분 RoR에 만족하고 있다.\n- 하지만 더 많은 동료를 모셔오기 위하여 기존 RoR 외 새로운 기술 스택을 메인 기술 스택으로 추가하는 것에 매우 열려있다.\n\n추가로 다음 두 글을 읽어보시면 도움이 될 것 같습니다.\n\n[리멤버 지원자분들이 묻는 질문 Top 4](https://blog.dramancompany.com/2019/03/%eb%a6%ac%eb%a9%a4%eb%b2%84-%ec%a7%80%ec%9b%90%ec%9e%90%eb%b6%84%eb%93%a4%ec%9d%b4-%eb%ac%bb%eb%8a%94-%ec%a7%88%eb%ac%b8-top-4/)\n\n[Java\u0026Spring 개발자가 Ruby on Rails 를 해보고 마주친 생각들](https://blog.dramancompany.com/2020/11/java-spring-ruby-on-rails/)\n\n### React\n\n현재 리멤버 웹 사이트는 대부분 React로 이루어져 있습니다. 급변하는 웹의 기술을 계속 파악하며 Redux, Context API부터 Recoil, suspense까지 아직 실험적인 기능들까지 적용해보고 있습니다. 그 외에도 Jest를 이용한 테스트, SWR을 이용한 data fetching 등 여러 기술을 시도해보고 그 장단점을 개발자들과 함께 공유하고 있습니다. TypeScript도 올해 초 도입하기 시작한 이후에 점점 적용 영역을 넓혀가고 있으며 리멤버 커뮤니티 웹 버전은 100% TypeScript로 이루어져있습니다.\n\n### UI Components"} -->
<div class="wp-block-jetpack-markdown"><p>리멤버는 국민 명함앱으로 시작하여 지금은 350만 명에 가까운 직장인 회원과 2.5억 장에 가까운 명함을 보유하고 있습니다. 350만이라는 회원 수가 많지 않아 보일 수 있지만, 전체 회원의 70%가 가장 구매력이 강한 30~40대 직장인이라는 굉장히 유니크한 사용자들이 애용하는 서비스입니다.</p>
<p>이런 사용자들이 모여있다 보니 채용, 네트워킹, 광고 등의 영역에서 강점을 갖고 사업을 진행할 수 있습니다. 실제로  리멤버 커리어, 리멤버 커뮤니티, 리멤버 나우, 광고 등 다양한 서비스들이 각자 시장에서 존재감을 보여주면서 커나가고 있습니다.</p>
<p>순조롭게 명함 관리 앱 리멤버에서 비즈니스 플랫폼의 리멤버로 진화를 하고 있으며 내년에는 각 서비스를 더 고도화해 나가면서 새로운 시도들도 계속 시도해볼 계획을 갖고 있습니다.</p>
<h2>Team</h2>
<p>리멤버를 서비스하는 드라마앤컴퍼니에는 2020년 말 현재, 총 80명이 넘는 구성원이 있으며 이 중 30명이 약간 안 되는 인원이 엔지니어링과 관련된 업무를 하고 있습니다. 팀들의 목록은 다음과 같습니다.</p>
<ul>
<li>Server/Web 팀: Front-end web 개발자와 Back-end server 개발자들이 함께 있는 팀입니다. 7명의 server 개발자와 4명의 front-end web 개발자들로 구성되어있습니다. 몇 분들은 상황에 따라 full-stack으로 개발하시는 경우도 있습니다.</li>
<li>App 팀: Android 개발자와 iOS 개발자들이 함께 있는 팀입니다. 4명의 Android 개발자와 3명의 iOS 개발자들로 구성되어있습니다.</li>
<li>BDC: 리멤버는 2억 장이 넘는 명함과 직장인들의 네트워크 데이터를 가진 데이터 중심 회사입니다. Big Data Center에서는 이 데이터를 수집, 정제, 가공하여 부가가치를 창출해 낼 수 있도록 하는 일을 맡고 있습니다. 데이터를 관리하고 그 시스템을 만드는 데이터 팀 개발자 2명, 머신러닝 등 데이터로 여러 실험을 하는 리서치 엔지니어 4명과 그 외 데이터를 관리, 기획 등 여러 운영 업무를 맡고 계신 비 개발자분들도 함께 계십니다.</li>
<li>그 외 리멤버 최종 서비스 품질을 관리하는 QA 팀, 보안을 책임지는 Privacy &amp; Information Security 팀, Data Engineer 분이 계신 Data Intelligence 팀 등이 있습니다.</li>
</ul>
<h2>Tech Stack</h2>
<h3>AWS</h3>
<p>리멤버 서비스의 99%는 AWS 위에 올라가 있습니다. 서버의 경우 EC2와 Auto Scaling Group을 많이 이용하기도 하며 Fargate에 올라가있는 서비스들도 일부 있습니다. 최근에는 서비스들을 점차 container로 옮겨가고 있는 중입니다. 웹의 경우 서버가 필요하지 않은 경우에는 CloudFront를 이용하여 serverless하게 운영하고 있습니다.</p>
<p>적은 인원으로 최대한 효율적으로 서비스를 운영하려다 보니 AWS의 서비스들을 최대한 많이 이용하고 있는 편입니다. AWS를 특이하게 사용하는 몇 가지 예시를 들어보면 다음과 같습니다.</p>
<ul>
<li>매일 아침 리멤버 나우 수신자들을 위하여 200만대가 넘는 device에 대해 SNS Topic을 이용하여 한 번에 push를 발송합니다. Elastic Load Balancer에서 이런 traffic spike를 받아줄 수 있도록 AWS에 ELB prewarm을 요청하여 트래픽에 대응하고 있습니다.</li>
<li>테스트 코드를 직렬로 돌리기에는 시간이 너무 오래 걸려서 하나의 Jenkins master가 CodeBuild를 이용하여 필요할 때 마다 여러 개의 slave를 만들어서 테스트를 분산 처리하고 있습니다.</li>
</ul>
<h3>Ruby on Rails</h3>
<p>현재 리멤버 API의 99%는 Ruby on Rails로 이루어져 있습니다. RoR에 대해서는 블로그 글을 이미 두 개나 적은 적이 있기 때문에 현재 저희의 생각을 단순히 요약하면 다음과 같습니다.</p>
<ul>
<li>리멤버에 입사한 거의 모든 개발자들은 여기서 RoR를 처음 접해보았다.</li>
<li>최근 진행한 내부 개발자 만족도 조사 결과 대부분 RoR에 만족하고 있다.</li>
<li>하지만 더 많은 동료를 모셔오기 위하여 기존 RoR 외 새로운 기술 스택을 메인 기술 스택으로 추가하는 것에 매우 열려있다.</li>
</ul>
<p>추가로 다음 두 글을 읽어보시면 도움이 될 것 같습니다.</p>
<p><a href="https://blog.dramancompany.com/2019/03/%eb%a6%ac%eb%a9%a4%eb%b2%84-%ec%a7%80%ec%9b%90%ec%9e%90%eb%b6%84%eb%93%a4%ec%9d%b4-%eb%ac%bb%eb%8a%94-%ec%a7%88%eb%ac%b8-top-4/">리멤버 지원자분들이 묻는 질문 Top 4</a></p>
<p><a href="https://blog.dramancompany.com/2020/11/java-spring-ruby-on-rails/">Java&amp;Spring 개발자가 Ruby on Rails 를 해보고 마주친 생각들</a></p>
<h3>React</h3>
<p>현재 리멤버 웹 사이트는 대부분 React로 이루어져 있습니다. 급변하는 웹의 기술을 계속 파악하며 Redux, Context API부터 Recoil, suspense까지 아직 실험적인 기능들까지 적용해보고 있습니다. 그 외에도 Jest를 이용한 테스트, SWR을 이용한 data fetching 등 여러 기술을 시도해보고 그 장단점을 개발자들과 함께 공유하고 있습니다. TypeScript도 올해 초 도입하기 시작한 이후에 점점 적용 영역을 넓혀가고 있으며 리멤버 커뮤니티 웹 버전은 100% TypeScript로 이루어져있습니다.</p>
<h3>UI Components</h3>
</div>
<!-- /wp:jetpack/markdown -->

<!-- wp:image {"align":"center","id":1953,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2020/12/Untitled-1.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2020/12/Untitled-1-1024x479.png" alt="" class="wp-image-1953"/></a><figcaption>remember-ui의 docz 화면 중 일부</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:group -->
<div class="wp-block-group"><div class="wp-block-group__inner-container"><!-- wp:jetpack/markdown {"source":"개발의 생산성 향상과 컴포넌트의 일관성을 위하여 웹 프로젝트들은 [remember-ui](https://dramancompany.github.io/remember-ui/)라는 컴포넌트 라이브러리를 관리하고 docz를 이용하여 문서화하고 있습니다. 디자이너 분들과 논의하여 컴포넌트들을 만들어가며 외부 프로젝트나 내부 어드민 프로젝트들에 모두 같은 컴포넌트를 이용하여 개발하며 적용 범위를 넓혀가고 있습니다.\n\n## Code Quality\n\n당연한 얘기지만 모든 개발자분들은 코드를 굉장히 소중하게 생각하고, 그 퀄리티를 끊임없이 올리기 위하여 여러 노력을 하고 있습니다.\n\n### Code Review\n\nPR에 approve가 n개 이상 있어야만 merge가 가능하도록 강제화한 경우 바빠서 성의 없는 코드를 하는 일이 종종 발생합니다. 이렇게 성의 없는 코드 리뷰를 몇 번 경험하게 되면 순식간에 LGTM(Looks Good To Me)만 쌓여버리는 경우를 자주 본 것 같습니다.\n\n코드 리뷰에 대해 저희가 생각하는 철학은 다음과 같습니다.\n\n- 저희는 코드 리뷰가 스타일을 지적하는 같은 얕은 리뷰만 하는 것이 아니라고 생각합니다. 코드 스타일은 대부분 linter나 내부 가이드 문서로 처리되어야 합니다.\n- 얕은 리뷰를 진행한 뒤 approve를 하는 것은 오히려 리뷰를 안 한 것보다 훨씬 더 위험하다고 생각합니다. Approved가 없으면 꼭 봐야 할 Pull Request지만 approved가 하나라도 있으면 다른 PR들에 비해 우선순위가 낮아지기 때문입니다.\n- 코드 리뷰까지 완료되어야 개발이 모두 완료되었다고 생각합니다.\n\n저희가 생각하는 올바른 코드 리뷰 방식은 다음과 같습니다.\n\n- Reviewer는 reviewee의 코드를 보기 전에 PR에 해당하는 기획, 디자인 문서 등을 확인하고 본인만의 답안을 만들어 봅니다. (어떤 API들을 만들어야 하고, 테이블이 어떻게 수정되고, 이런저런 edge case들이 있겠구나.. 등)\n- 나만의 답안이 정리되면 Reviewee의 코드와 비교해봅니다. 이는 서로의 답지를 비교하는 과정으로 서로의 접근 방식을 비교하며 reviewer도 많은 것을 배울 수 있고 서로 생각하지 못한 edge case들을 잡아내는 데 도움이 됩니다.\n\n이런 과정은 아시겠지만, reviewer에게 매우 부담되는 작업입니다. 따라서 누구보다 작업 내용을 잘 알고 있는 reviewee는  reviewer의 부담을 최대한 덜어주기 위하여 \u0022친절한 코드 리뷰\u0022를 작성해야 합니다.\n\n그리고 모든 PR에 대해서 리뷰를 더 효과적으로 진행하기 위하여 매주 목요일 아침에 30분 동안 PR 리뷰 미팅을 진행합니다. 이 시간에는 아직 리뷰가 안된 PR들에 대해 reviewer를 지정합니다. 또한 PR 코멘트로 결론이 안 나고 진행되던 비동기적 논의를 동기적으로 진행하여 리뷰를 빨리 끝내기도 합니다.\n\n위에 적힌 내용처럼 최대한 친절한 코드리뷰를 위하여 저희는 다음과 같은 Pull Request template을 사용합니다."} -->
<div class="wp-block-jetpack-markdown"><p>개발의 생산성 향상과 컴포넌트의 일관성을 위하여 웹 프로젝트들은 <a href="https://dramancompany.github.io/remember-ui/">remember-ui</a>라는 컴포넌트 라이브러리를 관리하고 docz를 이용하여 문서화하고 있습니다. 디자이너 분들과 논의하여 컴포넌트들을 만들어가며 외부 프로젝트나 내부 어드민 프로젝트들에 모두 같은 컴포넌트를 이용하여 개발하며 적용 범위를 넓혀가고 있습니다.</p>
<h2>Code Quality</h2>
<p>당연한 얘기지만 모든 개발자분들은 코드를 굉장히 소중하게 생각하고, 그 퀄리티를 끊임없이 올리기 위하여 여러 노력을 하고 있습니다.</p>
<h3>Code Review</h3>
<p>PR에 approve가 n개 이상 있어야만 merge가 가능하도록 강제화한 경우 바빠서 성의 없는 코드를 하는 일이 종종 발생합니다. 이렇게 성의 없는 코드 리뷰를 몇 번 경험하게 되면 순식간에 LGTM(Looks Good To Me)만 쌓여버리는 경우를 자주 본 것 같습니다.</p>
<p>코드 리뷰에 대해 저희가 생각하는 철학은 다음과 같습니다.</p>
<ul>
<li>저희는 코드 리뷰가 스타일을 지적하는 같은 얕은 리뷰만 하는 것이 아니라고 생각합니다. 코드 스타일은 대부분 linter나 내부 가이드 문서로 처리되어야 합니다.</li>
<li>얕은 리뷰를 진행한 뒤 approve를 하는 것은 오히려 리뷰를 안 한 것보다 훨씬 더 위험하다고 생각합니다. Approved가 없으면 꼭 봐야 할 Pull Request지만 approved가 하나라도 있으면 다른 PR들에 비해 우선순위가 낮아지기 때문입니다.</li>
<li>코드 리뷰까지 완료되어야 개발이 모두 완료되었다고 생각합니다.</li>
</ul>
<p>저희가 생각하는 올바른 코드 리뷰 방식은 다음과 같습니다.</p>
<ul>
<li>Reviewer는 reviewee의 코드를 보기 전에 PR에 해당하는 기획, 디자인 문서 등을 확인하고 본인만의 답안을 만들어 봅니다. (어떤 API들을 만들어야 하고, 테이블이 어떻게 수정되고, 이런저런 edge case들이 있겠구나.. 등)</li>
<li>나만의 답안이 정리되면 Reviewee의 코드와 비교해봅니다. 이는 서로의 답지를 비교하는 과정으로 서로의 접근 방식을 비교하며 reviewer도 많은 것을 배울 수 있고 서로 생각하지 못한 edge case들을 잡아내는 데 도움이 됩니다.</li>
</ul>
<p>이런 과정은 아시겠지만, reviewer에게 매우 부담되는 작업입니다. 따라서 누구보다 작업 내용을 잘 알고 있는 reviewee는  reviewer의 부담을 최대한 덜어주기 위하여 &quot;친절한 코드 리뷰&quot;를 작성해야 합니다.</p>
<p>그리고 모든 PR에 대해서 리뷰를 더 효과적으로 진행하기 위하여 매주 목요일 아침에 30분 동안 PR 리뷰 미팅을 진행합니다. 이 시간에는 아직 리뷰가 안된 PR들에 대해 reviewer를 지정합니다. 또한 PR 코멘트로 결론이 안 나고 진행되던 비동기적 논의를 동기적으로 진행하여 리뷰를 빨리 끝내기도 합니다.</p>
<p>위에 적힌 내용처럼 최대한 친절한 코드리뷰를 위하여 저희는 다음과 같은 Pull Request template을 사용합니다.</p>
</div>
<!-- /wp:jetpack/markdown --></div></div>
<!-- /wp:group -->

<!-- wp:image {"align":"center","id":1954,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2020/12/Untitled-2.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2020/12/Untitled-2.png" alt="" class="wp-image-1954"/></a><figcaption>Server 프로젝트에서 사용하는 PR template</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:image {"align":"center","id":1964,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/02/Untitled-3.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/02/Untitled-3-1024x851.png" alt="" class="wp-image-1964"/></a><figcaption>Web 프로젝트에서 사용하는 PR template</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:jetpack/markdown {"source":"각 항목에 대한 설명은 다음과 같습니다.\n\n- 작업 내용: 이번에 작업한 주요 내용을 적습니다. 변경된 파일이 50개여도 사실 가장 중요한 로직은 몇 개의 파일에 모여 있습니다. 어떤 Service를 생성했다, 어떤 로직이 변경되었다 등 이 PR의 핵심 내용을 적습니다. 이것만으로도 reviewer가 전체 파일을 다 파악해야 하는 수고가 줄어듭니다.\n- 스크린샷: 추가되는 기능이나 고친 버그 등을 잘 보여주는 스크린샷을 첨부합니다. API의 경우 스펙 문서가 있지만 클라이언트는 화면이 상황을 이해하는 데 훨씬 도움이 되는 경우가 많습니다.\n- 링크: 기획 문서, 디자인 문서, API 스펙 문서, JIRA 이슈 등 관련 있는 모든 링크는 다 추가해둡니다.\n- 기타 사항: 고민했던 지점이나 변수명, 기획자와의 의사 결정 내용 등 이 코드가 만들어지게 된 배경 있다면 모조리 적습니다. 작업자가 어떤 생각으로 이 코드를 작성했는지 물어보고 답변받는 시간을 많이 줄일 수 있습니다.\n- Merge 전 필요 작업: 스키마 변경이나 의존성이 있는 다른 서비스가 선배포 되어야 하는 등 중요한 작업을 잊지 않기 위해 적어둡니다.\n- 희망 리뷰 완료 일: 급한 이슈인지, 천천히 봐도 되는 이슈인지 희망 일정을 적어두어 서로 리뷰 일정을 조율하는 데 도움을 줍니다."} -->
<div class="wp-block-jetpack-markdown"><p>각 항목에 대한 설명은 다음과 같습니다.</p>
<ul>
<li>작업 내용: 이번에 작업한 주요 내용을 적습니다. 변경된 파일이 50개여도 사실 가장 중요한 로직은 몇 개의 파일에 모여 있습니다. 어떤 Service를 생성했다, 어떤 로직이 변경되었다 등 이 PR의 핵심 내용을 적습니다. 이것만으로도 reviewer가 전체 파일을 다 파악해야 하는 수고가 줄어듭니다.</li>
<li>스크린샷: 추가되는 기능이나 고친 버그 등을 잘 보여주는 스크린샷을 첨부합니다. API의 경우 스펙 문서가 있지만 클라이언트는 화면이 상황을 이해하는 데 훨씬 도움이 되는 경우가 많습니다.</li>
<li>링크: 기획 문서, 디자인 문서, API 스펙 문서, JIRA 이슈 등 관련 있는 모든 링크는 다 추가해둡니다.</li>
<li>기타 사항: 고민했던 지점이나 변수명, 기획자와의 의사 결정 내용 등 이 코드가 만들어지게 된 배경 있다면 모조리 적습니다. 작업자가 어떤 생각으로 이 코드를 작성했는지 물어보고 답변받는 시간을 많이 줄일 수 있습니다.</li>
<li>Merge 전 필요 작업: 스키마 변경이나 의존성이 있는 다른 서비스가 선배포 되어야 하는 등 중요한 작업을 잊지 않기 위해 적어둡니다.</li>
<li>희망 리뷰 완료 일: 급한 이슈인지, 천천히 봐도 되는 이슈인지 희망 일정을 적어두어 서로 리뷰 일정을 조율하는 데 도움을 줍니다.</li>
</ul>
</div>
<!-- /wp:jetpack/markdown -->

<!-- wp:jetpack/markdown {"source":"### Test Code\n\n서버 개발자들이 관리하는 주요 프로젝트들의 테스트 커버리지는 약 90%, 총 테스트 수는 약 9,000개가 넘습니다. 공통된 로직을 최대한 추출하고 Rspec 프레임웍과 FactoryBot, Faker 라이브러리를 적극적으로 활용하여 최대한 짜기 쉽고 유지보수가 가능한 코드를 작성할 수 있는 환경을 구축해두었습니다."} -->
<div class="wp-block-jetpack-markdown"><h3>Test Code</h3>
<p>서버 개발자들이 관리하는 주요 프로젝트들의 테스트 커버리지는 약 90%, 총 테스트 수는 약 9,000개가 넘습니다. 공통된 로직을 최대한 추출하고 Rspec 프레임웍과 FactoryBot, Faker 라이브러리를 적극적으로 활용하여 최대한 짜기 쉽고 유지보수가 가능한 코드를 작성할 수 있는 환경을 구축해두었습니다.</p>
</div>
<!-- /wp:jetpack/markdown -->

<!-- wp:image {"align":"center","id":1972,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/02/Untitled-4.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/02/Untitled-4-1024x720.png" alt="" class="wp-image-1972"/></a><figcaption>API의 실제 controller 코드 중 일부</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:image {"align":"center","id":1950,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2020/12/Screen-Shot-2020-12-23-at-16.55.08.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2020/12/Screen-Shot-2020-12-23-at-16.55.08-1024x771.png" alt="" class="wp-image-1950"/></a><figcaption>상단 controller 중 한 path에 대한 테스트</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:jetpack/markdown {"source":"웹에서는 일부 프로젝트에 대해 테스트 코드를 적용하고 있습니다. Jest와 React Testing Library를 같이 사용하여 로직과 컴포넌트를 같이 가진 컨테이너 정도의 규모로 통합 테스트를 진행하고 있습니다. 최대한 단위 테스트당 필요로 하는 API mock의 개수를 최소한으로 가져가고 있고, 필요한 데이터는 FactoryBot의 JS 버전이라 할 수 있는 Rosie와 Faker 라이브러리를 조합하여 사용하고 있습니다. 하지만 아직 완벽한 테스트 코드 작성 방식을 찾지 못했기 때문에 더 나은 방식을 고민하고 있습니다."} -->
<div class="wp-block-jetpack-markdown"><p>웹에서는 일부 프로젝트에 대해 테스트 코드를 적용하고 있습니다. Jest와 React Testing Library를 같이 사용하여 로직과 컴포넌트를 같이 가진 컨테이너 정도의 규모로 통합 테스트를 진행하고 있습니다. 최대한 단위 테스트당 필요로 하는 API mock의 개수를 최소한으로 가져가고 있고, 필요한 데이터는 FactoryBot의 JS 버전이라 할 수 있는 Rosie와 Faker 라이브러리를 조합하여 사용하고 있습니다. 하지만 아직 완벽한 테스트 코드 작성 방식을 찾지 못했기 때문에 더 나은 방식을 고민하고 있습니다.</p>
</div>
<!-- /wp:jetpack/markdown -->

<!-- wp:image {"align":"center","id":1974,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/02/Untitled-6.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/02/Untitled-6.png" alt="" class="wp-image-1974"/></a></figure></div>
<!-- /wp:image -->

<!-- wp:image {"align":"center","id":2266,"width":808,"height":228,"sizeSlug":"large","linkDestination":"custom"} -->
<div class="wp-block-image"><figure class="aligncenter size-large is-resized"><a href="https://bit.ly/2ZNcjIQ"><img src="https://blog.dramancompany.com/wp-content/uploads/2020/12/Frame-16-1024x289.png" alt="" class="wp-image-2266" width="808" height="228"/></a></figure></div>
<!-- /wp:image -->

<!-- wp:jetpack/markdown {"source":"## Over-communication\n\n리멤버를 서비스하는 드라마앤컴퍼니에서 전사적으로 항상 강조하는 소통 문화는 over-communication입니다.\n\n\u0022모든 내용은 투명하게 공개하자\u0022 그리고 \u0022DM으로 할 얘기는 팀 채널에서 하고 팀 채널에서 할 얘기는 전사 채널에 공유하자\u0022라는 기조로 커뮤니케이션을 진행하고 있습니다. 이런 over-communication을 통해서 회사의 정보를 동기화하고 개개인이 더 주체적이고 효율적으로 일할 수 있는 데 많은 도움을 받고 있습니다.\n\nCommunication tool로는 Slack, Confluence, Jira를 적극 이용하고 있습니다.\n\n### Slack\n\n#### #public-서버_웹\n\n`public-` prefix가 붙은 채널들은 특정 팀에 요청할 때 이용하는 채널들입니다.\n\n보통 다른 팀에서 요청할 때 보면 가장 부탁을 잘 들어줄 것 같은 사람한테 DM을 많이 하게 됩니다. 이러면 그 사람은 엄청 바쁜데 주위 사람들은 인지를 못하거나 여러 명이 같은 요청을 받아서 똑같은 일을 하는 상황이 비일비재하게 발생합니다. 이런 문제도 해결하고 over-communication을 위하여 사내 대부분의 팀들은 public 채널을 운영하고 있습니다. \n\n해당 채널에는 CS 처리, 운영 처리, 개발 질문 등 정말 다양한 내용이 올라옵니다. 내가 궁금하지 않더라도 다른 사람이 얘기한 메시지를 보고 \u0022오 이런 것도 가능하구나!\u0022 하는 경우도 있고 질문하시는 분들도 더 빨리 답변을 받을 수 있습니다. 가끔은 해당 팀이 아닌 다른 팀원 분이 대답을 해주시는 경우도 있습니다 😂"} -->
<div class="wp-block-jetpack-markdown"><h2>Over-communication</h2>
<p>리멤버를 서비스하는 드라마앤컴퍼니에서 전사적으로 항상 강조하는 소통 문화는 over-communication입니다.</p>
<p>&quot;모든 내용은 투명하게 공개하자&quot; 그리고 &quot;DM으로 할 얘기는 팀 채널에서 하고 팀 채널에서 할 얘기는 전사 채널에 공유하자&quot;라는 기조로 커뮤니케이션을 진행하고 있습니다. 이런 over-communication을 통해서 회사의 정보를 동기화하고 개개인이 더 주체적이고 효율적으로 일할 수 있는 데 많은 도움을 받고 있습니다.</p>
<p>Communication tool로는 Slack, Confluence, Jira를 적극 이용하고 있습니다.</p>
<h3>Slack</h3>
<h4>#public-서버_웹</h4>
<p><code>public-</code> prefix가 붙은 채널들은 특정 팀에 요청할 때 이용하는 채널들입니다.</p>
<p>보통 다른 팀에서 요청할 때 보면 가장 부탁을 잘 들어줄 것 같은 사람한테 DM을 많이 하게 됩니다. 이러면 그 사람은 엄청 바쁜데 주위 사람들은 인지를 못하거나 여러 명이 같은 요청을 받아서 똑같은 일을 하는 상황이 비일비재하게 발생합니다. 이런 문제도 해결하고 over-communication을 위하여 사내 대부분의 팀들은 public 채널을 운영하고 있습니다.</p>
<p>해당 채널에는 CS 처리, 운영 처리, 개발 질문 등 정말 다양한 내용이 올라옵니다. 내가 궁금하지 않더라도 다른 사람이 얘기한 메시지를 보고 &quot;오 이런 것도 가능하구나!&quot; 하는 경우도 있고 질문하시는 분들도 더 빨리 답변을 받을 수 있습니다. 가끔은 해당 팀이 아닌 다른 팀원 분이 대답을 해주시는 경우도 있습니다 😂</p>
</div>
<!-- /wp:jetpack/markdown -->

<!-- wp:image {"align":"center","id":1975,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/02/Untitled-7-1.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/02/Untitled-7-1-1024x803.png" alt="" class="wp-image-1975"/></a><figcaption>#public-서버_웹 채널</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:jetpack/markdown {"source":"#### #internal-서버_웹\n\n`internal-` prefix가 붙은 채널들은 팀 내부용 소통 채널들입니다.\n\n서버/웹 팀의 경우 채널 내에서 잡담, 업무 얘기, IT 소식, 개발 의견 나누기 등 다양한 얘기를 많이 하는 편입니다."} -->
<div class="wp-block-jetpack-markdown"><h4>#internal-서버_웹</h4>
<p><code>internal-</code> prefix가 붙은 채널들은 팀 내부용 소통 채널들입니다.</p>
<p>서버/웹 팀의 경우 채널 내에서 잡담, 업무 얘기, IT 소식, 개발 의견 나누기 등 다양한 얘기를 많이 하는 편입니다.</p>
</div>
<!-- /wp:jetpack/markdown -->

<!-- wp:image {"align":"center","id":1976,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/02/Untitled-8.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/02/Untitled-8-1024x802.png" alt="" class="wp-image-1976"/></a><figcaption>#internal-서버_웹 채널</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:jetpack/markdown {"source":"나와 직접적으로 상관이 없는 일이더라도 많은 분들이 언제나 적극적으로 thread에서 여러 의견을 주시곤 합니다."} -->
<div class="wp-block-jetpack-markdown"><p>나와 직접적으로 상관이 없는 일이더라도 많은 분들이 언제나 적극적으로 thread에서 여러 의견을 주시곤 합니다.</p>
</div>
<!-- /wp:jetpack/markdown -->

<!-- wp:image {"align":"center","id":1977,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/02/Untitled-9.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/02/Untitled-9.png" alt="" class="wp-image-1977"/></a></figure></div>
<!-- /wp:image -->

<!-- wp:image {"align":"center","id":1978,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/02/Untitled-10.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/02/Untitled-10-895x1024.png" alt="" class="wp-image-1978"/></a></figure></div>
<!-- /wp:image -->

<!-- wp:jetpack/markdown {"source":"#### #noti-pull-request, #noti-hook-api, #noti-hook-web\n\n`noti-` prefix가 붙은 채널들은 시스템 알림 등이 들어오는 채널입니다.\n\nJenkins build 결과, GitHub PR comment, PR request 등 의 내용들이 noti- 채널들로 들어옵니다."} -->
<div class="wp-block-jetpack-markdown"><h4>#noti-pull-request, #noti-hook-api, #noti-hook-web</h4>
<p><code>noti-</code> prefix가 붙은 채널들은 시스템 알림 등이 들어오는 채널입니다.</p>
<p>Jenkins build 결과, GitHub PR comment, PR request 등 의 내용들이 noti- 채널들로 들어옵니다.</p>
</div>
<!-- /wp:jetpack/markdown -->

<!-- wp:image {"align":"center","id":1979,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/02/Untitled-11.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/02/Untitled-11.png" alt="" class="wp-image-1979"/></a><figcaption>#noti-pull-request 채널</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:image {"align":"center","id":1980,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/02/Untitled-12.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/02/Untitled-12.png" alt="" class="wp-image-1980"/></a><figcaption>#noti-hook-api 채널</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:image {"align":"center","id":1981,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/02/Untitled-13.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/02/Untitled-13-1024x591.png" alt="" class="wp-image-1981"/></a><figcaption>#noti-hook-web 채널</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:jetpack/markdown {"source":"### 업무 내용 공유\n\n저희는 confluence에 매주 페이지를 만들어서 매일 모든 팀원이 작업한 내용을 적고 있습니다. 이는 개인의 업무 내용을 객관적으로 기록하기 위한 목적인데요, 분명히 정신없는 한 주를 보냈는데 금요일 누가 와서 \u0022이번 주 뭐하셨어요?\u0022라고 물어봤을 때 꿀 먹은 벙어리가 되신 적 많지 않으신가요? 내가 어떤 일을 하느라 바빴던 건지, 어떤 문제가 있지는 않은지 파악하기 위하여 이 문서를 작성합니다. 연말에 올해 했던 일들을 뒤돌아보는데도 매우 유용합니다.\n\n적는 칸은 총 네 가지로 나누어져 있습니다.\n\n- 계획된 업무: 대부분의 업무 내용은 여기에 포함되어야 합니다. 다만 계획된 업무에 여러 업무가 오랜 시간 반복되어 보인다면, 일을 하나씩 끝내는 게 아니라 너무 많은 일을 동시에 벌여 리드 타임이 길어지고 있는 문제일 수 있습니다.\n- 계획에 없던 업무: 여기에 속한 내용이 많으면 안 됩니다. 계획된 일정과 무관하게 갑자기 들어오는 업무가 많거나 장애 등 다른 문제가 있다는 뜻입니다.\n- CS 업무: 여기에 같은 내용이 많이 추가된다면 어드민에 기능을 추가해야 한다는 뜻일 수 있습니다.\n- 공유사항: 휴가 등 다른 분들이 알면 좋을 내용을 적습니다."} -->
<div class="wp-block-jetpack-markdown"><h3>업무 내용 공유</h3>
<p>저희는 confluence에 매주 페이지를 만들어서 매일 모든 팀원이 작업한 내용을 적고 있습니다. 이는 개인의 업무 내용을 객관적으로 기록하기 위한 목적인데요, 분명히 정신없는 한 주를 보냈는데 금요일 누가 와서 &quot;이번 주 뭐하셨어요?&quot;라고 물어봤을 때 꿀 먹은 벙어리가 되신 적 많지 않으신가요? 내가 어떤 일을 하느라 바빴던 건지, 어떤 문제가 있지는 않은지 파악하기 위하여 이 문서를 작성합니다. 연말에 올해 했던 일들을 뒤돌아보는데도 매우 유용합니다.</p>
<p>적는 칸은 총 네 가지로 나누어져 있습니다.</p>
<ul>
<li>계획된 업무: 대부분의 업무 내용은 여기에 포함되어야 합니다. 다만 계획된 업무에 여러 업무가 오랜 시간 반복되어 보인다면, 일을 하나씩 끝내는 게 아니라 너무 많은 일을 동시에 벌여 리드 타임이 길어지고 있는 문제일 수 있습니다.</li>
<li>계획에 없던 업무: 여기에 속한 내용이 많으면 안 됩니다. 계획된 일정과 무관하게 갑자기 들어오는 업무가 많거나 장애 등 다른 문제가 있다는 뜻입니다.</li>
<li>CS 업무: 여기에 같은 내용이 많이 추가된다면 어드민에 기능을 추가해야 한다는 뜻일 수 있습니다.</li>
<li>공유사항: 휴가 등 다른 분들이 알면 좋을 내용을 적습니다.</li>
</ul>
</div>
<!-- /wp:jetpack/markdown -->

<!-- wp:image {"align":"center","id":1982,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/02/Untitled-14.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/02/Untitled-14-1024x620.png" alt="" class="wp-image-1982"/></a></figure></div>
<!-- /wp:image -->

<!-- wp:jetpack/markdown {"source":"추가로 이 문서에서 JIRA label과 issue filter를 이용하여 이번 주에 진행될 작업, 백로그, 이번 주에 배포될 내용을 확인할 수 있습니다."} -->
<div class="wp-block-jetpack-markdown"><p>추가로 이 문서에서 JIRA label과 issue filter를 이용하여 이번 주에 진행될 작업, 백로그, 이번 주에 배포될 내용을 확인할 수 있습니다.</p>
</div>
<!-- /wp:jetpack/markdown -->

<!-- wp:image {"align":"center","id":1984,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/02/Untitled-19.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/02/Untitled-19-1024x588.png" alt="" class="wp-image-1984"/></a></figure></div>
<!-- /wp:image -->

<!-- wp:jetpack/markdown {"source":"### 회고\n\n과거를 돌아보고 다음에는 어떻게 하면 더 잘 할 수 있을지에 도움이 되는 회고 문화는 개발자 뿐만 아니라 회사 전체에 매우 깊게 뿌리 잡혀있습니다. 짧으면 매주, 길면 큰 프로젝트가 끝날 때마다 회고를 진행하고 있습니다.\n\n서버/웹 팀은 매주 금요일마다 회고를 진행합니다. 회고 전에는 다음과 같은 서베이에 답변을 하게 됩니다.\n\n- 이번 주 좋았던 점: 여기서 나온 내용을 기반으로 어떻게 하면 더 즐겁게 일에 집중할 수 있을지 알아내고자 합니다.\n- 이번 주 아쉬웠던 점: 어떤 문제가 있거나 해당 팀원이 본인과 맞지 않은 일을 하는 것일 수 있습니다. 어떻게 하면 이런 일이 덜 일어나게 할지 알아내고자 합니다.\n- 기타 얘기해보고 싶은 주제: 모두 모여있을 때 얘기해보고 싶은 주제를 적습니다."} -->
<div class="wp-block-jetpack-markdown"><h3>회고</h3>
<p>과거를 돌아보고 다음에는 어떻게 하면 더 잘 할 수 있을지에 도움이 되는 회고 문화는 개발자 뿐만 아니라 회사 전체에 매우 깊게 뿌리 잡혀있습니다. 짧으면 매주, 길면 큰 프로젝트가 끝날 때마다 회고를 진행하고 있습니다.</p>
<p>서버/웹 팀은 매주 금요일마다 회고를 진행합니다. 회고 전에는 다음과 같은 서베이에 답변을 하게 됩니다.</p>
<ul>
<li>이번 주 좋았던 점: 여기서 나온 내용을 기반으로 어떻게 하면 더 즐겁게 일에 집중할 수 있을지 알아내고자 합니다.</li>
<li>이번 주 아쉬웠던 점: 어떤 문제가 있거나 해당 팀원이 본인과 맞지 않은 일을 하는 것일 수 있습니다. 어떻게 하면 이런 일이 덜 일어나게 할지 알아내고자 합니다.</li>
<li>기타 얘기해보고 싶은 주제: 모두 모여있을 때 얘기해보고 싶은 주제를 적습니다.</li>
</ul>
</div>
<!-- /wp:jetpack/markdown -->

<!-- wp:image {"align":"center","id":1985,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/02/Untitled-15.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/02/Untitled-15.png" alt="" class="wp-image-1985"/></a><figcaption>매주 진행되는 회고 전에 제출하는 서베이 폼</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:jetpack/markdown {"source":"위 서베이에 적힌 내용을 기반으로 약 1시간 정도 모여서 본인의 얘기를 하고, 상대방의 얘기에 대한 본인의 생각을 얘기하거나 함께 얘기해보고 싶은 주제에 대해서 논의합니다.\n\n### 1 on 1\n\n1 on 1의 경우 매달 최소 30분씩 진행합니다. 1 on 1을 통해 팀원과 리더가 서로를 더 잘 이해하면서 생각의 격차를 줄일 수 있고 신뢰도 쌓을 수 있게 됩니다. 또한 평소에 쉽게 얘기하지 못했던 이야기나 피드백들을 주고받을 수 있는 시간이 됩니다. 1 on 1도 마찬가지로 미팅 시간 전에 다음과 같은 서베이를 받고 해당 내용을 기반으로 대화를 나눕니다."} -->
<div class="wp-block-jetpack-markdown"><p>위 서베이에 적힌 내용을 기반으로 약 1시간 정도 모여서 본인의 얘기를 하고, 상대방의 얘기에 대한 본인의 생각을 얘기하거나 함께 얘기해보고 싶은 주제에 대해서 논의합니다.</p>
<h3>1 on 1</h3>
<p>1 on 1의 경우 매달 최소 30분씩 진행합니다. 1 on 1을 통해 팀원과 리더가 서로를 더 잘 이해하면서 생각의 격차를 줄일 수 있고 신뢰도 쌓을 수 있게 됩니다. 또한 평소에 쉽게 얘기하지 못했던 이야기나 피드백들을 주고받을 수 있는 시간이 됩니다. 1 on 1도 마찬가지로 미팅 시간 전에 다음과 같은 서베이를 받고 해당 내용을 기반으로 대화를 나눕니다.</p>
</div>
<!-- /wp:jetpack/markdown -->

<!-- wp:image {"align":"center","id":1986,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/02/Screen-Shot-2021-02-27-at-18.54.53.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/02/Screen-Shot-2021-02-27-at-18.54.53-640x1024.png" alt="" class="wp-image-1986"/></a><figcaption>1 on 1 미팅 전에 제출하는 서베이 폼</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:jetpack/markdown {"source":"## 문서화\n\n문서화 작업을 하는 데는 크게 세 가지의 목적이 있습니다.\n\n- 미래에 누군가(나를 포함) 이 이슈를 돌아봤을 때 어떤 일이 있었는지 알 수 있도록 합니다.\n- 타인과의 커뮤니케이션을 더 명확하고 원활하게 할 수 있도록 합니다.\n- 작업하는 사람이 작업 이전에 생각을 정리하고 빠트리는 부분이 없도록 도와줍니다.\n\n모두 문서화를 잘 해주고 계시지만 그렇다고 형식을 맞추기 위해 작업하는 비효율적인 문서 작업을 하지는 않습니다. 간단하게라도 남들이 이해하기 쉽게, 핵심 내용만 잘 적어두면 됩니다.\n\n### Jira\n\n제품 개발팀의 모든 일은 Jira 이슈로 관리합니다. 타 팀에서 요청을 주실 때도 Jira 이슈를 생성하여 담당자를 할당합니다.\n\n이렇게 생성된 Jira 이슈의 번호는 커밋 메시지, Confluence 제목, 코드 주석 등 모든 곳에 적히게 됩니다.\n\n운영 업무 등으로 잠깐 만들어서 실행한 스크립트들도 모두 Jira 코멘트에 적어두고 있습니다.\n\n또한 Jira의 코멘트를 통해 기획자, 디자이너, 다른 개발자분들과 소통하면서 대화 이력을 남겨두고 있습니다.\n\n### Confluence\n\n좀 불편할 때도 있지만 Jira와 너무 연동이 잘되는 confluence를 함께 이용하고 있습니다. \n\n설계 문서나 Jira에 적기에는 너무 양이 많거나 복잡한 업무 내용은 confluence를 이용합니다."} -->
<div class="wp-block-jetpack-markdown"><h2>문서화</h2>
<p>문서화 작업을 하는 데는 크게 세 가지의 목적이 있습니다.</p>
<ul>
<li>미래에 누군가(나를 포함) 이 이슈를 돌아봤을 때 어떤 일이 있었는지 알 수 있도록 합니다.</li>
<li>타인과의 커뮤니케이션을 더 명확하고 원활하게 할 수 있도록 합니다.</li>
<li>작업하는 사람이 작업 이전에 생각을 정리하고 빠트리는 부분이 없도록 도와줍니다.</li>
</ul>
<p>모두 문서화를 잘 해주고 계시지만 그렇다고 형식을 맞추기 위해 작업하는 비효율적인 문서 작업을 하지는 않습니다. 간단하게라도 남들이 이해하기 쉽게, 핵심 내용만 잘 적어두면 됩니다.</p>
<h3>Jira</h3>
<p>제품 개발팀의 모든 일은 Jira 이슈로 관리합니다. 타 팀에서 요청을 주실 때도 Jira 이슈를 생성하여 담당자를 할당합니다.</p>
<p>이렇게 생성된 Jira 이슈의 번호는 커밋 메시지, Confluence 제목, 코드 주석 등 모든 곳에 적히게 됩니다.</p>
<p>운영 업무 등으로 잠깐 만들어서 실행한 스크립트들도 모두 Jira 코멘트에 적어두고 있습니다.</p>
<p>또한 Jira의 코멘트를 통해 기획자, 디자이너, 다른 개발자분들과 소통하면서 대화 이력을 남겨두고 있습니다.</p>
<h3>Confluence</h3>
<p>좀 불편할 때도 있지만 Jira와 너무 연동이 잘되는 confluence를 함께 이용하고 있습니다.</p>
<p>설계 문서나 Jira에 적기에는 너무 양이 많거나 복잡한 업무 내용은 confluence를 이용합니다.</p>
</div>
<!-- /wp:jetpack/markdown -->

<!-- wp:image {"id":1987,"sizeSlug":"large","linkDestination":"media"} -->
<figure class="wp-block-image size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/02/Untitled-17.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/02/Untitled-17-1024x990.png" alt="" class="wp-image-1987"/></a><figcaption>문서 예시</figcaption></figure>
<!-- /wp:image -->

<!-- wp:jetpack/markdown {"source":"## 동료\n\n리멤버의 강점이라고 얘기하면 언제나 자신 있게 \u0022동료\u0022가 가장 처음으로 떠오르게 됩니다. 서버/웹 팀 1 on 1에서 \u0022회사를 만족하면서 다닌다면 어떤 이유로?\u0022라는 질문에 매달 가장 많은 답변은 \u0022훌륭한 동료와 일할 수 있어서\u0022입니다. 전사 서베이에도 늘 빠지지 않은 문항이기도 합니다. 모든 직군에서 동료 한 분 한 분을 정말 신중하게 모시다 보니 단기간에 많은 분을 모시지는 못하지만 이렇게 합류하신 분들은 정말 훌륭한 분들입니다.\n\n열심히 무언갈 시도하거나 노력할 때 옆에서 누가 \u0022귀찮게 뭘 그런걸 해 그냥 하던 대로 하자\u0022라는 얘기를 해서 힘 빠지는 경험을 해보신 적 한 번씩은 있을 텐데요, 그만큼 동료가 정말 중요하다고 생각합니다.\n\n동료분들 모두 어떻게 하면 리멤버가 더 잘 될 수 있을까 계속 고민하시고 먼저 주체적으로 여러 아이디어를 제안해주시거나 크고 작은 시도들을 하시는 모습을 자주 볼 수 있습니다. 서버/웹 팀 동료분들도 내일 할 것 없이 적극 의견을 제시해주시고\n\n[https://dramancompany.com/team](https://dramancompany.com/team) 에서 저희 전체 동료에 대한 설명과 몇몇 분의 인터뷰를 확인하실 수 있습니다.\n\n## 업무 구조\n\n리멤버에서는 **기능 조직**(서버, 웹, AOS, iOS, 기획, 디자인, QA 등)과 목적 조직(광고, 리멤버 커리어, 리멤버 커뮤니티 등)이 함께 있는 매트릭스 조직 형태로 일하게 됩니다. 목적 조직은 Crew와 Base camp로 나누어집니다.\n\n### Crew"} -->
<div class="wp-block-jetpack-markdown"><h2>동료</h2>
<p>리멤버의 강점이라고 얘기하면 언제나 자신 있게 &quot;동료&quot;가 가장 처음으로 떠오르게 됩니다. 서버/웹 팀 1 on 1에서 &quot;회사를 만족하면서 다닌다면 어떤 이유로?&quot;라는 질문에 매달 가장 많은 답변은 &quot;훌륭한 동료와 일할 수 있어서&quot;입니다. 전사 서베이에도 늘 빠지지 않은 문항이기도 합니다. 모든 직군에서 동료 한 분 한 분을 정말 신중하게 모시다 보니 단기간에 많은 분을 모시지는 못하지만 이렇게 합류하신 분들은 정말 훌륭한 분들입니다.</p>
<p>열심히 무언갈 시도하거나 노력할 때 옆에서 누가 &quot;귀찮게 뭘 그런걸 해 그냥 하던 대로 하자&quot;라는 얘기를 해서 힘 빠지는 경험을 해보신 적 한 번씩은 있을 텐데요, 그만큼 동료가 정말 중요하다고 생각합니다.</p>
<p>동료분들 모두 어떻게 하면 리멤버가 더 잘 될 수 있을까 계속 고민하시고 먼저 주체적으로 여러 아이디어를 제안해주시거나 크고 작은 시도들을 하시는 모습을 자주 볼 수 있습니다. 서버/웹 팀 동료분들도 내일 할 것 없이 적극 의견을 제시해주시고</p>
<p><a href="https://dramancompany.com/team">https://dramancompany.com/team</a> 에서 저희 전체 동료에 대한 설명과 몇몇 분의 인터뷰를 확인하실 수 있습니다.</p>
<h2>업무 구조</h2>
<p>리멤버에서는 <strong>기능 조직</strong>(서버, 웹, AOS, iOS, 기획, 디자인, QA 등)과 목적 조직(광고, 리멤버 커리어, 리멤버 커뮤니티 등)이 함께 있는 매트릭스 조직 형태로 일하게 됩니다. 목적 조직은 Crew와 Base camp로 나누어집니다.</p>
<h3>Crew</h3>
</div>
<!-- /wp:jetpack/markdown -->

<!-- wp:image {"id":1988,"sizeSlug":"large","linkDestination":"media"} -->
<figure class="wp-block-image size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/02/Untitled-18.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/02/Untitled-18-1024x195.png" alt="" class="wp-image-1988"/></a><figcaption>Wikipedia에서 찾아본 crew의 뜻</figcaption></figure>
<!-- /wp:image -->

<!-- wp:jetpack/markdown {"source":"저희는 회사와 조직을 \u0022배\u0022로 자주 비유를 하는데, 그러다 보니 자연스럽게 특정 미션을 해결하기 위한 목적 조직을 Crew라고 칭하고 있습니다. Crew는 광고, 커리어, 컨텐츠 처럼 특정 도메인이나 서비스를 맡게 됩니다. 각 crew에는 Product Owner와 파트별로 기능 조직원들이 함께 일합니다. 인원이 4명도 안 되는 작은 크루부터 15명이 넘어가는 큰 crew도 있습니다.\n\n각 crew는 맡은 미션에 맞게 phase마다 OKR을 세우고 그 미션과 목표를 완수시키기 위해서 모든 집중을 다합니다.\n\n### Base camp\n\nBase camp는 Crew들이 미션 완수에 집중할 수 있도록 도와주며 다음과 같은 일들을 합니다.\n\n1. Crew에 부족한 기능 조직 파트의 업무 지원\n2. Crew들이 공통으로 사용하는 것들 개선 (A/B 테스팅, 로그 시스템, 인프라, 가이드 문서 등)\n3. 새로운 crew가 조직되기 전에 아이템에 대한 가능성 테스트\n\nCrew가 종료되어 귀항하면 자동으로 base camp의 소속으로 있다가 다시 새로운 Crew가 결성되어 출항을 하게 되는 경우 필요한 사람들끼리 티밍이 되어 모험을 떠나게 됩니다.\n\n## 채용\n\n이 글의 결론입니다. 제가 지금 설명들인 업무 방식을 함께 개선해나가면서 리멤버의 본게임인 비즈니스 플랫폼을 만들 분들을 모시고 있습니다. 현재 서버/웹 팀에서는 서버 개발자, 플랫폼 서버 개발자, 웹 개발자를 채용 중에 있습니다. 자세한 job description과 지원 방법은 [https://dramancompany.com/joinus](https://dramancompany.com/joinus에서) 에서 확인하실 수 있습니다.\n\n이 글을 읽어보고 관심이 생겼지만, 더 궁금하거나 자세히 알아보고 싶은 부분이 있으시다면 제 이메일인 tom.kim@dramancompany.com  로 언제든지 편하게 연락해주셔도 됩니다. 캐쥬얼한 티 미팅도 자주 진행하고 있으니 부담 갖지 마시고 연락 주시면 감사하겠습니다 😁"} -->
<div class="wp-block-jetpack-markdown"><p>저희는 회사와 조직을 &quot;배&quot;로 자주 비유를 하는데, 그러다 보니 자연스럽게 특정 미션을 해결하기 위한 목적 조직을 Crew라고 칭하고 있습니다. Crew는 광고, 커리어, 컨텐츠 처럼 특정 도메인이나 서비스를 맡게 됩니다. 각 crew에는 Product Owner와 파트별로 기능 조직원들이 함께 일합니다. 인원이 4명도 안 되는 작은 크루부터 15명이 넘어가는 큰 crew도 있습니다.</p>
<p>각 crew는 맡은 미션에 맞게 phase마다 OKR을 세우고 그 미션과 목표를 완수시키기 위해서 모든 집중을 다합니다.</p>
<h3>Base camp</h3>
<p>Base camp는 Crew들이 미션 완수에 집중할 수 있도록 도와주며 다음과 같은 일들을 합니다.</p>
<ol>
<li>Crew에 부족한 기능 조직 파트의 업무 지원</li>
<li>Crew들이 공통으로 사용하는 것들 개선 (A/B 테스팅, 로그 시스템, 인프라, 가이드 문서 등)</li>
<li>새로운 crew가 조직되기 전에 아이템에 대한 가능성 테스트</li>
</ol>
<p>Crew가 종료되어 귀항하면 자동으로 base camp의 소속으로 있다가 다시 새로운 Crew가 결성되어 출항을 하게 되는 경우 필요한 사람들끼리 티밍이 되어 모험을 떠나게 됩니다.</p>
<h2>채용</h2>
<p>이 글의 결론입니다. 제가 지금 설명들인 업무 방식을 함께 개선해나가면서 리멤버의 본게임인 비즈니스 플랫폼을 만들 분들을 모시고 있습니다. 현재 서버/웹 팀에서는 서버 개발자, 플랫폼 서버 개발자, 웹 개발자를 채용 중에 있습니다. 자세한 job description과 지원 방법은 <a href="https://dramancompany.com/joinus%EC%97%90%EC%84%9C">https://dramancompany.com/joinus</a> 에서 확인하실 수 있습니다.</p>
<p>이 글을 읽어보고 관심이 생겼지만, 더 궁금하거나 자세히 알아보고 싶은 부분이 있으시다면 제 이메일인 tom.kim@dramancompany.com  로 언제든지 편하게 연락해주셔도 됩니다. 캐쥬얼한 티 미팅도 자주 진행하고 있으니 부담 갖지 마시고 연락 주시면 감사하겠습니다 😁</p>
</div>
<!-- /wp:jetpack/markdown -->

<!-- wp:image {"align":"center","id":2266,"width":808,"height":228,"sizeSlug":"large","linkDestination":"custom"} -->
<div class="wp-block-image"><figure class="aligncenter size-large is-resized"><a href="https://bit.ly/2ZNcjIQ"><img src="https://blog.dramancompany.com/wp-content/uploads/2020/12/Frame-16-1024x289.png" alt="" class="wp-image-2266" width="808" height="228"/></a></figure></div>
<!-- /wp:image -->]]></content:encoded>
		<excerpt:encoded><![CDATA[이번 글에서는 리멤버 서비스들의 웹 사이트와 API, 인프라를 담당하고 있는 서버/웹 팀이 일하는 모든 방식을 다루고 있습니다. 추상적인 글을 넘어서 실제 스크릿샷 등을 포함하여 저희가 어떻게 일을 하고 있는지 낱낱이 보여 드리고자 합니다.]]></excerpt:encoded>
		<wp:post_id>1850</wp:post_id>
		<wp:post_date><![CDATA[2020-12-21 10:00:41]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-12-21 01:00:41]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-11-04 15:12:51]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-11-04 06:12:51]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%eb%a6%ac%eb%a9%a4%eb%b2%84-%ec%84%9c%eb%b2%84-%ec%9b%b9-%ed%8c%80%ec%9d%80-%ec%96%b4%eb%96%bb%ea%b2%8c-%ec%9d%bc%ec%9d%84-%ed%95%98%eb%8a%94%ea%b0%80]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="aws"><![CDATA[AWS]]></category>
		<category domain="post_tag" nicename="pr"><![CDATA[PR]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[Rails]]></category>
		<category domain="post_tag" nicename="react"><![CDATA[React]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="category" nicename="develop"><![CDATA[Tech]]></category>
		<category domain="post_tag" nicename="%ea%b0%9c%eb%b0%9c%eb%ac%b8%ed%99%94"><![CDATA[개발문화]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729497282;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:2174;}i:1;a:1:{s:2:"id";i:966;}i:2;a:1:{s:2:"id";i:1783;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_single_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:17:{s:8:"subtitle";s:0:"";s:6:"format";s:8:"standard";s:5:"video";s:0:"";s:7:"gallery";s:0:"";s:11:"source_name";s:0:"";s:10:"source_url";s:0:"";s:8:"via_name";s:0:"";s:7:"via_url";s:0:"";s:8:"override";a:1:{i:0;a:27:{s:8:"template";s:1:"1";s:18:"single_blog_custom";s:0:"";s:8:"parallax";s:1:"1";s:10:"fullscreen";s:1:"1";s:6:"layout";s:13:"right-sidebar";s:7:"sidebar";s:0:"";s:14:"second_sidebar";s:0:"";s:14:"sticky_sidebar";s:1:"1";s:14:"share_position";s:0:"";s:17:"share_float_style";s:0:"";s:18:"show_share_counter";s:1:"1";s:17:"show_view_counter";s:1:"1";s:13:"show_featured";s:1:"1";s:14:"show_post_meta";s:1:"1";s:16:"show_post_author";s:1:"1";s:22:"show_post_author_image";s:1:"1";s:14:"show_post_date";s:1:"1";s:16:"post_date_format";s:0:"";s:23:"post_date_format_custom";s:0:"";s:18:"show_post_category";s:1:"1";s:21:"post_reading_time_wpm";s:0:"";s:20:"zoom_button_out_step";s:1:"1";s:19:"zoom_button_in_step";s:1:"1";s:13:"show_post_tag";s:1:"1";s:19:"show_prev_next_post";s:1:"1";s:15:"show_popup_post";s:1:"1";s:17:"number_popup_post";s:1:"1";}}s:14:"image_override";a:1:{i:0;a:2:{s:26:"single_post_thumbnail_size";s:0:"";s:24:"single_post_gallery_size";s:0:"";}}s:22:"trending_post_position";s:0:"";s:19:"trending_post_label";s:0:"";s:20:"sponsored_post_label";s:0:"";s:19:"sponsored_post_name";s:0:"";s:18:"sponsored_post_url";s:0:"";s:19:"sponsored_post_logo";s:0:"";s:19:"sponsored_post_desc";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle_flag]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[43]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_format_gallery_images]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:2:"id";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_template_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[wp-post]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_version]]></wp:meta_key>
		<wp:meta_value><![CDATA[3.1.1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[30]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1885]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[8]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
		<wp:meta_value><![CDATA[안녕하세요 리멤버를 서비스하고 있는 드라마앤컴퍼니의 개발실 리더 김담형입니다. 이번 글에서는 리멤버 서비스들의 웹 사이트와 API, 인프라를 담당하고 있는 서버/웹 팀이 일하는 모든 방식을 다루고 있습니다. 추상적인 글을 넘어서 실제 스크릿샷 등을 포함하여 저희가 어떻게 일을 하고 있는지 낱낱이 보여 드리고자 합니다.]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[개발 문화]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[63]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_format_video_embed]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_estimated-reading-time-minutes]]></wp:meta_key>
		<wp:meta_value><![CDATA[15]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>6713</wp:comment_id>
			<wp:comment_author><![CDATA[재현]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[rururu0729@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.15.82]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2020-12-23 23:29:07]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2020-12-23 14:29:07]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[마치 리멤버에서 일을 한것 같은 기분이 들었습니다. 옆 동네 스타트업 스타일쉐어에도 비슷한 글이 올라왔네요. https://link.medium.com/hDmS14c6rcb]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1608733747.23254;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[웹 퍼포먼스 개선을 위한 Lighthouse CI 도입기]]></title>
		<link>https://blog.dramancompany.com/2021/04/%ec%9b%b9-%ed%8d%bc%ed%8f%ac%eb%a8%bc%ec%8a%a4-%ea%b0%9c%ec%84%a0%ec%9d%84-%ec%9c%84%ed%95%9c-lighthouse-ci-%eb%8f%84%ec%9e%85%ea%b8%b0/</link>
		<pubDate>Wed, 21 Apr 2021 09:01:11 +0000</pubDate>
		<dc:creator><![CDATA[jiseop.han]]></dc:creator>
		<guid isPermaLink="false">https://blog.dramancompany.com/?p=2019</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>안녕하세요. 리멤버의 웹 프론트엔드 개발을 하고 있는 한지섭입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>최근에는 직장인들의 고민해결을 위한 서비스인 '리멤버 커뮤니티'를 개발하고 있는데요,</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>이번 글에서는 사용자들이 리멤버 커뮤니티를 더 쾌적하게 이용할수 있도록 웹 페이지 성능을 측정하고 개선하는 과정에 대해 얘기해보려고 합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>"커뮤니티가 너무 느려졌어요"</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>빠른 속도로 기능 개발을 하다보면 성능과 관련된 부분을 충분히 체크하지 못하고 작업을 할때가 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>이로인해 배포되고 한참 뒤에야 특정 페이지가 너무 느려졌다는 제보를 받고 급하게 대응하고는 했습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>이 과정에서 제가 느낀 문제점은 크게 두가지 였는데요.</p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true,"fontSize":"normal"} -->
<ol><li>웹 페이지가 느리다는것은 어떻게 정의할것인가? 얼마나 느려야 대응을 할것인가? 애매하다.</li><li>정확히 어떤 시점부터 어떤 페이지가 느려진것인지, 즉 어떤 작업으로 인해 느려졌는지 파악하기 어렵다.</li></ol>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>우선 첫번째 문제점부터 하나하나 얘기해보겠습니다!</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>웹페이지의 속도를 정의해봅시다</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>웹페이지의 퍼포먼스를 지속적으로 개선하기 위해서는 측정할수 있는, 수치화된 지표가 필요합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>이 지표로 저희 팀에서는 <a href="https://web.dev/vitals/">Web Vitals</a> 를 따르고 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Web Vitals란 구글에서 제안하는, 더 나은 웹페이지를 개발하기 위한 가이드라인으로, 아래에서 설명할 세가지 핵심 지표들을 포함하고 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><strong>LCP(Largest Contentful Paint)</strong></p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":2021,"width":305,"height":597,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large is-resized"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/04/img1.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/04/img1-edited.png" alt="" class="wp-image-2021" width="305" height="597" /></a><figcaption><a href="https://community.rememberapp.co.kr/post/25955" target="_blank">community.rememberapp.co.kr/post/25955</a> 여러분은 어떻게 생각하시나요?</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>LCP는 페이지의 내용이 화면에 얼마나 빨리 나오는지를 측정하기 위한 지표입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>LCP란, 뷰포트 내에서 이미지/비디오/텍스트 블록중 시각적으로 가장 큰 사이즈를 차지하는 블록이 처음으로 브라우저에 paint 되기까지의 시간을 의미합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>위 화면에서는 기영이 그림이 가장 큰 블록이니, 기영이가 처음으로 등장하기까지의 시간이 해당 페이지의 LCP가 됩니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><strong>FID(First Input Delay), TBT(Total Blocking Time)</strong></p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":2022,"width":655,"height":312,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large is-resized"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/04/img2.svg"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/04/img2.svg" alt="" class="wp-image-2022" width="655" height="312" /></a><figcaption>출처: <a href="https://web.dev/fid/" target="_blank">https://web.dev/fid/</a></figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>페이지에 내용이 모두 나온 후에도 끝난것은 아닙니다. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>좋아요를 누르는 등 유저가 인풋을 주었을 때 바로 반응이 오지 않을수 있습니다. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>브라우저의 자바스크립트 엔진은 기본적으로 싱글스레드로 작동하는데, 메인스레드에 남은 작업이 있다면 사용자가 인터랙션을 하더라도 이벤트 핸들러가 바로 동작하지 않기 때문입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>이런 유저 인터랙션의 Delay를 측정하기 위한 지표가 FID입니다. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>FID는 유저의 인터랙션 이후 이에 대한 이벤트 핸들러를 실행할 준비가 되기(= 메인 스레드가 idle 해지기)까지의 시간을 의미합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><a href="https://web.dev/user-centric-performance-metrics/#in-the-lab">자동화된 테스트 환경</a>에서는 실제 유저가 인터랙션을 하지 않기 때문에 FID를 측정할 수 없습니다. 대신 이를 간접적으로 측정하는 지표인 <a href="https://web.dev/tbt/">TBT</a>를 사용합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><strong>CLS(Cumulative Layout Shift)</strong></p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":2023,"width":633,"height":342,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large is-resized"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/04/img3.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/04/img3-1024x554.png" alt="" class="wp-image-2023" width="633" height="342" /></a><figcaption>출처: <a href="https://web.dev/optimize-cls/" target="_blank">https://web.dev/optimize-cls/</a> 갑자기 등장한 광고배너를 잘못 클릭해본적 있나요?</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>웹 페이지 구성요소의 일부분은 최초 렌더 이후 추가적으로 로드됩니다. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>리멤버 커뮤니티의 경우 댓글이 그런 요소인데요, 이렇게 추가적인 요소들이 그려지는 과정에서 기존의 요소들이 밀려나는(Layout Shift) 상황이 벌어질수 있습니다. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>이로인해 유저가 의도하지 않는 요소를 클릭하게 되는 등 사용자 경험에 악형향을 줄 수 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>CLS 값은 밀려나는 요소의 크기가 클수록, 밀려나는 거리가 길수록 커집니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:quote -->
<blockquote class="wp-block-quote"><p>각종 지표들의 엄밀한 정의와 이를 개선하기 위한 방법은 구글의 웹 기술 관련 페이지인 web.dev에 자세히 설명되어 있습니다.</p><p>글 하단에 관련 링크들을 넣어 놓겠습니다.</p></blockquote>
<!-- /wp:quote -->

<!-- wp:heading -->
<h2>그럼 이 지표를 어떻게 측정하나요?</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>구글에서는 웹의 퍼포먼스, 접근성, SEO 등과 관련된 지표들을 측정할수 있는 <a href="https://developers.google.com/web/tools/lighthouse">Lighthouse</a> 라는 오픈소스 도구를 공개했습니다. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>아래 그림과 같이 크롬에서 측정할 페이지에 접속한후 디버거의 Lighthouse 탭에서 테스트를 돌리고, 결과 리포트를 확인할수 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":2024,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/04/img4.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/04/img4-1024x469.png" alt="" class="wp-image-2024" /></a></figure></div>
<!-- /wp:image -->

<!-- wp:image {"align":"center","id":2025,"width":891,"height":415,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large is-resized"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/04/img5.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/04/img5-1024x477.png" alt="" class="wp-image-2025" width="891" height="415" /></a></figure></div>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>좋네요 점수도 확인했고, 그럼 다 된건가요?</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>지금까지 우리는 측정 지표를 정의했고, 해당 지표를 측정하는 방법도 찾았습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>글의 앞부분에서 언급한, 제가 해결하려고 하는 두번째 문제를 다시 생각해보면</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>웹 페이지가 느려졌을때 정확히 어떤 시점부터 어떤 페이지가 느려진것인지
즉 어떤 작업으로 인해 느려졌는지 파악하기 어렵다.</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>이 문제를 해결하기 위해 아래 사항들이 추가적으로 해결된 시스템을 설계했습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true,"fontSize":"normal"} -->
<ol><li>배포할때마다 자동으로 테스트를 돌려야한다</li><li>테스트 결과는 관련 커밋과 연결하여 DB에 축적해야한다</li><li>축적한 결과는 언제든지 쉽게 볼수 있어야한다.</li></ol>
<!-- /wp:list -->

<!-- wp:heading -->
<h2>Lighthouse CI</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>이러한 시스템을 조금더 수월하게 구축할수 있도록 <a href="https://github.com/GoogleChrome/lighthouse-ci">Lighthouse CI 프로젝트</a>가 공개돼있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Lighthouse CI는 아래의 요소들을 포함하고 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true,"fontSize":"normal"} -->
<ol><li>CLI로 테스트 실행</li><li>테스트 결과를 업로드할수 있고, 대시보드를 통해 데이터를 시각화해서 보여주는 Node.js 서버</li></ol>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>이제 이 Lighthouse CI 를 기존의 리멤버 커뮤니티 배포 파이프라인과 연동해보겠습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>인프라 구축</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>구축한 인프라를 간단하게 요약하면 그림과 같습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":2026,"width":875,"height":560,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large is-resized"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/04/img6.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/04/img6-1024x657.png" alt="" class="wp-image-2026" width="875" height="560" /></a></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>배포를 시작하면 AWS CodeBuild 에서 빌드와 테스트를 진행합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>테스트 결과는 Lighthouse 서버에 업로드, DB에 저장됩니다. 그러면 이후 개발자는 대시보드 주소에 접속하여 결과를 확인합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>그럼 테스트 결과를 한번 볼까요?</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Lighthouse 대시보드에 접속하면 웹 페이지를 분석하는데에 도움이 되는 다양한 기능이 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":2027,"sizeSlug":"large","linkDestination":"media"} -->
<figure class="wp-block-image size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/04/img7.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/04/img7-1024x211.png" alt="" class="wp-image-2027" /></a></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>우선 테스트를 수행한 빌드 목록을 확인할수 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":2028,"width":664,"height":602,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large is-resized"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/04/img8.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/04/img8-1024x929.png" alt="" class="wp-image-2028" width="664" height="602" /></a></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>목록에서 빌드를 클릭하면 해당빌드의 상세한 측정결과를 확인할수 있습니다. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>위에서 언급했던 LCP, TBT, CLS 외에도 다양한 지표들에 대해 측정 결과를 보여줍니다. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>또한 퍼포먼스 외에도 접근성, SEO와 관련된 테스트 결과도 확인할 수 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":2029,"width":780,"height":328,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large is-resized"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/04/img9.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/04/img9-1024x431.png" alt="" class="wp-image-2029" width="780" height="328" /></a></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>단순히 측정 결과만 알려주는게 아니라 어떻게 개선할수 있는지를 파악하는 데에도 도움을 줍니다.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":2030,"sizeSlug":"large","linkDestination":"media"} -->
<figure class="wp-block-image size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/04/img10.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/04/img10-1024x381.png" alt="" class="wp-image-2030" /></a><figcaption>출처: <a href="https://github.com/GoogleChrome/lighthouse-ci/blob/main/docs/server.md" target="_blank">https://github.com/GoogleChrome/lighthouse-ci/blob/main/docs/server.md</a></figcaption></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>여러 빌드에 거쳐 점수가 어떻게 변화했는지 추이를 확인할 수 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>한계</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Lighthouse는 소스 코드를 분석하는 도구가 아닙니다. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>따라서 웹페이지의 모든 문제점을 파악할 수 없으며, 점수를 개선하기 위해 코드를 분석하고 개선 방향을 세우는것은 온전히 개발자의 몫입니다. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>또한 Lighthouse 는 일관적인 측정 결과를 위해 <a href="https://web.dev/user-centric-performance-metrics/#in-the-lab">통제된 환경</a>속에서 테스트를 돌리는 도구이기 때문에 실제 유저가 체감하는 성능과는 차이가 있을수 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>그럼에도 객관적인 지표를 통해 웹 페이지의 문제점을 파악하고 개선하는 데에 충분히 유용하게 사용될수 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>그래서, 개선하기 위해 뭘 했나요?</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>최근에 완료하거나 진행중인 작업들은 다음과 같습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:list {"fontSize":"normal"} -->
<ul class="has-normal-font-size"><li>API 응답 속도 줄이기</li><li>Javascript 비동기 처리 개선</li><li>SWR 라이브러리의 <a href="https://swr.vercel.app/docs/mutation#mutation-and-post-request">local mutate</a> 활용</li><li>Layout Shift 를 방지하기 위한 구조 개선</li><li>불필요한 API 호출, rerendering 줄이기</li><li>페이지 전환시 답답함을 해소하기 위한 애니메이션 추가</li><li>Bundle 사이즈를 크게 만드는 라이브러리 교체</li></ul>
<!-- /wp:list -->

<!-- wp:image {"id":2031,"sizeSlug":"large","linkDestination":"media"} -->
<figure class="wp-block-image size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/04/img11.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/04/img11.png" alt="" class="wp-image-2031" /></a></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>이러한 작업들을 통해 최근에 TBT, CLS를 큰폭으로 개선할수 있었고 앞으로도 지속적으로 개선할 예정입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>다음에 기회가 된다면 이러한 개선 작업들에 대해서도 자세히 다뤄보겠습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:separator -->
<hr class="wp-block-separator" />
<!-- /wp:separator -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>리멤버는 많은 분들께 리멤버를 알린 명함 관리를 넘어 다양한 서비스를 웹으로 운영하며 종합 비즈니스 플랫폼으로 변화하고 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>더 나은 커리어 기회를 제공하는 '리멤버 커리어'</li><li>일 관련 지식을 나누고 고민을 해소하는 '리멤버 커뮤니티'</li><li>전문적인 경제/경영 컨텐츠를 제공하는 '리멤버 나우'</li><li>아직 공개되지 않은 프로젝트, 내부 어드민 등</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>이러한 서비스를 만드는 과정에서 저희 팀은 사용자에게, 개발자에게 더 나은 경험을 주기 위해 새로운 기술을 배우고, 팀원들과 공유하고, 적절한 단계에서 도입하는 문화가 잘 정착되어 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>현재 저희팀은 Web Frontend 개발자를 채용중입니다. 자세한 채용 안내는 <a href="https://dramancompany.com/joinus">https://dramancompany.com/joinus</a> 에서 확인해주세요.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>질문은 댓글로 남겨주시면 자세히 답변 드리겠습니다. 읽어주셔서 감사합니다 🙂</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>참고</h3>
<!-- /wp:heading -->

<!-- wp:list -->
<ul><li><a href="https://web.dev/vitals/">https://web.dev/vitals/</a></li><li><a href="https://web.dev/lighthouse-ci/">https://web.dev/lighthouse-ci/</a></li><li><a href="https://web.dev/user-centric-performance-metrics/">https://web.dev/user-centric-performance-metrics/</a></li><li><a href="https://web.dev/lcp/">https://web.dev/lcp/</a></li><li><a href="https://web.dev/fcp/">https://web.dev/fcp/</a></li><li><a href="https://web.dev/cls/">https://web.dev/cls/</a></li><li><a href="https://web.dev/fid/">https://web.dev/fid/</a></li><li><a href="https://web.dev/tti/">https://web.dev/tti/</a></li><li><a href="https://web.dev/tbt/">https://web.dev/tbt/</a></li></ul>
<!-- /wp:list -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2019</wp:post_id>
		<wp:post_date><![CDATA[2021-04-21 18:01:11]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-04-21 09:01:11]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-04-21 18:03:21]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-04-21 09:03:21]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%ec%9b%b9-%ed%8d%bc%ed%8f%ac%eb%a8%bc%ec%8a%a4-%ea%b0%9c%ec%84%a0%ec%9d%84-%ec%9c%84%ed%95%9c-lighthouse-ci-%eb%8f%84%ec%9e%85%ea%b8%b0]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="develop"><![CDATA[Tech]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729488525;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:966;}i:1;a:1:{s:2:"id";i:1850;}i:2;a:1:{s:2:"id";i:2528;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_single_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:17:{s:8:"subtitle";s:0:"";s:6:"format";s:8:"standard";s:5:"video";s:0:"";s:7:"gallery";s:0:"";s:11:"source_name";s:0:"";s:10:"source_url";s:0:"";s:8:"via_name";s:0:"";s:7:"via_url";s:0:"";s:8:"override";a:1:{i:0;a:11:{s:18:"single_blog_custom";s:0:"";s:7:"sidebar";s:0:"";s:14:"second_sidebar";s:0:"";s:14:"share_position";s:0:"";s:17:"share_float_style";s:0:"";s:16:"post_date_format";s:0:"";s:23:"post_date_format_custom";s:0:"";s:21:"post_reading_time_wpm";s:0:"";s:20:"zoom_button_out_step";s:1:"1";s:19:"zoom_button_in_step";s:1:"1";s:17:"number_popup_post";s:1:"1";}}s:14:"image_override";a:1:{i:0;a:2:{s:26:"single_post_thumbnail_size";s:0:"";s:24:"single_post_gallery_size";s:0:"";}}s:22:"trending_post_position";s:0:"";s:19:"trending_post_label";s:0:"";s:20:"sponsored_post_label";s:0:"";s:19:"sponsored_post_name";s:0:"";s:18:"sponsored_post_url";s:0:"";s:19:"sponsored_post_logo";s:0:"";s:19:"sponsored_post_desc";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle_flag]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[30]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_format_gallery_images]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:2:"id";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[2025]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>12608</wp:comment_id>
			<wp:comment_author><![CDATA[장영재]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[youngjae.j99@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://github.com/youngjae99</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.23.25]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2022-07-15 14:26:21]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2022-07-15 05:26:21]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Lighthouse를 통해 속도를 많이 개선하신게 인상적입니다. 좋은 글 감사합니다.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1657862781.841885;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1659659906.249937;s:5:"event";s:15:"status-approved";s:4:"user";s:8:"aaronroh";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>12613</wp:comment_id>
			<wp:comment_author><![CDATA[최연승]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[wmf34a@naver.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.1.183]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2022-07-21 10:43:30]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2022-07-21 01:43:30]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[안녕하세요  포스팅 정말 잘 봤습니다. ㅎㅎ

질문 사항이 있습니다.

ubuntu환경에서 lighthouse를 돌리려고 하는데요

npm run start 또는 npm run build를 한 후 lhci autorun 으로 진행을 해봤습니다.

빌드된 파일로만 검사 진행이 불가능 한걸 까요? 꼭 빌드나 npm start로 띄워진 웹사이트에서만 검사 진행가능 한 것일까요?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1658367810.935107;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1675250159.944405;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"hb.lee";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[🏆 AWS 대회에서 1등 했습니다!]]></title>
		<link>https://blog.dramancompany.com/2021/06/awsgameday2021/</link>
		<pubDate>Tue, 15 Jun 2021 07:20:13 +0000</pubDate>
		<dc:creator><![CDATA[tom]]></dc:creator>
		<guid isPermaLink="false">https://blog.dramancompany.com/?p=2047</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>안녕하세요 리멤버를 서비스하고 있는 드라마앤컴퍼니의 개발실 리더 김담형입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>지난 6월 7일 진행된 AWS GameDay에서 저희 리멤버 팀이 1위를 차지했습니다! 🥳</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>좋은 성적을 거뒀다는 사실도 만족스럽지만, 게임 자체의 퀄리티가 너무 좋아서 저희 모두 정말 시간 가는 줄 모르게 재미있는 경험을 했습니다. 이번 글에서는 AWS GameDay가 낯선 분들을 위해 간략하게나마 어떤 내용의 대회였고 또 저희가 대회 중에 문제들을 어떻게 해결했는지 설명해 드리고자 합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>대회 설명</h2>
<!-- /wp:heading -->

<!-- wp:image {"align":"center","id":2048,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/06/gameday-edm-fin.jpg"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/06/gameday-edm-fin.jpg" alt="" class="wp-image-2048"/></a></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>AWS GameDay는 AWS 아키텍처에서 생길 수 있는 다양한 문제들을 게임화된 환경에서 직접 대처하며 AWS에 대한 이해를 높일 수 있는 인터랙티브 콘텐츠입니다. 참여한 팀마다 모의 서비스가 운영되고 있는 AWS 계정이 하나씩 주어집니다. 운영되고 있는 서비스에는 예상하지 못한 장애, 트래픽 증가 등 여러 돌발상황이 발생하기 때문에 AWS 아키텍처를 변경하여 안정적으로 서비스를 운영해야 하는 대회입니다. 한 팀은 최대 5명으로 구성됩니다. 고퀄리티로 만들어진 대회인 만큼 아마 해당 내용 기반으로 대회가 또 열릴 것 같아 너무 상세한 내용은 적지 못하는 점 양해 부탁드립니다 😉</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":2050,"width":262,"height":307,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large is-resized"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/06/unicornrentals-1.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/06/unicornrentals-1-874x1024.png" alt="" class="wp-image-2050" width="262" height="307"/></a></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>제가 굉장히 고퀄리티라고 생각했던 첫 이유는 바로 몰입을 위한 상황설정이었는데요, 대회 시작부터 AWS 분들의 연기와 함께 상황극이 시작되었습니다. (눈치 없는 저는 5분쯤 지나서야 이게 상황극이란 걸 인지했습니다.. 😓)</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Unicorn.Rentals라는 회사의 CEO가 등장하여 CTO가 코로나로 인한 자가격리 중이라 서비스 대응을 제대로 하지 못한다는 비극을 전해줍니다. 저희는 모두 Unicorn.Rentals의 DevOps 엔지니어들로 CTO가 구축해놓은 시스템을 파악하고 운영해야 합니다. 이 서비스는 이미 고객들의 요청을 처리하고 있으며 트래픽은 더욱 늘어날 예정입니다. 4시간 동안 CTO의 도움 없이 빨리 현재 상황을 파악하고 수정하여 시스템을 안정적으로 운영해야 하는 것이 저희의 임무입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>조금 더 설명해 드리자면 저희 서비스는 하나의 API endpoint를 노출하고 있고 해당 API로 사용자들의 요청이 꾸준하게 들어오고 있습니다. API는 하나의 파라미터를 query string parameter로 받으며 응답으로는 파라미터에 대한 hash 값을 주고 있습니다. 저희가 얼마나 서비스를 잘 운영하고 있는지는 점수로 확인 할 수 있습니다. 요청을 더 빨리 처리할수록 높은 점수를 받고 요청을 제대로 처리하지 못하는 경우 점수가 차감됩니다. 또한 주기적으로 저희가 사용하고 있는 AWS 인프라 리소스에 대한 비용이 점수에서 차감됩니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>따라서 대회의 목적은 최소의 비용으로 최고의 효용과 안정성을 갖춘 인프라를 구성하는 것입니다. 제공되는 스코어 보드 페이지를 통해 현재 참여한 팀들의 점수와 점수 trend를 실시간으로 확인할 수 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>진행 내용</h2>
<!-- /wp:heading -->

<!-- wp:image {"align":"center","id":2052,"width":528,"height":306,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large is-resized"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/06/firstscoreboard.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/06/firstscoreboard-1024x594.png" alt="" class="wp-image-2052" width="528" height="306"/></a><figcaption>초반에는 작은 점수로 순위가 엎치락뒤치락 되었습니다.</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>게임이 시작되고 기존에 갖춰져 있던 시스템이 들어오는 요청을 잘 처리하는 덕분에 모든 팀의 점수가 조금씩 같이 오르기 시작했습니다. 저희는 우선 대회에서 제공되는 Runbook을 읽고 상황을 파악하고 여러 단서를 찾는 데 집중했습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>가장 첫 번째 눈에 들어온 건 query string parameter로 parameter가 넘어오고 같은 parameter의 경우 응답에 담기는 hash가 일정하다는 것이었습니다. 그래서 맨 처음 한 작업은 AWS의 CDN 서비스인 <a rel="noreferrer noopener" href="https://aws.amazon.com/ko/cloudfront/?nc1=h_ls" data-type="URL" data-id="https://aws.amazon.com/ko/cloudfront/?nc1=h_ls" target="_blank">CloudFront</a>를 이용하여 <a rel="noreferrer noopener" href="https://docs.aws.amazon.com/ko_kr/AmazonCloudFront/latest/DeveloperGuide/QueryStringParameters.html" target="_blank" data-type="URL" data-id="https://docs.aws.amazon.com/ko_kr/AmazonCloudFront/latest/DeveloperGuide/QueryStringParameters.html">query string parameter 기반의 캐싱</a>을 진행하는 것이었습니다. 저희가 제공하고 있는 API는 요청을 하나 처리하는데 4초 이상 걸리는 굉장히 오래 걸리는 API였기 때문에 캐싱이 큰 효과를 발휘할 것이라는 판단을 했습니다. 다만 같은 값이 얼마나 중복으로 요청될지는 몰랐지만 간단하게 할 수 있는 작업이었다 보니 바로 적용을 해뒀습니다. 캐시 히트가 되는 경우 EC2까지 요청이 전달되지도 않고 앞단에서 바로 클라이언트로 응답을 줄 수 있으니 가장 효과적인 캐싱 방법이라고 생각했습니다. CloudFront는 <a rel="noreferrer noopener" href="https://career.rememberapp.co.kr/talent" data-type="URL" data-id="https://career.rememberapp.co.kr/talent" target="_blank">리멤버 커리어</a>, <a rel="noreferrer noopener" href="https://community.rememberapp.co.kr/main" data-type="URL" data-id="https://community.rememberapp.co.kr/main" target="_blank">리멤버 커뮤니티</a>, <a href="https://career.rememberapp.co.kr/ads" data-type="URL" data-id="https://career.rememberapp.co.kr/ads" target="_blank" rel="noreferrer noopener">커리어 채용공고</a> 등 평소 리멤버 웹 사이트들이 모두 잘 사용하고 있는 서비스다 보니 어려움 없이 바로 적용할 수 있었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:columns -->
<div class="wp-block-columns"><!-- wp:column -->
<div class="wp-block-column"><!-- wp:image {"align":"center","id":2055,"width":379,"height":739,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large is-resized"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/06/job-posting.jpg"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/06/job-posting-525x1024.jpg" alt="" class="wp-image-2055" width="379" height="739"/></a><figcaption>리멤버 커리어의 채용공고 화면</figcaption></figure></div>
<!-- /wp:image --></div>
<!-- /wp:column -->

<!-- wp:column -->
<div class="wp-block-column"><!-- wp:image {"align":"center","id":2054,"width":348,"height":735,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large is-resized"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/06/career-tab.jpg"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/06/career-tab-485x1024.jpg" alt="" class="wp-image-2054" width="348" height="735"/></a><figcaption>리멤버 커리어 탭 화면</figcaption></figure></div>
<!-- /wp:image --></div>
<!-- /wp:column --></div>
<!-- /wp:columns -->

<!-- wp:columns -->
<div class="wp-block-columns"><!-- wp:column {"width":"100%"} -->
<div class="wp-block-column" style="flex-basis:100%"><!-- wp:paragraph -->
<p>그다음으로는 지금 구성되어있는 아키텍처에 잘못된 부분은 없는지 확인했습니다. 불필요한 설정으로 추가 금액이 나가는 예도 있었고 사용되지 않는 지원들도 있어서 이를 모두 제거했습니다. 또한, VPC 설정을 보다 보니 사용 가능한 IP의 제한이 있어서 subnet도 바로 추가했습니다. 그 외 배포 과정에도 비효율적인 내용을 제거했습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>API의 처리 시간이 매우 길어서인지 제공되는 서비스 binary가 EC2 서버 한 대의 처리량이 명확해 보였습니다. 따라서 요청량에 따른 EC2 auto scaling이 필요하다고 판단했고 <a rel="noreferrer noopener" href="https://docs.aws.amazon.com/ko_kr/elasticloadbalancing/latest/application/load-balancer-cloudwatch-metrics.html" data-type="URL" data-id="https://docs.aws.amazon.com/ko_kr/elasticloadbalancing/latest/application/load-balancer-cloudwatch-metrics.html" target="_blank">Request count per target 지표</a>를 확인하기 위해 Classic Load Balancer를 <a href="https://aws.amazon.com/ko/elasticloadbalancing/application-load-balancer" data-type="URL" data-id="https://aws.amazon.com/ko/elasticloadbalancing/application-load-balancer">Application Load Balancer</a>로 변경했습니다.</p>
<!-- /wp:paragraph --></div>
<!-- /wp:column --></div>
<!-- /wp:columns -->

<!-- wp:image {"align":"center","id":2057,"width":701,"height":273,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large is-resized"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/06/request-per-target.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/06/request-per-target-1024x399.png" alt="" class="wp-image-2057" width="701" height="273"/></a><figcaption>ELB에서 관리하고있는 target당 처리하고 있는 request count 지표</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>요청량이 급격하게 변화하기도 하고 어떤 규칙을 보일지 몰라서 최대한 빠르게 대응하기 위하여 손토스케일링(손 auto scaling)을 진행했습니다. 이 부분이 꽤 큰 역할을 해줬는데요, 다른 팀들의 점수가 갑자기 급감할 때 저희는 플러스 점수를 유지하는 경우도 있었습니다. (<s>인간이 기계보다 뛰어나다는 것을 보여줬습니다🤖</s>)</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":2058,"width":379,"height":531,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large is-resized"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/06/all-red.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/06/all-red-731x1024.png" alt="" class="wp-image-2058" width="379" height="531"/></a><figcaption>우리 팀만 초록색이라니..! 짜릿해!</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>게임 규칙상 생성할 수 있는 EC2의 사양이 한 가지로 정해져 있었고 서비스가 EC2 인스턴스의 리소스를 충분히 활용하지 못하는 상황이었다 보니 더 효과적인 비용 절감을 위해서는 AWS의 container 서비스인 <a rel="noreferrer noopener" href="http://aws.amazon.com/ko/ecs" data-type="URL" data-id="aws.amazon.com/ko/ecs" target="_blank">ECS</a>를 이용해야겠다고 판단했습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>마치 약속이라도 한 듯 누가 시키지도 않았지만 자연스럽게 참여 인원의 절반은 ECS의 신규 아키텍처 기반의 설계를, 절반은 더 빠른 Auto Scaling을 통해 기존 시스템 운영을 맡았습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>ECS(Elastic Container Service)는 AWS에서 제공하는 컨테이너 오케스트레이션 서비스이며 어떻게 서버를 구성하냐에 따라 두 가지 방식으로 나뉩니다. 하나는 저희가 EC2를 직접 실행한 뒤 그 안에 실행되는 container들을 ECS에서 관리해주는 방식이고 다른 하나는 Fargate라고 부르는 serverless 방식입니다. Fargate는 쉽게 생각해서 AWS Lambda와 같은 개념이라고 보시면 됩니다. 처음에는 EC2 기반의 ECS를 구축하려고 시도했었는데 저희 모두 EC2 기반의 ECS를 구축한 경험이 없었어서 일부 설정에서 생각대로 잘 동작하지 않았습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>그러다가 중간에는 더 늦어지면 안 되겠다 싶어서 Fargate 기반의 ECS로 변경했습니다. Fargate의 경우 <a href="https://community.rememberapp.co.kr/main" data-type="URL" data-id="https://community.rememberapp.co.kr/main" target="_blank" rel="noreferrer noopener">리멤버 커뮤니티</a> 등 여러 서비스에서 이미 사용하고 있었기 때문에 손쉽게 구축할 수 있었습니다. Fargate로 아키텍처를 모두 이전한 뒤 점수가 많이 오르기 시작했습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":2266,"width":794,"height":224,"sizeSlug":"large","linkDestination":"custom"} -->
<div class="wp-block-image"><figure class="aligncenter size-large is-resized"><a href="https://bit.ly/3BCtbyM"><img src="https://blog.dramancompany.com/wp-content/uploads/2020/12/Frame-16-1024x289.png" alt="" class="wp-image-2266" width="794" height="224"/></a></figure></div>
<!-- /wp:image -->

<!-- wp:columns -->
<div class="wp-block-columns"><!-- wp:column -->
<div class="wp-block-column"><!-- wp:image {"id":2059,"sizeSlug":"large","linkDestination":"media"} -->
<figure class="wp-block-image size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/06/fargate-task-definition-min.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/06/fargate-task-definition-min-1024x536.png" alt="" class="wp-image-2059"/></a><figcaption>Fargate에서 사용하는 Task Definition 설정. 기존에 사용하던 EC2 인스턴스보다 훨씬 효율적으로 자원을 사용할 수 있었습니다.</figcaption></figure>
<!-- /wp:image --></div>
<!-- /wp:column -->

<!-- wp:column -->
<div class="wp-block-column"><!-- wp:image {"align":"center","id":2060,"width":274,"height":596,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large is-resized"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/06/community.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/06/community-471x1024.png" alt="" class="wp-image-2060" width="274" height="596"/></a><figcaption>Fargate 위에서 동작하는 리멤버 커뮤니티 API, 리멤버 커뮤니티 Web의 화면</figcaption></figure></div>
<!-- /wp:image --></div>
<!-- /wp:column --></div>
<!-- /wp:columns -->

<!-- wp:image {"align":"center","id":2061,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/06/logo.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/06/logo.png" alt="" class="wp-image-2061"/></a></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>어느 정도 작업도 완료했고 안정적으로 오르는 점수에 만족하던 중에 갑자기 EC2 인스턴스가 종료되기 시작했습니다. 빠르게 돌아가는 상황이다 보니 <em>"이상하네? 근데 뭐 누군가 실수했겠지"</em>라고 생각할 수도 있었지만, 혹시 모를 문제를 대비하기 위하여 사용자 활동 감시 서비스인 <a data-type="URL" data-id="https://aws.amazon.com/cloudtrail/" href="https://aws.amazon.com/cloudtrail/" target="_blank" rel="noreferrer noopener">CloudTrail</a>에서 로그를 확인했습니다. 역시 저희의 실수가 아니라 Chaos Monkey가 AWS 리소스들을 조회하고 종료하는 것을 확인했습니다. 문제를 일으켜서 대응이 필요한 부분은 빠르게 대응을 했고 망가트리지 못하게 일부 설정은 조정해두었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><a rel="noreferrer noopener" href="https://github.com/Netflix/chaosmonkey/" data-type="URL" data-id="https://github.com/Netflix/chaosmonkey/" target="_blank">Chaos Monkey</a>는 Netflix에서 만든 Chaos Engineering을 위한 모의훈련 툴로 임의로 서버나 컨테이너를 종료시켰을 때도 서비스가 잘 동작하는지 확인하기 위한 목적으로 만들어졌습니다. 인스턴스 종료뿐만 아니라 AZ나 리전 전체를 셧다운 하는 Chaos Gorilla, Chaos Kong 등도 있습니다. Chaos Engineering에 대해 궁금하시다면 <a rel="noreferrer noopener" href="https://principlesofchaos.org/ko/" data-type="URL" data-id="https://principlesofchaos.org/ko/" target="_blank">카오스 엔지니어링의 원칙</a>을 읽어보시거나 YouTube에서 Netflix의 기술 발표 영상들을 참고해보시면 좋을 것 같습니다. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Chaos Monkey뿐만 아니라 적은 내부에 있다고 Unicorn.Rentals 대표님이 뭔가 해보시겠다고 하는 게 문제를 발생시키는 경우도 있었습니다 😫</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":2074,"width":346,"height":429,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large is-resized"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/06/slack-chat-1.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/06/slack-chat-1.png" alt="" class="wp-image-2074" width="346" height="429"/></a><figcaption>대표님... 뭐라고 돕고 싶은 마음.. 그 마음만 받겠습니다..</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>또한 후반으로 갈수록 트래픽이 급증했는데, 가장 처음에 도입했던 CloudFront가 효자 노릇을 톡톡히 해줬습니다. 중복된 parameter 요청이 많이 날라왔는지 대부분의 요청이 CloudFront 단에서 처리되고 끝났습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":2063,"width":794,"height":543,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large is-resized"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/06/fast-response-log-min.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/06/fast-response-log-min-1024x700.png" alt="" class="wp-image-2063" width="794" height="543"/></a><figcaption>4초가 걸리는 처리 시간이 CloudFront 캐싱을 통해 0.004초만에 처리되는 모습.</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:image {"align":"center","id":2064,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/06/final-score-min.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/06/final-score-min-719x1024.png" alt="" class="wp-image-2064"/></a><figcaption>최종 성적표</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>어느덧 4시간이 지나버렸고 대회가 종료되었습니다. <strong>이멤버리멤버</strong> 팀이 1등으로 게임을 끝냈습니다. 처음에는 중간 등수였지만 작업을 할 때마다 점수와 순위가 함께 오르기 시작했습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>후기</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>저희 모두 큰 기대를 갖고 참여했던 대회는 아니었습니다. 다들 워낙 바쁘다 보니 오랜만에 재미있게 놀다 오자라는 마음으로 참여했다가 점수가 잘 나오니 뒤로 갈수록 더 열심히 몰입했던 것 같습니다. 개인적으로는 방 탈출을 정말정말 좋아하는데 처음에 몰입을 위한 설정, 상황극, 연기, 다양한 함정 및 문제 등이 방 탈출과 비슷하여 훨씬 더 몰입할 수 있었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>저희가 평소에 고민했던 부분을 해결하기 위한 아키텍처와 서비스를 그대로 적용되었다는 점이 만족스러웠고 손발이 착착 맞는 팀워크에 저희 모두 감탄했습니다. 누가 시키지 않았음에도 서로 역할 분담을 하며 업무를 나눠가고 긴박한 상황에서도 실시간으로 상황 공유 및 확인을 계속 진행하여 여러 명이 동시에 AWS 리소스를 수정하면서도 충돌 없이 해낼 수 있었습니다. 그리고 나중에 알게 된 사실이지만 대회에 참가한 다른 회사들이 국내에서 손꼽히는 IT 스타트업, 대기업들이었다고 합니다. 코로나만 아니었어도 네트워킹 시간을 가질 수 있었을 텐데 아쉽지만 이런 팀들이 모두 모여 대회를 진행했다는 것만으로도 충분히 재미있는 경험이었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>관심 있으신 분들은 정말 재미있는 시간을 보내실 수 있을 것 같으니 나중에 대회가 열리면 꼭! 참여해보시길 추천드립니다.</p>
<!-- /wp:paragraph -->

<!-- wp:columns -->
<div class="wp-block-columns"><!-- wp:column -->
<div class="wp-block-column"><!-- wp:image {"id":2076,"sizeSlug":"large","linkDestination":"media"} -->
<figure class="wp-block-image size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/06/outfocus-min-scaled.jpg"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/06/outfocus-min-edited-scaled.jpg" alt="" class="wp-image-2076"/></a></figure>
<!-- /wp:image --></div>
<!-- /wp:column -->

<!-- wp:column -->
<div class="wp-block-column"><!-- wp:image {"id":2066,"sizeSlug":"large","linkDestination":"media"} -->
<figure class="wp-block-image size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/06/full-shot-min-scaled.jpg"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/06/full-shot-min-1024x768.jpg" alt="" class="wp-image-2066"/></a><figcaption>박명호, 김담형, 강태화, 윤성현, 이동근</figcaption></figure>
<!-- /wp:image --></div>
<!-- /wp:column --></div>
<!-- /wp:columns -->

<!-- wp:image {"align":"center","id":2266,"width":794,"height":224,"sizeSlug":"large","linkDestination":"custom"} -->
<div class="wp-block-image"><figure class="aligncenter size-large is-resized"><a href="https://bit.ly/3BCtbyM"><img src="https://blog.dramancompany.com/wp-content/uploads/2020/12/Frame-16-1024x289.png" alt="" class="wp-image-2266" width="794" height="224"/></a></figure></div>
<!-- /wp:image -->]]></content:encoded>
		<excerpt:encoded><![CDATA[지난 6월 7일 진행된 AWS GameDay에서 저희 리멤버 팀이 1위를 차지했습니다! 🥳
좋은 성적을 거뒀다는 사실도 만족스럽지만, 게임 자체의 퀄리티가 너무 좋아서 저희 모두 정말 시간 가는 줄 모르게 재미있는 경험을 했습니다. 이번 글에서는 AWS GameDay가 낯선 분들을 위해 간략하게나마 어떤 내용의 대회였고 또 저희가 대회 중에 문제들을 어떻게 해결했는지 설명해 드리고자 합니다.]]></excerpt:encoded>
		<wp:post_id>2047</wp:post_id>
		<wp:post_date><![CDATA[2021-06-15 16:20:13]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-06-15 07:20:13]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-11-04 15:14:21]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-11-04 06:14:21]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[awsgameday2021]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="alb"><![CDATA[alb]]></category>
		<category domain="post_tag" nicename="aws"><![CDATA[AWS]]></category>
		<category domain="post_tag" nicename="cloudfront"><![CDATA[cloudfront]]></category>
		<category domain="post_tag" nicename="cloudtrail"><![CDATA[cloudtrail]]></category>
		<category domain="post_tag" nicename="ecs"><![CDATA[ecs]]></category>
		<category domain="post_tag" nicename="fargate"><![CDATA[fargate]]></category>
		<category domain="post_tag" nicename="gameday"><![CDATA[gameday]]></category>
		<category domain="category" nicename="develop"><![CDATA[Tech]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729533270;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:2967;}i:1;a:1:{s:2:"id";i:2277;}i:2;a:1:{s:2:"id";i:966;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_single_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:17:{s:8:"subtitle";s:0:"";s:6:"format";s:8:"standard";s:5:"video";s:0:"";s:7:"gallery";s:0:"";s:11:"source_name";s:0:"";s:10:"source_url";s:0:"";s:8:"via_name";s:0:"";s:7:"via_url";s:0:"";s:8:"override";a:1:{i:0;a:27:{s:8:"template";s:1:"1";s:18:"single_blog_custom";s:0:"";s:8:"parallax";s:1:"1";s:10:"fullscreen";s:1:"1";s:6:"layout";s:13:"right-sidebar";s:7:"sidebar";s:0:"";s:14:"second_sidebar";s:0:"";s:14:"sticky_sidebar";s:1:"1";s:14:"share_position";s:0:"";s:17:"share_float_style";s:0:"";s:18:"show_share_counter";s:1:"1";s:17:"show_view_counter";s:1:"1";s:13:"show_featured";s:1:"1";s:14:"show_post_meta";s:1:"1";s:16:"show_post_author";s:1:"1";s:22:"show_post_author_image";s:1:"1";s:14:"show_post_date";s:1:"1";s:16:"post_date_format";s:0:"";s:23:"post_date_format_custom";s:0:"";s:18:"show_post_category";s:1:"1";s:21:"post_reading_time_wpm";s:0:"";s:20:"zoom_button_out_step";s:1:"1";s:19:"zoom_button_in_step";s:1:"1";s:13:"show_post_tag";s:1:"1";s:19:"show_prev_next_post";s:1:"1";s:15:"show_popup_post";s:1:"1";s:17:"number_popup_post";s:1:"1";}}s:14:"image_override";a:1:{i:0;a:2:{s:26:"single_post_thumbnail_size";s:0:"";s:24:"single_post_gallery_size";s:0:"";}}s:22:"trending_post_position";s:0:"";s:19:"trending_post_label";s:0:"";s:20:"sponsored_post_label";s:0:"";s:19:"sponsored_post_name";s:0:"";s:18:"sponsored_post_url";s:0:"";s:19:"sponsored_post_logo";s:0:"";s:19:"sponsored_post_desc";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle_flag]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[43]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_format_gallery_images]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:2:"id";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[2069]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_template_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[wp-post]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_version]]></wp:meta_key>
		<wp:meta_value><![CDATA[3.1.4]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[30]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_estimated-reading-time-minutes]]></wp:meta_key>
		<wp:meta_value><![CDATA[9]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>10274</wp:comment_id>
			<wp:comment_author><![CDATA[Winnie]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[6636ku@naver.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.7.228]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2021-06-19 20:30:38]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2021-06-19 11:30:38]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[축하드려요 ㅎㅎ]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1624102237.370324;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1624106982.807014;s:5:"event";s:15:"status-approved";s:4:"user";s:3:"tom";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>10302</wp:comment_id>
			<wp:comment_author><![CDATA[Seungho Jeong]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[sh007.jeong@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.7.228]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2021-06-24 08:54:46]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2021-06-23 23:54:46]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[축하드립니다^^ 포스팅을 통해 좋은 간접 경험을 했습니다~]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1624492485.227286;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1624492632.606272;s:5:"event";s:15:"status-approved";s:4:"user";s:3:"tom";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>12098</wp:comment_id>
			<wp:comment_author><![CDATA[홍서연]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[yoori0303@naver.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.31.252]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2021-11-19 20:06:44]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2021-11-19 11:06:44]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[신입개발자라 그런지 후기글만으로도 많이 배웠고, 저도 리멤버 개발팀처럼 멋진 경험할 수 있는 날이 오기를 꿈꾸게 되네요😊 1등 축하드립니다~!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1637320003.203524;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1637332414.187378;s:5:"event";s:15:"status-approved";s:4:"user";s:3:"tom";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>12185</wp:comment_id>
			<wp:comment_author><![CDATA[아시아 지역 AWS AI/ML GameDay에서 우승한 자랑스런 한국 개발자들 &#8211; 지락문화예술공작단]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>https://jirak.net/wp/%ec%95%84%ec%8b%9c%ec%95%84-%ec%a7%80%ec%97%ad-aws-ai-ml-gameday%ec%97%90%ec%84%9c-%ec%9a%b0%ec%8a%b9%ed%95%9c-%ec%9e%90%eb%9e%91%ec%8a%a4%eb%9f%b0-%ed%95%9c%ea%b5%ad-%ea%b0%9c%eb</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.7.109]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2021-12-17 20:34:30]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2021-12-17 11:34:30]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[…] 상반기 진행 된 AWS GameDay에서 우승했던 후기를 AWS 한국블로그 및 드라마앤컴퍼니 개발블로그 에서 흥미롭게 보았습니다. 그래서 비슷하게 박진감 넘치게, 마치 현 […]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1639740869.678887;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1639742003.378293;s:5:"event";s:15:"status-approved";s:4:"user";s:3:"tom";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[나우 위젯 개발을 통해서 알아보는 리멤버 앱팀의 일 하는 방식]]></title>
		<link>https://blog.dramancompany.com/2021/08/%eb%82%98%ec%9a%b0-%ec%9c%84%ec%a0%af-%ea%b0%9c%eb%b0%9c%ec%9d%84-%ed%86%b5%ed%95%b4%ec%84%9c-%ec%95%8c%ec%95%84%eb%b3%b4%eb%8a%94-%eb%a6%ac%eb%a9%a4%eb%b2%84-%ec%95%b1%ed%8c%80%ec%9d%98-%ec%9d%bc/</link>
		<pubDate>Mon, 02 Aug 2021 00:44:20 +0000</pubDate>
		<dc:creator><![CDATA[pyeongho]]></dc:creator>
		<guid isPermaLink="false">https://blog.dramancompany.com/?p=2124</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph {"fontSize":"normal"} -->
<p class="has-normal-font-size">안녕하세요 리멤버 앱팀의 안드로이드 개발자 김평호 입니다. <br>리멤버에서 명함 관리 이외에도 채용, 커뮤니티 등 비즈니스에 도움이 되는 여러 서비스를 제공하고 있습니다. 오늘 글에서는 그중 "리멤버 나우"라는 서비스에 대해 안드로이드 위젯을 개발한 경험에 대해 공유해 보고자 합니다. 더불어 앱 팀에서는 어떤 프로세스로 개발을 진행 하는지에 대해서도 다뤄볼 예정입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:list {"fontSize":"normal"} -->
<ul class="has-normal-font-size"><li>이 글에서는 다음 내용을 다루고 있습니다.<ul><li>리멤버 나우 위젯의 개발 시작부터 배포 되는 과정</li><li>간단하게 위젯을 만드는 방법<br></li></ul></li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p><strong>리멤버 나우</strong></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>위젯 개발에 대한 내용을 하기 앞서, 리멤버 나우가 어떤 서비스 인지 모를 분들을 위해 간단히 소개해 드리겠습니다. 리멤버 나우는 매일 아침 국내 최고 전문가들이 정리한 데일리 경제/경영 컨텐츠를 제공하는 서비스입니다. 리멤버 나우는 웹 사이트(<a href="https://now.rememberapp.co.kr">https://now.rememberapp.co.kr</a>)로 제공되고&nbsp; 리멤버 앱에서도 바로 접근할 수 있습니다</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":2136,"width":532,"height":498,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large is-resized"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/07/스크린샷-2021-07-30-오전-10.27.29.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/07/스크린샷-2021-07-30-오전-10.27.29-1024x958.png" alt="" class="wp-image-2136" width="532" height="498"/></a><figcaption>&lt;웹 화면(좌)  앱화면(우)&gt;</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph {"textColor":"black","fontSize":"medium"} -->
<p class="has-black-color has-text-color has-medium-font-size">1. 기능 개발의 필요성</p>
<!-- /wp:paragraph -->

<!-- wp:list {"fontSize":"normal"} -->
<ul class="has-normal-font-size"><li>나우 운영팀에서 현재 진입 보다 더 빠르게 접근 할 수 있는 진입점을 만들어 보자는 의견이 나왔고 회의를 통해서 리멤버 나우 위젯을 만들기로 결정했습니다.</li><li>회의에서 논의된 내용을 기반으로 기획자 분이 컨플루언스에 기획서를 정리해주셨고 기획 리뷰 시간을 통해 기획서를 함께 검토했습니다. 기획 내용을 요약하면 아래와 같습니다.<ul><li>안드로이드 나우 위젯을 개발한다.</li><li>최신 글 10개를 리스트로 보여 준다.</li><li>아이템을 클릭하면 리멤버 앱이 실행 되며 클릭한 글을 보여 준다.</li><li>글은 웹뷰를 통해 보여준다.</li><li>위젯을 통하여 webview 를 실행할 때는 해당 경로로 실행하는 사람들의 수를 확인하기 위해 특정 쿼리 파라미터를 함께 넘겨준다.<br></li></ul></li></ul>
<!-- /wp:list -->

<!-- wp:paragraph {"textColor":"black","fontSize":"medium"} -->
<p class="has-black-color has-text-color has-medium-font-size">2. 개발 진행</p>
<!-- /wp:paragraph -->

<!-- wp:list {"fontSize":"normal"} -->
<ul class="has-normal-font-size"><li>안드로이드 파트 논의 <ul><li>개발에 앞서 기본적인 내용을 확인후에 개발 방법에 대한 내용을 파트원과 협의를 진행 합니다. 기존의 방법으로 개발 할때는 상관 없지만 다른 방법으로 진행 할때는 협의를 통해 결정을 하고 있습니다.&nbsp;&nbsp;이번 협의 내용은 개발 방법에 대한 내용이었습니다. 나우 위젯 생성 작업을 진행 하려고 기존 레거시 코드를 활용해 보려고 했지만 기존의 방법보다는 앞으로 리멤버 앱 개발 방법 선택에 도움이 되도록 새로운 방법을 시도 하기로 했습니다. &nbsp;기존 리멤버 앱은 클린아키텍처와 MVP의 아키텍처 방법에 비동기는&nbsp; RxJava1을 이용하고 있습니다. 나우 위젯을 개발할 땐 앞으로 리멤버 앱 개발 방법 선택에 도움이 될 수 있도록 새로운 방법을 시도해보기로 했습니다. 논의 결과 데이터 소스와 View만 분리하는 아키텍처와 코루틴을 이용해보기로 결정했습니다.&nbsp;설계 방법에서&nbsp; 기존 방법을 적용하기에&nbsp; 앱 위젯은 일반적인 형태가 아니었고 기존 리멤버 앱과 완전히 분리 해서 생각 해도 될거라 생각해서 약간의 변경 방법으로 개발을 진행 한다고 했습니다. 그리고 위젯 프로바이더(RemoteViewsServices.RemoteViewsFactory)가 프리젠터의 기능을 대신 할 수 있을거라 생각 했습니다. 그래서 완벽한 패턴을 지키는게 아니라 어느정도 타협한 형태로 개발을 진행 하기로 했습니다. 그리고 비동기 시스템은 Rx 가 아니라 코루틴을 선택 한 이유는 테스트 성향이 많았습니다.&nbsp; 현재 사용중인 Rx 는 버전 1을 사용하고 있고 이를 버전 3으로 업데이트 시킬지 코루틴을 사용할지 아니면 버전 1을 계속 사용 할지 아직 정하지 못 했습니다. 그래서&nbsp; 코루틴도 실 서비스에 적용해 보고 결과를 공유하면 비동기 시스템 선택 할 때 도움이 될거라 판단했습니다. 이런 내용을 팀원과 협의 해서 결정 하게 되었습니다.<br></li></ul></li><li>개발 방법 선택&nbsp;<ul><li>안드로이드 앱 팀에서는 개발방법 일원화를 위해서 노력 하고 있습니다. 이는 기본적인 협업 문서를 통해서 진행을 하고 있습니다. 그리고&nbsp; 안드로이드 스튜디오를 최대한 이용하고 있습니다. 안드로이드 위젯 개발 방법 역시 다양한 방법으로 할 수 있지만 일원화하기 가장 편한 방법으로 스튜디오 자동 생성 기능을 이용하기로 했습니다. 잠시 위젯 개발 방법에 대해서 내용을 작성해 보겠습니다.<br></li></ul></li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>안드로이드 스튜디오를 이용한&nbsp; 위젯 추가 방법 입니다. 우선  프로젝트의 영역의 포커스를 아래처럼 app 이 선택 되도록 합니다</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":2142,"width":631,"height":360,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large is-resized"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/07/스크린샷-2021-07-30-오전-11.28.38.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/07/스크린샷-2021-07-30-오전-11.28.38-1024x585.png" alt="" class="wp-image-2142" width="631" height="360"/></a></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>포커스를 확인후&nbsp; 스튜디오의 메뉴를 클릭합니다. file -&gt; new -&gt; Widget -&gt; App Widget 을 선택 하면 아래와 같은 팝업이 나옵니다. 원하는&nbsp; 값 등을 설정하고 finish 하면 기본적인 설정이 끝납니다.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":2144,"width":624,"height":463,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large is-resized"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/07/스크린샷-2021-07-30-오전-11.59.02.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/07/스크린샷-2021-07-30-오전-11.59.02-1024x761.png" alt="" class="wp-image-2144" width="624" height="463"/></a></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>완료가 되면 아래 처럼 파일 생성되거나 필요한 곳이 수정이 됩니다.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":2145,"width":630,"height":199,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large is-resized"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/07/스크린샷-2021-07-30-오후-12.01.42.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/07/스크린샷-2021-07-30-오후-12.01.42-1024x323.png" alt="" class="wp-image-2145" width="630" height="199"/></a></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>이렇게 하면 기본적인 개발이 완료 되었습니다.&nbsp; 앱을 실행하고 위젯을 확인 해 보면 아래 처럼 위젯이 추가 되었습니다. 안드로이드 스튜디오를 이용하면 매우 쉽게 완료가 됩니다.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":2146,"width":243,"height":500,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large is-resized"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/07/스크린샷-2021-07-30-오후-12.03.31.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/07/스크린샷-2021-07-30-오후-12.03.31-498x1024.png" alt="" class="wp-image-2146" width="243" height="500"/></a></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph {"fontSize":"normal"} -->
<p class="has-normal-font-size"><br>앱 위젯에 리스트 추가 및 주의 할 점</p>
<!-- /wp:paragraph -->

<!-- wp:list {"fontSize":"normal"} -->
<ul class="has-normal-font-size"><li>앱 위젯의 리스트에는 RemoteViewsService, RemoteViewsService.RemoteViewsFactory AppWidgetProvider이 필요합니다. 이런 내용들은 샘플과 함께&nbsp; <a href="https://developer.android.com/guide/topics/appwidgets?hl=ko#collections">안드로이드 개발 문서</a> 에 잘 나와 있습니다.&nbsp;</li><li>참고로 위젯을 개발하면서&nbsp; 주의 할점 RemoteViews 가 모든걸 지원 하지 않습니다. 예를 들어 ConstraintLayout 와 같은 View 는 사용할 수 일반적으로 많이 쓰는 View 가 없으니 유념해서 보셔야 합니다. 그리고&nbsp; 안드로이드 개발을 진행 하면서 <a href="https://developer.android.com/guide/topics/appwidgets?hl=ko">https://developer.android.com/</a> 문서들을 보면서 진행 하는게 좋다고 생각하고 있습니다. 안드로이드 개발에 있어서 <strong>안드로이드 개발문서 + 안드로이드 스튜디오 는 매우 좋은 참고서</strong>라고 생각합니다.</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"textColor":"black","fontSize":"medium"} -->
<p class="has-black-color has-text-color has-medium-font-size">3. 검수진행</p>
<!-- /wp:paragraph -->

<!-- wp:list {"fontSize":"normal"} -->
<ul class="has-normal-font-size"><li>개발이 완료 되면 검수를 진행 하게 됩니다.  검수는 기획, 디자인, QA 총 3개가 있습니다.<br></li><li>검수 용 apk 를 각 팀에 전달&nbsp; 해야 합니다. 이는&nbsp; github actions 를 이용하고 있으며 해당 빌드를 만들기 위해서 TAG 만 추가해 주면 됩니다. 빌드가 완료되면 슬랙으로 아래와 같이 알림이 발생합니다. 해당 쓰레드에 담당자를 멘션 해주면 됩니다.&nbsp;<br></li><li>검수가 진행 되는 동안 이슈가 발생되면 Jira 에 이슈가 등록되고 개발자는 이를 확인해서 처리하는 방법으로 하고 있습니다.</li></ul>
<!-- /wp:list -->

<!-- wp:image {"align":"center","id":2149,"width":588,"height":358,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large is-resized"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/08/스크린샷-2021-08-02-오전-9.00.26.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/08/스크린샷-2021-08-02-오전-9.00.26-1024x623.png" alt="" class="wp-image-2149" width="588" height="358"/></a></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph {"textColor":"black","fontSize":"medium"} -->
<p class="has-black-color has-text-color has-medium-font-size"><br><br>4. PR 리뷰</p>
<!-- /wp:paragraph -->

<!-- wp:list {"fontSize":"normal"} -->
<ul class="has-normal-font-size"><li>너무 당연하지만 검수&nbsp; 끝난 버전이 develop 에&nbsp; merge 하기 위해서 PR을 생성하고 다른 팀원의 코드 리뷰가 끝나야 합니다.&nbsp;<br></li><li>리멤버 안드로이드 파트 만의 시스템 “PR 보드” 입니다. 안드로이드 파트에서는&nbsp; PR 보기 편하게 작게 만드는걸 목표로 하고 있습니다. 이는&nbsp; 갯수가 너무 늘어나는 단점도 있습니다. 특정 기능의 경우 PR이 10개가 넘을수도 있습니다.&nbsp; 여러명이 많은 PR 을 생성하다 보니 확인이 어려워 지는 경우가 많아졌습니다.&nbsp; 그래서 아래와 같이 github 보드를 이용해서&nbsp; 생성한 PR에 대해서 카드를 만들고 리뷰어에게 카드를 전달해 주면 해당 카드를 보고 자신이 해야 하는 PR 을 확인 할 수있습니다. 리뷰가 진행되어 의견이 있으면 해당 카드를 담당자에게 다시 옮겨서 확인 할 수 있도록 해주는 방법을 사용하고 있습니다.</li></ul>
<!-- /wp:list -->

<!-- wp:image {"align":"center","id":2151,"width":799,"height":272,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large is-resized"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/08/스크린샷-2021-08-02-오전-9.06.30.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/08/스크린샷-2021-08-02-오전-9.06.30-1024x346.png" alt="" class="wp-image-2151" width="799" height="272"/></a></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph {"textColor":"black","fontSize":"medium"} -->
<p class="has-black-color has-text-color has-medium-font-size"><br><br>5. 배포</p>
<!-- /wp:paragraph -->

<!-- wp:list {"fontSize":"normal"} -->
<ul class="has-normal-font-size"><li>리멤버 안에 여러 서비스가 있고 각각의 크루로 나누어져서 일을 진행 하기 때문에 배포일을 맞췄습니다. 이를 “버스” 라는 용어로 사용합니다. 화요일 릴리즈를 위해서 각자 기능 브랜치에서 개발하던 걸 QA 마치고 금요일 까지&nbsp; 릴리즈 브랜치에 merge 합니다. 그리고 통합 테스트를 위한 버전을 생성해서&nbsp; QA팀에 전달 합니다.<br></li><li>통합 버전 테스트가 완료 되면 배포용 빌드를 시작 합니다. 배포 빌드 역시 TAG 를 추가하면 자동으로 번들과 apk 가 생성되어 Slack으로 공유 됩니다.<br></li><li>해당 빌드를 이용해서 실서버 최종 테스트 이후 QA 팀에서 출시를 합니다.</li></ul>
<!-- /wp:list -->

<!-- wp:image {"align":"center","id":2152,"width":480,"height":519,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large is-resized"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/08/스크린샷-2021-08-02-오전-9.21.42.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/08/스크린샷-2021-08-02-오전-9.21.42-946x1024.png" alt="" class="wp-image-2152" width="480" height="519"/></a></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"textColor":"black","fontSize":"medium"} -->
<p class="has-black-color has-text-color has-medium-font-size">6. 배포 후 지표 확인 및 학습</p>
<!-- /wp:paragraph -->

<!-- wp:list {"fontSize":"normal"} -->
<ul class="has-normal-font-size"><li>배포가 되었다고 끝이 아닙니다. 해당 개발에 대한 데이터 지표를 확인하고 있습니다. 다른 회사 분들과 대화 할 때 성과를 측정해서 상벌을 하기 위한 내용이 아닌지 궁금해 합니다. 데이터 지표를 확인 하는 이유는 성과를 측정하는 내용은 맞습니다. 하지만 상벌을 하기 위해서가 아닙니다. 과거의 자료는 미래의 기능 선택 할 시점에 도움을 줄 수 있기 때문입니다.<br></li><li>예를 들어 리멤버 나우 위젯의 경우에도 지표의 엄청난 성장을 보여주지  못했습니다.  하지만 이는 사용자들이 안드로이드 위젯의 사용은 제한적으로 사용하는걸 알게 되었고 이를 다음 기획 할때는 데이터를 반영 합니다. 동일한 실패를 반복 하지 않게 하기 위해서 입니다.<br></li><li>위젯을 개발 하면서 코루틴을 사용했던 경험, 기존에 개발 방법이 아닌 간소화된 개발을 진행 했을때의 경험을 팀원들과 공유했습니다.</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size"><strong>리멤버 나우 위젯&nbsp; 개발 후기</strong></p>
<!-- /wp:paragraph -->

<!-- wp:list {"fontSize":"normal"} -->
<ul class="has-normal-font-size"><li>이글을 통해서 리멤버 앱팀이 기능 개발을 진행을 하는 프로세스에 대해서 알아 보았습니다. 제가 개발 프로세스에 대한 주제를 선택한 이유는 이직을 준비 하면서 가장 궁금 했기 때문 입니다. 다른 회사는 어떤 방법으로 개발 하고 어떻게 개발이 진행 되는지 이런 부분은 알수가 없어서 항상 두려움이 많았기 때문에 프로세스에 대한 내용이 있으면 도움이 것으로 생각하고 작성해 보았습니다. 처음으로 공적인 공간에 글을 작성하는 부담은 있었지만 @담형님의 도움으로 이렇게 마무리까지 할수 있었습니다.&nbsp;<br></li><li>드라마에서는 여러 포지션에서 채용을 진행하고 있으니&nbsp; 함께 개발해 보고 싶다고 생각되면 <a href="https://hello.remember.co.kr/recruit">https://hello.remember.co.kr/recruit</a> 링크를 클릭해서 지원해 주세요.<br></li><li>오랜 고민과 완벽한 전략 대신 빠르게 실행하고 학습해야 다음에는 고민을 줄어 들고 완벽한 전략을 만들수 있다고 생각하고 있습니다.&nbsp; 이번 리멤버 나우 위젯 개발을 통해서 빠른 실행으로 결과를 확인 했고 이는 다음번 개발에 많은 도움이 될거라 생각합니다.<br></li><li>그리고 아직 리멤버 나우를 안보시는 분들은   추가해서 유익한 뉴스레터를 받아보세요.&nbsp;<br>감사합니다.</li></ul>
<!-- /wp:list -->

<!-- wp:image {"align":"center","id":2153,"width":613,"height":621,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large is-resized"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/08/스크린샷-2021-08-02-오전-9.27.23.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/08/스크린샷-2021-08-02-오전-9.27.23-1011x1024.png" alt="" class="wp-image-2153" width="613" height="621"/></a></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[리멤버에서 명함 관리 이외에도 채용, 커뮤니티 등 비즈니스에 도움이 되는 여러 서비스를 제공하고 있습니다. 오늘 글에서는 그중 "리멤버 나우"라는 서비스에 대해 안드로이드 위젯을 개발한 경험에 대해 공유해보고자합니다. 더불어 앱 팀에서는 어떤 프로세스로 개발을 진행 하는지에 대해서도 다뤄볼 예정입니다.]]></excerpt:encoded>
		<wp:post_id>2124</wp:post_id>
		<wp:post_date><![CDATA[2021-08-02 09:44:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-08-02 00:44:20]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-02-22 14:37:59]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-02-22 05:37:59]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%eb%82%98%ec%9a%b0-%ec%9c%84%ec%a0%af-%ea%b0%9c%eb%b0%9c%ec%9d%84-%ed%86%b5%ed%95%b4%ec%84%9c-%ec%95%8c%ec%95%84%eb%b3%b4%eb%8a%94-%eb%a6%ac%eb%a9%a4%eb%b2%84-%ec%95%b1%ed%8c%80%ec%9d%98-%ec%9d%bc]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="android"><![CDATA[Android]]></category>
		<category domain="post_tag" nicename="now"><![CDATA[now]]></category>
		<category domain="post_tag" nicename="remember_app"><![CDATA[remember_app]]></category>
		<category domain="category" nicename="develop"><![CDATA[Tech]]></category>
		<category domain="post_tag" nicename="widget"><![CDATA[widget]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729518751;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:2174;}i:1;a:1:{s:2:"id";i:1850;}i:2;a:1:{s:2:"id";i:2019;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_single_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:23:{s:8:"subtitle";s:0:"";s:6:"format";s:8:"standard";s:5:"video";s:0:"";s:7:"gallery";s:0:"";s:11:"source_name";s:0:"";s:10:"source_url";s:0:"";s:8:"via_name";s:0:"";s:7:"via_url";s:0:"";s:17:"override_template";s:1:"0";s:8:"override";a:1:{i:0;a:32:{s:8:"template";s:1:"1";s:18:"single_blog_custom";s:0:"";s:8:"parallax";s:1:"1";s:10:"fullscreen";s:1:"1";s:6:"layout";s:13:"right-sidebar";s:7:"sidebar";s:15:"default-sidebar";s:14:"second_sidebar";s:15:"default-sidebar";s:14:"sticky_sidebar";s:1:"1";s:14:"share_position";s:3:"top";s:17:"share_float_style";s:16:"share-monocrhome";s:18:"show_share_counter";s:1:"1";s:17:"show_view_counter";s:1:"1";s:13:"show_featured";s:1:"1";s:14:"show_post_meta";s:1:"1";s:16:"show_post_author";s:1:"1";s:22:"show_post_author_image";s:1:"1";s:14:"show_post_date";s:1:"1";s:16:"post_date_format";s:7:"default";s:23:"post_date_format_custom";s:5:"Y/m/d";s:18:"show_post_category";s:1:"1";s:22:"show_post_reading_time";s:1:"0";s:21:"post_reading_time_wpm";s:3:"300";s:16:"show_zoom_button";s:1:"0";s:20:"zoom_button_out_step";s:1:"2";s:19:"zoom_button_in_step";s:1:"3";s:13:"show_post_tag";s:1:"1";s:19:"show_prev_next_post";s:1:"1";s:15:"show_popup_post";s:1:"1";s:17:"number_popup_post";s:1:"1";s:15:"show_author_box";s:1:"0";s:17:"show_post_related";s:1:"0";s:24:"show_inline_post_related";s:1:"0";}}s:19:"override_image_size";s:1:"0";s:14:"image_override";a:1:{i:0;a:2:{s:26:"single_post_thumbnail_size";s:8:"crop-500";s:24:"single_post_gallery_size";s:8:"crop-500";}}s:13:"trending_post";s:1:"0";s:22:"trending_post_position";s:4:"meta";s:19:"trending_post_label";s:8:"Trending";s:14:"sponsored_post";s:1:"0";s:20:"sponsored_post_label";s:12:"Sponsored by";s:19:"sponsored_post_name";s:0:"";s:18:"sponsored_post_url";s:0:"";s:26:"sponsored_post_logo_enable";s:1:"0";s:19:"sponsored_post_logo";s:0:"";s:19:"sponsored_post_desc";s:0:"";s:10:"disable_ad";s:1:"0";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle_flag]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[2159]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[4]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:2:"id";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[30]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_estimated-reading-time-minutes]]></wp:meta_key>
		<wp:meta_value><![CDATA[9]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_edit_mode]]></wp:meta_key>
		<wp:meta_value><![CDATA[builder]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_template_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[wp-post]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_version]]></wp:meta_key>
		<wp:meta_value><![CDATA[3.8.0]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>10551</wp:comment_id>
			<wp:comment_author><![CDATA[핫진]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[plumhj@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.11.94]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2021-08-05 14:22:36]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2021-08-05 05:22:36]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[검수 후 PR리뷰를 진행하시는데 PR리뷰를 통해 코드가 수정된다면 다시 검수하기를 진행하시나요?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1628140956.284334;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1628141157.669699;s:5:"event";s:15:"status-approved";s:4:"user";s:8:"pyeongho";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>10552</wp:comment_id>
			<wp:comment_author><![CDATA[평호 김]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[pyeongho@dramancompany.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.31.214]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2021-08-05 15:09:28]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2021-08-05 06:09:28]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[안녕하세요 핫진님 감사합니다.
제가 경험 했던내용으로 답변 드리겠습니다.

- 담당자가 선택 하거나 PR을 요청한 사람이 검수 다시 진행을 요청하는 경우가 있었습니다.
- 하지만 재검수 진행 할 정도로 변화가 있는 PR은 많이 없었습니다. 개발을 시작 할 시점에 기본적인 개발 방법이 공유되고 또 새로운운 방법의 경우 협의를 통해서 결정 했기때문이라고 생각합니다.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>10551</wp:comment_parent>
			<wp:comment_user_id>41</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1628143768.585834;s:5:"event";s:9:"check-ham";s:4:"user";s:8:"pyeongho";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>11242</wp:comment_id>
			<wp:comment_author><![CDATA[JOY]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[joy@nextuncorn.kr]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.nextunicorn.kr/newsroom</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.11.94]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2021-08-18 14:22:28]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2021-08-18 05:22:28]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[안녕하세요 평호님, 저는 넥스트유니콘의 뉴스룸을 만들어 나가고 있는 프로덕트 매니저 조이입니다.

평호님의 글을 통해 리멤버팀의 개발 과정을 엿볼 수 있어 흥미롭게 읽었습니다. 글을 읽으며, 넥스트유니콘 유저에게 소개하면 유저에게 좋은 인사이트를 드릴 수 있겠다는 생각이 들었습니다 :)

해당 콘텐츠를 뉴스룸 유저에게 소개해보시는건 어떠신가요?

joy@nextunicorn.kr 제 메일로 편하게 회신 주시면, 뉴스룸에서 좋은 콘텐츠를 소개할 수 있는 기회가 될 것 같습니다:)]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1629264148.066138;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[리멤버의 온보딩 과정을 소개합니다]]></title>
		<link>https://blog.dramancompany.com/2021/08/%eb%a6%ac%eb%a9%a4%eb%b2%84%ec%9d%98-%ec%98%a8%eb%b3%b4%eb%94%a9-%ea%b3%bc%ec%a0%95%ec%9d%84-%ec%86%8c%ea%b0%9c%ed%95%a9%eb%8b%88%eb%8b%a4/</link>
		<pubDate>Mon, 30 Aug 2021 02:12:30 +0000</pubDate>
		<dc:creator><![CDATA[s.sunyoung]]></dc:creator>
		<guid isPermaLink="false">https://blog.dramancompany.com/?p=2174</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>안녕하세요! 리멤버에서 Platform Crew에 속해있는 서버 개발자 신선영입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>저는 2개월 전, 리멤버에 입사해서 온보딩 과정을 무사히 끝내고 드라마인이 되었습니다! 🙌 이번 글에서는 제가 드며들기(드라마에 스며들다, 드라마앤컴퍼니에 충분히 익숙해지는 것을 의미합니다)까지 어떤 온보딩 과정을 거쳤는지의 경험을 공유해보고자 합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>리멤버의 문화에 관한 Culture Part, 그리고 리멤버의 서버 개발자 온보딩 과정과 웹 개발자 온보딩 과정을 소개하는 Tech Part로 나누어 소개해드리려고 합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":1} -->
<h1>Culture</h1>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>드라마인이 되기 위해서는 리멤버의 여러 문화들에 적응하며 익숙해져야 합니다. 그 때문에 저희 회사에서는 신규 입사자분들을 위해 여러 가지 문화가 있습니다. 이번 파트에서는 제가 경험했던 <strong>컬처 온보딩 및 조직 문화</strong>를 간단하게 소개해 드리겠습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>OT 진행</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>리멤버에서는 동료분들이 회사 컬처에 대해 조금 더 깊게 알 수 있도록 다양한 OT가 준비되어있습니다. 제가 진행했던 OT들은 아래와 같습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>리멤버의 비전</li><li>리멤버의 히스토리</li><li>드라마웨이(리멤버가 일하는 방식) 소개</li><li>OKR</li><li>회사 복지</li><li>보안 교육</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>OT는 한 사람이 진행하는 게 아닌, 해당 업무와 관련된 분들이 진행을 맡게 됩니다. OT의 종류에 따라 다르지만 대표님, 피플팀, 보안팀 등 자신의 업무 분야에 관한 내용을 맡아 담당해주시기 때문에 보다 세세한 설명을 들을 수 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>또한 문서화도 잘 되어있기 때문에 OT를 듣다 중간에 놓친 부분에 대해서는 문서에 기재된 내용을 읽으면 됩니다. OT는 하루에 몰아서 하는 게 아닌, 일주일 동안 하루에 2~3개씩, 하나당 30분~1시간 정도 짧게 짧게 진행됐기 때문에 무리 없이 들을 수 있었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>중간중간 티타임</h2>
<!-- /wp:heading -->

<!-- wp:heading {"level":3} -->
<h3>신규 입사자 티미팅</h3>
<!-- /wp:heading -->

<!-- wp:image {"align":"center","id":2176,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/08/Untitled.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/08/Untitled-1024x661.png" alt="" class="wp-image-2176"/></a><figcaption>충격의 홈 하이재킹 현장 😱</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>리멤버에서는 신규 입사자 티미팅이라고 해서, 주기적으로 신규 입사자들끼리 친목을 도모할 수 있는 티미팅 시간이 있습니다. 재택근무를 하고 있기 때문에 얼굴을 자주 보지 못해 티타임 시간을 이용해 동료들과 소통이 가능했습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>크루 회식</h3>
<!-- /wp:heading -->

<!-- wp:image {"align":"center","id":2177,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/08/Untitled-1.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/08/Untitled-1-1024x540.png" alt="" class="wp-image-2177"/></a><figcaption>답이 뭘까요? 😉</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>티타임 말고도 크루 간의 친목을 도모하기 위해 회식을 진행했는데요. 시국이 시국인 만큼 Gather에서 모여 같이 저녁을 먹으면서 이야기를 하고 끝나면 상품을 걸고 다 같이 재미있는 그림 퀴즈를 진행하기도 했습니다. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>친밥</h3>
<!-- /wp:heading -->

<!-- wp:image {"align":"center","id":2179,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/08/Untitled-2.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/08/Untitled-2-1024x935.png" alt="" class="wp-image-2179"/></a><figcaption>행복했던 첫 친밥 ... 😇</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>리멤버에서는 한 달에 한 번, 랜덤으로 3-4명씩 조를 지어 점심시간에 온라인으로 같이 점심을 먹는 문화가 있습니다. 재택을 하다 보니 관련이 없는 크루에 속해있는 동료분과는 이야기할 기회가 전혀 없는데, 친밥이라는 기회로 더 많은 동료분들과 이야기를 하니 너무 즐거웠습니다! 👏</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":1} -->
<h1>Tech - Server</h1>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>위 파트가 드라마인이 되기 위해 거치는 과정이라면, 지금부터 소개해 드릴 파트는 <strong>리멤버의 서버 개발자가 되기 위해 진행했던 온보딩 과정</strong>입니다. 이 온보딩 과정은 크루, 직군별로 차이가 있을 수 있으며, 기간 역시도 개개인에 따라 조정될 수 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Ruby와 친해지기</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>리멤버에서는 기본적으로 Ruby를 사용하기 때문에 기존에 Java를 사용해서 개발했던 저는 Ruby라는 새로운 언어를 익혀야 했습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:quote -->
<blockquote class="wp-block-quote"><p>무조건 Ruby로 개발을 해야 하나요? 왜 온보딩 과정에서 Ruby를 익혀야 하나요?<br><br>아닙니다! Platform Crew에서는 신규 프로젝트는 Java &amp; Spring으로 개발하지만, 기존 시스템은 Ruby on Rails로 이루어져 있기 때문에 Ruby를 익히는 과정이 온보딩에 존재합니다.</p></blockquote>
<!-- /wp:quote -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>그래서 저는 입사하고 자유롭게 Ruby 공부를 할 수 있는 시간을 받았습니다. Ruby의 필독서라고 불리는 <a href="https://book.naver.com/bookdb/book_detail.nhn?bid=9766333">곡괭이 책</a>과 동료분이 추천해주신 튜토리얼을 따라 하며 기초를 다졌습니다. Java &amp; Spring와 비교해서 Ruby on Rails에는 어떤 특징이 있는지 궁금하신 분이 계신다면, 이 주제로 <a href="https://blog.dramancompany.com/2020/11/java-spring-ruby-on-rails/">기술 블로그에 작성된 글</a>이 있으니, 읽어보시는 것을 추천합니다! 😉</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>입사 과제 포팅해보기</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>슬슬 Ruby에 익숙해지게 되자, 작은 프로젝트를 Ruby on Rails로 포팅하는 프로젝트를 2주간 진행하게 되었습니다. 처음에는 "너무 못 짜서 놀라시면 어떻게 하지..."라는 걱정도 있었지만, 매일 Q&amp;A 시간을 가지며 궁금한 점을 물어볼 수도 있는 자리도 있었고, 세세하게 코드리뷰를 해주시며 칭찬도 많이 해주셔서(칭찬은 고래를 춤추게 합니다 🐳) 무리 없이 포팅 프로젝트를 끝마치게 되었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":2180,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/08/Untitled-3.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/08/Untitled-3-1024x667.png" alt="" class="wp-image-2180"/></a><figcaption>감동적인 코드리뷰들 😭</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:image {"align":"center","id":2182,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/08/Untitled-5.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/08/Untitled-5-1024x484.png" alt="" class="wp-image-2182"/></a></figure></div>
<!-- /wp:image -->

<!-- wp:image {"align":"center","id":2183,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/08/Untitled-6.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/08/Untitled-6-1024x491.png" alt="" class="wp-image-2183"/></a></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>정말 작은 이슈부터</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>한 달이라는 기간 동안 Ruby on Rails를 사용해보면서 점점 익숙해져 갔습니다. Ruby가 비교적 러닝 커브가 낮게 만들어진 언어였기 때문에 익히는 데까지는 시간이 오래 걸리지 않았고, 어느 정도 코드를 읽을 수 있을 정도의 레벨로 성장했습니다! 👏</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>포팅 프로젝트가 모두 끝나고 정말 작은 이슈부터 하나씩 진행하게 되었습니다. 처음에는 그대로 따라 하면 되는 이슈부터, 점점 조금씩 생각을 해야 하는 이슈까지 점점 이슈의 크기를 키워나갔습니다. 처음에는 이슈 자체를 해결하는 시간은 별로 걸리지 않지만, 이슈를 해결하며 많은 것들을 익힐 수 있었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>배포 플로우</li><li>코드리뷰</li><li>리멤버의 Git-flow</li><li>코드 스타일</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>이슈도 그냥 배정해주는 것이 아닌 개인의 선호도, 추후에 맡을 일과의 관련성, 우선순위, 난이도 등에 따라 이슈를 배정해주기 때문에 내가 해결할 수 있고 재미있게 할 수 있는 이슈를 배정받았습니다. 또한 이슈를 진행하다가 막히는 부분이 있으면 페어 프로그래밍을 요청할 수도 있고, 슬랙으로 자유롭게 질문도 가능한 문화를 지향하고 있기 때문에 크게 막히는 부분 없이 이슈를 진행할 수 있었습니다. </p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":2194,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/08/SE-a001bdc7-2293-4178-8f9a-23163d4b9683.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/08/SE-a001bdc7-2293-4178-8f9a-23163d4b9683-1024x808.png" alt="" class="wp-image-2194"/></a><figcaption>🐳🎶</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>확실히 프로덕션에 기여를 하는 이슈를 하다 보니 이런 칭찬도 들을 수 있게 되었고, 며칠 동안 계속 보이던 에러가 배포를 하고 나자 에러 없이 깨끗하게 돌아가는 모습을 보니 너무 뿌듯했습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>이렇게 저는 온보딩을 마치고 성공적으로 드며들게 되었습니다! 처음에는 새로운 언어를 배우는 것에 대한 걱정도 많이 되었고, 잘 적응할 수 있을까 걱정도 많이 되었지만, 너무 좋은 동료분들 덕분에 잘 마무리할 수 있었던 것 같습니다. 🌮🌮</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":1} -->
<h1>Tech - Frontend</h1>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>안녕하세요! Content Crew에 속해있는 웹 개발자 장용석입니다. 웹 개발자는 서버 개발자의 온보딩 과정과는 조금 다르게 이루어져 있는데요. 지금부터는 리멤버의<strong> 웹 개발자 온보딩 과정</strong>은 어떻게 이루어져 있는지 소개해드리려고 합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>서비스 파악하기</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>리멤버는 다양한 서비스를 웹에서 운영하고 있습니다. 흔히 알고 있는 명함관리 서비스뿐만 아니라 경력직 이직을 위한 서비스인 리멤버 커리어부터, 커뮤니티, 나우 등이 있죠. 첫 주는 이러한 다양한 리멤버 서비스들에 대한 이해도를 높이고, 나아가 어떤 업무를 진행하게 될지에 대해 알아보기 위한 시간을 가지게 됩니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>서비스들이 너무 많아 어떻게 다 파악할 수 있을지 걱정이 되었지만, 문서화가 잘 되어있어 어렵지 않게 파악할 수 있었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":2184,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/08/wiki.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/08/wiki.png" alt="" class="wp-image-2184"/></a><figcaption>짱짱한 문서화</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>테스트 서버와 위키를 통해 파악한 서비스들의 사이트맵을 그려보고, 각 페이지의 기능에 대해서 간단히 정리해보는 시간을 가졌습니다. 이런 과정을 통해 서비스들의 구조와 서비스별 분담, 기술 스택에 대해 알아볼 수 있었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":2185,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/08/page.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/08/page.png" alt="" class="wp-image-2185"/></a></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>리멤버 나우 클로닝</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>리멤버 서비스들을 파악하다 보면, 리멤버의 많은 서비스들이 Next JS를 사용 하고 있다는걸 알 수 있었는데요. 앞의 서비스 파악 과정에 뒤이어, 리멤버의 기술 스택에 대해 익숙해지는 시간을 가졌습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>현재 리멤버 나우는 wordPress기반으로 구성되어 있습니다. 그래서 나우 서비스를 Next JS와 TypeScript, StyledComponents 그리고 리멤버 UI 를 사용해서 클로닝 해보며 리멤버의 코드 스타일과 새로운 기술 스택에 적응하는 시간을 가졌습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":2188,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/08/next-1.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/08/next-1-1024x308.png" alt="" class="wp-image-2188"/></a></figure></div>
<!-- /wp:image -->

<!-- wp:image {"align":"center","id":2189,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/08/remeber_ui-1.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/08/remeber_ui-1.png" alt="" class="wp-image-2189"/></a></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>그 중 Next JS는 처음 사용해보는 기술이라 익숙하지 않았습니다. 하지만 활발한 코드리뷰와 친절한 동료분들 덕분에 완성 할 수 있었습니다!</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":2190,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/08/clone.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/08/clone.png" alt="" class="wp-image-2190"/></a></figure></div>
<!-- /wp:image -->

<!-- wp:image {"align":"center","id":2206,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/08/제목-없음-1-1.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/08/제목-없음-1-1-1024x652.png" alt="" class="wp-image-2206"/></a><figcaption>감동적인 코드리뷰들 😭</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":2192,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/08/now.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/08/now-494x1024.png" alt="" class="wp-image-2192"/></a><figcaption>완성된 Next Now</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>리멤버의 웹 개발자들은 해당 서비스들의 인프라까지 함께 다루고 있습니다. 저 또한 온보딩으로 진행했던 나우 클로닝을 다른 리멤버 서비스처럼 AWS Fargate를 통해 배포하는 과정을 거쳤습니다. 평소에도 인프라에 관심이 많았던 터라, 인프라에도 웹 개발자가 관여할 수 있다는 점이 정말 설레였습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":2193,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/08/success.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/08/success.png" alt="" class="wp-image-2193"/></a></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>위의 과정들을 거치고나면, 크루(Crew)라는 제품 조직에 속하게 되고, 업무를 배정 받게 됩니다. 서비스의 작은 이슈부터 기능 추가을 하기도 하고 리팩토링 과정을 거치거나, 다양한 이슈를 해결하고 배포 해볼 수도 있습니다. 이런 과정을 통해 리멤버에 완벽하게 적응하게 되었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":1} -->
<h1>마치며</h1>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>지금까지 리멤버의 온보딩 과정을 소개드렸습니다. 어떻게 하면 회사에 더 잘 적응할 수 있을지 늘 고민하고 있으며 온보딩 프로세스는 계속해서 발전중입니다. 현재 저희 회사에서는 활발한 채용이 진행중이니, 많은 관심 부탁드립니다!</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>읽어주셔서 감사합니다 🙂</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2174</wp:post_id>
		<wp:post_date><![CDATA[2021-08-30 11:12:30]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-08-30 02:12:30]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-08-30 12:04:48]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-08-30 03:04:48]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%eb%a6%ac%eb%a9%a4%eb%b2%84%ec%9d%98-%ec%98%a8%eb%b3%b4%eb%94%a9-%ea%b3%bc%ec%a0%95%ec%9d%84-%ec%86%8c%ea%b0%9c%ed%95%a9%eb%8b%88%eb%8b%a4]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="develop"><![CDATA[Tech]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729442728;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:1783;}i:1;a:1:{s:2:"id";i:2330;}i:2;a:1:{s:2:"id";i:2393;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_single_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:17:{s:8:"subtitle";s:0:"";s:6:"format";s:8:"standard";s:5:"video";s:0:"";s:7:"gallery";s:0:"";s:11:"source_name";s:0:"";s:10:"source_url";s:0:"";s:8:"via_name";s:0:"";s:7:"via_url";s:0:"";s:8:"override";a:1:{i:0;a:27:{s:8:"template";s:1:"1";s:18:"single_blog_custom";s:0:"";s:8:"parallax";s:1:"1";s:10:"fullscreen";s:1:"1";s:6:"layout";s:13:"right-sidebar";s:7:"sidebar";s:0:"";s:14:"second_sidebar";s:0:"";s:14:"sticky_sidebar";s:1:"1";s:14:"share_position";s:0:"";s:17:"share_float_style";s:0:"";s:18:"show_share_counter";s:1:"1";s:17:"show_view_counter";s:1:"1";s:13:"show_featured";s:1:"1";s:14:"show_post_meta";s:1:"1";s:16:"show_post_author";s:1:"1";s:22:"show_post_author_image";s:1:"1";s:14:"show_post_date";s:1:"1";s:16:"post_date_format";s:0:"";s:23:"post_date_format_custom";s:0:"";s:18:"show_post_category";s:1:"1";s:21:"post_reading_time_wpm";s:0:"";s:20:"zoom_button_out_step";s:1:"1";s:19:"zoom_button_in_step";s:1:"1";s:13:"show_post_tag";s:1:"1";s:19:"show_prev_next_post";s:1:"1";s:15:"show_popup_post";s:1:"1";s:17:"number_popup_post";s:1:"1";}}s:14:"image_override";a:1:{i:0;a:2:{s:26:"single_post_thumbnail_size";s:0:"";s:24:"single_post_gallery_size";s:0:"";}}s:22:"trending_post_position";s:0:"";s:19:"trending_post_label";s:0:"";s:20:"sponsored_post_label";s:0:"";s:19:"sponsored_post_name";s:0:"";s:18:"sponsored_post_url";s:0:"";s:19:"sponsored_post_logo";s:0:"";s:19:"sponsored_post_desc";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle_flag]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[40]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_format_gallery_images]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:2:"id";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_estimated-reading-time-minutes]]></wp:meta_key>
		<wp:meta_value><![CDATA[8]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[2177]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[병렬테스트로 Rspec 테스트 속도 줄이기]]></title>
		<link>https://blog.dramancompany.com/2021/10/%eb%b3%91%eb%a0%ac%ed%85%8c%ec%8a%a4%ed%8a%b8%eb%a1%9c-rspec-%ed%85%8c%ec%8a%a4%ed%8a%b8-%ec%86%8d%eb%8f%84-%ec%a4%84%ec%9d%b4%ea%b8%b0/</link>
		<pubDate>Mon, 25 Oct 2021 03:11:40 +0000</pubDate>
		<dc:creator><![CDATA[sj.sa]]></dc:creator>
		<guid isPermaLink="false">https://blog.dramancompany.com/?p=2220</guid>
		<description></description>
		<content:encoded><![CDATA[<p><!-- wp:heading {"level":3} --></p>
<h3><strong>테스트코드를 작성할 필요가 있나요??</strong></h3>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p>입사 이후 테스트 코드를 무조건 작성해야 한다는 말을 듣고 리더에게 했던 질문입니다.<br>테스트 코드 작성 경험이 없던 저는 기능 개발할 시간도 부족한데 테스트 코드를 작성하는 것은 비효율적이라는 일이라고 생각했습니다.<br>그러다 보니 처음에는 테스트 범위를 제대로 파악하지 못하거나 단순히 통과만 하게 하는 테스트 코드를 작성했습니다. <br>지금은 테스트 코드의 이점을 많이 체감하고 있습니다. <br>특히 배포 후 발견하지 못한 사이드 이펙트가 있을까 걱정하던 저에게 좀 더 자신감이 붙었고 버그 양도 줄어들었습니다.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:image {"align":"center","id":2222,"width":687,"height":325,"sizeSlug":"large","linkDestination":"media"} --></p>
<figure><a href="https://blog.dramancompany.com/wp-content/uploads/2021/10/스크린샷-2021-10-25-오전-10.54.15.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/10/스크린샷-2021-10-25-오전-10.54.15-1024x484.png" alt="" width="687" height="325"></a></figure>
<p><!-- /wp:image --></p>
<p><!-- wp:image {"align":"center","id":2221,"width":684,"height":508,"sizeSlug":"large","linkDestination":"media"} --></p>
<figure><a href="https://blog.dramancompany.com/wp-content/uploads/2021/10/스크린샷-2021-10-25-오전-10.54.09.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/10/스크린샷-2021-10-25-오전-10.54.09-1024x761.png" alt="" width="684" height="508"></a></figure>
<p><!-- /wp:image --></p>
<p><!-- wp:paragraph --></p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:heading {"level":3} --></p>
<h3><strong>늘어만 가는 테스트 코드와 시간</strong></h3>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p>프로젝트에 기능이 추가될수록 테스트 코드는 늘어나며 테스트 코드를 실행하는 속도 또한 비례해서 증가합니다.<br>테스트 코드를 실행하는 시간이 길어질수록 개발자의 생산성은 저하됩니다. <br>리멤버에는 만 개가 넘는 테스트 코드가 있다 보니 테스트 코드 실행이 오래 걸리는 프로젝트는 한 시간이 넘게 걸리기도 합니다. <br>이 시간을 줄이기 위해 병렬적으로 테스트를 실행하는 방법을 적용해보게 되었습니다.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:heading {"level":3} --></p>
<h3><strong>병렬 테스트</strong></h3>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p>리멤버의 많은 서버 프로젝트는 Ruby on Rails로 개발되고 있고 이를 위한 테스트 프레임워크는 RSpec을 사용하고 있습니다.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>Ruby on Rails 6부터는 병렬 테스트 기능이 공식적으로 포함되었으나 아쉽게도 RSpec과 다른 테스트 프레임워크인 MiniTest에 대해서만 그 기능을 지원하고 있습니다. <br>따라서 RSpec을 사용하는 저희는 이 기능을 이용할 수 없었고 대체재를 찾던 중 RSpec, UnitTest 등 다양한 테스트 프레임워크를 지원하는 <br>병렬 테스트 라이브러리 "parallel_tests"<a href="https://github.com/grosser/parallel_tests">(링크)</a>를 찾게 되었습니다.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>참고: 이 글을 쓰는 시점에서는 Ruby on Rails에서 RSpec에 대한 병렬 테스트 기능을 지원하지 않지만 추후에는 지원이 가능할지도 모릅니다. 관련된 내용은 GitHub 이슈<a href="https://github.com/rspec/rspec-rails/issues/2104">(링크)</a>가 생성되어있으니 참고하시길 바랍니다.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:heading {"level":3} --></p>
<h3><strong>parallel_tests</strong></h3>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p>최근 대부분 컴퓨터는 여러 대의 CPU 코어를 갖고 있지만 RSpec은 기본적으로 하나의 CPU 코어만 사용합니다. <br>병렬 테스트는 여러 CPU 코어를 활용하여 테스트 코드를 그룹으로 나눠 동시에 실행합니다.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>앞서 말씀드린 것처럼 parallel_tests는 여러 테스트 프레임워크를 지원하지만, 이 글에서는 RSpec을 기준으로 작성하고 있습니다.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:heading {"level":4} --></p>
<h4><strong>설치</strong></h4>
<p><!-- /wp:heading --></p>
<p><!-- wp:code --></p>
<pre><code>gem 'parallel_tests', group: [:test]</code></pre>
<p><!-- /wp:code --></p>
<p><!-- wp:heading {"level":4} --></p>
<h4><strong>데이터베이스 설정</strong></h4>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p>테스트 코드는 각자 데이터 침범 없이 독립적으로 실행되어야 하므로 parallel_tests는 각 테스트 그룹에 대해<br>테스트를 실행하는 프로세스별로 독립된 데이터베이스를 사용합니다.<br>각 프로세스에서 데이터베이스를 사용하기 위해 다음과 같이&nbsp;<b>config/database.yml</b>&nbsp;파일의<br>test environment에<b>&nbsp;TEST_ENV_NUMBER&nbsp;</b>환경 변수를 데이터베이스 이름 뒤에 추가합니다.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:block {"ref":2223} /--></p>
<p><!-- wp:paragraph --></p>
<p>테스트 프로세스당 한 개의 데이터베이스를 사용하도록 설정하였으니 이제 데이터베이스를 생성해야 합니다.<br>아래의 명령어는 DB를 생성 후 스키마 로드까지 해줍니다. <br>기본적으로 사용 할 수 있는 CPU 코어를 사용하지만 직접 개수를 정의 할 수도 있습니다.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:code --></p>
<pre><code>rake parallel:setup
rake parallel:setup[4] </code></pre>
<p><!-- /wp:code --></p>
<p><!-- wp:paragraph --></p>
<p>명령어를 실행했을 때 아래와 같이 DB가 생성된 걸 확인할 수 있습니다.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:image {"align":"center","id":2224,"width":930,"height":266,"sizeSlug":"large","linkDestination":"media"} --></p>
<figure><a href="https://blog.dramancompany.com/wp-content/uploads/2021/10/setup했을때-사진.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/10/setup했을때-사진-1024x293.png" alt="" width="930" height="266"></a></figure>
<p><!-- /wp:image --></p>
<p><!-- wp:paragraph --></p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>이제 테스트를 돌리기 전 모든 준비는 완료가 되었습니다.<br>실제로 병렬테스트를 돌렸을 때 평균적으로 30초 정도 줄어든 걸 확인했습니다.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>참고: 테스트 프로세스 수를 무조건 많이 늘린다고 해서 속도가 비례해서 빨라지는 것은 아닙니다. 저의 경우에는 4대로 돌렸을 때 가장 빨랐으며 그 이상으로 늘렸을 때 오히려 효율이 높지 않았습니다.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:image {"align":"center","id":2225,"width":859,"height":93,"sizeSlug":"large","linkDestination":"media"} --></p>
<figure><a href="https://blog.dramancompany.com/wp-content/uploads/2021/10/병렐테스트-돌리기전.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/10/병렐테스트-돌리기전.png" alt="" width="859" height="93"></a><p></p>
<figcaption>(병렬 테스트를 돌리기 전)</figcaption>
</figure>
<p><!-- /wp:image --></p>
<p><!-- wp:image {"align":"center","id":2226,"sizeSlug":"large","linkDestination":"media"} --></p>
<figure><a href="https://blog.dramancompany.com/wp-content/uploads/2021/10/병렬테스트-돌린후ㅜ.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/10/병렬테스트-돌린후ㅜ.png" alt=""></a><p></p>
<figcaption>(병렬 테스트를 돌린 후)</figcaption>
</figure>
<p><!-- /wp:image --></p>
<p><!-- wp:heading {"level":4} --></p>
<h4><strong>테스트 그룹 균형있게 분할하기</strong></h4>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p>테스트 그룹은 균형이 맞지 않게 분할이 될 수 있습니다.<br>오래 걸리는 테스트가 많이 포함된 그룹이 있을 때 다른 그룹들은 가장 느린 그룹을 기다리게 하여 전체적인<br>테스트 완료 시간을 늦춥니다.<br>아래 명령어를 사용하여 테스트 그룹의 균형을 균일하게 유지합니다.<br><code><b>.rspec_parallel</b></code> 파일에 다음과 같은 코드를 추가합니다.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:code --></p>
<pre><code>--format progress
--format ParallelTests::RSpec::RuntimeLogger --out tmp/parallel_runtime_rspec.log</code></pre>
<p><!-- /wp:code --></p>
<p><!-- wp:image {"align":"center","id":2227,"width":590,"height":479,"sizeSlug":"large","linkDestination":"media"} --></p>
<figure><a href="https://blog.dramancompany.com/wp-content/uploads/2021/10/테스트-런타임-그룹.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/10/테스트-런타임-그룹-1024x831.png" alt="" width="590" height="479"></a><p></p>
<figcaption>(테스트별 런타임 그룹)</figcaption>
</figure>
<p><!-- /wp:image --></p>
<p><!-- wp:paragraph --></p>
<p>각 테스트 파일에 대한 런타임 통계를 지정된 로그 파일에 저장합니다.<br>다음 실행에는 테스트를 보다 균형 잡힌 그룹으로 나누는 데 사용됩니다.<br><code><b>parallel_runtime_rspec.log</b></code> 파일이 생성되기 전 첫 번째 실행일 경우에는 시간이 더 걸릴 수 있습니다.<br>이 로그 파일은 테스트 실행 시 로드되며 각 프로세스가 거의 같은 시간에 완료되도록 테스트가 그룹화됩니다.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:heading {"level":4} --></p>
<h4><strong>캐시 문제 해결하기</strong></h4>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p>한 개의 캐시 저장소만 있는 경우 다른 테스트 프로세스에서 캐시를 동시에 참조하면 캐시 관련 테스트가 쉽게 실패할 수 있습니다.<br>이 문제를 해결하기 위해서는 프로세스마다 독자적인 캐시 저장소가 있어야 합니다.<br>저의 경우에는 프로세스별로 <b>file_store</b>&nbsp;캐시 저장소를 사용하는 방법으로 해결하였습니다.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:code --></p>
<pre><code>config.cache_store = :file_store, Rails.root.join("tmp", "cache", "parallel_tests#{ENV['TEST_ENV_NUMBER']}"</code></pre>
<p><!-- /wp:code --></p>
<p><!-- wp:paragraph --></p>
<p>이 외에도 cache_store로 Redis를 쓰는 경우에 프로세스별로 Redis channel를 나눠서 해결하는 방법 등 여러 가지 방법이 있으니 상황에 적합한 해결 방법을 찾아보시면 좋을 것 같습니다.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:heading {"level":4} --></p>
<h4><strong>로거</strong></h4>
<h4><b style="font-family: 'Lucida Console', Monaco, monospace; font-size: 0.9em; color: var( --e-global-color-text );">Rspec::Summarylogger</b></h4>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>프로세스별 테스트 출력을 기록합니다.<br><code>—-format progress</code> 명령어는 테스트 성공 여부를 점 형태로 나타냅니다.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:code --></p>
<pre><code>--format progress
--format ParallelTests::RSpec::SummaryLogger --out tmp/spec_summary.log</code></pre>
<p><!-- /wp:code --></p>
<p><!-- wp:image {"align":"center","id":2228,"width":739,"height":304,"sizeSlug":"large","linkDestination":"media"} --></p>
<figure><a href="https://blog.dramancompany.com/wp-content/uploads/2021/10/rspec-sumary-출력-로그.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/10/rspec-sumary-출력-로그-1024x421.png" alt="" width="739" height="304"></a></figure><h4><b style="font-family: &quot;Lucida Console&quot;, Monaco, monospace; font-size: 0.9em; color: var( --e-global-color-text );">Rspec::FailuresLogger</b></h4>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>실패한 예제에 대해서 볼 수 있는 로그를 생성합니다.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:code --></p>
<pre><code>--format progress
--format ParallelTests::RSpec::FailuresLogger --out tmp/failing_specs.log</code></pre>
<p><!-- /wp:code --></p>
<p><!-- wp:image {"align":"center","id":2229,"width":649,"height":403,"sizeSlug":"large","linkDestination":"media"} --></p>
<figure><a href="https://blog.dramancompany.com/wp-content/uploads/2021/10/실패-예제-로그.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/10/실패-예제-로그-1024x636.png" alt="" width="649" height="403"></a></figure>
<p><!-- /wp:image --></p>
<p><!-- wp:paragraph --></p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:heading {"level":3} --></p>
<h3><strong>마무리</strong></h3>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p>병렬테스트를 도입하는 데에 어려운 부분이 없고 테스트 코드의 실행 속도가 많이 개선되기 때문에<br>도입할 가치가 충분히 있다고 생각합니다.<br>Test::Unit, RSpec, Cucumber, Spinach을 사용하시는 분들은 한번 사용해보시면 좋을 것 같습니다.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:heading --></p>
<h2>참고</h2>
<p><!-- /wp:heading --></p>
<p><!-- wp:list --></p>
<ul>
<li><a href="https://github.com/grosser/parallel_tests">https://github.com/grosser/parallel_tests</a></li>
<li><a href="https://steemit.com/rails/@davidalphen/rails-5-2-parallel-tests-with-rspec-for-local-and-travis">https://steemit.com/rails/@davidalphen/rails-5-2-parallel-tests-with-rspec-for-local-and-travis</a></li>
<li><a href="https://oozou.com/blog/running-specs-in-parallel-before-rails-6-84">https://oozou.com/blog/running-specs-in-parallel-before-rails-6-84</a></li>
<li><a href="https://rubynor.com/blog/2020/03/rails-rspec-elasticsearch-parallel-test-suite/">https://rubynor.com/blog/2020/03/rails-rspec-elasticsearch-parallel-test-suite/</a></li>
</ul>
<p><!-- /wp:list --></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2220</wp:post_id>
		<wp:post_date><![CDATA[2021-10-25 12:11:40]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-10-25 03:11:40]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-11-08 15:49:58]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-11-08 06:49:58]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%eb%b3%91%eb%a0%ac%ed%85%8c%ec%8a%a4%ed%8a%b8%eb%a1%9c-rspec-%ed%85%8c%ec%8a%a4%ed%8a%b8-%ec%86%8d%eb%8f%84-%ec%a4%84%ec%9d%b4%ea%b8%b0]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="rails"><![CDATA[Rails]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="category" nicename="develop"><![CDATA[Tech]]></category>
		<category domain="post_tag" nicename="%eb%b3%91%eb%a0%ac-%ed%85%8c%ec%8a%a4%ed%8a%b8"><![CDATA[병렬 테스트]]></category>
		<category domain="post_tag" nicename="%ed%85%8c%ec%8a%a4%ed%8a%b8-%ec%bd%94%eb%93%9c"><![CDATA[테스트 코드]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729474249;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:974;}i:1;a:1:{s:2:"id";i:1416;}i:2;a:1:{s:2:"id";i:583;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_d9caef8e74df7a50e9e4291cb53c5b91]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[29]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_single_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:17:{s:8:"subtitle";s:0:"";s:6:"format";s:8:"standard";s:5:"video";s:0:"";s:7:"gallery";s:0:"";s:11:"source_name";s:0:"";s:10:"source_url";s:0:"";s:8:"via_name";s:0:"";s:7:"via_url";s:0:"";s:8:"override";a:1:{i:0;a:27:{s:8:"template";s:1:"1";s:18:"single_blog_custom";s:0:"";s:8:"parallax";s:1:"1";s:10:"fullscreen";s:1:"1";s:6:"layout";s:13:"right-sidebar";s:7:"sidebar";s:15:"default-sidebar";s:14:"second_sidebar";s:15:"default-sidebar";s:14:"sticky_sidebar";s:1:"1";s:14:"share_position";s:3:"top";s:17:"share_float_style";s:16:"share-monocrhome";s:18:"show_share_counter";s:1:"1";s:17:"show_view_counter";s:1:"1";s:13:"show_featured";s:1:"1";s:14:"show_post_meta";s:1:"1";s:16:"show_post_author";s:1:"1";s:22:"show_post_author_image";s:1:"1";s:14:"show_post_date";s:1:"1";s:16:"post_date_format";s:7:"default";s:23:"post_date_format_custom";s:5:"Y/m/d";s:18:"show_post_category";s:1:"1";s:21:"post_reading_time_wpm";s:3:"300";s:20:"zoom_button_out_step";s:1:"2";s:19:"zoom_button_in_step";s:1:"3";s:13:"show_post_tag";s:1:"1";s:19:"show_prev_next_post";s:1:"1";s:15:"show_popup_post";s:1:"1";s:17:"number_popup_post";s:1:"1";}}s:14:"image_override";a:1:{i:0;a:2:{s:26:"single_post_thumbnail_size";s:8:"crop-500";s:24:"single_post_gallery_size";s:8:"crop-500";}}s:22:"trending_post_position";s:4:"meta";s:19:"trending_post_label";s:8:"Trending";s:20:"sponsored_post_label";s:12:"Sponsored by";s:19:"sponsored_post_name";s:0:"";s:18:"sponsored_post_url";s:0:"";s:19:"sponsored_post_logo";s:0:"";s:19:"sponsored_post_desc";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:2:"id";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_estimated-reading-time-minutes]]></wp:meta_key>
		<wp:meta_value><![CDATA[5]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle_flag]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_edit_mode]]></wp:meta_key>
		<wp:meta_value><![CDATA[builder]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_template_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[wp-post]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_version]]></wp:meta_key>
		<wp:meta_value><![CDATA[3.4.4]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_data]]></wp:meta_key>
		<wp:meta_value><![CDATA[[{"id":"4ebb4da0","elType":"section","settings":[],"elements":[{"id":"617ab820","elType":"column","settings":{"_column_size":100},"elements":[{"id":"2d7f684b","elType":"widget","settings":{"editor":"<p><!-- wp:heading {\"level\":3} --><\/p>\n<h3><strong>\ud14c\uc2a4\ud2b8\ucf54\ub4dc\ub97c \uc791\uc131\ud560 \ud544\uc694\uac00 \uc788\ub098\uc694??<\/strong><\/h3>\n<p><!-- \/wp:heading --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\uc785\uc0ac \uc774\ud6c4 \ud14c\uc2a4\ud2b8 \ucf54\ub4dc\ub97c \ubb34\uc870\uac74 \uc791\uc131\ud574\uc57c \ud55c\ub2e4\ub294 \ub9d0\uc744 \ub4e3\uace0 \ub9ac\ub354\uc5d0\uac8c \ud588\ub358 \uc9c8\ubb38\uc785\ub2c8\ub2e4.<br>\ud14c\uc2a4\ud2b8 \ucf54\ub4dc \uc791\uc131 \uacbd\ud5d8\uc774 \uc5c6\ub358 \uc800\ub294 \uae30\ub2a5 \uac1c\ubc1c\ud560 \uc2dc\uac04\ub3c4 \ubd80\uc871\ud55c\ub370 \ud14c\uc2a4\ud2b8 \ucf54\ub4dc\ub97c \uc791\uc131\ud558\ub294 \uac83\uc740 \ube44\ud6a8\uc728\uc801\uc774\ub77c\ub294 \uc77c\uc774\ub77c\uace0 \uc0dd\uac01\ud588\uc2b5\ub2c8\ub2e4.<br>\uadf8\ub7ec\ub2e4 \ubcf4\ub2c8 \ucc98\uc74c\uc5d0\ub294 \ud14c\uc2a4\ud2b8 \ubc94\uc704\ub97c \uc81c\ub300\ub85c \ud30c\uc545\ud558\uc9c0 \ubabb\ud558\uac70\ub098 \ub2e8\uc21c\ud788 \ud1b5\uacfc\ub9cc \ud558\uac8c \ud558\ub294 \ud14c\uc2a4\ud2b8 \ucf54\ub4dc\ub97c \uc791\uc131\ud588\uc2b5\ub2c8\ub2e4. <br>\uc9c0\uae08\uc740 \ud14c\uc2a4\ud2b8 \ucf54\ub4dc\uc758 \uc774\uc810\uc744 \ub9ce\uc774 \uccb4\uac10\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. <br>\ud2b9\ud788 \ubc30\ud3ec \ud6c4 \ubc1c\uacac\ud558\uc9c0 \ubabb\ud55c \uc0ac\uc774\ub4dc \uc774\ud399\ud2b8\uac00 \uc788\uc744\uae4c \uac71\uc815\ud558\ub358 \uc800\uc5d0\uac8c \uc880 \ub354 \uc790\uc2e0\uac10\uc774 \ubd99\uc5c8\uace0 \ubc84\uadf8 \uc591\ub3c4 \uc904\uc5b4\ub4e4\uc5c8\uc2b5\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:image {\"align\":\"center\",\"id\":2222,\"width\":687,\"height\":325,\"sizeSlug\":\"large\",\"linkDestination\":\"media\"} --><\/p>\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter size-large is-resized\"><a href=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2021\/10\/\u1109\u1173\u110f\u1173\u1105\u1175\u11ab\u1109\u1163\u11ba-2021-10-25-\u110b\u1169\u110c\u1165\u11ab-10.54.15.png\"><img class=\"wp-image-2222\" src=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2021\/10\/\u1109\u1173\u110f\u1173\u1105\u1175\u11ab\u1109\u1163\u11ba-2021-10-25-\u110b\u1169\u110c\u1165\u11ab-10.54.15-1024x484.png\" alt=\"\" width=\"687\" height=\"325\"><\/a><\/figure>\n<\/div>\n<p><!-- \/wp:image --><\/p>\n<p><!-- wp:image {\"align\":\"center\",\"id\":2221,\"width\":684,\"height\":508,\"sizeSlug\":\"large\",\"linkDestination\":\"media\"} --><\/p>\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter size-large is-resized\"><a href=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2021\/10\/\u1109\u1173\u110f\u1173\u1105\u1175\u11ab\u1109\u1163\u11ba-2021-10-25-\u110b\u1169\u110c\u1165\u11ab-10.54.09.png\"><img class=\"wp-image-2221\" src=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2021\/10\/\u1109\u1173\u110f\u1173\u1105\u1175\u11ab\u1109\u1163\u11ba-2021-10-25-\u110b\u1169\u110c\u1165\u11ab-10.54.09-1024x761.png\" alt=\"\" width=\"684\" height=\"508\"><\/a><\/figure>\n<\/div>\n<p><!-- \/wp:image --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:heading {\"level\":3} --><\/p>\n<h3><strong>\ub298\uc5b4\ub9cc \uac00\ub294 \ud14c\uc2a4\ud2b8 \ucf54\ub4dc\uc640 \uc2dc\uac04<\/strong><\/h3>\n<p><!-- \/wp:heading --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\ud504\ub85c\uc81d\ud2b8\uc5d0 \uae30\ub2a5\uc774 \ucd94\uac00\ub420\uc218\ub85d \ud14c\uc2a4\ud2b8 \ucf54\ub4dc\ub294 \ub298\uc5b4\ub098\uba70 \ud14c\uc2a4\ud2b8 \ucf54\ub4dc\ub97c \uc2e4\ud589\ud558\ub294 \uc18d\ub3c4 \ub610\ud55c \ube44\ub840\ud574\uc11c \uc99d\uac00\ud569\ub2c8\ub2e4.<br>\ud14c\uc2a4\ud2b8 \ucf54\ub4dc\ub97c \uc2e4\ud589\ud558\ub294 \uc2dc\uac04\uc774 \uae38\uc5b4\uc9c8\uc218\ub85d \uac1c\ubc1c\uc790\uc758 \uc0dd\uc0b0\uc131\uc740 \uc800\ud558\ub429\ub2c8\ub2e4. <br>\ub9ac\uba64\ubc84\uc5d0\ub294 \ub9cc \uac1c\uac00 \ub118\ub294 \ud14c\uc2a4\ud2b8 \ucf54\ub4dc\uac00 \uc788\ub2e4 \ubcf4\ub2c8 \ud14c\uc2a4\ud2b8 \ucf54\ub4dc \uc2e4\ud589\uc774 \uc624\ub798 \uac78\ub9ac\ub294 \ud504\ub85c\uc81d\ud2b8\ub294 \ud55c \uc2dc\uac04\uc774 \ub118\uac8c \uac78\ub9ac\uae30\ub3c4 \ud569\ub2c8\ub2e4. <br>\uc774 \uc2dc\uac04\uc744 \uc904\uc774\uae30 \uc704\ud574 \ubcd1\ub82c\uc801\uc73c\ub85c \ud14c\uc2a4\ud2b8\ub97c \uc2e4\ud589\ud558\ub294 \ubc29\ubc95\uc744 \uc801\uc6a9\ud574\ubcf4\uac8c \ub418\uc5c8\uc2b5\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:heading {\"level\":3} --><\/p>\n<h3><strong>\ubcd1\ub82c \ud14c\uc2a4\ud2b8<\/strong><\/h3>\n<p><!-- \/wp:heading --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\ub9ac\uba64\ubc84\uc758 \ub9ce\uc740 \uc11c\ubc84 \ud504\ub85c\uc81d\ud2b8\ub294 Ruby on Rails\ub85c \uac1c\ubc1c\ub418\uace0 \uc788\uace0 \uc774\ub97c \uc704\ud55c \ud14c\uc2a4\ud2b8 \ud504\ub808\uc784\uc6cc\ud06c\ub294 RSpec\uc744 \uc0ac\uc6a9\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>Ruby on Rails 6\ubd80\ud130\ub294 \ubcd1\ub82c \ud14c\uc2a4\ud2b8 \uae30\ub2a5\uc774 \uacf5\uc2dd\uc801\uc73c\ub85c \ud3ec\ud568\ub418\uc5c8\uc73c\ub098 \uc544\uc27d\uac8c\ub3c4 RSpec\uacfc \ub2e4\ub978 \ud14c\uc2a4\ud2b8 \ud504\ub808\uc784\uc6cc\ud06c\uc778 MiniTest\uc5d0 \ub300\ud574\uc11c\ub9cc \uadf8 \uae30\ub2a5\uc744 \uc9c0\uc6d0\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. <br>\ub530\ub77c\uc11c RSpec\uc744 \uc0ac\uc6a9\ud558\ub294 \uc800\ud76c\ub294 \uc774 \uae30\ub2a5\uc744 \uc774\uc6a9\ud560 \uc218 \uc5c6\uc5c8\uace0 \ub300\uccb4\uc7ac\ub97c \ucc3e\ub358 \uc911 RSpec, UnitTest \ub4f1 \ub2e4\uc591\ud55c \ud14c\uc2a4\ud2b8 \ud504\ub808\uc784\uc6cc\ud06c\ub97c \uc9c0\uc6d0\ud558\ub294 <br>\ubcd1\ub82c \ud14c\uc2a4\ud2b8 \ub77c\uc774\ube0c\ub7ec\ub9ac \"parallel_tests\"<a href=\"https:\/\/github.com\/grosser\/parallel_tests\">(\ub9c1\ud06c)<\/a>\ub97c \ucc3e\uac8c \ub418\uc5c8\uc2b5\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\ucc38\uace0: \uc774 \uae00\uc744 \uc4f0\ub294 \uc2dc\uc810\uc5d0\uc11c\ub294 Ruby on Rails\uc5d0\uc11c RSpec\uc5d0 \ub300\ud55c \ubcd1\ub82c \ud14c\uc2a4\ud2b8 \uae30\ub2a5\uc744 \uc9c0\uc6d0\ud558\uc9c0 \uc54a\uc9c0\ub9cc \ucd94\ud6c4\uc5d0\ub294 \uc9c0\uc6d0\uc774 \uac00\ub2a5\ud560\uc9c0\ub3c4 \ubaa8\ub985\ub2c8\ub2e4. \uad00\ub828\ub41c \ub0b4\uc6a9\uc740 GitHub \uc774\uc288<a href=\"https:\/\/github.com\/rspec\/rspec-rails\/issues\/2104\">(\ub9c1\ud06c)<\/a>\uac00 \uc0dd\uc131\ub418\uc5b4\uc788\uc73c\ub2c8 \ucc38\uace0\ud558\uc2dc\uae38 \ubc14\ub78d\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:heading {\"level\":3} --><\/p>\n<h3><strong>parallel_tests<\/strong><\/h3>\n<p><!-- \/wp:heading --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\ucd5c\uadfc \ub300\ubd80\ubd84 \ucef4\ud4e8\ud130\ub294 \uc5ec\ub7ec \ub300\uc758 CPU \ucf54\uc5b4\ub97c \uac16\uace0 \uc788\uc9c0\ub9cc RSpec\uc740 \uae30\ubcf8\uc801\uc73c\ub85c \ud558\ub098\uc758 CPU \ucf54\uc5b4\ub9cc \uc0ac\uc6a9\ud569\ub2c8\ub2e4. <br>\ubcd1\ub82c \ud14c\uc2a4\ud2b8\ub294 \uc5ec\ub7ec CPU \ucf54\uc5b4\ub97c \ud65c\uc6a9\ud558\uc5ec \ud14c\uc2a4\ud2b8 \ucf54\ub4dc\ub97c \uadf8\ub8f9\uc73c\ub85c \ub098\ub220 \ub3d9\uc2dc\uc5d0 \uc2e4\ud589\ud569\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\uc55e\uc11c \ub9d0\uc500\ub4dc\ub9b0 \uac83\ucc98\ub7fc parallel_tests\ub294 \uc5ec\ub7ec \ud14c\uc2a4\ud2b8 \ud504\ub808\uc784\uc6cc\ud06c\ub97c \uc9c0\uc6d0\ud558\uc9c0\ub9cc, \uc774 \uae00\uc5d0\uc11c\ub294 RSpec\uc744 \uae30\uc900\uc73c\ub85c \uc791\uc131\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:heading {\"level\":4} --><\/p>\n<h4><strong>\uc124\uce58<\/strong><\/h4>\n<p><!-- \/wp:heading --><\/p>\n<p><!-- wp:code --><\/p>\n<pre class=\"wp-block-code\"><code>gem 'parallel_tests', group: [:test]<\/code><\/pre>\n<p><!-- \/wp:code --><\/p>\n<p><!-- wp:heading {\"level\":4} --><\/p>\n<h4><strong>\ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc124\uc815<\/strong><\/h4>\n<p><!-- \/wp:heading --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\ud14c\uc2a4\ud2b8 \ucf54\ub4dc\ub294 \uac01\uc790 \ub370\uc774\ud130 \uce68\ubc94 \uc5c6\uc774 \ub3c5\ub9bd\uc801\uc73c\ub85c \uc2e4\ud589\ub418\uc5b4\uc57c \ud558\ubbc0\ub85c parallel_tests\ub294 \uac01 \ud14c\uc2a4\ud2b8 \uadf8\ub8f9\uc5d0 \ub300\ud574<br>\ud14c\uc2a4\ud2b8\ub97c \uc2e4\ud589\ud558\ub294 \ud504\ub85c\uc138\uc2a4\ubcc4\ub85c \ub3c5\ub9bd\ub41c \ub370\uc774\ud130\ubca0\uc774\uc2a4\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4.<br>\uac01 \ud504\ub85c\uc138\uc2a4\uc5d0\uc11c \ub370\uc774\ud130\ubca0\uc774\uc2a4\ub97c \uc0ac\uc6a9\ud558\uae30 \uc704\ud574 \ub2e4\uc74c\uacfc \uac19\uc774&nbsp;<span style=\"font-family: Lucida Console, Monaco, monospace;\"><span style=\"font-size: 14.399999618530273px;\"><b>config\/database.yml<\/b><\/span><\/span>&nbsp;\ud30c\uc77c\uc758<br>test environment\uc5d0<span style=\"font-family: Lucida Console, Monaco, monospace;\"><span style=\"font-size: 14.399999618530273px;\"><b>&nbsp;TEST_ENV_NUMBER&nbsp;<\/b><\/span><\/span>\ud658\uacbd \ubcc0\uc218\ub97c \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc774\ub984 \ub4a4\uc5d0 \ucd94\uac00\ud569\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:block {\"ref\":2223} \/--><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\ud14c\uc2a4\ud2b8 \ud504\ub85c\uc138\uc2a4\ub2f9 \ud55c \uac1c\uc758 \ub370\uc774\ud130\ubca0\uc774\uc2a4\ub97c \uc0ac\uc6a9\ud558\ub3c4\ub85d \uc124\uc815\ud558\uc600\uc73c\ub2c8 \uc774\uc81c \ub370\uc774\ud130\ubca0\uc774\uc2a4\ub97c \uc0dd\uc131\ud574\uc57c \ud569\ub2c8\ub2e4.<br>\uc544\ub798\uc758 \uba85\ub839\uc5b4\ub294 DB\ub97c \uc0dd\uc131 \ud6c4 \uc2a4\ud0a4\ub9c8 \ub85c\ub4dc\uae4c\uc9c0 \ud574\uc90d\ub2c8\ub2e4. <br>\uae30\ubcf8\uc801\uc73c\ub85c \uc0ac\uc6a9 \ud560 \uc218 \uc788\ub294 CPU \ucf54\uc5b4\ub97c \uc0ac\uc6a9\ud558\uc9c0\ub9cc \uc9c1\uc811 \uac1c\uc218\ub97c \uc815\uc758 \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:code --><\/p>\n<pre class=\"wp-block-code\"><code>rake parallel:setup \nrake parallel:setup[4] <\/code><\/pre>\n<p><!-- \/wp:code --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\uba85\ub839\uc5b4\ub97c \uc2e4\ud589\ud588\uc744 \ub54c \uc544\ub798\uc640 \uac19\uc774 DB\uac00 \uc0dd\uc131\ub41c \uac78 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:image {\"align\":\"center\",\"id\":2224,\"width\":930,\"height\":266,\"sizeSlug\":\"large\",\"linkDestination\":\"media\"} --><\/p>\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter size-large is-resized\"><a href=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2021\/10\/setup\u1112\u1162\u11bb\u110b\u1173\u11af\u1104\u1162-\u1109\u1161\u110c\u1175\u11ab.png\"><img class=\"wp-image-2224\" src=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2021\/10\/setup\u1112\u1162\u11bb\u110b\u1173\u11af\u1104\u1162-\u1109\u1161\u110c\u1175\u11ab-1024x293.png\" alt=\"\" width=\"930\" height=\"266\"><\/a><\/figure>\n<\/div>\n<p><!-- \/wp:image --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\uc774\uc81c \ud14c\uc2a4\ud2b8\ub97c \ub3cc\ub9ac\uae30 \uc804 \ubaa8\ub4e0 \uc900\ube44\ub294 \uc644\ub8cc\uac00 \ub418\uc5c8\uc2b5\ub2c8\ub2e4.<br>\uc2e4\uc81c\ub85c \ubcd1\ub82c\ud14c\uc2a4\ud2b8\ub97c \ub3cc\ub838\uc744 \ub54c \ud3c9\uade0\uc801\uc73c\ub85c 30\ucd08 \uc815\ub3c4 \uc904\uc5b4\ub4e0 \uac78 \ud655\uc778\ud588\uc2b5\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\ucc38\uace0: \ud14c\uc2a4\ud2b8 \ud504\ub85c\uc138\uc2a4 \uc218\ub97c \ubb34\uc870\uac74 \ub9ce\uc774 \ub298\ub9b0\ub2e4\uace0 \ud574\uc11c \uc18d\ub3c4\uac00 \ube44\ub840\ud574\uc11c \ube68\ub77c\uc9c0\ub294 \uac83\uc740 \uc544\ub2d9\ub2c8\ub2e4. \uc800\uc758 \uacbd\uc6b0\uc5d0\ub294 4\ub300\ub85c \ub3cc\ub838\uc744 \ub54c \uac00\uc7a5 \ube68\ub790\uc73c\uba70 \uadf8 \uc774\uc0c1\uc73c\ub85c \ub298\ub838\uc744 \ub54c \uc624\ud788\ub824 \ud6a8\uc728\uc774 \ub192\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:image {\"align\":\"center\",\"id\":2225,\"width\":859,\"height\":93,\"sizeSlug\":\"large\",\"linkDestination\":\"media\"} --><\/p>\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter size-large is-resized\"><a href=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2021\/10\/\u1107\u1167\u11bc\u1105\u1166\u11af\u1110\u1166\u1109\u1173\u1110\u1173-\u1103\u1169\u11af\u1105\u1175\u1100\u1175\u110c\u1165\u11ab.png\"><img class=\"wp-image-2225\" src=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2021\/10\/\u1107\u1167\u11bc\u1105\u1166\u11af\u1110\u1166\u1109\u1173\u1110\u1173-\u1103\u1169\u11af\u1105\u1175\u1100\u1175\u110c\u1165\u11ab.png\" alt=\"\" width=\"859\" height=\"93\"><\/a><p><\/p>\n<figcaption>(\ubcd1\ub82c \ud14c\uc2a4\ud2b8\ub97c \ub3cc\ub9ac\uae30 \uc804)<\/figcaption>\n<\/figure>\n<\/div>\n<p><!-- \/wp:image --><\/p>\n<p><!-- wp:image {\"align\":\"center\",\"id\":2226,\"sizeSlug\":\"large\",\"linkDestination\":\"media\"} --><\/p>\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter size-large\"><a href=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2021\/10\/\u1107\u1167\u11bc\u1105\u1167\u11af\u1110\u1166\u1109\u1173\u1110\u1173-\u1103\u1169\u11af\u1105\u1175\u11ab\u1112\u116e\u315c.png\"><img class=\"wp-image-2226\" src=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2021\/10\/\u1107\u1167\u11bc\u1105\u1167\u11af\u1110\u1166\u1109\u1173\u1110\u1173-\u1103\u1169\u11af\u1105\u1175\u11ab\u1112\u116e\u315c.png\" alt=\"\"><\/a><p><\/p>\n<figcaption>(\ubcd1\ub82c \ud14c\uc2a4\ud2b8\ub97c \ub3cc\ub9b0 \ud6c4)<\/figcaption>\n<\/figure>\n<\/div>\n<p><!-- \/wp:image --><\/p>\n<p><!-- wp:heading {\"level\":4} --><\/p>\n<h4><strong>\ud14c\uc2a4\ud2b8 \uadf8\ub8f9 \uade0\ud615\uc788\uac8c \ubd84\ud560\ud558\uae30<\/strong><\/h4>\n<p><!-- \/wp:heading --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\ud14c\uc2a4\ud2b8 \uadf8\ub8f9\uc740 \uade0\ud615\uc774 \ub9de\uc9c0 \uc54a\uac8c \ubd84\ud560\uc774 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4.<br>\uc624\ub798 \uac78\ub9ac\ub294 \ud14c\uc2a4\ud2b8\uac00 \ub9ce\uc774 \ud3ec\ud568\ub41c \uadf8\ub8f9\uc774 \uc788\uc744 \ub54c \ub2e4\ub978 \uadf8\ub8f9\ub4e4\uc740 \uac00\uc7a5 \ub290\ub9b0 \uadf8\ub8f9\uc744 \uae30\ub2e4\ub9ac\uac8c \ud558\uc5ec \uc804\uccb4\uc801\uc778<br>\ud14c\uc2a4\ud2b8 \uc644\ub8cc \uc2dc\uac04\uc744 \ub2a6\ucda5\ub2c8\ub2e4.<br>\uc544\ub798 \uba85\ub839\uc5b4\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud14c\uc2a4\ud2b8 \uadf8\ub8f9\uc758 \uade0\ud615\uc744 \uade0\uc77c\ud558\uac8c \uc720\uc9c0\ud569\ub2c8\ub2e4.<br><code><b>.rspec_parallel<\/b><\/code> \ud30c\uc77c\uc5d0 \ub2e4\uc74c\uacfc \uac19\uc740 \ucf54\ub4dc\ub97c \ucd94\uac00\ud569\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:code --><\/p>\n<pre class=\"wp-block-code\"><code>--format progress\n--format ParallelTests::RSpec::RuntimeLogger --out tmp\/parallel_runtime_rspec.log<\/code><\/pre>\n<p><!-- \/wp:code --><\/p>\n<p><!-- wp:image {\"align\":\"center\",\"id\":2227,\"width\":590,\"height\":479,\"sizeSlug\":\"large\",\"linkDestination\":\"media\"} --><\/p>\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter size-large is-resized\"><a href=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2021\/10\/\u1110\u1166\u1109\u1173\u1110\u1173-\u1105\u1165\u11ab\u1110\u1161\u110b\u1175\u11b7-\u1100\u1173\u1105\u116e\u11b8.png\"><img class=\"wp-image-2227\" src=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2021\/10\/\u1110\u1166\u1109\u1173\u1110\u1173-\u1105\u1165\u11ab\u1110\u1161\u110b\u1175\u11b7-\u1100\u1173\u1105\u116e\u11b8-1024x831.png\" alt=\"\" width=\"590\" height=\"479\"><\/a><p><\/p>\n<figcaption>(\ud14c\uc2a4\ud2b8\ubcc4 \ub7f0\ud0c0\uc784 \uadf8\ub8f9)<\/figcaption>\n<\/figure>\n<\/div>\n<p><!-- \/wp:image --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\uac01 \ud14c\uc2a4\ud2b8 \ud30c\uc77c\uc5d0 \ub300\ud55c \ub7f0\ud0c0\uc784 \ud1b5\uacc4\ub97c \uc9c0\uc815\ub41c \ub85c\uadf8 \ud30c\uc77c\uc5d0 \uc800\uc7a5\ud569\ub2c8\ub2e4.<br>\ub2e4\uc74c \uc2e4\ud589\uc5d0\ub294 \ud14c\uc2a4\ud2b8\ub97c \ubcf4\ub2e4 \uade0\ud615 \uc7a1\ud78c \uadf8\ub8f9\uc73c\ub85c \ub098\ub204\ub294 \ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4.<br><code><b>parallel_runtime_rspec.log<\/b><\/code> \ud30c\uc77c\uc774 \uc0dd\uc131\ub418\uae30 \uc804 \uccab \ubc88\uc9f8 \uc2e4\ud589\uc77c \uacbd\uc6b0\uc5d0\ub294 \uc2dc\uac04\uc774 \ub354 \uac78\ub9b4 \uc218 \uc788\uc2b5\ub2c8\ub2e4.<br>\uc774 \ub85c\uadf8 \ud30c\uc77c\uc740 \ud14c\uc2a4\ud2b8 \uc2e4\ud589 \uc2dc \ub85c\ub4dc\ub418\uba70 \uac01 \ud504\ub85c\uc138\uc2a4\uac00 \uac70\uc758 \uac19\uc740 \uc2dc\uac04\uc5d0 \uc644\ub8cc\ub418\ub3c4\ub85d \ud14c\uc2a4\ud2b8\uac00 \uadf8\ub8f9\ud654\ub429\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:heading {\"level\":4} --><\/p>\n<h4><strong>\uce90\uc2dc \ubb38\uc81c \ud574\uacb0\ud558\uae30<\/strong><\/h4>\n<p><!-- \/wp:heading --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\ud55c \uac1c\uc758 \uce90\uc2dc \uc800\uc7a5\uc18c\ub9cc \uc788\ub294 \uacbd\uc6b0 \ub2e4\ub978 \ud14c\uc2a4\ud2b8 \ud504\ub85c\uc138\uc2a4\uc5d0\uc11c \uce90\uc2dc\ub97c \ub3d9\uc2dc\uc5d0 \ucc38\uc870\ud558\uba74 \uce90\uc2dc \uad00\ub828 \ud14c\uc2a4\ud2b8\uac00 \uc27d\uac8c \uc2e4\ud328\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.<br>\uc774 \ubb38\uc81c\ub97c \ud574\uacb0\ud558\uae30 \uc704\ud574\uc11c\ub294 \ud504\ub85c\uc138\uc2a4\ub9c8\ub2e4 \ub3c5\uc790\uc801\uc778 \uce90\uc2dc \uc800\uc7a5\uc18c\uac00 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4.<br>\uc800\uc758 \uacbd\uc6b0\uc5d0\ub294 \ud504\ub85c\uc138\uc2a4\ubcc4\ub85c <span style=\"font-family: Lucida Console, Monaco, monospace;\"><span style=\"font-size: 14.399999618530273px;\"><b>file_store<\/b><\/span><\/span>&nbsp;\uce90\uc2dc \uc800\uc7a5\uc18c\ub97c \uc0ac\uc6a9\ud558\ub294 \ubc29\ubc95\uc73c\ub85c \ud574\uacb0\ud558\uc600\uc2b5\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:code --><\/p>\n<pre class=\"wp-block-code\"><code>config.cache_store = :file_store, Rails.root.join(\"tmp\", \"cache\", \"parallel_tests#{ENV['TEST_ENV_NUMBER']}\"<\/code><\/pre>\n<p><!-- \/wp:code --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\uc774 \uc678\uc5d0\ub3c4 cache_store\ub85c Redis\ub97c \uc4f0\ub294 \uacbd\uc6b0\uc5d0 \ud504\ub85c\uc138\uc2a4\ubcc4\ub85c Redis channel\ub97c \ub098\ub220\uc11c \ud574\uacb0\ud558\ub294 \ubc29\ubc95 \ub4f1 \uc5ec\ub7ec \uac00\uc9c0 \ubc29\ubc95\uc774 \uc788\uc73c\ub2c8 \uc0c1\ud669\uc5d0 \uc801\ud569\ud55c \ud574\uacb0 \ubc29\ubc95\uc744 \ucc3e\uc544\ubcf4\uc2dc\uba74 \uc88b\uc744 \uac83 \uac19\uc2b5\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:heading {\"level\":4} --><\/p>\n<h4><strong>\ub85c\uac70<\/strong><\/h4>\n<h4><b style=\"font-family: 'Lucida Console', Monaco, monospace; font-size: 0.9em; color: var( --e-global-color-text );\">Rspec::Summarylogger<\/b><\/h4>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\ud504\ub85c\uc138\uc2a4\ubcc4 \ud14c\uc2a4\ud2b8 \ucd9c\ub825\uc744 \uae30\ub85d\ud569\ub2c8\ub2e4.<br><code>\u2014-format progress<\/code> \uba85\ub839\uc5b4\ub294 \ud14c\uc2a4\ud2b8 \uc131\uacf5 \uc5ec\ubd80\ub97c \uc810 \ud615\ud0dc\ub85c \ub098\ud0c0\ub0c5\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:code --><\/p>\n<pre class=\"wp-block-code\"><code>--format progress\n--format ParallelTests::RSpec::SummaryLogger --out tmp\/spec_summary.log<\/code><\/pre>\n<p><!-- \/wp:code --><\/p>\n<p><!-- wp:image {\"align\":\"center\",\"id\":2228,\"width\":739,\"height\":304,\"sizeSlug\":\"large\",\"linkDestination\":\"media\"} --><\/p>\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter size-large is-resized\"><a href=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2021\/10\/rspec-sumary-\u110e\u116e\u11af\u1105\u1167\u11a8-\u1105\u1169\u1100\u1173.png\"><img class=\"wp-image-2228\" src=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2021\/10\/rspec-sumary-\u110e\u116e\u11af\u1105\u1167\u11a8-\u1105\u1169\u1100\u1173-1024x421.png\" alt=\"\" width=\"739\" height=\"304\"><\/a><\/figure><h4><b style=\"font-family: &quot;Lucida Console&quot;, Monaco, monospace; font-size: 0.9em; color: var( --e-global-color-text );\">Rspec::FailuresLogger<\/b><\/h4><\/div>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\uc2e4\ud328\ud55c \uc608\uc81c\uc5d0 \ub300\ud574\uc11c \ubcfc \uc218 \uc788\ub294 \ub85c\uadf8\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:code --><\/p>\n<pre class=\"wp-block-code\"><code>--format progress\n--format ParallelTests::RSpec::FailuresLogger --out tmp\/failing_specs.log<\/code><\/pre>\n<p><!-- \/wp:code --><\/p>\n<p><!-- wp:image {\"align\":\"center\",\"id\":2229,\"width\":649,\"height\":403,\"sizeSlug\":\"large\",\"linkDestination\":\"media\"} --><\/p>\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter size-large is-resized\"><a href=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2021\/10\/\u1109\u1175\u11af\u1111\u1162-\u110b\u1168\u110c\u1166-\u1105\u1169\u1100\u1173.png\"><img class=\"wp-image-2229\" src=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2021\/10\/\u1109\u1175\u11af\u1111\u1162-\u110b\u1168\u110c\u1166-\u1105\u1169\u1100\u1173-1024x636.png\" alt=\"\" width=\"649\" height=\"403\"><\/a><\/figure>\n<\/div>\n<p><!-- \/wp:image --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:heading {\"level\":3} --><\/p>\n<h3><strong>\ub9c8\ubb34\ub9ac<\/strong><\/h3>\n<p><!-- \/wp:heading --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\ubcd1\ub82c\ud14c\uc2a4\ud2b8\ub97c \ub3c4\uc785\ud558\ub294 \ub370\uc5d0 \uc5b4\ub824\uc6b4 \ubd80\ubd84\uc774 \uc5c6\uace0 \ud14c\uc2a4\ud2b8 \ucf54\ub4dc\uc758 \uc2e4\ud589 \uc18d\ub3c4\uac00 \ub9ce\uc774 \uac1c\uc120\ub418\uae30 \ub54c\ubb38\uc5d0<br>\ub3c4\uc785\ud560 \uac00\uce58\uac00 \ucda9\ubd84\ud788 \uc788\ub2e4\uace0 \uc0dd\uac01\ud569\ub2c8\ub2e4.<br>Test::Unit, RSpec, Cucumber, Spinach\uc744 \uc0ac\uc6a9\ud558\uc2dc\ub294 \ubd84\ub4e4\uc740 \ud55c\ubc88 \uc0ac\uc6a9\ud574\ubcf4\uc2dc\uba74 \uc88b\uc744 \uac83 \uac19\uc2b5\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:heading --><\/p>\n<h2>\ucc38\uace0<\/h2>\n<p><!-- \/wp:heading --><\/p>\n<p><!-- wp:list --><\/p>\n<ul>\n<li><a href=\"https:\/\/github.com\/grosser\/parallel_tests\">https:\/\/github.com\/grosser\/parallel_tests<\/a><\/li>\n<li><a href=\"https:\/\/steemit.com\/rails\/@davidalphen\/rails-5-2-parallel-tests-with-rspec-for-local-and-travis\">https:\/\/steemit.com\/rails\/@davidalphen\/rails-5-2-parallel-tests-with-rspec-for-local-and-travis<\/a><\/li>\n<li><a href=\"https:\/\/oozou.com\/blog\/running-specs-in-parallel-before-rails-6-84\">https:\/\/oozou.com\/blog\/running-specs-in-parallel-before-rails-6-84<\/a><\/li>\n<li><a href=\"https:\/\/rubynor.com\/blog\/2020\/03\/rails-rspec-elasticsearch-parallel-test-suite\/\">https:\/\/rubynor.com\/blog\/2020\/03\/rails-rspec-elasticsearch-parallel-test-suite\/<\/a><\/li>\n<\/ul>\n<p><!-- \/wp:list --><\/p>"},"elements":[],"widgetType":"text-editor"}],"isInner":false}],"isInner":false}]]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_page_assets]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[2236]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_controls_usage]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:3:{s:11:"text-editor";a:3:{s:5:"count";i:1;s:15:"control_percent";i:0;s:8:"controls";a:1:{s:7:"content";a:1:{s:14:"section_editor";a:1:{s:6:"editor";i:1;}}}}s:6:"column";a:3:{s:5:"count";i:1;s:15:"control_percent";i:0;s:8:"controls";a:0:{}}s:7:"section";a:3:{s:5:"count";i:1;s:15:"control_percent";i:0;s:8:"controls";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[CODE GURU REVIEWER를 사용하여 코드리뷰 받기]]></title>
		<link>https://blog.dramancompany.com/2021/11/code-guru-reviewer%eb%a5%bc-%ec%82%ac%ec%9a%a9%ed%95%98%ec%97%ac-%ec%bd%94%eb%93%9c%eb%a6%ac%eb%b7%b0-%eb%b0%9b%ea%b8%b0/</link>
		<pubDate>Mon, 08 Nov 2021 06:48:16 +0000</pubDate>
		<dc:creator><![CDATA[sj.sa]]></dc:creator>
		<guid isPermaLink="false">https://blog.dramancompany.com/?p=2277</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>안녕하세요. 리멤버 서버/웹 팀 서버 개발자 사승준입니다. </p>
<!-- /wp:paragraph -->
<!-- wp:paragraph -->
<p>얼마 전에 AWS에 CodeGuru라는 기능이 새롭게 나왔습니다. </p>
<!-- /wp:paragraph -->
<!-- wp:paragraph -->
<p>Amazon CodeGuru는 코드 품질을 높이고 애플리케이션에서 가장 비경제적인 코드 줄을 찾아낼 수 있도록 지원하는 권장 사항을 제공하는 지능형 개발자 도구입니다. CodeGuru 기능 안에서도 프로덕션에서 애플리케이션을 모니터링하여 CPU를 많이 차지하고 있는 메서드, latency가 오래 걸리는 등 비경제적인 코드를 찾아내는 CodeGuru Profiler와 기계 학습 및 자동화된 추론을 사용하여 애플리케이션 개발 중 심각한 문제, 보안 취약성 및 찾기 힘든 버그를 식별하고 코드 품질을 높일 수 있도록 코드리뷰를 제공하는 CodeGuru Reviewer가 있는데요. 이 글에서는 CodeGuru Reviewer에 관해서 이야기해보려고 합니다.</p>
<!-- /wp:paragraph -->
<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->
<!-- wp:heading -->
<h2><strong>CodeGuru Reviewer는 어떤 기능인가요?</strong></h2>
<!-- /wp:heading -->
<!-- wp:paragraph -->
<p><strong>기계 학습 및 자동화된 추론, AWS 및 보안 모범 사례, 그리고 수천 개의 오픈 소스 및 Amazon 리포지토리에서 수백만 건의 코드 검토을 통해 학습한 트레이닝 데이터 기반으로 코드 리뷰를 자동화합니다. 코드에서 찾기 어려운 결함과 취약성을 탐지하고 코드 품질 개선을 위해 실행할 수 있는 권장 사항을 제공합니다.</strong></p>
<!-- /wp:paragraph -->
<!-- wp:paragraph -->
<p>위 설명은 AWS에서 공식적으로 설명하고 있는 내용입니다. 나와 있는 것처럼 말 그대로 코드 리뷰를 자동화해주는 기능입니다. 기계학습을 한 똑똑한 프로그래밍 언어의 전문가가 한 명 더 있어 Pull Request 단계에서 코드 리뷰를 해준다고 생각하시면 됩니다. 현재는 Java와 Python만 지원하고 있습니다.</p>
<!-- /wp:paragraph -->
<!-- wp:image {"align":"center"} -->
<figure><img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n4yO8VcI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/125892722-da641d48-e54a-4f4e-8303-8b09d99167bf.png" alt="AWS CI/CD pipeline with CodeGuru &amp; UnitTest - DEV Community"/></figure>
<!-- /wp:image -->
<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->
<!-- wp:heading -->
<h2><strong>왜 필요한가요?</strong></h2>
<!-- /wp:heading -->
<!-- wp:paragraph -->
<p>대부분의 모든 개발자는 기능을 머지하기 전 버그, 코드 퀄리티 등의 이유로 리뷰를 진행합니다. 저희 팀에서도 기능을 개발하고 나면 슬랙을 통해 적극적으로 코드 리뷰를 요청하고 있는데요.</p>
<!-- /wp:paragraph -->
<!-- wp:image {"align":"center","id":2279,"sizeSlug":"large","linkDestination":"media"} -->
<figure><a href="https://blog.dramancompany.com/wp-content/uploads/2021/11/리뷰_요청.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/11/리뷰_요청-1024x404.png" alt=""/></a></figure>
<!-- /wp:image -->
<!-- wp:paragraph -->
<p>CodeGuru Reviewer를 사용했을 때 제가 생각하는 장점은 아래와 같습니다.</p>
<!-- /wp:paragraph -->
<!-- wp:heading {"level":3} -->
<h3><strong>1. 수백만 개의 코드 검토를 한 기계 학습의 리뷰</strong></h3>
<!-- /wp:heading -->
<!-- wp:paragraph -->
<p>개발하면서 좋은 코드를 개발하기 위해 다들 노력하지만, 이 코드가 Best Practice인지 판단을 명확하게 하지 못하는 경우가 많습니다. 하지만 이 기능은 수천 개의 오픈소스 및 Amazon 리포지토리에서 수백만 개의 코드를 기계 학습하였고 앞으로도 더 많은 코드를 학습할 것이기 때문에 CodeGuru Reviewer가 리뷰해주는 게 100% 정답은 아니겠지만 정답에 가까운 권장 사항을 남겨줄 수 있습니다.</p>
<!-- /wp:paragraph -->
<!-- wp:heading {"level":3} -->
<h3><strong>2.</strong> <strong>코드 기능의 정확성 및 결함을 찾기 어려운 부분을 보완</strong></h3>
<!-- /wp:heading -->
<!-- wp:paragraph -->
<p>보통의 코드 리뷰를 할 때는 비즈니스 로직에 대한 피드백이 많다고 생각합니다. CodeGuru Reviewer는 프로그래밍 언어의 전문가가 있는 거와 다름이 없으므로 기능의 정확성 및 결함 측면의 초점을 둔 리뷰를 받을 수 있습니다. </p>
<!-- /wp:paragraph -->
<!-- wp:paragraph -->
<p>알고리즘 및 비즈니스 로직에 대한 리뷰는 CodeGuru Reviewer에서 하지 않습니다.</p>
<!-- /wp:paragraph -->
<!-- wp:heading {"level":3} -->
<h3><strong>3. 보안 취약성 해결</strong></h3>
<!-- /wp:heading -->
<!-- wp:paragraph -->
<p>프로덕션에 보안이 취약한 코드가 배포가 나가기 전에 예방하는 게 가장 좋겠지만 자신이 짠 코드가 보안 취약성이 있는지 확인하기에는 어렵다고 생각합니다. 하지만 이 기능을 사용하면 해소할 수 있습니다. CodeGuru Reviewer는 보안 탐지기가 있어서 KMS, EC2 API, Java 암호화, 웹앱 보안취약점 등 보안 문제에 관한 모범 사례를 따르는지 확인 후 문제가 있을 때 권장 사항을 알려줍니다. <br><br>AWS의 보안 경험을 바탕으로 코드 보안을 개선한다고 합니다.</p>
<!-- /wp:paragraph -->
<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->
<!-- wp:heading -->
<h2><strong>어떤 것들을 리뷰해주나요?</strong></h2>
<!-- /wp:heading -->
<!-- wp:paragraph -->
<p>AWS 공식 문서에 따르면 대표적으로 다음과 같은 항목에 대해서 리뷰를 해준다고 합니다.</p>
<!-- /wp:paragraph -->
<!-- wp:list -->
<ul><li><strong>AWS 모범 사례(AWS API의 올바른 사용, 오래된 API를 사용하는지 등)</strong></li><li><strong>동시성</strong></li><li><strong>보안 분석</strong></li><li><strong>리소스 누출</strong></li><li><strong>민감한 정보 유출(키값이 코드에 하드코딩 되어있는지 등)</strong></li><li><strong>코딩 모범 사례</strong></li><li><strong>리팩토링</strong></li><li><strong>입력 유효성 검사</strong></li><li><strong>코드 유지보수 감지 (메서드 라인 수, 불필요하게 다른 모듈을 불필요하게 많이 호출하는지 등)</strong></li></ul>
<!-- /wp:list -->
<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->
<!-- wp:heading -->
<h2><strong>실습</strong></h2>
<!-- /wp:heading -->
<!-- wp:paragraph -->
<p>해당 내용은 결함이 있는 코드를 이미 브랜치에 push 했다고 가정하고 진행합니다. CodeGuru Reviewer를 테스트하기 위해 AWS에서는 Sample App를 제공합니다. 만약 해당 기능을 사용하는데 테스트할 리포지토리가 존재하지 않는다면 아래 링크의 리포지토리를 fork 하여 테스트해 보시면 좋을 것 같습니다.</p>
<!-- /wp:paragraph -->
<!-- wp:paragraph -->
<p><strong>참고: 아래 실습도 Sample App를 기반으로 작성하였습니다.</strong><br><a href="https://github.com/aws-samples/amazon-codeguru-reviewer-sample-app">https://github.com/aws-samples/amazon-codeguru-reviewer-sample-app</a></p>
<!-- /wp:paragraph -->
<!-- wp:heading {"level":3} -->
<h3><strong>1. 리포지토리 연결</strong></h3>
<!-- /wp:heading -->
<!-- wp:paragraph -->
<p>CodeGuru 서비스에 들어간 후 Reviewer → Repository 탭에 들어간 후 리포지토리 연결 버튼을 눌러줍니다.</p>
<!-- /wp:paragraph -->
<!-- wp:image {"align":"center","id":2280,"sizeSlug":"large","linkDestination":"media"} -->
<figure><a href="https://blog.dramancompany.com/wp-content/uploads/2021/11/레포지토리-연결전.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/11/레포지토리-연결전-1024x401.png" alt=""/></a></figure>
<!-- /wp:image -->
<!-- wp:paragraph -->
<p>현재는 BitBucket, CodeCommit, Github, Gihub Enterprise Sever 총 네 가지의 소스 공급자를 제공하고 있습니다. 자신에게 맞는 소스 공급자를 선택 후에 연결 버튼을 눌러줍니다.</p>
<!-- /wp:paragraph -->
<!-- wp:paragraph -->
<p>실습에서는 Github 기준으로 작성하였습니다.</p>
<!-- /wp:paragraph -->
<!-- wp:image {"align":"center","id":2281,"sizeSlug":"large","linkDestination":"media"} -->
<figure><a href="https://blog.dramancompany.com/wp-content/uploads/2021/11/레포지토리-연결.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/11/레포지토리-연결-1024x867.png" alt=""/></a></figure>
<!-- /wp:image -->
<!-- wp:paragraph -->
<p>연결되기까지는 평균 1분 정도의 시간이 걸리며 아래와 같이 연결된 걸 확인하실 수 있습니다.</p>
<!-- /wp:paragraph -->
<!-- wp:image {"align":"center","id":2282,"sizeSlug":"large","linkDestination":"media"} -->
<figure><a href="https://blog.dramancompany.com/wp-content/uploads/2021/11/연결완료-사진.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/11/연결완료-사진-1024x194.png" alt=""/></a></figure>
<!-- /wp:image -->
<!-- wp:heading {"level":3} -->
<h3><strong>2. Pull Request 생성</strong></h3>
<!-- /wp:heading -->
<!-- wp:paragraph -->
<p>연결이 완료된 후 Pull Request를 생성합니다. CodeGuru Reviewer에 레포지토리를 연결하면 해당 Pull Request 요청 알림을 구독합니다. 개발자가 Pull Request 요청했을시 요청 알림이 CodeGuru Reviewer로 전송되고 해당 서비스를 스캔 후 분석합니다.<br></p>
<!-- /wp:paragraph -->
<!-- wp:image {"align":"center","id":2283,"sizeSlug":"full","linkDestination":"media"} -->
<figure><a href="https://blog.dramancompany.com/wp-content/uploads/2021/11/image.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/11/image.png" alt=""/></a></figure>
<!-- /wp:image -->
<!-- wp:heading {"level":3} -->
<h3><meta charset="utf-8"><strong>3. 리뷰 확인</strong></h3>
<!-- /wp:heading -->
<!-- wp:paragraph -->
<p>리뷰가 달리기까지에는 코드의 양에 비례해서 시간이 소요되겠지만 평균 5분 정도 걸린다고 합니다. 분석이 완료되면 아래 사진에 보시는 것과 같이 Lamda 함수의 성능을 향상하게 하기 위한 방법이나 AWS의 오래된 API를 사용하지 말라는 등 문제가 될 수 있는 코드에 리뷰가 달린 걸 확인하실 수 있습니다.</p>
<!-- /wp:paragraph -->
<!-- wp:image {"align":"center","id":2284,"sizeSlug":"large","linkDestination":"media"} -->
<figure><a href="https://blog.dramancompany.com/wp-content/uploads/2021/11/코드그루_리뷰1.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/11/코드그루_리뷰1-1024x934.png" alt=""/></a></figure>
<!-- /wp:image -->
<!-- wp:image {"align":"center","id":2285,"sizeSlug":"large","linkDestination":"media"} -->
<figure><a href="https://blog.dramancompany.com/wp-content/uploads/2021/11/코드그루_리뷰2.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/11/코드그루_리뷰2-1024x875.png" alt=""/></a></figure>
<!-- /wp:image -->
<!-- wp:paragraph -->
<p>Github의 Pull Request 말고도 CodeGuru Reviewer에 코드 검토 탭에서도 리뷰 결과를 확인하실 수 있습니다.</p>
<!-- /wp:paragraph -->
<!-- wp:image {"align":"center","id":2286,"sizeSlug":"large","linkDestination":"media"} -->
<figure><a href="https://blog.dramancompany.com/wp-content/uploads/2021/11/코드검토_탭.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/11/코드검토_탭-1024x533.png" alt=""/></a></figure>
<!-- /wp:image -->
<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->
<!-- wp:heading -->
<h2><strong>마무리</strong></h2>
<!-- /wp:heading -->
<!-- wp:paragraph -->
<p>해당 기능을 사용할 때 여러모로 이점이 많아 보인다고 생각합니다. 앞으로도 계속해서 기계학습을 통해 더 발전된 리뷰를 남겨줄 수 있을 테고 위에 언급한 것처럼 팀 내에서 코드에 대해서 어떤 코드가 더 좋은 코드인지에 대한 고민이 있을 때 큰 도움을 줄 수 있을 것 같습니다.</p>
<!-- /wp:paragraph -->
<!-- wp:paragraph -->
<p>완전히 해당 기능으로 사람이 하는 코드리뷰를 대체할 수는 없겠지만 리뷰에 대한 리소스와 부담을 줄일 수 있다고 기대합니다. Java나 Python을 사용한다면 사용 가치가 있을 것 같습니다.</p>
<!-- /wp:paragraph -->
<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->
<!-- wp:heading -->
<h2><strong>참고</strong></h2>
<!-- /wp:heading -->
<!-- wp:list -->
<ul><li><a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/welcome.html"></a><a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/welcome.html">https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/welcome.html</a></li></ul>
<!-- /wp:list -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2277</wp:post_id>
		<wp:post_date><![CDATA[2021-11-08 15:48:16]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-11-08 06:48:16]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-11-08 16:20:24]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-11-08 07:20:24]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[code-guru-reviewer%eb%a5%bc-%ec%82%ac%ec%9a%a9%ed%95%98%ec%97%ac-%ec%bd%94%eb%93%9c%eb%a6%ac%eb%b7%b0-%eb%b0%9b%ea%b8%b0]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="aws"><![CDATA[AWS]]></category>
		<category domain="post_tag" nicename="code-review"><![CDATA[code review]]></category>
		<category domain="category" nicename="develop"><![CDATA[Tech]]></category>
		<category domain="post_tag" nicename="%ea%b0%9c%eb%b0%9c%eb%ac%b8%ed%99%94"><![CDATA[개발문화]]></category>
		<category domain="post_tag" nicename="%ec%bd%94%eb%93%9c%eb%a6%ac%eb%b7%b0"><![CDATA[코드리뷰]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729527534;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:1850;}i:1;a:1:{s:2:"id";i:2297;}i:2;a:1:{s:2:"id";i:586;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[29]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_single_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:17:{s:8:"subtitle";s:0:"";s:6:"format";s:8:"standard";s:5:"video";s:0:"";s:7:"gallery";s:0:"";s:11:"source_name";s:0:"";s:10:"source_url";s:0:"";s:8:"via_name";s:0:"";s:7:"via_url";s:0:"";s:8:"override";a:1:{i:0;a:27:{s:8:"template";s:1:"1";s:18:"single_blog_custom";s:0:"";s:8:"parallax";s:1:"1";s:10:"fullscreen";s:1:"1";s:6:"layout";s:13:"right-sidebar";s:7:"sidebar";s:15:"default-sidebar";s:14:"second_sidebar";s:15:"default-sidebar";s:14:"sticky_sidebar";s:1:"1";s:14:"share_position";s:3:"top";s:17:"share_float_style";s:16:"share-monocrhome";s:18:"show_share_counter";s:1:"1";s:17:"show_view_counter";s:1:"1";s:13:"show_featured";s:1:"1";s:14:"show_post_meta";s:1:"1";s:16:"show_post_author";s:1:"1";s:22:"show_post_author_image";s:1:"1";s:14:"show_post_date";s:1:"1";s:16:"post_date_format";s:7:"default";s:23:"post_date_format_custom";s:5:"Y/m/d";s:18:"show_post_category";s:1:"1";s:21:"post_reading_time_wpm";s:3:"300";s:20:"zoom_button_out_step";s:1:"2";s:19:"zoom_button_in_step";s:1:"3";s:13:"show_post_tag";s:1:"1";s:19:"show_prev_next_post";s:1:"1";s:15:"show_popup_post";s:1:"1";s:17:"number_popup_post";s:1:"1";}}s:14:"image_override";a:1:{i:0;a:2:{s:26:"single_post_thumbnail_size";s:8:"crop-500";s:24:"single_post_gallery_size";s:8:"crop-500";}}s:22:"trending_post_position";s:4:"meta";s:19:"trending_post_label";s:8:"Trending";s:20:"sponsored_post_label";s:12:"Sponsored by";s:19:"sponsored_post_name";s:0:"";s:18:"sponsored_post_url";s:0:"";s:19:"sponsored_post_logo";s:0:"";s:19:"sponsored_post_desc";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:2:"id";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_estimated-reading-time-minutes]]></wp:meta_key>
		<wp:meta_value><![CDATA[5]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle_flag]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_edit_mode]]></wp:meta_key>
		<wp:meta_value><![CDATA[builder]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_template_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[wp-post]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_version]]></wp:meta_key>
		<wp:meta_value><![CDATA[3.5.0-dev50]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[2285]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_data]]></wp:meta_key>
		<wp:meta_value><![CDATA[[{"id":"54475cb9","elType":"section","settings":[],"elements":[{"id":"7c2306cb","elType":"column","settings":{"_column_size":100},"elements":[{"id":"6da08981","elType":"widget","settings":{"editor":"<!-- wp:paragraph -->\n<p>\uc548\ub155\ud558\uc138\uc694. \ub9ac\uba64\ubc84 \uc11c\ubc84\/\uc6f9 \ud300 \uc11c\ubc84 \uac1c\ubc1c\uc790 \uc0ac\uc2b9\uc900\uc785\ub2c8\ub2e4. <\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>\uc5bc\ub9c8 \uc804\uc5d0 AWS\uc5d0 CodeGuru\ub77c\ub294 \uae30\ub2a5\uc774 \uc0c8\ub86d\uac8c \ub098\uc654\uc2b5\ub2c8\ub2e4. <\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Amazon CodeGuru\ub294 \ucf54\ub4dc \ud488\uc9c8\uc744 \ub192\uc774\uace0 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0\uc11c \uac00\uc7a5 \ube44\uacbd\uc81c\uc801\uc778 \ucf54\ub4dc \uc904\uc744 \ucc3e\uc544\ub0bc \uc218 \uc788\ub3c4\ub85d \uc9c0\uc6d0\ud558\ub294 \uad8c\uc7a5 \uc0ac\ud56d\uc744 \uc81c\uacf5\ud558\ub294 \uc9c0\ub2a5\ud615 \uac1c\ubc1c\uc790 \ub3c4\uad6c\uc785\ub2c8\ub2e4. CodeGuru \uae30\ub2a5 \uc548\uc5d0\uc11c\ub3c4 \ud504\ub85c\ub355\uc158\uc5d0\uc11c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \ubaa8\ub2c8\ud130\ub9c1\ud558\uc5ec CPU\ub97c \ub9ce\uc774 \ucc28\uc9c0\ud558\uace0 \uc788\ub294 \uba54\uc11c\ub4dc, latency\uac00 \uc624\ub798 \uac78\ub9ac\ub294 \ub4f1 \ube44\uacbd\uc81c\uc801\uc778 \ucf54\ub4dc\ub97c \ucc3e\uc544\ub0b4\ub294 CodeGuru Profiler\uc640 \uae30\uacc4 \ud559\uc2b5 \ubc0f \uc790\ub3d9\ud654\ub41c \ucd94\ub860\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uac1c\ubc1c \uc911 \uc2ec\uac01\ud55c \ubb38\uc81c, \ubcf4\uc548 \ucde8\uc57d\uc131 \ubc0f \ucc3e\uae30 \ud798\ub4e0 \ubc84\uadf8\ub97c \uc2dd\ubcc4\ud558\uace0 \ucf54\ub4dc \ud488\uc9c8\uc744 \ub192\uc77c \uc218 \uc788\ub3c4\ub85d \ucf54\ub4dc\ub9ac\ubdf0\ub97c \uc81c\uacf5\ud558\ub294 CodeGuru Reviewer\uac00 \uc788\ub294\ub370\uc694. \uc774 \uae00\uc5d0\uc11c\ub294 CodeGuru Reviewer\uc5d0 \uad00\ud574\uc11c \uc774\uc57c\uae30\ud574\ubcf4\ub824\uace0 \ud569\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:heading -->\n<h2><strong>CodeGuru Reviewer\ub294 \uc5b4\ub5a4 \uae30\ub2a5\uc778\uac00\uc694?<\/strong><\/h2>\n<!-- \/wp:heading -->\n\n<!-- wp:paragraph -->\n<p><strong>\uae30\uacc4 \ud559\uc2b5 \ubc0f \uc790\ub3d9\ud654\ub41c \ucd94\ub860, AWS \ubc0f \ubcf4\uc548 \ubaa8\ubc94 \uc0ac\ub840, \uadf8\ub9ac\uace0 \uc218\ucc9c \uac1c\uc758 \uc624\ud508 \uc18c\uc2a4 \ubc0f Amazon \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\uc5d0\uc11c \uc218\ubc31\ub9cc \uac74\uc758 \ucf54\ub4dc \uac80\ud1a0\uc744 \ud1b5\ud574 \ud559\uc2b5\ud55c \ud2b8\ub808\uc774\ub2dd \ub370\uc774\ud130 \uae30\ubc18\uc73c\ub85c \ucf54\ub4dc \ub9ac\ubdf0\ub97c \uc790\ub3d9\ud654\ud569\ub2c8\ub2e4. \ucf54\ub4dc\uc5d0\uc11c \ucc3e\uae30 \uc5b4\ub824\uc6b4 \uacb0\ud568\uacfc \ucde8\uc57d\uc131\uc744 \ud0d0\uc9c0\ud558\uace0 \ucf54\ub4dc \ud488\uc9c8 \uac1c\uc120\uc744 \uc704\ud574 \uc2e4\ud589\ud560 \uc218 \uc788\ub294 \uad8c\uc7a5 \uc0ac\ud56d\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4.<\/strong><\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>\uc704 \uc124\uba85\uc740 AWS\uc5d0\uc11c \uacf5\uc2dd\uc801\uc73c\ub85c \uc124\uba85\ud558\uace0 \uc788\ub294 \ub0b4\uc6a9\uc785\ub2c8\ub2e4. \ub098\uc640 \uc788\ub294 \uac83\ucc98\ub7fc \ub9d0 \uadf8\ub300\ub85c \ucf54\ub4dc \ub9ac\ubdf0\ub97c \uc790\ub3d9\ud654\ud574\uc8fc\ub294 \uae30\ub2a5\uc785\ub2c8\ub2e4. \uae30\uacc4\ud559\uc2b5\uc744 \ud55c \ub611\ub611\ud55c \ud504\ub85c\uadf8\ub798\ubc0d \uc5b8\uc5b4\uc758 \uc804\ubb38\uac00\uac00 \ud55c \uba85 \ub354 \uc788\uc5b4 Pull Request \ub2e8\uacc4\uc5d0\uc11c \ucf54\ub4dc \ub9ac\ubdf0\ub97c \ud574\uc900\ub2e4\uace0 \uc0dd\uac01\ud558\uc2dc\uba74 \ub429\ub2c8\ub2e4. \ud604\uc7ac\ub294 Java\uc640 Python\ub9cc \uc9c0\uc6d0\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:image {\"align\":\"center\"} -->\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https:\/\/res.cloudinary.com\/practicaldev\/image\/fetch\/s--n4yO8VcI--\/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\/https:\/\/user-images.githubusercontent.com\/23625821\/125892722-da641d48-e54a-4f4e-8303-8b09d99167bf.png\" alt=\"AWS CI\/CD pipeline with CodeGuru &amp; UnitTest - DEV Community\"\/><\/figure><\/div>\n<!-- \/wp:image -->\n\n<!-- wp:paragraph -->\n<p><\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:heading -->\n<h2><strong>\uc65c \ud544\uc694\ud55c\uac00\uc694?<\/strong><\/h2>\n<!-- \/wp:heading -->\n\n<!-- wp:paragraph -->\n<p>\ub300\ubd80\ubd84\uc758 \ubaa8\ub4e0 \uac1c\ubc1c\uc790\ub294 \uae30\ub2a5\uc744 \uba38\uc9c0\ud558\uae30 \uc804 \ubc84\uadf8, \ucf54\ub4dc \ud004\ub9ac\ud2f0 \ub4f1\uc758 \uc774\uc720\ub85c \ub9ac\ubdf0\ub97c \uc9c4\ud589\ud569\ub2c8\ub2e4. \uc800\ud76c \ud300\uc5d0\uc11c\ub3c4 \uae30\ub2a5\uc744 \uac1c\ubc1c\ud558\uace0 \ub098\uba74 \uc2ac\ub799\uc744 \ud1b5\ud574 \uc801\uadf9\uc801\uc73c\ub85c \ucf54\ub4dc \ub9ac\ubdf0\ub97c \uc694\uccad\ud558\uace0 \uc788\ub294\ub370\uc694.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:image {\"align\":\"center\",\"id\":2279,\"sizeSlug\":\"large\",\"linkDestination\":\"media\"} -->\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><a href=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2021\/11\/\u1105\u1175\u1107\u1172_\u110b\u116d\u110e\u1165\u11bc.png\"><img src=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2021\/11\/\u1105\u1175\u1107\u1172_\u110b\u116d\u110e\u1165\u11bc-1024x404.png\" alt=\"\" class=\"wp-image-2279\"\/><\/a><\/figure><\/div>\n<!-- \/wp:image -->\n\n<!-- wp:paragraph -->\n<p>CodeGuru Reviewer\ub97c \uc0ac\uc6a9\ud588\uc744 \ub54c \uc81c\uac00 \uc0dd\uac01\ud558\ub294 \uc7a5\uc810\uc740 \uc544\ub798\uc640 \uac19\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3><strong>1. \uc218\ubc31\ub9cc \uac1c\uc758 \ucf54\ub4dc \uac80\ud1a0\ub97c \ud55c \uae30\uacc4 \ud559\uc2b5\uc758 \ub9ac\ubdf0<\/strong><\/h3>\n<!-- \/wp:heading -->\n\n<!-- wp:paragraph -->\n<p>\uac1c\ubc1c\ud558\uba74\uc11c \uc88b\uc740 \ucf54\ub4dc\ub97c \uac1c\ubc1c\ud558\uae30 \uc704\ud574 \ub2e4\ub4e4 \ub178\ub825\ud558\uc9c0\ub9cc, \uc774 \ucf54\ub4dc\uac00 Best Practice\uc778\uc9c0 \ud310\ub2e8\uc744 \uba85\ud655\ud558\uac8c \ud558\uc9c0 \ubabb\ud558\ub294 \uacbd\uc6b0\uac00 \ub9ce\uc2b5\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \uc774 \uae30\ub2a5\uc740 \uc218\ucc9c \uac1c\uc758 \uc624\ud508\uc18c\uc2a4 \ubc0f Amazon \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\uc5d0\uc11c \uc218\ubc31\ub9cc \uac1c\uc758 \ucf54\ub4dc\ub97c \uae30\uacc4 \ud559\uc2b5\ud558\uc600\uace0 \uc55e\uc73c\ub85c\ub3c4 \ub354 \ub9ce\uc740 \ucf54\ub4dc\ub97c \ud559\uc2b5\ud560 \uac83\uc774\uae30 \ub54c\ubb38\uc5d0 CodeGuru Reviewer\uac00 \ub9ac\ubdf0\ud574\uc8fc\ub294 \uac8c 100% \uc815\ub2f5\uc740 \uc544\ub2c8\uaca0\uc9c0\ub9cc \uc815\ub2f5\uc5d0 \uac00\uae4c\uc6b4 \uad8c\uc7a5 \uc0ac\ud56d\uc744 \ub0a8\uaca8\uc904 \uc218 \uc788\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3><strong>2.<\/strong> <strong>\ucf54\ub4dc \uae30\ub2a5\uc758 \uc815\ud655\uc131 \ubc0f \uacb0\ud568\uc744 \ucc3e\uae30 \uc5b4\ub824\uc6b4 \ubd80\ubd84\uc744 \ubcf4\uc644<\/strong><\/h3>\n<!-- \/wp:heading -->\n\n<!-- wp:paragraph -->\n<p>\ubcf4\ud1b5\uc758 \ucf54\ub4dc \ub9ac\ubdf0\ub97c \ud560 \ub54c\ub294 \ube44\uc988\ub2c8\uc2a4 \ub85c\uc9c1\uc5d0 \ub300\ud55c \ud53c\ub4dc\ubc31\uc774 \ub9ce\ub2e4\uace0 \uc0dd\uac01\ud569\ub2c8\ub2e4. CodeGuru Reviewer\ub294 \ud504\ub85c\uadf8\ub798\ubc0d \uc5b8\uc5b4\uc758 \uc804\ubb38\uac00\uac00 \uc788\ub294 \uac70\uc640 \ub2e4\ub984\uc774 \uc5c6\uc73c\ubbc0\ub85c \uae30\ub2a5\uc758 \uc815\ud655\uc131 \ubc0f \uacb0\ud568 \uce21\uba74\uc758 \ucd08\uc810\uc744 \ub454 \ub9ac\ubdf0\ub97c \ubc1b\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. <\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>\uc54c\uace0\ub9ac\uc998 \ubc0f \ube44\uc988\ub2c8\uc2a4 \ub85c\uc9c1\uc5d0 \ub300\ud55c \ub9ac\ubdf0\ub294 CodeGuru Reviewer\uc5d0\uc11c \ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3><strong>3. \ubcf4\uc548 \ucde8\uc57d\uc131 \ud574\uacb0<\/strong><\/h3>\n<!-- \/wp:heading -->\n\n<!-- wp:paragraph -->\n<p>\ud504\ub85c\ub355\uc158\uc5d0 \ubcf4\uc548\uc774 \ucde8\uc57d\ud55c \ucf54\ub4dc\uac00 \ubc30\ud3ec\uac00 \ub098\uac00\uae30 \uc804\uc5d0 \uc608\ubc29\ud558\ub294 \uac8c \uac00\uc7a5 \uc88b\uaca0\uc9c0\ub9cc \uc790\uc2e0\uc774 \uc9e0 \ucf54\ub4dc\uac00 \ubcf4\uc548 \ucde8\uc57d\uc131\uc774 \uc788\ub294\uc9c0 \ud655\uc778\ud558\uae30\uc5d0\ub294 \uc5b4\ub835\ub2e4\uace0 \uc0dd\uac01\ud569\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \uc774 \uae30\ub2a5\uc744 \uc0ac\uc6a9\ud558\uba74 \ud574\uc18c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. CodeGuru Reviewer\ub294 \ubcf4\uc548 \ud0d0\uc9c0\uae30\uac00 \uc788\uc5b4\uc11c KMS, EC2 API, Java \uc554\ud638\ud654, \uc6f9\uc571 \ubcf4\uc548\ucde8\uc57d\uc810 \ub4f1 \ubcf4\uc548 \ubb38\uc81c\uc5d0 \uad00\ud55c \ubaa8\ubc94 \uc0ac\ub840\ub97c \ub530\ub974\ub294\uc9c0 \ud655\uc778 \ud6c4 \ubb38\uc81c\uac00 \uc788\uc744 \ub54c \uad8c\uc7a5 \uc0ac\ud56d\uc744 \uc54c\ub824\uc90d\ub2c8\ub2e4. <br><br>AWS\uc758 \ubcf4\uc548 \uacbd\ud5d8\uc744 \ubc14\ud0d5\uc73c\ub85c \ucf54\ub4dc \ubcf4\uc548\uc744 \uac1c\uc120\ud55c\ub2e4\uace0 \ud569\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:heading -->\n<h2><strong>\uc5b4\ub5a4 \uac83\ub4e4\uc744 \ub9ac\ubdf0\ud574\uc8fc\ub098\uc694?<\/strong><\/h2>\n<!-- \/wp:heading -->\n\n<!-- wp:paragraph -->\n<p>AWS \uacf5\uc2dd \ubb38\uc11c\uc5d0 \ub530\ub974\uba74 \ub300\ud45c\uc801\uc73c\ub85c \ub2e4\uc74c\uacfc \uac19\uc740 \ud56d\ubaa9\uc5d0 \ub300\ud574\uc11c \ub9ac\ubdf0\ub97c \ud574\uc900\ub2e4\uace0 \ud569\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li><strong>AWS \ubaa8\ubc94 \uc0ac\ub840(AWS API\uc758 \uc62c\ubc14\ub978 \uc0ac\uc6a9, \uc624\ub798\ub41c API\ub97c \uc0ac\uc6a9\ud558\ub294\uc9c0 \ub4f1)<\/strong><\/li><li><strong>\ub3d9\uc2dc\uc131<\/strong><\/li><li><strong>\ubcf4\uc548 \ubd84\uc11d<\/strong><\/li><li><strong>\ub9ac\uc18c\uc2a4 \ub204\ucd9c<\/strong><\/li><li><strong>\ubbfc\uac10\ud55c \uc815\ubcf4 \uc720\ucd9c(\ud0a4\uac12\uc774 \ucf54\ub4dc\uc5d0 \ud558\ub4dc\ucf54\ub529 \ub418\uc5b4\uc788\ub294\uc9c0 \ub4f1)<\/strong><\/li><li><strong>\ucf54\ub529 \ubaa8\ubc94 \uc0ac\ub840<\/strong><\/li><li><strong>\ub9ac\ud329\ud1a0\ub9c1<\/strong><\/li><li><strong>\uc785\ub825 \uc720\ud6a8\uc131 \uac80\uc0ac<\/strong><\/li><li><strong>\ucf54\ub4dc \uc720\uc9c0\ubcf4\uc218 \uac10\uc9c0 (\uba54\uc11c\ub4dc \ub77c\uc778 \uc218, \ubd88\ud544\uc694\ud558\uac8c \ub2e4\ub978 \ubaa8\ub4c8\uc744 \ubd88\ud544\uc694\ud558\uac8c \ub9ce\uc774 \ud638\ucd9c\ud558\ub294\uc9c0 \ub4f1)<\/strong><\/li><\/ul>\n<!-- \/wp:list -->\n\n<!-- wp:paragraph -->\n<p><\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:heading -->\n<h2><strong>\uc2e4\uc2b5<\/strong><\/h2>\n<!-- \/wp:heading -->\n\n<!-- wp:paragraph -->\n<p>\ud574\ub2f9 \ub0b4\uc6a9\uc740 \uacb0\ud568\uc774 \uc788\ub294 \ucf54\ub4dc\ub97c \uc774\ubbf8 \ube0c\ub79c\uce58\uc5d0 push \ud588\ub2e4\uace0 \uac00\uc815\ud558\uace0 \uc9c4\ud589\ud569\ub2c8\ub2e4. CodeGuru Reviewer\ub97c \ud14c\uc2a4\ud2b8\ud558\uae30 \uc704\ud574 AWS\uc5d0\uc11c\ub294 Sample App\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \ub9cc\uc57d \ud574\ub2f9 \uae30\ub2a5\uc744 \uc0ac\uc6a9\ud558\ub294\ub370 \ud14c\uc2a4\ud2b8\ud560 \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\uac00 \uc874\uc7ac\ud558\uc9c0 \uc54a\ub294\ub2e4\uba74 \uc544\ub798 \ub9c1\ud06c\uc758 \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\ub97c fork \ud558\uc5ec \ud14c\uc2a4\ud2b8\ud574 \ubcf4\uc2dc\uba74 \uc88b\uc744 \uac83 \uac19\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>\ucc38\uace0: \uc544\ub798 \uc2e4\uc2b5\ub3c4 Sample App\ub97c \uae30\ubc18\uc73c\ub85c \uc791\uc131\ud558\uc600\uc2b5\ub2c8\ub2e4.<\/strong><br><a href=\"https:\/\/github.com\/aws-samples\/amazon-codeguru-reviewer-sample-app\">https:\/\/github.com\/aws-samples\/amazon-codeguru-reviewer-sample-app<\/a><\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3><strong>1. \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac \uc5f0\uacb0<\/strong><\/h3>\n<!-- \/wp:heading -->\n\n<!-- wp:paragraph -->\n<p>CodeGuru \uc11c\ube44\uc2a4\uc5d0 \ub4e4\uc5b4\uac04 \ud6c4 Reviewer \u2192 Repository \ud0ed\uc5d0 \ub4e4\uc5b4\uac04 \ud6c4 \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac \uc5f0\uacb0 \ubc84\ud2bc\uc744 \ub20c\ub7ec\uc90d\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:image {\"align\":\"center\",\"id\":2280,\"sizeSlug\":\"large\",\"linkDestination\":\"media\"} -->\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><a href=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2021\/11\/\u1105\u1166\u1111\u1169\u110c\u1175\u1110\u1169\u1105\u1175-\u110b\u1167\u11ab\u1100\u1167\u11af\u110c\u1165\u11ab.png\"><img src=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2021\/11\/\u1105\u1166\u1111\u1169\u110c\u1175\u1110\u1169\u1105\u1175-\u110b\u1167\u11ab\u1100\u1167\u11af\u110c\u1165\u11ab-1024x401.png\" alt=\"\" class=\"wp-image-2280\"\/><\/a><\/figure><\/div>\n<!-- \/wp:image -->\n\n<!-- wp:paragraph -->\n<p>\ud604\uc7ac\ub294 BitBucket, CodeCommit, Github, Gihub Enterprise Sever \ucd1d \ub124 \uac00\uc9c0\uc758 \uc18c\uc2a4 \uacf5\uae09\uc790\ub97c \uc81c\uacf5\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc790\uc2e0\uc5d0\uac8c \ub9de\ub294 \uc18c\uc2a4 \uacf5\uae09\uc790\ub97c \uc120\ud0dd \ud6c4\uc5d0 \uc5f0\uacb0 \ubc84\ud2bc\uc744 \ub20c\ub7ec\uc90d\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>\uc2e4\uc2b5\uc5d0\uc11c\ub294 Github \uae30\uc900\uc73c\ub85c \uc791\uc131\ud558\uc600\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:image {\"align\":\"center\",\"id\":2281,\"sizeSlug\":\"large\",\"linkDestination\":\"media\"} -->\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><a href=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2021\/11\/\u1105\u1166\u1111\u1169\u110c\u1175\u1110\u1169\u1105\u1175-\u110b\u1167\u11ab\u1100\u1167\u11af.png\"><img src=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2021\/11\/\u1105\u1166\u1111\u1169\u110c\u1175\u1110\u1169\u1105\u1175-\u110b\u1167\u11ab\u1100\u1167\u11af-1024x867.png\" alt=\"\" class=\"wp-image-2281\"\/><\/a><\/figure><\/div>\n<!-- \/wp:image -->\n\n<!-- wp:paragraph -->\n<p>\uc5f0\uacb0\ub418\uae30\uae4c\uc9c0\ub294 \ud3c9\uade0 1\ubd84 \uc815\ub3c4\uc758 \uc2dc\uac04\uc774 \uac78\ub9ac\uba70 \uc544\ub798\uc640 \uac19\uc774 \uc5f0\uacb0\ub41c \uac78 \ud655\uc778\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:image {\"align\":\"center\",\"id\":2282,\"sizeSlug\":\"large\",\"linkDestination\":\"media\"} -->\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><a href=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2021\/11\/\u110b\u1167\u11ab\u1100\u1167\u11af\u110b\u116a\u11ab\u1105\u116d-\u1109\u1161\u110c\u1175\u11ab.png\"><img src=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2021\/11\/\u110b\u1167\u11ab\u1100\u1167\u11af\u110b\u116a\u11ab\u1105\u116d-\u1109\u1161\u110c\u1175\u11ab-1024x194.png\" alt=\"\" class=\"wp-image-2282\"\/><\/a><\/figure><\/div>\n<!-- \/wp:image -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3><strong>2. Pull Request \uc0dd\uc131<\/strong><\/h3>\n<!-- \/wp:heading -->\n\n<!-- wp:paragraph -->\n<p>\uc5f0\uacb0\uc774 \uc644\ub8cc\ub41c \ud6c4 Pull Request\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4. CodeGuru Reviewer\uc5d0 \ub808\ud3ec\uc9c0\ud1a0\ub9ac\ub97c \uc5f0\uacb0\ud558\uba74 \ud574\ub2f9 Pull Request \uc694\uccad \uc54c\ub9bc\uc744 \uad6c\ub3c5\ud569\ub2c8\ub2e4. \uac1c\ubc1c\uc790\uac00 Pull Request \uc694\uccad\ud588\uc744\uc2dc \uc694\uccad \uc54c\ub9bc\uc774 CodeGuru Reviewer\ub85c \uc804\uc1a1\ub418\uace0 \ud574\ub2f9 \uc11c\ube44\uc2a4\ub97c \uc2a4\uce94 \ud6c4 \ubd84\uc11d\ud569\ub2c8\ub2e4.<br><\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:image {\"align\":\"center\",\"id\":2283,\"sizeSlug\":\"full\",\"linkDestination\":\"media\"} -->\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-full\"><a href=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2021\/11\/image.png\"><img src=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2021\/11\/image.png\" alt=\"\" class=\"wp-image-2283\"\/><\/a><\/figure><\/div>\n<!-- \/wp:image -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3><meta charset=\"utf-8\"><strong>3. \ub9ac\ubdf0 \ud655\uc778<\/strong><\/h3>\n<!-- \/wp:heading -->\n\n<!-- wp:paragraph -->\n<p>\ub9ac\ubdf0\uac00 \ub2ec\ub9ac\uae30\uae4c\uc9c0\uc5d0\ub294 \ucf54\ub4dc\uc758 \uc591\uc5d0 \ube44\ub840\ud574\uc11c \uc2dc\uac04\uc774 \uc18c\uc694\ub418\uaca0\uc9c0\ub9cc \ud3c9\uade0 5\ubd84 \uc815\ub3c4 \uac78\ub9b0\ub2e4\uace0 \ud569\ub2c8\ub2e4. \ubd84\uc11d\uc774 \uc644\ub8cc\ub418\uba74 \uc544\ub798 \uc0ac\uc9c4\uc5d0 \ubcf4\uc2dc\ub294 \uac83\uacfc \uac19\uc774 Lamda \ud568\uc218\uc758 \uc131\ub2a5\uc744 \ud5a5\uc0c1\ud558\uac8c \ud558\uae30 \uc704\ud55c \ubc29\ubc95\uc774\ub098 AWS\uc758 \uc624\ub798\ub41c API\ub97c \uc0ac\uc6a9\ud558\uc9c0 \ub9d0\ub77c\ub294 \ub4f1 \ubb38\uc81c\uac00 \ub420 \uc218 \uc788\ub294 \ucf54\ub4dc\uc5d0 \ub9ac\ubdf0\uac00 \ub2ec\ub9b0 \uac78 \ud655\uc778\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:image {\"align\":\"center\",\"id\":2284,\"sizeSlug\":\"large\",\"linkDestination\":\"media\"} -->\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><a href=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2021\/11\/\u110f\u1169\u1103\u1173\u1100\u1173\u1105\u116e_\u1105\u1175\u1107\u11721.png\"><img src=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2021\/11\/\u110f\u1169\u1103\u1173\u1100\u1173\u1105\u116e_\u1105\u1175\u1107\u11721-1024x934.png\" alt=\"\" class=\"wp-image-2284\"\/><\/a><\/figure><\/div>\n<!-- \/wp:image -->\n\n<!-- wp:image {\"align\":\"center\",\"id\":2285,\"sizeSlug\":\"large\",\"linkDestination\":\"media\"} -->\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><a href=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2021\/11\/\u110f\u1169\u1103\u1173\u1100\u1173\u1105\u116e_\u1105\u1175\u1107\u11722.png\"><img src=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2021\/11\/\u110f\u1169\u1103\u1173\u1100\u1173\u1105\u116e_\u1105\u1175\u1107\u11722-1024x875.png\" alt=\"\" class=\"wp-image-2285\"\/><\/a><\/figure><\/div>\n<!-- \/wp:image -->\n\n<!-- wp:paragraph -->\n<p>Github\uc758 Pull Request \ub9d0\uace0\ub3c4 CodeGuru Reviewer\uc5d0 \ucf54\ub4dc \uac80\ud1a0 \ud0ed\uc5d0\uc11c\ub3c4 \ub9ac\ubdf0 \uacb0\uacfc\ub97c \ud655\uc778\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:image {\"align\":\"center\",\"id\":2286,\"sizeSlug\":\"large\",\"linkDestination\":\"media\"} -->\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><a href=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2021\/11\/\u110f\u1169\u1103\u1173\u1100\u1165\u11b7\u1110\u1169_\u1110\u1162\u11b8.png\"><img src=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2021\/11\/\u110f\u1169\u1103\u1173\u1100\u1165\u11b7\u1110\u1169_\u1110\u1162\u11b8-1024x533.png\" alt=\"\" class=\"wp-image-2286\"\/><\/a><\/figure><\/div>\n<!-- \/wp:image -->\n\n<!-- wp:paragraph -->\n<p><\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:heading -->\n<h2><strong>\ub9c8\ubb34\ub9ac<\/strong><\/h2>\n<!-- \/wp:heading -->\n\n<!-- wp:paragraph -->\n<p>\ud574\ub2f9 \uae30\ub2a5\uc744 \uc0ac\uc6a9\ud560 \ub54c \uc5ec\ub7ec\ubaa8\ub85c \uc774\uc810\uc774 \ub9ce\uc544 \ubcf4\uc778\ub2e4\uace0 \uc0dd\uac01\ud569\ub2c8\ub2e4. \uc55e\uc73c\ub85c\ub3c4 \uacc4\uc18d\ud574\uc11c \uae30\uacc4\ud559\uc2b5\uc744 \ud1b5\ud574 \ub354 \ubc1c\uc804\ub41c \ub9ac\ubdf0\ub97c \ub0a8\uaca8\uc904 \uc218 \uc788\uc744 \ud14c\uace0 \uc704\uc5d0 \uc5b8\uae09\ud55c \uac83\ucc98\ub7fc \ud300 \ub0b4\uc5d0\uc11c \ucf54\ub4dc\uc5d0 \ub300\ud574\uc11c \uc5b4\ub5a4 \ucf54\ub4dc\uac00 \ub354 \uc88b\uc740 \ucf54\ub4dc\uc778\uc9c0\uc5d0 \ub300\ud55c \uace0\ubbfc\uc774 \uc788\uc744 \ub54c \ud070 \ub3c4\uc6c0\uc744 \uc904 \uc218 \uc788\uc744 \uac83 \uac19\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>\uc644\uc804\ud788 \ud574\ub2f9 \uae30\ub2a5\uc73c\ub85c \uc0ac\ub78c\uc774 \ud558\ub294 \ucf54\ub4dc\ub9ac\ubdf0\ub97c \ub300\uccb4\ud560 \uc218\ub294 \uc5c6\uaca0\uc9c0\ub9cc \ub9ac\ubdf0\uc5d0 \ub300\ud55c \ub9ac\uc18c\uc2a4\uc640 \ubd80\ub2f4\uc744 \uc904\uc77c \uc218 \uc788\ub2e4\uace0 \uae30\ub300\ud569\ub2c8\ub2e4. Java\ub098 Python\uc744 \uc0ac\uc6a9\ud55c\ub2e4\uba74 \uc0ac\uc6a9 \uac00\uce58\uac00 \uc788\uc744 \uac83 \uac19\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:heading -->\n<h2><strong>\ucc38\uace0<\/strong><\/h2>\n<!-- \/wp:heading -->\n\n<!-- wp:list -->\n<ul><li><a href=\"https:\/\/docs.aws.amazon.com\/codeguru\/latest\/reviewer-ug\/welcome.html\"><\/a><a href=\"https:\/\/docs.aws.amazon.com\/codeguru\/latest\/reviewer-ug\/welcome.html\">https:\/\/docs.aws.amazon.com\/codeguru\/latest\/reviewer-ug\/welcome.html<\/a><\/li><\/ul>\n<!-- \/wp:list -->"},"elements":[],"widgetType":"text-editor"}],"isInner":false}],"isInner":false}]]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_page_assets]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[리멤버에서 Pull Request 편리하게 사용하는 법]]></title>
		<link>https://blog.dramancompany.com/2021/11/%eb%93%9c%eb%9d%bc%eb%a7%88%ec%95%a4%ec%bb%b4%ed%8d%bc%eb%8b%88%ec%97%90%ec%84%9c-pull-request-%ed%8e%b8%eb%a6%ac%ed%95%98%ea%b2%8c-%ec%82%ac%ec%9a%a9%ed%95%98%eb%8a%94-%eb%b2%95/</link>
		<pubDate>Wed, 17 Nov 2021 01:24:10 +0000</pubDate>
		<dc:creator><![CDATA[sj.sa]]></dc:creator>
		<guid isPermaLink="false">https://blog.dramancompany.com/?p=2297</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>여러 사람이 협업을 하다 보면 코드에 변경 사항에 대한 코드 리뷰를 받기 위하여 Pull Request를 생성하곤 합니다. 리멤버에서는 리뷰어가 좀 더 쉽게 리뷰를 진행할 수 있도록 Pull Request에 작업 내용, 고민됐던 부분, 희망 리뷰 완료일 등 다양한 정보를 적고 있습니다. 이런 코드 리뷰 프로세스를 더 잘 정착시키고 효율적으로 진행할 수 있도록 리멤버의 서버 개발자들이 고민하고 적용했던 몇 가지 방법에 대해 공유하고자 합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2><strong>CODEOWNERS로 리뷰어 자동으로 지정하기</strong></h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>GitHub에서는 Pull Request 생성 시 리뷰어를 요청하는 기능이 있습니다. 지정하는 방법에 대해서는 간단하지만, 매번 같은 사람 혹은 팀을 리뷰어로 매번 지정하는 건 여간 귀찮은 일이 아닙니다. CODEOWNERS는 코드에 변경 사항이 있는 Pull Request 생성 시 자동으로 개인, 팀 단위의 리뷰어를 지정해주는 기능입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3><strong>사용 방법</strong></h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>해당 기능을 사용하기 위해서는 <meta charset="utf-8">CODEOWNERS라는 파일을 생성해야 합니다. 루트 디렉터리 기준으로 <strong>docs/</strong>, <strong>.github/</strong>&nbsp;중 한 곳에 CODEOWNERS 파일을 생성한 뒤 리뷰어를 지정합니다. ex) @ace9809, @roharon <br></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>파일을 생성하면 Pull Request 요청 시 자신이 소유자로 지정된 파일의 변경 사항이 있을 때 자동으로 검토 요청받게 됩니다. CODEOWNERS 설정 파일의 크기는 3MB 초과하게 되면 불러오지 못하며 CODEOWNERS 파일의 디렉터리 경로는 대소문자를 구분하여 리포지토리의 경로와 정확하게 일치해야 합니다.<br></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>제가 개발하고 있는 커뮤니티 프로젝트에서는 모든 파일에 대해서 프로젝트에 관련된 리뷰어가 지정되도록 하였습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":2298,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/11/스크린샷-2021-11-16-오후-10.11.59.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/11/스크린샷-2021-11-16-오후-10.11.59-1024x332.png" alt="" class="wp-image-2298"/></a></figure></div>
<!-- /wp:image -->

<!-- wp:heading {"level":3} -->
<h3><strong>문법 예시</strong></h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>CODEOWNERS는 특정 언어, 팀, 디렉터리 별로도 세부적으로 리뷰어가 지정이 가능합니다. 자세한 문법에 대해서는 아래 예시를 참고하시길 바랍니다.</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code># This is a comment.
# Each line is a file pattern followed by one or more owners.

# These owners will be the default owners for everything in
# the repo. Unless a later match takes precedence,
# @global-owner1 and @global-owner2 will be requested for
# review when someone opens a pull request.
*       @global-owner1 @global-owner2

# Order is important; the last matching pattern takes the most
# precedence. When someone opens a pull request that only
# modifies JS files, only @js-owner and not the global
# owner(s) will be requested for a review.
*.js    @js-owner

# You can also use email addresses if you prefer. They'll be
# used to look up users just like we do for commit author
# emails.
*.go docs@example.com

# Teams can be specified as code owners as well. Teams should
# be identified in the format @org/team-name. Teams must have
# explicit write access to the repository. In this example,
# the octocats team in the octo-org organization owns all .txt files.
*.txt @octo-org/octocats

# In this example, @doctocat owns any files in the build/logs
# directory at the root of the repository and any of its
# subdirectories.
/build/logs/ @doctocat

# The `docs/*` pattern will match files like
# `docs/getting-started.md` but not further nested files like
# `docs/build-app/troubleshooting.md`.
docs/*  docs@example.com

# In this example, @octocat owns any file in an apps directory
# anywhere in your repository.
apps/ @octocat

# In this example, @doctocat owns any file in the `/docs`
# directory in the root of your repository and any of its
# subdirectories.
/docs/ @doctocat

# In this example, @octocat owns any file in the `/apps`
# directory in the root of your repository except for the `/apps/github`
# subdirectory, as its owners are left empty.
/apps/ @octocat
/apps/github </code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>코드 소유자로 지정된 사람이 Approve를 하지 않을 때 머지를 할 수 없도록 설정하고 싶은 경우 <meta charset="utf-8">Settings -&gt; Branches -&gt; Add rules에서 옵션을 설정하는 것도 가능합니다. </p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":2306,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/11/스크린샷_2021-11-17_오전_2_10_25.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/11/스크린샷_2021-11-17_오전_2_10_25-1024x475.png" alt="" class="wp-image-2306"/></a></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3><strong>Pull Request 생성하여 리뷰어 확인</strong></h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><meta charset="utf-8">Pull Request 생성 단계에서는 리뷰어가 추가되지 않으며 실제로 생성 한 후 Open 상태일 경우 리뷰어가 추가됩니다. Reviewers 탭이 아래 사진과 같이 보인다면 정상적으로 기능이 동작하게 된 것입니다. 추가된 리뷰어에게도 메일이 정상적으로 가는 것도 확인하실 수 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":2299,"width":1024,"height":500,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large is-resized"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/11/스크린샷_2021-10-18_오전_2_01_10.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/11/스크린샷_2021-10-18_오전_2_01_10-1024x500.png" alt="" class="wp-image-2299" width="1024" height="500"/></a></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":2301,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/11/Untitled-1.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/11/Untitled-1-1024x895.png" alt="" class="wp-image-2301"/></a></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2><strong>Pull Request 템플릿 사용하기</strong></h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":2303,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/11/스크린샷-2021-11-17-오전-12.50.54.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/11/스크린샷-2021-11-17-오전-12.50.54-1024x418.png" alt="" class="wp-image-2303"/></a><figcaption>(PR 템플릿을 적용하기 전)</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>입사 후 얼마 되지 않았을 때 제가 작성한 PR description입니다. 어떤 느낌이 드시나요? 매우 불친절해 보입니다. 709줄이나 변경됐는데 API 스펙문서, 해당 기능에 대한 기획 문서 링크, 희망 리뷰 완료 일자 등 리뷰를 하기에 앞서 필요한 정보들이 존재하지 않습니다. 이러한 PR description은 작업한 부분을 인지하는 데 시간이 오래 걸리며 필요한 정보에 대해서 Pull Request 요청자와 커뮤니케이션을 통해 정보를 얻어야 하는 피로감을 줍니다. 또한 고민됐던 부분, 중점적으로 리뷰를 받고 싶은 부분에 대해서도 적지 않았기 때문에 좋은 리뷰를 받기가 어렵습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>사람마다 Pull Request를 작성하는 템플릿이 다르다보니 누군가는 자세하지 않게 쓸 수 있습니다. 혹은 자세하게 쓰는 사람도 매번 완벽하게 똑같은 템플릿을 유지할 수 없습니다.<br>필요한 정보를 까먹고 적지 않는 일도 있고 이전에 작성했던 Pull Request description을 보고 빠진 부분이 없는지 확인하거나 템플릿을 매번 똑같이 만드는 반복되는 작업에 대해서도 시간을 단축하고 싶습니다. 이러한 문제점들을 Pull Request 템플릿을 통하여 매우 간단하게 일관된 description을 작성하여 생산성을 높일 수 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":2325,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/11/스크린샷-2021-11-18-오전-2.00.49.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/11/스크린샷-2021-11-18-오전-2.00.49-1024x706.png" alt="" class="wp-image-2325"/></a><figcaption><meta charset="utf-8">(PR 템플릿을 적용한 후)</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:heading {"level":3} -->
<h3><strong>사용 방법</strong></h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>루트 디렉터리에서&nbsp;<strong>.github</strong> 디렉터리에&nbsp;<strong>PULL_REQUEST_TEMPLATE.md</strong>&nbsp;파일을 만듭니다. 회사마다 description에 필요한 정보가 다르겠지만 리멤버 서버팀이 사용하는 PR 템플릿 항목에 대해서 이야기해보도록 하겠습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>## 작업 내용 (Content)
- 리뷰어가 중점적으로 봐야 하는 부분을 바로 알 수 있도록 변경된 내용을 나열합니다.
- List up changes so that reviewer can quickly understand the important parts.

## 링크 (Links)
- &#91;JIRA 티켓 이름](http://jiraaddress.com/browse/API-1)
- &#91;API 스펙 문서](http://<meta charset="utf-8">wikiaddress.com/)
- &#91;개발 문서](http://<meta charset="utf-8"><meta charset="utf-8">wikiaddress.com/)
- &#91;기획 문서](http://<meta charset="utf-8"><meta charset="utf-8">wikiaddress.com/)
- &#91;디자인 문서](http://<meta charset="utf-8"><meta charset="utf-8">wikiaddress.com/)

## 기타 사항 (Etc)
- PR에 대한 추가 설명이나 작업하면서 고민이 되었던 부분 등
- Additional information about this PR or any troubles working on this PR.

## Merge 전 필요 작업 (Checklist before merge)
- &#91; ] 예) XX 테이블 추가, 앱 배포 등
- &#91; ] eg) Create XX table, Deploy app etc
## 희망 리뷰 완료 일 (Expected due date)
202X. X. X. Wed</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":4} -->
<h4><strong>작업 내용</strong></h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>작업한 내용에 대해서 나열합니다. 어떤 기능을 개발했는지, 리팩토링 한 내용 등 수정한 부분에 대해서 리뷰하는 사람이 쉽게 인지할 수 있도록 작성합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4><strong>링크</strong></h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>리멤버에서는 단순히 완성된 코드만을 리뷰하는 것이 아니라 작업한 부분에 대해서 제대로 이해하고 더 좋은 리뷰를 주기 위해 노력합니다. 기획 문서, API 스펙 문서, 개발문서 등 <meta charset="utf-8">리뷰하기 위해 필요한 링크들을 작성합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4><strong>기타 사항</strong></h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>개발하면서 고민됐던 부분들에 대해서 작성합니다. API path naming에 대한 고민, 구현 방법 등 작업하면서 고민됐던 부분 및 같이 논의해봤으면 하는 것들에 대해서 상세히 적고 리뷰어가 해당 부분에 대해서 조금 더 중점적으로 리뷰를 할 수 있도록 합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4><strong>Merge 전 필요 작업</strong></h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>개발을 완료하고 프로덕션 환경에서 테이블이나 환경 변수 추가 등 머지 및 배포하기 전에 선행되어야 할 부분을 잊지 않고  리마인드 하기 위한 자신만의 체크리스트입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4><strong>희망 리뷰일</strong></h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>리뷰를 완료 받고 싶은 날짜입니다. 여담이지만 서버팀에서는 원활하게 리뷰가 되도록 매주 수요일에 리뷰가 안된 것들이 있는지 점검하여 리뷰가 원활하게 되도록 합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2><strong>마무리</strong></h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>리멤버에서는 위와 같이 간단한 기능들을 이용하여 Pull Request 요청 및 리뷰시에 생산성을 높였습니다. 기존에 저희가 Pull Request를 생성할 때 겪었던 문제들과 같은 고민을 하고 있다면 적극적으로 사용하시길 권장합니다. :)</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>참고</h2>
<!-- /wp:heading -->

<!-- wp:list -->
<ul><li><a href="https://medium.com/expedia-group-tech/owning-your-codeowners-file-332e288c1d12"></a><a href="https://medium.com/expedia-group-tech/owning-your-codeowners-file-332e288c1d12">https://medium.com/expedia-group-tech/owning-your-codeowners-file-332e288c1d12</a></li><li><a href="https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/customizing-your-repository/about-code-owners#codeowners-file-location"></a><a href="https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/customizing-your-repository/about-code-owners#codeowners-file-location">https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/customizing-your-repository/about-code-owners#codeowners-file-location</a></li><li><a href="https://github.blog/2017-07-06-introducing-code-owners/">https://github.blog/2017-07-06-introducing-code-owners/</a></li><li><a href="https://docs.github.com/en/communities/using-templates-to-encourage-useful-issues-and-pull-requests/creating-a-pull-request-template-for-your-repository">https://docs.github.com/en/communities/using-templates-to-encourage-useful-issues-and-pull-requests/creating-a-pull-request-template-for-your-repository</a></li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2297</wp:post_id>
		<wp:post_date><![CDATA[2021-11-17 10:24:10]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-11-17 01:24:10]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-11-18 02:06:08]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-11-17 17:06:08]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%eb%93%9c%eb%9d%bc%eb%a7%88%ec%95%a4%ec%bb%b4%ed%8d%bc%eb%8b%88%ec%97%90%ec%84%9c-pull-request-%ed%8e%b8%eb%a6%ac%ed%95%98%ea%b2%8c-%ec%82%ac%ec%9a%a9%ed%95%98%eb%8a%94-%eb%b2%95]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="develop"><![CDATA[Tech]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729532284;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:2277;}i:1;a:1:{s:2:"id";i:1850;}i:2;a:1:{s:2:"id";i:586;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[29]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_single_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:17:{s:8:"subtitle";s:0:"";s:6:"format";s:8:"standard";s:5:"video";s:0:"";s:7:"gallery";s:0:"";s:11:"source_name";s:0:"";s:10:"source_url";s:0:"";s:8:"via_name";s:0:"";s:7:"via_url";s:0:"";s:8:"override";a:1:{i:0;a:27:{s:8:"template";s:1:"1";s:18:"single_blog_custom";s:0:"";s:8:"parallax";s:1:"1";s:10:"fullscreen";s:1:"1";s:6:"layout";s:13:"right-sidebar";s:7:"sidebar";s:15:"default-sidebar";s:14:"second_sidebar";s:15:"default-sidebar";s:14:"sticky_sidebar";s:1:"1";s:14:"share_position";s:3:"top";s:17:"share_float_style";s:16:"share-monocrhome";s:18:"show_share_counter";s:1:"1";s:17:"show_view_counter";s:1:"1";s:13:"show_featured";s:1:"1";s:14:"show_post_meta";s:1:"1";s:16:"show_post_author";s:1:"1";s:22:"show_post_author_image";s:1:"1";s:14:"show_post_date";s:1:"1";s:16:"post_date_format";s:7:"default";s:23:"post_date_format_custom";s:5:"Y/m/d";s:18:"show_post_category";s:1:"1";s:21:"post_reading_time_wpm";s:3:"300";s:20:"zoom_button_out_step";s:1:"2";s:19:"zoom_button_in_step";s:1:"3";s:13:"show_post_tag";s:1:"1";s:19:"show_prev_next_post";s:1:"1";s:15:"show_popup_post";s:1:"1";s:17:"number_popup_post";s:1:"1";}}s:14:"image_override";a:1:{i:0;a:2:{s:26:"single_post_thumbnail_size";s:8:"crop-500";s:24:"single_post_gallery_size";s:8:"crop-500";}}s:22:"trending_post_position";s:4:"meta";s:19:"trending_post_label";s:8:"Trending";s:20:"sponsored_post_label";s:12:"Sponsored by";s:19:"sponsored_post_name";s:0:"";s:18:"sponsored_post_url";s:0:"";s:19:"sponsored_post_logo";s:0:"";s:19:"sponsored_post_desc";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:2:"id";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_estimated-reading-time-minutes]]></wp:meta_key>
		<wp:meta_value><![CDATA[6]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle_flag]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_template_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[wp-post]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_version]]></wp:meta_key>
		<wp:meta_value><![CDATA[3.5.0-dev50]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[2312]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_data]]></wp:meta_key>
		<wp:meta_value><![CDATA[[{"id":"323e6adc","elType":"section","settings":[],"elements":[{"id":"3099458e","elType":"column","settings":{"_column_size":100},"elements":[{"id":"457b76cd","elType":"widget","settings":{"editor":"<!-- wp:paragraph -->\n<p>Pull Request\ub97c \uc0dd\uc131\ud560 \ub54c \ud574\ub2f9 \uae30\ub2a5\uc758 \uc791\uc5c5 \ub0b4\uc6a9, \ub9ac\ubdf0 \uc644\ub8cc \uc77c\uc790, \uc791\uc5c5\ud558\uba74\uc11c \uace0\ubbfc \ub410\ub358\ubd80\ubd84, \ub9ac\ubdf0\uc5b4 \uc9c0\uc815 \ub4f1 Pull Request\ub97c \uc0dd\uc131\ud558\uae30\uc804\uc5d0 \uac70\uccd0\uc57c \ud558\ub294 \ud504\ub85c\uc138\uc2a4\uac00 \ub9ce\uc2b5\ub2c8\ub2e4. \ub4dc\ub77c\ub9c8\uc564\ucef4\ud37c\ub2c8\uc758 \uc11c\ubc84\/\uc6f9 \ud300\uc740 \uc774\ub7f0 \ubc18\ubcf5\uc801\uc778 \ud504\ub85c\uc138\uc2a4\ub97c \uc5b4\ub5bb\uac8c \ud558\uba74 \ucd5c\uc18c\ud654\ud558\uc5ec \uc0dd\uc0b0\uc131\uc744 \ub192\uc77c \uc218 \uc788\uc744\uc9c0\uc5d0 \ub300\ud574\uc11c \uace0\ubbfc\ud558\uc600\uace0 \uba87 \uac00\uc9c0 \ubc29\ubc95\uc5d0 \ub300\ud574\uc11c \uac04\ub2e8\ud558\uac8c \uacf5\uc720\ud574 \ubcf4\ub824\uace0 \ud569\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:heading -->\n<h2><strong>CODEOWNERS\ub85c \ub9ac\ubdf0\uc5b4 \uc790\ub3d9\uc73c\ub85c \uc9c0\uc815\ud558\uae30<\/strong><\/h2>\n<!-- \/wp:heading -->\n\n<!-- wp:paragraph -->\n<p>GitHub\uc5d0\uc11c\ub294 Pull Request \uc0dd\uc131 \uc2dc \ub9ac\ubdf0\uc5b4\ub97c \uc694\uccad\ud558\ub294 \uae30\ub2a5\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc9c0\uc815\ud558\ub294 \ubc29\ubc95\uc5d0 \ub300\ud574\uc11c\ub294 \uac04\ub2e8\ud558\uc9c0\ub9cc, \ub9e4\ubc88 \uac19\uc740 \uc0ac\ub78c \ud639\uc740 \ud300\uc744 \ub9ac\ubdf0\uc5b4\ub85c \ub9e4\ubc88 \uc9c0\uc815\ud558\ub294 \uac74 \uc5ec\uac04 \uadc0\ucc2e\uc740 \uc77c\uc774 \uc544\ub2d9\ub2c8\ub2e4. CODEOWNERS\ub294 \ucf54\ub4dc\uc5d0 \ubcc0\uacbd \uc0ac\ud56d\uc774 \uc788\ub294 Pull Request \uc0dd\uc131 \uc2dc \uc790\ub3d9\uc73c\ub85c \uac1c\uc778, \ud300 \ub2e8\uc704\uc758 \ub9ac\ubdf0\uc5b4\ub97c \uc9c0\uc815\ud574\uc8fc\ub294 \uae30\ub2a5\uc785\ub2c8\ub2e4. \ucf54\ub4dc\uc758 \uc218\uc815\uc0ac\ud56d\uc774 \uc5c6\ub294 \ube48 \ucee4\ubc0b\uac19\uc740 \uacbd\uc6b0\uc5d0\ub294 Pull Request\ub97c \uc0dd\uc131\ud558\ub354\ub77c\ub3c4 \ub9ac\ubdf0\uc5b4\uac00 \uc9c0\uc815\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3><strong>\uc0ac\uc6a9 \ubc29\ubc95<\/strong><\/h3>\n<!-- \/wp:heading -->\n\n<!-- wp:paragraph -->\n<p>\ud574\ub2f9 \uae30\ub2a5\uc744 \uc0ac\uc6a9\ud558\uae30 \uc704\ud574\uc11c\ub294 <meta charset=\"utf-8\">CODEOWNERS\ub77c\ub294 \ud30c\uc77c\uc744 \uc0dd\uc131\ud574\uc57c \ud569\ub2c8\ub2e4. \ub8e8\ud2b8 \ub514\ub809\ud130\ub9ac \uae30\uc900\uc73c\ub85c <strong>docs\/<\/strong>, <strong>.github\/<\/strong>&nbsp;\uc911 \ud55c \uacf3\uc5d0 CODEOWNERS \ud30c\uc77c\uc744 \uc0dd\uc131\ud55c \ub4a4 \ub9ac\ubdf0\uc5b4\ub97c \uc9c0\uc815\ud569\ub2c8\ub2e4. ex) @ace9809, @roharon <br><\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>\ud30c\uc77c\uc744 \uc0dd\uc131\ud558\uba74 Pull Request \uc694\uccad \uc2dc \uc790\uc2e0\uc774 \uc18c\uc720\uc790\ub85c \uc9c0\uc815\ub41c \ud30c\uc77c\uc758 \ubcc0\uacbd \uc0ac\ud56d\uc774 \uc788\uc744 \ub54c \uc790\ub3d9\uc73c\ub85c \uac80\ud1a0 \uc694\uccad\ubc1b\uac8c \ub429\ub2c8\ub2e4. \ud30c\uc77c\uc758 \ud06c\uae30\ub294 3MB \ucd08\uacfc\ud558\uac8c \ub418\uba74 \ubd88\ub7ec\uc624\uc9c0 \ubabb\ud558\uba70 CODEOWNERS \ud30c\uc77c\uc758 \ub514\ub809\ud130\ub9ac \uacbd\ub85c\ub294 \ub300\uc18c\ubb38\uc790\ub97c \uad6c\ubd84\ud558\uc5ec \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\uc758 \uacbd\ub85c\uc640 \uc815\ud655\ud558\uac8c \uc77c\uce58\ud574\uc57c \ud569\ub2c8\ub2e4.<br><\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>\uc81c\uac00 \uac1c\ubc1c\ud558\uace0 \uc788\ub294 \ucee4\ubba4\ub2c8\ud2f0 \ud504\ub85c\uc81d\ud2b8\uc5d0\uc11c\ub294 \ubaa8\ub4e0 \ud30c\uc77c\uc5d0 \ub300\ud574\uc11c \ud504\ub85c\uc81d\ud2b8\uc5d0 \uad00\ub828\ub41c \ub9ac\ubdf0\uc5b4\uac00 \uc9c0\uc815\ub418\ub3c4\ub85d \ud558\uc600\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:image {\"align\":\"center\",\"id\":2298,\"sizeSlug\":\"large\",\"linkDestination\":\"media\"} -->\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><a href=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2021\/11\/\u1109\u1173\u110f\u1173\u1105\u1175\u11ab\u1109\u1163\u11ba-2021-11-16-\u110b\u1169\u1112\u116e-10.11.59.png\"><img src=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2021\/11\/\u1109\u1173\u110f\u1173\u1105\u1175\u11ab\u1109\u1163\u11ba-2021-11-16-\u110b\u1169\u1112\u116e-10.11.59-1024x332.png\" alt=\"\" class=\"wp-image-2298\"\/><\/a><\/figure><\/div>\n<!-- \/wp:image -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3><strong>\ubb38\ubc95 \uc608\uc2dc<\/strong><\/h3>\n<!-- \/wp:heading -->\n\n<!-- wp:paragraph -->\n<p>CODEOWNERS\ub294 \ud2b9\uc815 \uc5b8\uc5b4, \ud300, \ub514\ub809\ud130\ub9ac \ubcc4\ub85c\ub3c4 \uc138\ubd80\uc801\uc73c\ub85c \ub9ac\ubdf0\uc5b4\uac00 \uc9c0\uc815\uc774 \uac00\ub2a5\ud569\ub2c8\ub2e4. \uc790\uc138\ud55c \ubb38\ubc95\uc5d0 \ub300\ud574\uc11c\ub294 \uc544\ub798 \uc608\uc2dc\ub97c \ucc38\uace0\ud558\uc2dc\uae38 \ubc14\ub78d\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code># This is a comment.\n# Each line is a file pattern followed by one or more owners.\n\n# These owners will be the default owners for everything in\n# the repo. Unless a later match takes precedence,\n# @global-owner1 and @global-owner2 will be requested for\n# review when someone opens a pull request.\n*       @global-owner1 @global-owner2\n\n# Order is important; the last matching pattern takes the most\n# precedence. When someone opens a pull request that only\n# modifies JS files, only @js-owner and not the global\n# owner(s) will be requested for a review.\n*.js    @js-owner\n\n# You can also use email addresses if you prefer. They'll be\n# used to look up users just like we do for commit author\n# emails.\n*.go docs@example.com\n\n# Teams can be specified as code owners as well. Teams should\n# be identified in the format @org\/team-name. Teams must have\n# explicit write access to the repository. In this example,\n# the octocats team in the octo-org organization owns all .txt files.\n*.txt @octo-org\/octocats\n\n# In this example, @doctocat owns any files in the build\/logs\n# directory at the root of the repository and any of its\n# subdirectories.\n\/build\/logs\/ @doctocat\n\n# The `docs\/*` pattern will match files like\n# `docs\/getting-started.md` but not further nested files like\n# `docs\/build-app\/troubleshooting.md`.\ndocs\/*  docs@example.com\n\n# In this example, @octocat owns any file in an apps directory\n# anywhere in your repository.\napps\/ @octocat\n\n# In this example, @doctocat owns any file in the `\/docs`\n# directory in the root of your repository and any of its\n# subdirectories.\n\/docs\/ @doctocat\n\n# In this example, @octocat owns any file in the `\/apps` \n# directory in the root of your repository except for the `\/apps\/github` \n# subdirectory, as its owners are left empty.\n\/apps\/ @octocat\n\/apps\/github<\/code><\/pre>\n<!-- \/wp:code -->\n\n<!-- wp:paragraph -->\n<p>\uc800\ud76c \ud300\uc5d0\uc11c\ub294 \uc0ac\uc6a9\ud558\uc9c4 \uc54a\uc9c0\ub9cc Settings -&gt; Branches -&gt; Add rules\uc5d0\uc11c CODEOWNERS\uc5d0 \uc18c\uc720\uc790\ub85c \uc9c0\uc815\ub41c \uc0ac\ub78c\uc774 Approve\ub97c \ud558\uc9c0 \uc54a\uc744 \ub54c \uba38\uc9c0\ub97c \ud560 \uc218 \uc5c6\ub3c4\ub85d \ud558\ub294 \uc635\uc158\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:image {\"align\":\"center\",\"id\":2306,\"sizeSlug\":\"large\",\"linkDestination\":\"media\"} -->\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><a href=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2021\/11\/\u1109\u1173\u110f\u1173\u1105\u1175\u11ab\u1109\u1163\u11ba_2021-11-17_\u110b\u1169\u110c\u1165\u11ab_2_10_25.png\"><img src=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2021\/11\/\u1109\u1173\u110f\u1173\u1105\u1175\u11ab\u1109\u1163\u11ba_2021-11-17_\u110b\u1169\u110c\u1165\u11ab_2_10_25-1024x475.png\" alt=\"\" class=\"wp-image-2306\"\/><\/a><\/figure><\/div>\n<!-- \/wp:image -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3><strong>Pull Request \uc0dd\uc131\ud558\uc5ec \ub9ac\ubdf0\uc5b4 \ud655\uc778<\/strong><\/h3>\n<!-- \/wp:heading -->\n\n<!-- wp:paragraph -->\n<p><meta charset=\"utf-8\">Pull Request \uc0dd\uc131 \ub2e8\uacc4\uc5d0\uc11c\ub294 \ub9ac\ubdf0\uc5b4\uac00 \ucd94\uac00\ub418\uc9c0 \uc54a\uc73c\uba70 \uc2e4\uc81c\ub85c \uc0dd\uc131 \ud55c \ud6c4 Open \uc0c1\ud0dc\uc77c \uacbd\uc6b0 \ub9ac\ubdf0\uc5b4\uac00 \ucd94\uac00\ub429\ub2c8\ub2e4. Reviewers \ud0ed\uc774 \uc544\ub798 \uc0ac\uc9c4\uacfc \uac19\uc774 \ubcf4\uc778\ub2e4\uba74 \uc815\uc0c1\uc801\uc73c\ub85c \uae30\ub2a5\uc774 \ub3d9\uc791\ud558\uac8c \ub41c \uac83\uc785\ub2c8\ub2e4. \ucd94\uac00\ub41c \ub9ac\ubdf0\uc5b4\uc5d0\uac8c\ub3c4 \uba54\uc77c\uc774 \uc815\uc0c1\uc801\uc73c\ub85c \uac00\ub294 \uac83\ub3c4 \ud655\uc778\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:image {\"align\":\"center\",\"id\":2299,\"width\":1024,\"height\":500,\"sizeSlug\":\"large\",\"linkDestination\":\"media\"} -->\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large is-resized\"><a href=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2021\/11\/\u1109\u1173\u110f\u1173\u1105\u1175\u11ab\u1109\u1163\u11ba_2021-10-18_\u110b\u1169\u110c\u1165\u11ab_2_01_10.png\"><img src=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2021\/11\/\u1109\u1173\u110f\u1173\u1105\u1175\u11ab\u1109\u1163\u11ba_2021-10-18_\u110b\u1169\u110c\u1165\u11ab_2_01_10-1024x500.png\" alt=\"\" class=\"wp-image-2299\" width=\"1024\" height=\"500\"\/><\/a><\/figure><\/div>\n<!-- \/wp:image -->\n\n<!-- wp:paragraph -->\n<p><\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:image {\"align\":\"center\",\"id\":2301,\"sizeSlug\":\"large\",\"linkDestination\":\"media\"} -->\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><a href=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2021\/11\/Untitled-1.png\"><img src=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2021\/11\/Untitled-1-1024x895.png\" alt=\"\" class=\"wp-image-2301\"\/><\/a><\/figure><\/div>\n<!-- \/wp:image -->\n\n<!-- wp:paragraph -->\n<p><\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:heading -->\n<h2><strong>Pull Request \ud15c\ud50c\ub9bf \uc0ac\uc6a9\ud558\uae30<\/strong><\/h2>\n<!-- \/wp:heading -->\n\n<!-- wp:image {\"id\":2303,\"sizeSlug\":\"large\",\"linkDestination\":\"media\"} -->\n<figure class=\"wp-block-image size-large\"><a href=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2021\/11\/\u1109\u1173\u110f\u1173\u1105\u1175\u11ab\u1109\u1163\u11ba-2021-11-17-\u110b\u1169\u110c\u1165\u11ab-12.50.54.png\"><img src=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2021\/11\/\u1109\u1173\u110f\u1173\u1105\u1175\u11ab\u1109\u1163\u11ba-2021-11-17-\u110b\u1169\u110c\u1165\u11ab-12.50.54-1024x418.png\" alt=\"\" class=\"wp-image-2303\"\/><\/a><\/figure>\n<!-- \/wp:image -->\n\n<!-- wp:paragraph -->\n<p>\uc785\uc0ac \ud6c4 \uc5bc\ub9c8 \ub418\uc9c0 \uc54a\uc558\uc744 \ub54c \uc81c\uac00 \uc791\uc131\ud55c PR description\uc785\ub2c8\ub2e4. \uc5b4\ub5a4 \ub290\ub08c\uc774 \ub4dc\uc2dc\ub098\uc694? \ub9e4\uc6b0 \ubd88\uce5c\uc808\ud574 \ubcf4\uc785\ub2c8\ub2e4. 709\uc904\uc774\ub098 \ubcc0\uacbd\ub410\ub294\ub370 API \uc2a4\ud399\ubb38\uc11c, \ud574\ub2f9 \uae30\ub2a5\uc5d0 \ub300\ud55c \uae30\ud68d \ubb38\uc11c \ub9c1\ud06c \ub4f1 \ub9ac\ubdf0\ub97c \ud558\uae30\uc5d0 \uc55e\uc11c \ud544\uc694\ud55c \uc815\ubcf4\ub4e4\uc774 \uc874\uc7ac\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c PR description\uc740 \uc791\uc5c5\ud55c \ubd80\ubd84\uc744 \uc778\uc9c0\ud558\ub294 \ub370 \uc2dc\uac04\uc774 \uc624\ub798 \uac78\ub9ac\uba70 \ud544\uc694\ud55c \uc815\ubcf4\uc5d0 \ub300\ud574\uc11c Pull Request \uc694\uccad\uc790\uc640 \ucee4\ubba4\ub2c8\ucf00\uc774\uc158\uc744 \ud1b5\ud574 \uc815\ubcf4\ub97c \uc5bb\uc5b4\uc57c \ud558\ub294 \ud53c\ub85c\uac10\uc744 \uc90d\ub2c8\ub2e4. \ub610\ud55c \uace0\ubbfc\ub410\ub358 \ubd80\ubd84, \uc911\uc810\uc801\uc73c\ub85c \ub9ac\ubdf0\ub97c \ubc1b\uace0 \uc2f6\uc740 \ubd80\ubd84\uc5d0 \ub300\ud574\uc11c\ub3c4 \uc801\uc9c0 \uc54a\uc558\uae30 \ub54c\ubb38\uc5d0 \uc88b\uc740 \ub9ac\ubdf0\ub97c \ubc1b\uae30\uac00 \uc5b4\ub835\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>\uc0ac\ub78c\ub9c8\ub2e4 Pull Request\ub97c \uc791\uc131\ud558\ub294 \ud15c\ud50c\ub9bf\uc774 \ub2e4\ub974\ub2e4\ubcf4\ub2c8 \ub204\uad70\uac00\ub294 \uc790\uc138\ud788, \uc790\uc138\ud558\uc9c0 \uc54a\uac8c \uc4f8 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud639\uc740 \uc790\uc138\ud558\uac8c \uc4f0\ub294 \uc0ac\ub78c\ub3c4 \ub9e4\ubc88 \uc644\ubcbd\ud558\uac8c \ub611\uac19\uc740 \ud15c\ud50c\ub9bf\uc744 \uc720\uc9c0\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.<br>\ud544\uc694\ud55c \uc815\ubcf4\ub97c \uae4c\uba39\uace0 \uc801\uc9c0 \uc54a\ub294 \uc77c\ub3c4 \uc788\uace0 \uc774\uc804\uc5d0 \uc791\uc131\ud588\ub358 Pull Request description\uc744 \ubcf4\uace0 \ube60\uc9c4 \ubd80\ubd84\uc774 \uc5c6\ub294\uc9c0 \ud655\uc778\ud558\uac70\ub098 \ud15c\ud50c\ub9bf\uc744 \ub9e4\ubc88 \ub611\uac19\uc774 \ub9cc\ub4dc\ub294 \ubc18\ubcf5\ub418\ub294 \uc791\uc5c5\uc5d0 \ub300\ud574\uc11c\ub3c4 \uc2dc\uac04\uc744 \ub2e8\ucd95\ud558\uace0 \uc2f6\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ubb38\uc81c\uc810\ub4e4\uc744 Pull Request \ud15c\ud50c\ub9bf\uc744 \ud1b5\ud558\uc5ec \ub9e4\uc6b0 \uac04\ub2e8\ud558\uac8c \uc77c\uad00\ub41c description\uc744 \uc791\uc131\ud558\uc5ec \uc0dd\uc0b0\uc131\uc744 \ub192\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3><strong>\uc0ac\uc6a9 \ubc29\ubc95<\/strong><\/h3>\n<!-- \/wp:heading -->\n\n<!-- wp:paragraph -->\n<p>\ub8e8\ud2b8 \ub514\ub809\ud130\ub9ac\uc5d0\uc11c&nbsp;<strong>.github<\/strong> \ub514\ub809\ud130\ub9ac\uc5d0&nbsp;<strong>PULL_REQUEST_TEMPLATE.md<\/strong>&nbsp;\ud30c\uc77c\uc744 \ub9cc\ub4ed\ub2c8\ub2e4. \ud68c\uc0ac\ub9c8\ub2e4 \uc791\uc131\ud558\ub294 \ud15c\ud50c\ub9bf\uc774 \ub2e4\ub974\uaca0\uc9c0\ub9cc \ub4dc\ub77c\ub9c8\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 PR \ud15c\ud50c\ub9bf \ud56d\ubaa9\uc5d0 \ub300\ud574\uc11c \uc774\uc57c\uae30\ud574\ubcf4\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>## \uc791\uc5c5 \ub0b4\uc6a9 (Content)\n\n- \ub9ac\ubdf0\uc5b4\uac00 \uc911\uc810\uc801\uc73c\ub85c \ubd10\uc57c \ud558\ub294 \ubd80\ubd84\uc744 \ubc14\ub85c \uc54c \uc218 \uc788\ub3c4\ub85d \ubcc0\uacbd\ub41c \ub0b4\uc6a9\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4.\n- List up changes so that reviewer can quickly understand the important parts.\n\n## \ub9c1\ud06c (Links)\n\n- &#91;JIRA \ud2f0\ucf13 \uc774\ub984](http:\/\/jira.dramancompany.com\/browse\/API-1)\n- &#91;API \uc2a4\ud399 \ubb38\uc11c](http:\/\/wiki.dramancompany.com\/)\n- &#91;\uac1c\ubc1c \ubb38\uc11c](http:\/\/wiki.dramancompany.com\/)\n- &#91;\uae30\ud68d \ubb38\uc11c](http:\/\/wiki.dramancompany.com\/)\n- &#91;\ub514\uc790\uc778 \ubb38\uc11c](http:\/\/wiki.dramancompany.com\/)\n\n## \uae30\ud0c0 \uc0ac\ud56d (Etc)\n\n- PR\uc5d0 \ub300\ud55c \ucd94\uac00 \uc124\uba85\uc774\ub098 \uc791\uc5c5\ud558\uba74\uc11c \uace0\ubbfc\uc774 \ub418\uc5c8\ub358 \ubd80\ubd84 \ub4f1\n- Additional information about this PR or any troubles working on this PR.\n\n## Merge \uc804 \ud544\uc694 \uc791\uc5c5 (Checklist before merge)\n\n- &#91; ] \uc608) XX \ud14c\uc774\ube14 \ucd94\uac00, \uc571 \ubc30\ud3ec \ub4f1\n- &#91; ] eg) Create XX table, Deploy app etc\n\n## \ud76c\ub9dd \ub9ac\ubdf0 \uc644\ub8cc \uc77c (Expected due date)\n\n202X. X. X. Wed<\/code><\/pre>\n<!-- \/wp:code -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3><strong>\uc791\uc5c5 \ub0b4\uc6a9<\/strong><\/h3>\n<!-- \/wp:heading -->\n\n<!-- wp:paragraph -->\n<p>\uc791\uc5c5\ud55c \ub0b4\uc6a9\uc5d0 \ub300\ud574\uc11c \ub098\uc5f4\ud569\ub2c8\ub2e4. \uc5b4\ub5a4 \uae30\ub2a5\uc744 \uac1c\ubc1c\ud588\ub294\uc9c0, \uc5b4\ub5a4 \ucf54\ub4dc\ub97c \uc5b4\ub5bb\uac8c \ub9ac\ud329\ud1a0\ub9c1\ud588\ub294\uc9c0 \ub4f1 \uc218\uc815\ud55c \ubd80\ubd84\uc5d0 \ub300\ud574\uc11c \ub9ac\ubdf0\ud558\ub294 \uc0ac\ub78c\uc774 \uc27d\uac8c \uc778\uc9c0\ud560 \uc218 \uc788\ub3c4\ub85d \uc791\uc131\ud569\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3><strong>\ub9c1\ud06c<\/strong><\/h3>\n<!-- \/wp:heading -->\n\n<!-- wp:paragraph -->\n<p>\ub4dc\ub77c\ub9c8\uc564\ucef4\ud37c\ub2c8\uc5d0\uc11c\ub294 \ub2e8\uc21c\ud788 \uc644\uc131\ub41c \ucf54\ub4dc\ub9cc\uc744 \ub9ac\ubdf0\ud558\ub294 \uac83\uc774 \uc544\ub2c8\ub77c \uc791\uc5c5\ud55c \ubd80\ubd84\uc5d0 \ub300\ud574\uc11c \uc81c\ub300\ub85c \uc774\ud574\ud558\uace0 \ub354 \uc88b\uc740 \ub9ac\ubdf0\ub97c \uc8fc\uae30 \uc704\ud574 \uae30\ud68d \ubb38\uc11c, API \uc2a4\ud399 \ubb38\uc11c, \uac1c\ubc1c\ubb38\uc11c \ub4f1\uc758 \ub9c1\ud06c\ub4e4\uc744 \ud574\ub2f9 \ud56d\ubaa9\uc5d0 \uc791\uc131\ud558\uace0 \ub9ac\ubdf0\ud569\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3><br><strong>\uae30\ud0c0 \uc0ac\ud56d<\/strong><\/h3>\n<!-- \/wp:heading -->\n\n<!-- wp:paragraph -->\n<p>\uac1c\ubc1c\ud558\uba74\uc11c \uace0\ubbfc\ub410\ub358 \ubd80\ubd84\ub4e4\uc5d0 \ub300\ud574\uc11c \uc791\uc131\ud569\ub2c8\ub2e4. API path naming\uc5d0 \ub300\ud55c \uc870\uc5b8\uc774 \ud544\uc694\ud558\uac70\ub098 \uc791\uc5c5\ud558\uba74\uc11c \uace0\ubbfc\ub410\ub358 \ubd80\ubd84 \ubc0f \uac19\uc774 \ub17c\uc758\ud574\ubd24\uc73c\uba74 \ud558\ub294 \uac83\ub4e4\uc5d0 \ub300\ud574\uc11c \uc0c1\uc138\ud788 \uc801\uace0 \ub9ac\ubdf0\uc5b4\uac00 \ud574\ub2f9 \ubd80\ubd84\uc5d0 \ub300\ud574\uc11c \uc870\uae08 \ub354 \uc911\uc810\uc801\uc73c\ub85c \ub9ac\ubdf0\ub97c \ud560 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3><br><strong>Merge \uc804 \ud544\uc694 \uc791\uc5c5<\/strong><\/h3>\n<!-- \/wp:heading -->\n\n<!-- wp:paragraph -->\n<p>\uac1c\ubc1c\uc744 \uc644\ub8cc\ud558\uace0 \ud504\ub85c\ub355\uc158 \ud658\uacbd\uc5d0\uc11c \ud14c\uc774\ube14\uc774\ub098 \ud658\uacbd \ubcc0\uc218 \ucd94\uac00 \ub4f1 \uba38\uc9c0 \ubc0f \ubc30\ud3ec\ud558\uae30 \uc804\uc5d0 \uc120\ud589\ub418\uc5b4\uc57c \ud560 \ubd80\ubd84\uc744 \uc78a\uc9c0 \uc54a\uace0  \ub9ac\ub9c8\uc778\ub4dc \ud558\uae30 \uc704\ud55c \uc790\uc2e0\ub9cc\uc758 \uccb4\ud06c\ub9ac\uc2a4\ud2b8\uc785\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3><strong>\ud76c\ub9dd \ub9ac\ubdf0\uc77c<\/strong><\/h3>\n<!-- \/wp:heading -->\n\n<!-- wp:paragraph -->\n<p>\ub9ac\ubdf0\ub97c \uc644\ub8cc \ubc1b\uace0 \uc2f6\uc740 \ub0a0\uc9dc\uc785\ub2c8\ub2e4. \uc5ec\ub2f4\uc774\uc9c0\ub9cc \uc11c\ubc84\/\uc6f9\ud300\uc5d0\uc11c\ub294 \uc6d0\ud65c\ud558\uac8c \ub9ac\ubdf0\uac00 \ub418\ub3c4\ub85d \ub9e4\uc8fc \uc218\uc694\uc77c\uc5d0 \ub9ac\ubdf0\uac00 \uc548\ub41c \uac83\ub4e4\uc774 \uc788\ub294\uc9c0 \uc810\uac80\ud558\uc5ec \ub9ac\ubdf0\uac00 \uc6d0\ud65c\ud558\uac8c \ub418\ub3c4\ub85d \ud569\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>\ucc38\uace0<\/h2>\n<!-- \/wp:heading -->\n\n<!-- wp:list -->\n<ul><li><a href=\"https:\/\/medium.com\/expedia-group-tech\/owning-your-codeowners-file-332e288c1d12\"><\/a><a href=\"https:\/\/medium.com\/expedia-group-tech\/owning-your-codeowners-file-332e288c1d12\">https:\/\/medium.com\/expedia-group-tech\/owning-your-codeowners-file-332e288c1d12<\/a><\/li><li><a href=\"https:\/\/docs.github.com\/en\/repositories\/managing-your-repositorys-settings-and-features\/customizing-your-repository\/about-code-owners#codeowners-file-location\"><\/a><a href=\"https:\/\/docs.github.com\/en\/repositories\/managing-your-repositorys-settings-and-features\/customizing-your-repository\/about-code-owners#codeowners-file-location\">https:\/\/docs.github.com\/en\/repositories\/managing-your-repositorys-settings-and-features\/customizing-your-repository\/about-code-owners#codeowners-file-location<\/a><\/li><li><a href=\"https:\/\/github.blog\/2017-07-06-introducing-code-owners\/\">https:\/\/github.blog\/2017-07-06-introducing-code-owners\/<\/a><\/li><li><a href=\"https:\/\/docs.github.com\/en\/communities\/using-templates-to-encourage-useful-issues-and-pull-requests\/creating-a-pull-request-template-for-your-repository\">https:\/\/docs.github.com\/en\/communities\/using-templates-to-encourage-useful-issues-and-pull-requests\/creating-a-pull-request-template-for-your-repository<\/a><\/li><\/ul>\n<!-- \/wp:list -->\n\n<!-- wp:paragraph -->\n<p><\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><\/p>\n<!-- \/wp:paragraph -->"},"elements":[],"widgetType":"text-editor"}],"isInner":false}],"isInner":false}]]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_page_assets]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[8]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[디자인팀 입사자가 바라본 드라마앤컴퍼니]]></title>
		<link>https://blog.dramancompany.com/2021/11/%eb%94%94%ec%9e%90%ec%9d%b8%ed%8c%80-%ec%9e%85%ec%82%ac%ec%9e%90%ea%b0%80-%eb%b0%94%eb%9d%bc%eb%b3%b8-%eb%93%9c%eb%9d%bc%eb%a7%88%ec%95%a4%ec%bb%b4%ed%8d%bc%eb%8b%88/</link>
		<pubDate>Mon, 29 Nov 2021 10:07:47 +0000</pubDate>
		<dc:creator><![CDATA[wr.kwon]]></dc:creator>
		<guid isPermaLink="false">https://blog.dramancompany.com/?p=2330</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>드라마앤컴퍼니에 입사하게 되었습니다. 신규 입사자답게(?) 기대 반 걱정 반으로 첫날을 시작했습니다. 다행히 많은 분의 도움으로 수월하게 회사에 적응할 수 있었고, 즐겁게 일하는 중입니다. 회사를 모든 것을 알기에는 충분한 시간이 아니지만, 그동안 온보딩하며 알게 된 드라마앤컴퍼니와 그 문화를 소개합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:html -->
<br>
<br>
<!-- /wp:html -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>가장 기억에 남았던 온보딩은…</h2>
<!-- /wp:heading -->

<!-- wp:image -->
<figure class="wp-block-image"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/11/IMG_1417-1-min-1.png" alt=""/><figcaption>첫 출근날 엘리베이터에서 내리자마자 보인 리멤버 사이니지와 일러스트!</figcaption></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>신규 입사자의 온보딩을 위한 여러 구성원들의 노력이 있었고, 덕분에 저는 회사에 어렵지 않게 적응할 수 있었습니다. 회사를 알아가며 빠르게 지나간 한 달이지만, 그 과정 중에 가장 기억에 남는 한 세션이 있습니다. 바로 CEO께서 직접 진행하는 “리멤버의 비전 및 일하는 방식 안내”라는 세션입니다. 리멤버는 지금 어디까지 왔고, 어디로 나아갈지 그리고 어떻게 일해야 하는지를 공유하는 시간이었습니다. 저는 이 시간이 재호님(CEO)과 회사의 방향성에 대해 함께 얘기하며 같은 청사진을 그려 나가는 시간이었다고 생각합니다. 또한 어떻게 일하면 좋을지, 회사에 무엇을 기여할 수 있을지 다시 한번 돌아보는 계기가 되었습니다. 성장해가는 리멤버의 여정에 합류하게 되어 더욱 설레기도 했습니다. 회사와 일에 대한 애착, 그리고 열심히 일할 수 있는 원동력을 가지게 된 가장 의미 있는 시간이었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:html -->
<br>
<br>
<!-- /wp:html -->

<!-- wp:heading -->
<h2>크루(crew)가 뭐죠?</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>드라마앤컴퍼니의 구성원은 팀에 소속이 되어있으며, 목적에 따른 크루에서 일을 합니다. 예를 들면, 저는 현재 디자인팀에 소속이 되어있으며 커리어 크루에서 일을 하고 있습니다. 커리어 크루에서 디자인, 기획, 개발, 데이터 팀의 전문가들이 모여 커리어 프로덕트를 함께 만들어 나가고 있습니다. 각 크루들이 일하는 방식은 조금씩은 다르지만, 기본적으로 드라마웨이 3.0에 기반하여 일하고 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":2585,"width":1169,"height":906,"sizeSlug":"large","linkDestination":"media"} -->
<figure class="wp-block-image size-large is-resized"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/11/드라마웨이_이멤버대리_ver-1.jpg"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/11/드라마웨이_이멤버대리_ver-1-1024x794.jpg" alt="" class="wp-image-2585" width="1169" height="906"/></a><figcaption>드라마웨이 3.0</figcaption></figure>
<!-- /wp:image -->

<!-- wp:html -->
<br>
<!-- /wp:html -->

<!-- wp:paragraph -->
<p>정리하자면 “고객 wow를 빠르게 팀웍으로 실현하는 조직”이 회사의 지향점 이라고 할 수 있습니다. 위의 내용들을 정말 실천할 수 있도록 각 크루와 팀에서 많은 얘기를 하고 있습니다. 일하는 방식은 꾸준히 논의되어 발전될 것으로 생각합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:image -->
<figure class="wp-block-image"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/11/1-3.png" alt=""/><figcaption>드라마웨이를 실천하기 위한 아이데이션 + 크루 회고</figcaption></figure>
<!-- /wp:image -->

<!-- wp:heading {"level":4} -->
<h4>크루가 일하는 방식</h4>
<!-- /wp:heading -->

<!-- wp:list -->
<ul><li>데일리 스크럼: 각자 하고 있는 일의 진행상황을 공유합니다.</li><li>주간 회의: 프로덕트의 현황과 변동사항을 공유하고, 일주일 스케줄을 체크합니다.</li><li>회고: 한 달에 한 번씩 KPT(Keep, Problem, Try)방식으로 회고를 합니다.</li><li>워크샵: 분기를 시작할 때나 아이데이션이 필요할 때 주제를 가지고 워크샵을 합니다.</li><li>협업 툴: 슬랙, 위키, 지라, 미로, 피그마</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>크루의 정기적인 스케줄은 위의 3가지로 간단합니다. 요즘은 재택근무 중이기 때문에 줌을 통해 스크럼과 회의가 진행됩니다. 피드백이나 논의가 필요하면 바로 슬랙허들이나 줌을 이용하기 때문에 비대면으로 협업하는 데 어려움은 없었습니다. 그리고 작업하다가 궁금한 점 혹은 히스토리 등 여러 가지를 물어봤는데, 그때마다 관련 백그라운드를 모두 공유해주셔서 큰 도움이 됐습니다. 다른 분들도 물심양면 도와주신 분들 덕분에 크루에 적응을 무사히 마쳤습니다(우석님, 현호님 특히 감사합니다👍). 앞으로 함께 일할 시간이 매우 기대됩니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:html -->
<br>
<br>
<!-- /wp:html -->

<!-- wp:image {"align":"center","id":2582,"width":646,"height":215,"sizeSlug":"large","linkDestination":"custom"} -->
<div class="wp-block-image"><figure class="aligncenter size-large is-resized"><a href="https://bit.ly/3ubgqv8"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/11/N_post_recruit_banner-1024x341.png" alt="" class="wp-image-2582" width="646" height="215"/></a></figure></div>
<!-- /wp:image -->

<!-- wp:html -->
<br>
<!-- /wp:html -->

<!-- wp:heading -->
<h2>베이스 캠프 같은 디자인 팀</h2>
<!-- /wp:heading -->

<!-- wp:image {"id":2338,"sizeSlug":"large","linkDestination":"media"} -->
<figure class="wp-block-image size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/11/1-5.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/11/1-5-1024x478.png" alt="" class="wp-image-2338"/></a><figcaption>팀원분들이 노션을 이렇게 꾸며주셨다. 감동 ㅠㅠ</figcaption></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>드라마앤컴퍼니의 디자이너들은 크루와 주로 일을 합니다. 하지만 디자이너들은 꾸준히 뭉쳐가며 서로의 작업과 성장을 돕고 있습니다. 디자인팀 내에서는 데일리 스크럼을 통해 진행하는 디자인의 피드백을 주고받습니다. 그리고 디자인 작업을 하며 발생하는 고민도 함께 얘기를 나누고, 좋은 정보(최신 UX트렌드, 툴 등)는 함께 나눕니다. 각자의 크루에 있지만, 적극적으로 서로를 서포트 하고 있고, 이 모습이 저는 굉장히 인상적이었습니다. 팀이 마치 베이스 캠프처럼 느껴졌고, 든든한 팀원들을 지원군으로 얻었다고 생각합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>디자인팀이 일하는 방식</h4>
<!-- /wp:heading -->

<!-- wp:list -->
<ul><li>데일리 스크럼: 각자 진행하는 프로젝트를 공유하고, 피드백을 주고 받습니다.</li><li>주간회의: 자유롭게 아젠다를 준비하거나, 일하면서 개선해야 할 점들을 주로 얘기합니다.</li><li>피그마로 디자인을 하고, 디자인 시스템도 피그마로 관리합니다.</li><li>인터렉션 목업이 필요할 경우 프로토파이를 사용합니다.</li><li>노션으로 서로의 스케줄을 공유하고, 프로젝트 진행사항을 파악합니다.</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:html -->
<br>
<br>
<!-- /wp:html -->

<!-- wp:heading -->
<h2>드라마앤컴퍼니 직접 일해보니!</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>제가 생활하며 느낀 드라마앤컴퍼니는 일의 진행 사항과 히스토리를 투명하게 공유하는 조직입니다. 그래서 함께 일하는 사람들이 프로젝트에 대해 같은 이해도와 목적을 바탕으로 소통할 수 있습니다. 또한 유저의 관점에서 피드백하려 노력하고, 의미 없는 평가보다는 대안을 제시하는 피드백 문화를 지향하고 있습니다. 이러한 문화가 불필요한 소통의 비용을 줄여 효율적으로 일하도록 도와줍니다. 또한 동료들이 서포트 해준다는 심리적 안정감이 있어, 누구나 자유롭게 의견을 제시할 수 있는 환경이라고 생각합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:image -->
<figure class="wp-block-image"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/11/1-4.png" alt=""/><figcaption>친밥 후기들! 서로 만나뵐 수 없었던 분들과도 재밌게 이야기 나눴습니다</figcaption></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>요즘은 동료들의 장점을 함께 칭찬하고 동기를 부여하기 위한 칭찬하기 문화도 실험되고 있습니다. 참고로 가장 많은 칭찬을 받으신 분들께 치킨이, 그리고 10월의 드라마인(칭찬 많이 받은 분+팀 리더의 추천)은 시그니엘 숙박권 받으셨습니다...! 와아... 시그니엘 조식 포함이랍니다. 저는 일단 치킨이라도 받을 수 있도록 노력해야겠습니다. 또한 친목 도모를 위한 친밥, 티타임, 온라인 회식 같은 시간도 있습니다. 코로나로 인해 원격으로 진행되지만, 평소에 접점이 없던 분들과도 만날 수 있어 정말 좋았습니다. 나중에 코시국이 끝나면 오프라인으로 모두 만나 뵙길 바랍니다. :D</p>
<!-- /wp:paragraph -->

<!-- wp:html -->
<br>
<br>
<!-- /wp:html -->

<!-- wp:separator {"className":"is-style-default"} -->
<hr class="wp-block-separator is-style-default"/>
<!-- /wp:separator -->

<!-- wp:paragraph -->
<p>드라마앤컴퍼니에서 일한 지 벌써 세 달이 되었습니다. 그동안 제가 적응할 수 있도록 인사팀, 디자인팀, 커리어 크루… 등 많은 분이 도움을 주셨습니다. 이러한 크고 작은 도움과 배려들 속에서 ‘드라마앤컴퍼니는 참 좋은 사람들이 모인 회사구나…’라는 생각이 들었습니다. 좋은 사람들이 모여 함께 성장해 나갈 수 있는 환경을 갖추고 있고, 그 환경에서 일하게 되어 너무 기쁩니다. 앞으로도 성장해 나갈 리멤버, 그리고 리멤버가 변화시키는 인재 채용, 비즈니스 플랫폼 시장을 기대해 주세요. 읽어주셔서 감사합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:html -->
<br>
<!-- /wp:html -->

<!-- wp:image {"align":"center","id":2582,"width":646,"height":215,"sizeSlug":"large","linkDestination":"custom"} -->
<div class="wp-block-image"><figure class="aligncenter size-large is-resized"><a href="https://bit.ly/3ubgqv8"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/11/N_post_recruit_banner-1024x341.png" alt="" class="wp-image-2582" width="646" height="215"/></a></figure></div>
<!-- /wp:image -->

<!-- wp:html -->
<br>
<!-- /wp:html -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2330</wp:post_id>
		<wp:post_date><![CDATA[2021-11-29 19:07:47]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-11-29 10:07:47]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-01-28 15:08:29]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-01-28 06:08:29]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%eb%94%94%ec%9e%90%ec%9d%b8%ed%8c%80-%ec%9e%85%ec%82%ac%ec%9e%90%ea%b0%80-%eb%b0%94%eb%9d%bc%eb%b3%b8-%eb%93%9c%eb%9d%bc%eb%a7%88%ec%95%a4%ec%bb%b4%ed%8d%bc%eb%8b%88]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="design"><![CDATA[Design]]></category>
		<category domain="post_tag" nicename="%eb%93%9c%eb%9d%bc%eb%a7%88%ec%95%a4%ec%bb%b4%ed%8d%bc%eb%8b%88"><![CDATA[드라마앤컴퍼니]]></category>
		<category domain="post_tag" nicename="%eb%94%94%ec%9e%90%ec%9d%b8"><![CDATA[디자인]]></category>
		<category domain="post_tag" nicename="%eb%a6%ac%eb%a9%a4%eb%b2%84"><![CDATA[리멤버]]></category>
		<category domain="post_tag" nicename="%ec%98%a8%eb%b3%b4%eb%94%a9"><![CDATA[온보딩]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729353062;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:2174;}i:1;a:1:{s:2:"id";i:1783;}i:2;a:1:{s:2:"id";i:966;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_template_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[wp-post]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_version]]></wp:meta_key>
		<wp:meta_value><![CDATA[3.5.0-dev50]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_data]]></wp:meta_key>
		<wp:meta_value><![CDATA[[{"id":"09814af","elType":"section","settings":[],"elements":[{"id":"a5ca341","elType":"column","settings":{"_column_size":"100"},"elements":[{"id":"3675f93","elType":"widget","settings":{"editor":"<p>\ub4dc\ub77c\ub9c8\uc564\ucef4\ud37c\ub2c8\uc5d0 \uc785\uc0ac\ud558\uac8c \ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uc2e0\uaddc \uc785\uc0ac\uc790\ub2f5\uac8c(?) \uae30\ub300 \ubc18 \uac71\uc815 \ubc18\uc73c\ub85c \uccab\ub0a0\uc744 \uc2dc\uc791\ud588\uc2b5\ub2c8\ub2e4. \ub2e4\ud589\ud788 \ub9ce\uc740 \ubd84\uc758 \ub3c4\uc6c0\uc73c\ub85c \uc218\uc6d4\ud558\uac8c \ud68c\uc0ac\uc5d0 \uc801\uc751\ud560 \uc218 \uc788\uc5c8\uace0, \uc990\uac81\uac8c \uc77c\ud558\ub294 \uc911\uc785\ub2c8\ub2e4. \ud68c\uc0ac\ub97c \ubaa8\ub4e0 \uac83\uc744 \uc54c\uae30\uc5d0\ub294 \ucda9\ubd84\ud55c \uc2dc\uac04\uc774 \uc544\ub2c8\uc9c0\ub9cc, \uadf8\ub3d9\uc548 \uc628\ubcf4\ub529\ud558\uba70 \uc54c\uac8c \ub41c \ub4dc\ub77c\ub9c8\uc564\ucef4\ud37c\ub2c8\uc640 \uadf8 \ubb38\ud654\ub97c \uc18c\uac1c\ud569\ub2c8\ub2e4.<\/p>"},"elements":[],"widgetType":"text-editor"},{"id":"1c24403","elType":"widget","settings":[],"elements":[],"widgetType":"spacer"}],"isInner":""}],"isInner":""},{"id":"712e085","elType":"section","settings":[],"elements":[{"id":"ecece96","elType":"column","settings":{"_column_size":"100"},"elements":[{"id":"896ed02","elType":"widget","settings":{"title":"\uac00\uc7a5 \uae30\uc5b5\uc5d0 \ub0a8\uc558\ub358 \uc628\ubcf4\ub529\uc740\u2026"},"elements":[],"widgetType":"heading"},{"id":"9258817","elType":"widget","settings":{"image":{"url":"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2021\/11\/IMG_1417-1-min-1.png","id":"2352","alt":"","source":"library"},"caption_source":"custom","caption":"\uccab \ucd9c\uadfc\ub0a0 \uc5d8\ub9ac\ubca0\uc774\ud130\uc5d0\uc11c \ub0b4\ub9ac\uc790\ub9c8\uc790 \ubcf4\uc778 \ub9ac\uba64\ubc84 \uc0ac\uc774\ub2c8\uc9c0\uc640 \uc77c\ub7ec\uc2a4\ud2b8! ","image_size":"full"},"elements":[],"widgetType":"image"}],"isInner":""}],"isInner":""},{"id":"1bedbfd","elType":"section","settings":[],"elements":[{"id":"df233a7","elType":"column","settings":{"_column_size":"100"},"elements":[{"id":"84165c8","elType":"widget","settings":{"editor":"<p>\uc2e0\uaddc \uc785\uc0ac\uc790\uc758 \uc628\ubcf4\ub529\uc744 \uc704\ud55c \uc5ec\ub7ec \uad6c\uc131\uc6d0\ub4e4\uc758 \ub178\ub825\uc774 \uc788\uc5c8\uace0, \ub355\ubd84\uc5d0 \uc800\ub294 \ud68c\uc0ac\uc5d0 \uc5b4\ub835\uc9c0 \uc54a\uac8c \uc801\uc751\ud560 \uc218 \uc788\uc5c8\uc2b5\ub2c8\ub2e4. \ud68c\uc0ac\ub97c \uc54c\uc544\uac00\uba70 \ube60\ub974\uac8c \uc9c0\ub098\uac04 \ud55c \ub2ec\uc774\uc9c0\ub9cc, \uadf8 \uacfc\uc815 \uc911\uc5d0 \uac00\uc7a5 \uae30\uc5b5\uc5d0 \ub0a8\ub294 \ud55c \uc138\uc158\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ubc14\ub85c CEO\uaed8\uc11c \uc9c1\uc811 \uc9c4\ud589\ud558\ub294 <span class=\"notion-enable-hover\" style=\"font-weight: 600\" data-token-index=\"1\" data-reactroot=\"\">\u201c\ub9ac\uba64\ubc84\uc758 \ube44\uc804 \ubc0f \uc77c\ud558\ub294 \ubc29\uc2dd \uc548\ub0b4\u201d<\/span>\ub77c\ub294 \uc138\uc158\uc785\ub2c8\ub2e4. \ub9ac\uba64\ubc84\ub294 \uc9c0\uae08 \uc5b4\ub514\uae4c\uc9c0 \uc654\uace0, \uc5b4\ub514\ub85c \ub098\uc544\uac08\uc9c0 \uadf8\ub9ac\uace0 \uc5b4\ub5bb\uac8c \uc77c\ud574\uc57c \ud558\ub294\uc9c0\ub97c \uacf5\uc720\ud558\ub294 \uc2dc\uac04\uc774\uc5c8\uc2b5\ub2c8\ub2e4. \uc800\ub294 \uc774 \uc2dc\uac04\uc774 \uc7ac\ud638\ub2d8(CEO)\uacfc \ud68c\uc0ac\uc758 \ubc29\ud5a5\uc131\uc5d0 \ub300\ud574 \ud568\uaed8 \uc598\uae30\ud558\uba70 \uac19\uc740 \uccad\uc0ac\uc9c4\uc744 \uadf8\ub824 \ub098\uac00\ub294 \uc2dc\uac04\uc774\uc5c8\ub2e4\uace0 \uc0dd\uac01\ud569\ub2c8\ub2e4. \ub610\ud55c \uc5b4\ub5bb\uac8c \uc77c\ud558\uba74 \uc88b\uc744\uc9c0, \ud68c\uc0ac\uc5d0 \ubb34\uc5c7\uc744 \uae30\uc5ec\ud560 \uc218 \uc788\uc744\uc9c0 \ub2e4\uc2dc \ud55c\ubc88 \ub3cc\uc544\ubcf4\ub294 \uacc4\uae30\uac00 \ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uc131\uc7a5\ud574\uac00\ub294 \ub9ac\uba64\ubc84\uc758 \uc5ec\uc815\uc5d0 \ud569\ub958\ud558\uac8c \ub418\uc5b4 \ub354\uc6b1 \uc124\ub808\uae30\ub3c4 \ud588\uc2b5\ub2c8\ub2e4. \ud68c\uc0ac\uc640 \uc77c\uc5d0 \ub300\ud55c \uc560\ucc29, \uadf8\ub9ac\uace0 \uc5f4\uc2ec\ud788 \uc77c\ud560 \uc218 \uc788\ub294 \uc6d0\ub3d9\ub825\uc744 \uac00\uc9c0\uac8c \ub41c \uac00\uc7a5 \uc758\ubbf8 \uc788\ub294 \uc2dc\uac04\uc774\uc5c8\uc2b5\ub2c8\ub2e4.<\/p>"},"elements":[],"widgetType":"text-editor"},{"id":"950389d","elType":"widget","settings":[],"elements":[],"widgetType":"spacer"}],"isInner":""}],"isInner":""},{"id":"4fc7198","elType":"section","settings":[],"elements":[{"id":"53ac8be","elType":"column","settings":{"_column_size":"100"},"elements":[{"id":"3922f64","elType":"widget","settings":{"title":"\ud06c\ub8e8(crew)\uac00 \ubb50\uc8e0?"},"elements":[],"widgetType":"heading"},{"id":"37d1b9b","elType":"widget","settings":{"editor":"<p>\ub4dc\ub77c\ub9c8\uc564\ucef4\ud37c\ub2c8\uc758 <span class=\"notion-enable-hover\" style=\"font-weight: 600\" data-token-index=\"1\" data-reactroot=\"\">\uad6c\uc131\uc6d0\uc740 \ud300\uc5d0 \uc18c\uc18d<\/span>\uc774 \ub418\uc5b4\uc788\uc73c\uba70, <span class=\"notion-enable-hover\" style=\"font-weight: 600\" data-token-index=\"3\" data-reactroot=\"\">\ubaa9\uc801\uc5d0 \ub530\ub978 \ud06c\ub8e8<\/span>\uc5d0\uc11c \uc77c\uc744 \ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uba74, \uc800\ub294 \ud604\uc7ac \ub514\uc790\uc778\ud300\uc5d0 \uc18c\uc18d\uc774 \ub418\uc5b4\uc788\uc73c\uba70 \ucee4\ub9ac\uc5b4 \ud06c\ub8e8\uc5d0\uc11c \uc77c\uc744 \ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \ucee4\ub9ac\uc5b4 \ud06c\ub8e8\uc5d0\uc11c \ub514\uc790\uc778, \uae30\ud68d, \uac1c\ubc1c, \ub370\uc774\ud130 \ud300\uc758 \uc804\ubb38\uac00\ub4e4\uc774 \ubaa8\uc5ec \ucee4\ub9ac\uc5b4 \ud504\ub85c\ub355\ud2b8\ub97c \ud568\uaed8 \ub9cc\ub4e4\uc5b4 \ub098\uac00\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uac01 \ud06c\ub8e8\ub4e4\uc774 \uc77c\ud558\ub294 \ubc29\uc2dd\uc740 \uc870\uae08\uc529\uc740 \ub2e4\ub974\uc9c0\ub9cc, \uae30\ubcf8\uc801\uc73c\ub85c <span class=\"notion-enable-hover\" style=\"font-weight: 600\" data-token-index=\"5\" data-reactroot=\"\">\ub4dc\ub77c\ub9c8\uc6e8\uc774 3.0<\/span>\uc5d0 \uae30\ubc18\ud558\uc5ec \uc77c\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4.<\/p>"},"elements":[],"widgetType":"text-editor"},{"id":"96c469b","elType":"widget","settings":{"image":{"url":"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2021\/11\/\u1103\u1173\u1105\u1161\u1106\u1161\u110b\u1170\u110b\u1175_\u110b\u1175\u1106\u1166\u11b7\u1107\u1165\u1103\u1162\u1105\u1175_ver-1.png","id":"2335","alt":"","source":"library"},"align":"center","caption_source":"custom","caption":"\ub4dc\ub77c\ub9c8\uc6e8\uc774 3.0","image_size":"full"},"elements":[],"widgetType":"image"},{"id":"ce73efb","elType":"widget","settings":{"editor":"<p>\uc815\ub9ac\ud558\uc790\uba74 <span class=\"notion-enable-hover\" style=\"font-weight: 600\" data-token-index=\"1\" data-reactroot=\"\">\u201c\uace0\uac1d wow\ub97c \ube60\ub974\uac8c \ud300\uc6cd\uc73c\ub85c \uc2e4\ud604\ud558\ub294 \uc870\uc9c1\u201d<\/span>\uc774 \ud68c\uc0ac\uc758 \uc9c0\ud5a5\uc810 \uc774\ub77c\uace0 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc704\uc758 \ub0b4\uc6a9\ub4e4\uc744 \uc815\ub9d0 \uc2e4\ucc9c\ud560 \uc218 \uc788\ub3c4\ub85d \uac01 \ud06c\ub8e8\uc640 \ud300\uc5d0\uc11c \ub9ce\uc740 \uc598\uae30\ub97c \ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc77c\ud558\ub294 \ubc29\uc2dd\uc740 \uafb8\uc900\ud788 \ub17c\uc758\ub418\uc5b4 \ubc1c\uc804\ub420 \uac83\uc73c\ub85c \uc0dd\uac01\ud569\ub2c8\ub2e4.<\/p>"},"elements":[],"widgetType":"text-editor"},{"id":"85d8ccc","elType":"widget","settings":[],"elements":[],"widgetType":"spacer"},{"id":"f9bbc6b","elType":"widget","settings":{"image":{"url":"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2021\/11\/1-3.png","id":"2337","alt":"","source":"library"},"caption_source":"custom","caption":"\ub4dc\ub77c\ub9c8\uc6e8\uc774\ub97c \uc2e4\ucc9c\ud558\uae30 \uc704\ud55c \uc544\uc774\ub370\uc774\uc158 + \ud06c\ub8e8 \ud68c\uace0","image_size":"full"},"elements":[],"widgetType":"image"},{"id":"e15a62c","elType":"widget","settings":{"title":"\ud06c\ub8e8\uac00 \uc77c\ud558\ub294 \ubc29\uc2dd","header_size":"h4"},"elements":[],"widgetType":"heading"},{"id":"2599591","elType":"widget","settings":{"editor":"<ul>\n<li>\ub370\uc77c\ub9ac \uc2a4\ud06c\ub7fc: \uac01\uc790 \ud558\uace0 \uc788\ub294 \uc77c\uc758 \uc9c4\ud589\uc0c1\ud669\uc744 \uacf5\uc720\ud569\ub2c8\ub2e4.<\/li>\n<li>\uc8fc\uac04 \ud68c\uc758: \ud504\ub85c\ub355\ud2b8\uc758 \ud604\ud669\uacfc \ubcc0\ub3d9\uc0ac\ud56d\uc744 \uacf5\uc720\ud558\uace0, \uc77c\uc8fc\uc77c \uc2a4\ucf00\uc904\uc744 \uccb4\ud06c\ud569\ub2c8\ub2e4.<\/li>\n<li>\ud68c\uace0: \ud55c \ub2ec\uc5d0 \ud55c \ubc88\uc529 KPT(Keep, Problem, Try)\ubc29\uc2dd\uc73c\ub85c \ud68c\uace0\ub97c \ud569\ub2c8\ub2e4.<\/li>\n<li>\uc6cc\ud06c\uc0f5: \ubd84\uae30\ub97c \uc2dc\uc791\ud560 \ub54c\ub098 \uc544\uc774\ub370\uc774\uc158\uc774 \ud544\uc694\ud560 \ub54c \uc8fc\uc81c\ub97c \uac00\uc9c0\uace0 \uc6cc\ud06c\uc0f5\uc744 \ud569\ub2c8\ub2e4.<\/li>\n<li>\ud611\uc5c5 \ud234: \uc2ac\ub799, \uc704\ud0a4, \uc9c0\ub77c, \ubbf8\ub85c, \ud53c\uadf8\ub9c8<\/li>\n<\/ul>"},"elements":[],"widgetType":"text-editor"},{"id":"787464f","elType":"widget","settings":{"editor":"<p>\ud06c\ub8e8\uc758 \uc815\uae30\uc801\uc778 \uc2a4\ucf00\uc904\uc740 \uc704\uc758 3\uac00\uc9c0\ub85c \uac04\ub2e8\ud569\ub2c8\ub2e4. \uc694\uc998\uc740 \uc7ac\ud0dd\uadfc\ubb34 \uc911\uc774\uae30 \ub54c\ubb38\uc5d0 \uc90c\uc744 \ud1b5\ud574 \uc2a4\ud06c\ub7fc\uacfc \ud68c\uc758\uac00 \uc9c4\ud589\ub429\ub2c8\ub2e4. \ud53c\ub4dc\ubc31\uc774\ub098 \ub17c\uc758\uac00 \ud544\uc694\ud558\uba74 \ubc14\ub85c \uc2ac\ub799\ud5c8\ub4e4\uc774\ub098 \uc90c\uc744 \uc774\uc6a9\ud558\uae30 \ub54c\ubb38\uc5d0 \ube44\ub300\uba74\uc73c\ub85c \ud611\uc5c5\ud558\ub294 \ub370 \uc5b4\ub824\uc6c0\uc740 \uc5c6\uc5c8\uc2b5\ub2c8\ub2e4. \uadf8\ub9ac\uace0 \uc791\uc5c5\ud558\ub2e4\uac00 \uad81\uae08\ud55c \uc810 \ud639\uc740 \ud788\uc2a4\ud1a0\ub9ac \ub4f1 \uc5ec\ub7ec \uac00\uc9c0\ub97c \ubb3c\uc5b4\ubd24\ub294\ub370, \uadf8\ub54c\ub9c8\ub2e4 \uad00\ub828 \ubc31\uadf8\ub77c\uc6b4\ub4dc\ub97c \ubaa8\ub450 \uacf5\uc720\ud574\uc8fc\uc154\uc11c \ud070 \ub3c4\uc6c0\uc774 \ub410\uc2b5\ub2c8\ub2e4. \ub2e4\ub978 \ubd84\ub4e4\ub3c4 \ubb3c\uc2ec\uc591\uba74 \ub3c4\uc640\uc8fc\uc2e0 \ubd84\ub4e4 \ub355\ubd84\uc5d0 \ud06c\ub8e8\uc5d0 \uc801\uc751\uc744 \ubb34\uc0ac\ud788 \ub9c8\ucce4\uc2b5\ub2c8\ub2e4(\uc6b0\uc11d\ub2d8, \ud604\ud638\ub2d8 \ud2b9\ud788 \uac10\uc0ac\ud569\ub2c8\ub2e4<span style=\"font-family: 'Apple Color Emoji','Segoe UI Emoji',NotoColorEmoji,'Noto Color Emoji','Segoe UI Symbol','Android Emoji',EmojiSymbols;line-height: 1em;font-size: 1em\" role=\"image\" aria-label=\"\ud83d\udc4d\">\ud83d\udc4d<\/span>). \uc55e\uc73c\ub85c \ud568\uaed8 \uc77c\ud560 \uc2dc\uac04\uc774 \ub9e4\uc6b0 \uae30\ub300\ub429\ub2c8\ub2e4.<\/p>"},"elements":[],"widgetType":"text-editor"}],"isInner":""}],"isInner":""},{"id":"bd540ca","elType":"section","settings":[],"elements":[{"id":"3559d7e","elType":"column","settings":{"_column_size":"100"},"elements":[{"id":"1294547","elType":"widget","settings":[],"elements":[],"widgetType":"spacer"},{"id":"0330271","elType":"widget","settings":{"title":"\ubca0\uc774\uc2a4 \ucea0\ud504 \uac19\uc740 \ub514\uc790\uc778 \ud300"},"elements":[],"widgetType":"heading"},{"id":"fe394a6","elType":"widget","settings":{"image":{"url":"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2021\/11\/1-5.png","id":"2338","alt":"","source":"library"},"caption_source":"custom","caption":"\ud300\uc6d0\ubd84\ub4e4\uc774 \ub178\uc158\uc744 \uc774\ub807\uac8c \uafb8\uba70\uc8fc\uc168\ub2e4. \uac10\ub3d9 \u3160\u3160","image_size":"full"},"elements":[],"widgetType":"image"},{"id":"9eb066a","elType":"widget","settings":{"editor":"<p>\ub4dc\ub77c\ub9c8\uc564\ucef4\ud37c\ub2c8\uc758 \ub514\uc790\uc774\ub108\ub4e4\uc740 \ud06c\ub8e8\uc640 \uc8fc\ub85c \uc77c\uc744 \ud569\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \ub514\uc790\uc774\ub108\ub4e4\uc740 \uafb8\uc900\ud788 \ubb49\uccd0\uac00\uba70 \uc11c\ub85c\uc758 \uc791\uc5c5\uacfc \uc131\uc7a5\uc744 \ub3d5\uace0 \uc788\uc2b5\ub2c8\ub2e4. \ub514\uc790\uc778\ud300 \ub0b4\uc5d0\uc11c\ub294 \ub370\uc77c\ub9ac \uc2a4\ud06c\ub7fc\uc744 \ud1b5\ud574 \uc9c4\ud589\ud558\ub294 \ub514\uc790\uc778\uc758 \ud53c\ub4dc\ubc31\uc744 \uc8fc\uace0\ubc1b\uc2b5\ub2c8\ub2e4. \uadf8\ub9ac\uace0 \ub514\uc790\uc778 \uc791\uc5c5\uc744 \ud558\uba70 \ubc1c\uc0dd\ud558\ub294 \uace0\ubbfc\ub3c4 \ud568\uaed8 \uc598\uae30\ub97c \ub098\ub204\uace0, \uc88b\uc740 \uc815\ubcf4(\ucd5c\uc2e0 UX\ud2b8\ub80c\ub4dc, \ud234 \ub4f1)\ub294 \ud568\uaed8 \ub098\ub215\ub2c8\ub2e4. \uac01\uc790\uc758 \ud06c\ub8e8\uc5d0 \uc788\uc9c0\ub9cc, \uc801\uadf9\uc801\uc73c\ub85c \uc11c\ub85c\ub97c \uc11c\ud3ec\ud2b8 \ud558\uace0 \uc788\uace0, \uc774 \ubaa8\uc2b5\uc774 \uc800\ub294 \uad49\uc7a5\ud788 \uc778\uc0c1\uc801\uc774\uc5c8\uc2b5\ub2c8\ub2e4. \ud300\uc774 \ub9c8\uce58 \ubca0\uc774\uc2a4 \ucea0\ud504\ucc98\ub7fc \ub290\uaef4\uc84c\uace0, \ub4e0\ub4e0\ud55c \ud300\uc6d0\ub4e4\uc744 \uc9c0\uc6d0\uad70\uc73c\ub85c \uc5bb\uc5c8\ub2e4\uace0 \uc0dd\uac01\ud569\ub2c8\ub2e4.<\/p>"},"elements":[],"widgetType":"text-editor"},{"id":"ead44e0","elType":"widget","settings":{"title":"<span style=\"font-style: normal;font-weight: 400;font-family: Roboto, sans-serif\"><span style=\"font-weight: 700\">\ub514\uc790\uc778\ud300\uc774 \uc77c\ud558\ub294 \ubc29\uc2dd<\/span><\/span>","header_size":"h4"},"elements":[],"widgetType":"heading"},{"id":"7af915e","elType":"widget","settings":{"editor":"<ul>\n<li>\ub370\uc77c\ub9ac \uc2a4\ud06c\ub7fc: \uac01\uc790 \uc9c4\ud589\ud558\ub294 \ud504\ub85c\uc81d\ud2b8\ub97c \uacf5\uc720\ud558\uace0, \ud53c\ub4dc\ubc31\uc744 \uc8fc\uace0 \ubc1b\uc2b5\ub2c8\ub2e4.<\/li>\n<li>\uc8fc\uac04\ud68c\uc758: \uc790\uc720\ub86d\uac8c \uc544\uc820\ub2e4\ub97c \uc900\ube44\ud558\uac70\ub098, \uc77c\ud558\uba74\uc11c \uac1c\uc120\ud574\uc57c \ud560 \uc810\ub4e4\uc744 \uc8fc\ub85c \uc598\uae30\ud569\ub2c8\ub2e4.<\/li>\n<li>\ud53c\uadf8\ub9c8\ub85c \ub514\uc790\uc778\uc744 \ud558\uace0, \ub514\uc790\uc778 \uc2dc\uc2a4\ud15c\ub3c4 \ud53c\uadf8\ub9c8\ub85c \uad00\ub9ac\ud569\ub2c8\ub2e4.<\/li>\n<li>\uc778\ud130\ub809\uc158 \ubaa9\uc5c5\uc774 \ud544\uc694\ud560 \uacbd\uc6b0 \ud504\ub85c\ud1a0\ud30c\uc774\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4.<\/li>\n<li>\ub178\uc158\uc73c\ub85c \uc11c\ub85c\uc758 \uc2a4\ucf00\uc904\uc744 \uacf5\uc720\ud558\uace0, \ud504\ub85c\uc81d\ud2b8 \uc9c4\ud589\uc0ac\ud56d\uc744 \ud30c\uc545\ud569\ub2c8\ub2e4.<\/li>\n<\/ul>"},"elements":[],"widgetType":"text-editor"},{"id":"44f88e9","elType":"widget","settings":{"editor":""},"elements":[],"widgetType":"text-editor"},{"id":"f6dc367","elType":"widget","settings":[],"elements":[],"widgetType":"spacer"}],"isInner":""}],"isInner":""},{"id":"a18656f","elType":"section","settings":[],"elements":[{"id":"4c70740","elType":"column","settings":{"_column_size":"100"},"elements":[{"id":"003a19d","elType":"widget","settings":{"title":"\ub4dc\ub77c\ub9c8\uc564\ucef4\ud37c\ub2c8 \uc9c1\uc811 \uc77c\ud574\ubcf4\ub2c8!"},"elements":[],"widgetType":"heading"},{"id":"6364c06","elType":"widget","settings":{"editor":"<p>\uc81c\uac00 \uc0dd\ud65c\ud558\uba70 \ub290\ub080 \ub4dc\ub77c\ub9c8\uc564\ucef4\ud37c\ub2c8\ub294 \uc77c\uc758 \uc9c4\ud589 \uc0ac\ud56d\uacfc \ud788\uc2a4\ud1a0\ub9ac\ub97c \ud22c\uba85\ud558\uac8c \uacf5\uc720\ud558\ub294 \uc870\uc9c1\uc785\ub2c8\ub2e4. \uadf8\ub798\uc11c \ud568\uaed8 \uc77c\ud558\ub294 \uc0ac\ub78c\ub4e4\uc774 \ud504\ub85c\uc81d\ud2b8\uc5d0 \ub300\ud574 \uac19\uc740 \uc774\ud574\ub3c4\uc640 \ubaa9\uc801\uc744 \ubc14\ud0d5\uc73c\ub85c \uc18c\ud1b5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c \uc720\uc800\uc758 \uad00\uc810\uc5d0\uc11c \ud53c\ub4dc\ubc31\ud558\ub824 \ub178\ub825\ud558\uace0, \uc758\ubbf8 \uc5c6\ub294 \ud3c9\uac00\ubcf4\ub2e4\ub294 \ub300\uc548\uc744 \uc81c\uc2dc\ud558\ub294 \ud53c\ub4dc\ubc31 \ubb38\ud654\ub97c \uc9c0\ud5a5\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ubb38\ud654\uac00 \ubd88\ud544\uc694\ud55c \uc18c\ud1b5\uc758 \ube44\uc6a9\uc744 \uc904\uc5ec \ud6a8\uc728\uc801\uc73c\ub85c \uc77c\ud558\ub3c4\ub85d \ub3c4\uc640\uc90d\ub2c8\ub2e4. \ub610\ud55c \ub3d9\ub8cc\ub4e4\uc774 \uc11c\ud3ec\ud2b8 \ud574\uc900\ub2e4\ub294 \uc2ec\ub9ac\uc801 \uc548\uc815\uac10\uc774 \uc788\uc5b4, \ub204\uad6c\ub098 \uc790\uc720\ub86d\uac8c \uc758\uacac\uc744 \uc81c\uc2dc\ud560 \uc218 \uc788\ub294 \ud658\uacbd\uc774\ub77c\uace0 \uc0dd\uac01\ud569\ub2c8\ub2e4.<\/p>"},"elements":[],"widgetType":"text-editor"},{"id":"02a046c","elType":"widget","settings":{"image":{"url":"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2021\/11\/1-4.png","id":"2336","alt":"","source":"library"},"caption_source":"custom","caption":"\uce5c\ubc25 \ud6c4\uae30\ub4e4! \uc11c\ub85c \ub9cc\ub098\ubd50 \uc218 \uc5c6\uc5c8\ub358 \ubd84\ub4e4\uacfc\ub3c4 \uc7ac\ubc0c\uac8c \uc774\uc57c\uae30 \ub098\ub234\uc2b5\ub2c8\ub2e4 ","image_size":"full"},"elements":[],"widgetType":"image"},{"id":"20757c4","elType":"widget","settings":{"editor":"<p>\uc694\uc998\uc740 \ub3d9\ub8cc\ub4e4\uc758 \uc7a5\uc810\uc744 \ud568\uaed8 \uce6d\ucc2c\ud558\uace0 \ub3d9\uae30\ub97c \ubd80\uc5ec\ud558\uae30 \uc704\ud55c \uce6d\ucc2c\ud558\uae30 \ubb38\ud654\ub3c4 \uc2e4\ud5d8\ub418\uace0 \uc788\uc2b5\ub2c8\ub2e4. \ucc38\uace0\ub85c \uac00\uc7a5 \ub9ce\uc740 \uce6d\ucc2c\uc744 \ubc1b\uc73c\uc2e0 \ubd84\ub4e4\uaed8 \uce58\ud0a8\uc774, \uadf8\ub9ac\uace0 10\uc6d4\uc758 \ub4dc\ub77c\ub9c8\uc778(\uce6d\ucc2c \ub9ce\uc774 \ubc1b\uc740 \ubd84+\ud300 \ub9ac\ub354\uc758 \ucd94\ucc9c)\uc740 <span class=\"notion-enable-hover\" style=\"color: inherit;border-bottom-width: 0.05em;border-bottom-style: solid;font-weight: 600\" data-token-index=\"1\" data-reactroot=\"\">\uc2dc\uadf8\ub2c8\uc5d8 \uc219\ubc15\uad8c \ubc1b\uc73c\uc168\uc2b5\ub2c8\ub2e4...!<\/span> \uc640\uc544... \uc2dc\uadf8\ub2c8\uc5d8 \uc870\uc2dd \ud3ec\ud568\uc774\ub78d\ub2c8\ub2e4. \uc800\ub294 \uc77c\ub2e8 \uce58\ud0a8\uc774\ub77c\ub3c4 \ubc1b\uc744 \uc218 \uc788\ub3c4\ub85d \ub178\ub825\ud574\uc57c\uaca0\uc2b5\ub2c8\ub2e4. \ub610\ud55c \uce5c\ubaa9 \ub3c4\ubaa8\ub97c \uc704\ud55c \uce5c\ubc25, \ud2f0\ud0c0\uc784, \uc628\ub77c\uc778 \ud68c\uc2dd \uac19\uc740 \uc2dc\uac04\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \ucf54\ub85c\ub098\ub85c \uc778\ud574 \uc6d0\uaca9\uc73c\ub85c \uc9c4\ud589\ub418\uc9c0\ub9cc, \ud3c9\uc18c\uc5d0 \uc811\uc810\uc774 \uc5c6\ub358 \ubd84\ub4e4\uacfc\ub3c4 \ub9cc\ub0a0 \uc218 \uc788\uc5b4 \uc815\ub9d0 \uc88b\uc558\uc2b5\ub2c8\ub2e4. \ub098\uc911\uc5d0 \ucf54\uc2dc\uad6d\uc774 \ub05d\ub098\uba74 \uc624\ud504\ub77c\uc778\uc73c\ub85c \ubaa8\ub450 \ub9cc\ub098 \ubd59\uae38 \ubc14\ub78d\ub2c8\ub2e4. :D<\/p>"},"elements":[],"widgetType":"text-editor"}],"isInner":""}],"isInner":""},{"id":"ce0266c","elType":"section","settings":[],"elements":[{"id":"a56627c","elType":"column","settings":{"_column_size":"100"},"elements":[{"id":"25a0789","elType":"widget","settings":{"text":"\ub514\ubc14\uc774\ub354"},"elements":[],"widgetType":"divider"}],"isInner":""}],"isInner":""},{"id":"61b2b7c","elType":"section","settings":[],"elements":[{"id":"c79220e","elType":"column","settings":{"_column_size":"100"},"elements":[{"id":"02f8294","elType":"widget","settings":{"editor":"<p>\ub4dc\ub77c\ub9c8\uc564\ucef4\ud37c\ub2c8\uc5d0\uc11c \uc77c\ud55c \uc9c0 \ubc8c\uc368 \uc138 \ub2ec\uc774 \ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uadf8\ub3d9\uc548 \uc81c\uac00 \uc801\uc751\ud560 \uc218 \uc788\ub3c4\ub85d \uc778\uc0ac\ud300, \ub514\uc790\uc778\ud300, \ucee4\ub9ac\uc5b4 \ud06c\ub8e8\u2026 \ub4f1 \ub9ce\uc740 \ubd84\uc774 \ub3c4\uc6c0\uc744 \uc8fc\uc168\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ud06c\uace0 \uc791\uc740 \ub3c4\uc6c0\uacfc \ubc30\ub824\ub4e4 \uc18d\uc5d0\uc11c \u2018\ub4dc\ub77c\ub9c8\uc564\ucef4\ud37c\ub2c8\ub294 \ucc38 \uc88b\uc740 \uc0ac\ub78c\ub4e4\uc774 \ubaa8\uc778 \ud68c\uc0ac\uad6c\ub098\u2026\u2019\ub77c\ub294 \uc0dd\uac01\uc774 \ub4e4\uc5c8\uc2b5\ub2c8\ub2e4. \uc88b\uc740 \uc0ac\ub78c\ub4e4\uc774 \ubaa8\uc5ec \ud568\uaed8 \uc131\uc7a5\ud574 \ub098\uac08 \uc218 \uc788\ub294 \ud658\uacbd\uc744 \uac16\ucd94\uace0 \uc788\uace0, \uadf8 \ud658\uacbd\uc5d0\uc11c \uc77c\ud558\uac8c \ub418\uc5b4 \ub108\ubb34 \uae30\uc069\ub2c8\ub2e4. \uc55e\uc73c\ub85c\ub3c4 \uc131\uc7a5\ud574 \ub098\uac08 \ub9ac\uba64\ubc84, \uadf8\ub9ac\uace0 \ub9ac\uba64\ubc84\uac00 \ubcc0\ud654\uc2dc\ud0a4\ub294 \uc778\uc7ac \ucc44\uc6a9, \ube44\uc988\ub2c8\uc2a4 \ud50c\ub7ab\ud3fc \uc2dc\uc7a5\uc744 \uae30\ub300\ud574 \uc8fc\uc138\uc694. \uc77d\uc5b4\uc8fc\uc154\uc11c \uac10\uc0ac\ud569\ub2c8\ub2e4.<\/p>"},"elements":[],"widgetType":"text-editor"}],"isInner":""}],"isInner":""}]]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_page_assets]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_single_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:23:{s:8:"subtitle";s:0:"";s:6:"format";s:8:"standard";s:5:"video";s:0:"";s:7:"gallery";s:0:"";s:11:"source_name";s:0:"";s:10:"source_url";s:0:"";s:8:"via_name";s:0:"";s:7:"via_url";s:0:"";s:17:"override_template";s:1:"0";s:8:"override";a:1:{i:0;a:32:{s:8:"template";s:1:"1";s:18:"single_blog_custom";s:0:"";s:8:"parallax";s:1:"1";s:10:"fullscreen";s:1:"1";s:6:"layout";s:13:"right-sidebar";s:7:"sidebar";s:15:"default-sidebar";s:14:"second_sidebar";s:15:"default-sidebar";s:14:"sticky_sidebar";s:1:"1";s:14:"share_position";s:3:"top";s:17:"share_float_style";s:16:"share-monocrhome";s:18:"show_share_counter";s:1:"1";s:17:"show_view_counter";s:1:"1";s:13:"show_featured";s:1:"1";s:14:"show_post_meta";s:1:"1";s:16:"show_post_author";s:1:"1";s:22:"show_post_author_image";s:1:"1";s:14:"show_post_date";s:1:"1";s:16:"post_date_format";s:7:"default";s:23:"post_date_format_custom";s:5:"Y/m/d";s:18:"show_post_category";s:1:"1";s:22:"show_post_reading_time";s:1:"0";s:21:"post_reading_time_wpm";s:3:"300";s:16:"show_zoom_button";s:1:"0";s:20:"zoom_button_out_step";s:1:"2";s:19:"zoom_button_in_step";s:1:"3";s:13:"show_post_tag";s:1:"1";s:19:"show_prev_next_post";s:1:"1";s:15:"show_popup_post";s:1:"1";s:17:"number_popup_post";s:1:"1";s:15:"show_author_box";s:1:"0";s:17:"show_post_related";s:1:"0";s:24:"show_inline_post_related";s:1:"0";}}s:19:"override_image_size";s:1:"0";s:14:"image_override";a:1:{i:0;a:2:{s:26:"single_post_thumbnail_size";s:8:"crop-500";s:24:"single_post_gallery_size";s:8:"crop-500";}}s:13:"trending_post";s:1:"0";s:22:"trending_post_position";s:4:"meta";s:19:"trending_post_label";s:8:"Trending";s:14:"sponsored_post";s:1:"0";s:20:"sponsored_post_label";s:12:"Sponsored by";s:19:"sponsored_post_name";s:0:"";s:18:"sponsored_post_url";s:0:"";s:26:"sponsored_post_logo_enable";s:1:"0";s:19:"sponsored_post_logo";s:0:"";s:19:"sponsored_post_desc";s:0:"";s:10:"disable_ad";s:1:"0";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle_flag]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[2427]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[43]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:2:"id";s:2:"93";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_estimated-reading-time-minutes]]></wp:meta_key>
		<wp:meta_value><![CDATA[5]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
		<wp:meta_value><![CDATA[제가 느낀 드라마앤컴퍼니는 일의 진행 사항과 히스토리를 투명하게 공유하는 조직입니다. 그래서 함께 일하는 사람들이 프로젝트에 대해 같은 이해도와 목적을 바탕으로 소통할 수 있습니다. 또한 유저의 관점에서 피드백하려 노력하고, 의미 없는 평가보다는 대안을 제시하는 피드백 문화를 지향하고 있습니다.]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[93]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[리멤버의 타코 문화를 소개합니다]]></title>
		<link>https://blog.dramancompany.com/2021/12/%eb%a6%ac%eb%a9%a4%eb%b2%84%ec%9d%98-%ed%83%80%ec%bd%94-%eb%ac%b8%ed%99%94%eb%a5%bc-%ec%86%8c%ea%b0%9c%ed%95%a9%eb%8b%88%eb%8b%a4/</link>
		<pubDate>Wed, 01 Dec 2021 02:14:25 +0000</pubDate>
		<dc:creator><![CDATA[s.sunyoung]]></dc:creator>
		<guid isPermaLink="false">https://blog.dramancompany.com/?p=2393</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>안녕하세요! 리멤버에서 Platform Crew에 속해있는 서버 개발자 신선영입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>최근에 플랫폼 크루에서부터 시작된 문화가 회사의 하나의 문화로 정착되었는데요. 이 문화를 소개해보고자 합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":1} -->
<h1>칭찬</h1>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>플랫폼 크루에서는 일주일에 한 번씩 회고를 합니다. 일주일 동안 좋았던 점이나 아쉬웠던 점 같은 이야기를 할 수도 있고, 이야기하고 싶은 주제를 건의하면 그 주제에 관한 이야기를 나누어보기도 합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":2396,"sizeSlug":"large","linkDestination":"media"} -->
<figure class="wp-block-image size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/12/Untitled-2.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/12/Untitled-2-1024x313.png" alt="" class="wp-image-2396"/></a></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>어느 날 '정신건강을 어떻게 챙길 수 있는가?'에 대해 이야기가 나와서 각자 이야기하는 시간을 가지다가, 공감과 칭찬의 중요성에 대한 이야기가 나왔습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>'칭찬은 고래를 춤추게 한다'라는 말이 있듯이 칭찬이 가지는 힘은 생각보다 크게 작용하는데요. 이야기하던 중에 한 동료분이 헤이타코(Heytaco!)라는 슬랙봇을 추천해주셨습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":1} -->
<h1>헤이타코(Heytaco!) 소개</h1>
<!-- /wp:heading -->

<!-- wp:image {"id":2397,"sizeSlug":"large","linkDestination":"media"} -->
<figure class="wp-block-image size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/12/Untitled-1-1.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/12/Untitled-1-1-1024x298.png" alt="" class="wp-image-2397"/></a></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p><a href="https://www.heytaco.chat/">헤이타코(Heytaco!)</a>는 동료에게 고마움을 표현하거나, 칭찬하고 싶을 때 가볍게 사용할 수 있는 슬랙앱입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":2398,"sizeSlug":"large","linkDestination":"media"} -->
<figure class="wp-block-image size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/12/Untitled-2-1.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/12/Untitled-2-1-1024x313.png" alt="" class="wp-image-2398"/></a></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>자신에게 하루에 5개의 타코가 주어지며, 고마운 일이 있거나 칭찬하고 싶을 때 언급(<code>@</code>)과 함께 타코 이모티콘을 붙여서 전달해주면 됩니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":2399,"sizeSlug":"large","linkDestination":"media"} -->
<figure class="wp-block-image size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/12/Untitled-3.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/12/Untitled-3-1024x316.png" alt="" class="wp-image-2399"/></a></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>타코를 받게 되면 타코봇으로부터 타코를 받았다는 안내 DM과 함께 타코의 카운트도 올라갑니다. (그리고 기분이 좋아집니다 ... ㅎㅎ)</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>헤이타코는 슬랙에서만 사용 가능한 것이 아닌, 자체 웹 페이지를 제공해주는데요. 자체 웹 페이지에서는 타코에 관해 많은 정보를 확인할 수 있습니다. 저희가 사용하는 몇 가지 탭을 소개해드리겠습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2><strong>Activity</strong></h2>
<!-- /wp:heading -->

<!-- wp:image {"id":2400,"sizeSlug":"large","linkDestination":"media"} -->
<figure class="wp-block-image size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/12/Untitled-4.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/12/Untitled-4-1024x503.png" alt="" class="wp-image-2400"/></a></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>Activity에서는 최근에 동료들이 타코를 어떤 이유로 받았는지 구경할 수 있는 페이지를 제공합니다. 단, public channel인 경우에만 Activity에 표시되고, private channel의 경우는 표시되지 않습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2><strong>Leaderboard</strong></h2>
<!-- /wp:heading -->

<!-- wp:image {"id":2401,"sizeSlug":"large","linkDestination":"media"} -->
<figure class="wp-block-image size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/12/Untitled-5.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/12/Untitled-5-1024x484.png" alt="" class="wp-image-2401"/></a></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>또한 Leaderboard 탭에서는 랭킹을 확인할 수 있습니다. 이런 재미있는 요소가 있기 때문에 타코를 받기 위해 열정이 더 불타오르기도 합니다. 🔥🔥</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>My Page</h2>
<!-- /wp:heading -->

<!-- wp:image {"id":2402,"sizeSlug":"large","linkDestination":"media"} -->
<figure class="wp-block-image size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/12/Untitled-6.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/12/Untitled-6-1024x637.png" alt="" class="wp-image-2402"/></a></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>본인 이름을 클릭하면 내가 얼마나 많은 타코를 받았고, 어떻게 타코를 받았는지까지 확인할 수 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>이 외에도 저희는 사용하고 있지 않지만, 특정 개수 타코와 등록된 선물을 교환하거나, 큰 감사를 표현하고 싶을 때 '슈퍼 타코'를 보낼 수도 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":1} -->
<h1>타코는 잘 워킹했을까?</h1>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>그렇다면 타코 문화는 칭찬하는 문화를 만들기 위해 긍정적인 영향을 끼쳤을까요?</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>결론은 <strong>성공적</strong>이었습니다! 저희 팀은 한 달 동안 타코를 사용하면서 아래와 같은 긍정적인 효과를 확인할 수 있었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>칭찬을 하거나 고마움을 표현하기 더 쉬워졌다.</li><li>타코를 받으면 기분이 좋아지고 모티베이션이 올라간다.</li><li>타코를 받기 위해 더 열심히 노력하게 되었다.</li><li>타코를 많이 받으신 분들을 롤모델로 삼아 의식적으로 닮으려고 노력하게 되었다.</li><li>타코와 함께 받은 칭찬을 보며 내가 잘하고 있다는 것을 시각적으로 확인할 수 있었다.</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>타코봇은 유료로, 한 달에 인당 2달러를 지불해야 했습니다. 인당 2달러를 내며 타코봇을 쓰는 게 좋을지 논의한 결과 ...</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":1} -->
<h1>리멤버의 문화로</h1>
<!-- /wp:heading -->

<!-- wp:image {"id":2403,"sizeSlug":"large","linkDestination":"media"} -->
<figure class="wp-block-image size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/12/Untitled-7.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/12/Untitled-7-1024x556.png" alt="" class="wp-image-2403"/></a></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>타코는 리멤버의 칭찬 문화를 만들어 나아가기 위한 방법으로 채택되었습니다! 🎉🌮</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":2404,"sizeSlug":"large","linkDestination":"media"} -->
<figure class="wp-block-image size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/12/Untitled-8.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/12/Untitled-8-1024x310.png" alt="" class="wp-image-2404"/></a></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>타코가 도입되고 난 이후에 퍼블릭한 채널에만 무려 1,246개의 타코가 왔다 갔으며, 타코를 주고받으며 칭찬하는 문화도 많이 회사에서 많이 활성화되었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>실제로 다양한 동료분들에게도 타코에 대해 어떻게 생각하는지 의견을 물어보았는데, 이야기해 주신 분들 모두 타코봇을 긍정적인 시선으로 바라보고 있었습니다. (갑작스러운 인터뷰 요청에도 흔쾌히 공유해주셔서 감사합니다!)</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":2405,"sizeSlug":"large","linkDestination":"media"} -->
<figure class="wp-block-image size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/12/Untitled-9.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/12/Untitled-9-1024x197.png" alt="" class="wp-image-2405"/></a><figcaption>타코는 모두가 좋아하는 음식이기 때문에 타코로 정했다고 합니다. (원래는 타코가 아니라 맥주로 시작했다고 …)</figcaption></figure>
<!-- /wp:image -->

<!-- wp:image {"id":2412,"sizeSlug":"large","linkDestination":"media"} -->
<figure class="wp-block-image size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/12/Untitled-10-1.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/12/Untitled-10-1-1024x218.png" alt="" class="wp-image-2412"/></a></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":2414,"sizeSlug":"large","linkDestination":"media"} -->
<figure class="wp-block-image size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/12/Untitled-11-1.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/12/Untitled-11-1-1024x304.png" alt="" class="wp-image-2414"/></a></figure>
<!-- /wp:image -->

<!-- wp:image {"id":2415,"sizeSlug":"large","linkDestination":"media"} -->
<figure class="wp-block-image size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/12/Untitled-12-1.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/12/Untitled-12-1-1024x371.png" alt="" class="wp-image-2415"/></a></figure>
<!-- /wp:image -->

<!-- wp:image {"id":2416,"sizeSlug":"large","linkDestination":"media"} -->
<figure class="wp-block-image size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/12/Untitled-13-2.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/12/Untitled-13-2-1024x261.png" alt="" class="wp-image-2416"/></a></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":2417,"sizeSlug":"large","linkDestination":"media"} -->
<figure class="wp-block-image size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/12/Untitled-14-2.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/12/Untitled-14-2-1024x574.png" alt="" class="wp-image-2417"/></a></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>그뿐만 아니라 한 달에 한 번, 저희 회사에서는 매월 드라마인을 뽑는데요. 타코를 지표로 사용해 드라마인을 뽑기도 합니다. (이 달의 드라마인에게는 시그니엘 숙박권을 준다는 소문이 ... 👀)</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":1} -->
<h1><strong>마치며</strong></h1>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>이렇게 리멤버는 타코봇을 도입하며 칭찬하는 문화를 더 활성화할 수 있었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>칭찬 문화는 어떻게 보면 중요하지 않은 문화로 비춰질 수도 있는데요. 칭찬은 상대방에게 모티베이션을 주기 위한 강력한 수단이며, 건강한 조직을 만들기 위해 중요하게 작용하는 요소입니다. 하지만 칭찬하는 데 익숙하지 않은 경우가 있습니다. 이럴 때는 타코봇같이 칭찬하기 조금 더 쉽게 만들어주는 유틸성 앱을 사용하는 것도 좋은 방법이 될 수 있을 것 같습니다! 🌮</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>마지막으로 라운지에서 종종 볼 수 있는 타코TV의 사진과 함께 글을 맺도록 하겠습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>읽어주셔서 감사합니다! 🙂</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":2418,"sizeSlug":"large","linkDestination":"media"} -->
<figure class="wp-block-image size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/12/Untitled-15.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/12/Untitled-15-1024x768.png" alt="" class="wp-image-2418"/></a><figcaption>Taco TV</figcaption></figure>
<!-- /wp:image -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2393</wp:post_id>
		<wp:post_date><![CDATA[2021-12-01 11:14:25]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-12-01 02:14:25]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-12-01 12:21:42]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-12-01 03:21:42]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%eb%a6%ac%eb%a9%a4%eb%b2%84%ec%9d%98-%ed%83%80%ec%bd%94-%eb%ac%b8%ed%99%94%eb%a5%bc-%ec%86%8c%ea%b0%9c%ed%95%a9%eb%8b%88%eb%8b%a4]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="culture"><![CDATA[Culture]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729534755;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:2330;}i:1;a:1:{s:2:"id";i:2174;}i:2;a:1:{s:2:"id";i:1783;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[2420]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[40]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_single_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:22:{s:8:"subtitle";s:0:"";s:6:"format";s:8:"standard";s:5:"video";s:0:"";s:7:"gallery";s:0:"";s:11:"source_name";s:0:"";s:10:"source_url";s:0:"";s:8:"via_name";s:0:"";s:7:"via_url";s:0:"";s:17:"override_template";s:1:"0";s:8:"override";a:1:{i:0;a:32:{s:8:"template";s:1:"1";s:18:"single_blog_custom";s:0:"";s:8:"parallax";s:1:"1";s:10:"fullscreen";s:1:"1";s:6:"layout";s:13:"right-sidebar";s:7:"sidebar";s:15:"default-sidebar";s:14:"second_sidebar";s:15:"default-sidebar";s:14:"sticky_sidebar";s:1:"1";s:14:"share_position";s:3:"top";s:17:"share_float_style";s:16:"share-monocrhome";s:18:"show_share_counter";s:1:"1";s:17:"show_view_counter";s:1:"1";s:13:"show_featured";s:1:"1";s:14:"show_post_meta";s:1:"1";s:16:"show_post_author";s:1:"1";s:22:"show_post_author_image";s:1:"1";s:14:"show_post_date";s:1:"1";s:16:"post_date_format";s:7:"default";s:23:"post_date_format_custom";s:5:"Y/m/d";s:18:"show_post_category";s:1:"1";s:22:"show_post_reading_time";s:1:"0";s:21:"post_reading_time_wpm";s:3:"300";s:16:"show_zoom_button";s:1:"0";s:20:"zoom_button_out_step";s:1:"2";s:19:"zoom_button_in_step";s:1:"3";s:13:"show_post_tag";s:1:"1";s:19:"show_prev_next_post";s:1:"1";s:15:"show_popup_post";s:1:"1";s:17:"number_popup_post";s:1:"1";s:15:"show_author_box";s:1:"0";s:17:"show_post_related";s:1:"0";s:24:"show_inline_post_related";s:1:"0";}}s:19:"override_image_size";s:1:"0";s:14:"image_override";a:1:{i:0;a:2:{s:26:"single_post_thumbnail_size";s:8:"crop-500";s:24:"single_post_gallery_size";s:8:"crop-500";}}s:13:"trending_post";s:1:"0";s:22:"trending_post_position";s:4:"meta";s:19:"trending_post_label";s:8:"Trending";s:14:"sponsored_post";s:1:"0";s:20:"sponsored_post_label";s:12:"Sponsored by";s:19:"sponsored_post_name";s:0:"";s:18:"sponsored_post_url";s:0:"";s:26:"sponsored_post_logo_enable";s:1:"0";s:19:"sponsored_post_logo";s:0:"";s:19:"sponsored_post_desc";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:2:"id";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_estimated-reading-time-minutes]]></wp:meta_key>
		<wp:meta_value><![CDATA[6]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle_flag]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[98]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>12144</wp:comment_id>
			<wp:comment_author><![CDATA[결명자]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[amondwasabi@naver.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.31.252]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2021-12-01 11:52:49]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2021-12-01 02:52:49]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[오 이런 문화 좋네요!  저희회사에도 건의해보고 싶습니다]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1638327169.921451;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1638329424.44182;s:5:"event";s:15:"status-approved";s:4:"user";s:10:"s.sunyoung";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>12160</wp:comment_id>
			<wp:comment_author><![CDATA[닝닝]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[onmro@hanmail.net]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.7.109]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2021-12-08 11:13:16]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2021-12-08 02:13:16]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[오! 좋은 문화네요. 일을 하며 받는 긍정적인 피드백은 고래도 춤추게 하지요]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1638929596.069123;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1638930137.660107;s:5:"event";s:15:"status-approved";s:4:"user";s:3:"tom";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>13173</wp:comment_id>
			<wp:comment_author><![CDATA[drake]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[kimehdwn88@naver.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.22.114]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-01-03 12:19:21]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-01-03 03:19:21]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[타코 문화 귀엽네요! 오늘 저녁은 타코로 해야겠어요!!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1704251961.449163;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1706486344.591707;s:5:"event";s:15:"status-approved";s:4:"user";s:5:"Jaden";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[우리의 OKR이 실패했던 이유]]></title>
		<link>https://blog.dramancompany.com/2021/12/__trashed-3/</link>
		<pubDate>Thu, 02 Dec 2021 05:36:36 +0000</pubDate>
		<dc:creator><![CDATA[sunny.moon]]></dc:creator>
		<guid isPermaLink="false">https://blog.dramancompany.com/?p=2424</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:spacer {"height":67} -->
<div style="height:67px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading -->
<h2><strong>1. 우리가 일했던 방식 : OKR</strong></h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>드라마앤컴퍼니(이하 드라마)에서는 주로 기능 조직과는 별도의 '크루(Crew)'라는 사일로한 조직 단위로 일합니다. 사일로 조직인 크루는 PO, 디자이너, 개발자의 크루원들로 이루어져 있으며, 크루원들은 기획 단계에서부터 참여하여 Cross-functional 하게 목소리를 내고 의사결정에 적극적으로 참여합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>지난 몇 분기 간 드라마는 OKR 방법론을 바탕으로 제품 팀을 이끌었습니다. 목표는 3개월 주기로 세팅되었고, 그에 맞는 KR과 initiative를 설정하여 목표 달성을 위해 빠르게 움직였습니다. 도전적인 목표를 세우고 KR을 달성해가는 과정은 서비스가 빠르게 성장하고 있다고 느끼게 해주었고, OKR은 아주 효율적으로 동작하는 듯 보였습니다. 그런데 몇 분기가 지나자 팀에서의 여러 이상 신호들이 생겨나기 시작했습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":33} -->
<div style="height:33px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading -->
<h2><strong>2. 팀의 위험 신호</strong></h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>드라마에서는 2주에 한 번씩 팀원들의 상태를 점검하기 위해 Health Check를 체크합니다. 팀원들은 미션, 재미, 학습, 자기 주도, 속도 등의 다면 평가 항목을 바탕으로 스스로의 한 주를 돌아보는 시간을 가집니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>그런데 분기가 지날수록, 크루원 모두의 업무 의욕이 평균적으로 크게 떨어지고 있었습니다. 성취감, 만족도, 속도 등 모든 건강 지표에 적신호가 켜졌습니다. 매달 2번 진행하는 주간 회고 시간에서 팀원들은 진행했던 task에 대해서 확신이 없다고 느끼고 있었습니다. 동시에 크루원 스스로의 기여도를 매우 낮게 느끼고 있었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>매 분기에 크루의 목표와 KR을 세팅하기 위해 많은 논의를 거치고, 매우 많은 회의 시간을 쓰고 있었음에도 크루원의 동기부여와 사기가 점점 떨어지고 있다는 것은 이상한 일이었습니다. 처음엔 리모트 환경으로 인한 커뮤니케이션의 부족이 원인은 아닐까 하는 의견도 있었지만, 회의 시간이 갈수록 늘어나도 팀원들의 기여도에 대한 지표는 크게 개선되지 못했습니다. 그렇게 '우리가 잘못된 방식으로 일하고 있는 것은 아닐까?'하는 생각은 점점 커져만 갔습니다. 그렇다면 무엇이 문제였을까요?</p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":36} -->
<div style="height:36px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading -->
<h2><strong>3. 무엇이 문제였을까?</strong></h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>지난날 우리의 OKR에서의 '목표'는 구체적인 성과 지표와 수치들로 나열이었고, 3개월이라는 짧은 시간 동안 크루원들이 달성해야 할 목표는 언제나 도전적이고 챌린징했습니다. 그 결과, 목표 달성을 위해 짧은 시간 안에 큰 수치적 성장을 가져올 수 있는 아이템들이 우선적으로 선택되곤 했습니다. 그 결과 모든 액션은 가장 노출량이 많은 화면 위에서 또 가장 강력한 방식으로 설계되었고, 결과적으로 앱은 아래 그림처럼 변해갔습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":2458,"width":768,"height":416,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large is-resized"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/12/pj01.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/12/pj01-1024x555.png" alt="" class="wp-image-2458" width="768" height="416"/></a><figcaption><a href="https://blog.dramancompany.com/wp-content/uploads/2021/12/pj03.png"></a><em>우리에게 남은 것은 팝업 지옥</em></figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:spacer {"height":36} -->
<div style="height:36px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:paragraph -->
<p>속력과 속도의 차이에 대해서 알고 계신가요? 속력이란 단위 시간 동안에 물체가 이동한 거리를 의미합니다. 반면 속도는 물체의 단위 시간당의 변위를 의미합니다. 변위란 출발점을 기준으로 할 때 도착점까지의 직선거리를 뜻합니다. 뜬금없이 이 이야기를 꺼낸 이유는, 속도와 속력의 개념의 차이가 우리의 문제를 잘 설명한다고 생각했기 때문입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":2453,"width":768,"height":467,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large is-resized"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/12/pj02.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/12/pj02-1024x623.png" alt="" class="wp-image-2453" width="768" height="467"/></a><figcaption><em>B의 속력은 A보다 2배나 빨랐지만, 도착지점엔 동시에 골인하게 됩니다.</em></figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p><meta charset="utf-8">팀원들은 O와 KR이라는 목표 지점을 향해 있었지만, 그것은 전략이라는 핸들이 없는 차에 올라 먼 길을 돌아 가는 것과 같았습니다. 빠른 속력으로 목표를 향해 가고 있다는 믿음 속에서, 우리의 속도은 점점 느려지고 있었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":33} -->
<div style="height:33px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading -->
<h2><strong>4. 목표 지우기</strong></h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>무엇이 우리의 속력을 늦추고 있었냐에 대해 고민했을 때 원인으로 지적되었던 것은 2가지였습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><strong>1) 전략에 선행하여 세팅된 목표와, 2) 제품 사이클에 대한 고려 없이 일률적으로 할당된 타임라인</strong></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>이 2가지의 환경이 메이커들로 하여금 실제 목표에 대한 근본적인 해결보단, 일정 안에 수치화된 성과를 만들어야한다는 압박으로 이어졌습니다. 효율적으로 일하기 위해 세웠던 목표와 지표들이 도리어 고객 중심적인 사고와 아이디어들을 막는 방해물이 되고 있었던 것입니다. 그래서 우리는 타임라인을 우리의 일정표에서 지우기로 했습니다. 3개월 주기로 세팅되었던 OKR 문서는 지워졌고, 달성해야하는 지표들 대신 해결해야하는 문제에 다시 집중하기 시작했습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":33} -->
<div style="height:33px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading -->
<h2><strong>5. 방향 설정</strong></h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>OKR에서 문자 K는 명확한 단 하나의 핵심을 뜻하고, 하나의 스쿼드(사일로팀의 단위)는 <a href="https://medium.com/@meetfelipe/okr-vs-kpis-what-is-the-difference-ffa54673fcf1">한 분기에 최대 5개의 핵심 결과와 함께 하나의 목표만 가져야 한다</a>고 합니다. 저희 역시 가장 중요한 하나의 목표에 집중하기로 했습니다. 리멤버의 여러 사일로 조직 중, 프로필 크루의 목표는 커리어 서비스를 사용하는 <strong>고객들이 프로필을 많이 공개하고 더 잘 작성하게끔 하는 것</strong>이었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><strong>STEP1 목표 달성을 위한 핸들 잡기</strong></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>서비스를 만드는 제품팀의 역할은 문제를 잘 해결하는 것입니다. 이에 프로필 크루는 '어떤 문제를 먼저 해결할 것인지'에서 논의를 시작하기로 했습니다. 그리고 그 첫 걸음으로 고객 관점에서 문제를 바라보기 위해 <a href="#footnote">개밥먹기(Eating Your Own Dog Food)²</a>를 진행했습니다. 우리는 한 명의 고객이 되어 스스로가 만든 제품의 A부터 Z까지를 직접 쓰면서 느낀 불편한 점들을 나열해보기로 했습니다. 이해 관계자 6명이 참여했으며, 개밥먹기는 약 2시간 소요되었습니다. 개밥먹기는 다음과 같은 과정으로 진행되었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>1. 설정된 시나리오를 바탕으로 이해관계자들 모두 각자가 생각하는 문제를 적습니다.<br>2. 발의자는 5분 이내로 작성한 내용을 공유합니다.<br>3. 문제들을 범주화하여 묶습니다.<br>4. 참여자들은 중요하다고 생각되는 문제에 투표합니다. (*투표자는 최대 3개의 문제에 투표할 수 있습니다)<br>5. 모든 참여자는 투표의 이유를 간략히 설명한 후, 가장 많은 표를 얻은 문제부터 해결 방법을 논의합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":2455,"width":768,"height":557,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large is-resized"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/12/pj04.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/12/pj04-1024x742.png" alt="" class="wp-image-2455" width="768" height="557"/></a></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>이 과정을 통해 대략 28개의 문제를 수집하였고, 이들은 6가지의 세부 범주로 분류되었습니다. 그리고 그중 가장 중요하다고 꼽은 2개의 문제에 집중하기로 했습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><strong>STEP2 데이터를 통해 문제 분석</strong></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>이후 프로필 크루는 수집된 문제에 대한 데이터를 수집하여 문제의 원인 분석을 진행했습니다. 드라마에는 DI 팀이 따로 있어 각각의 퍼널별 전환율과 기존 액션들의 전환율 등의 데이터를 요청할 수 있었습니다. 그 결과 가장 개선 대비 효과가 높을 것이라 예상이 되는 해결 방안 8가지를 도출할 수 있었습니다. 그러나 한정된 리소스 때문에 모든 아이템을 동시에 진행하는 것은 불가능했을 뿐더러, 각각의 문제에 대한 가설을 검증하기에도 적합하지 않았기 때문에 먼저 진행할 해결 방안을 결정해야했습니다. 우선순위를 정하기 위해 각 해결 방안들을 두고 <a href="#footnote">ICE 프레임워크³</a>를 진행하여 진행 우선 순위를 정하였습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><strong>STEP3 해결 방안 구체화하기</strong></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>각각의 액션 아이템은 크루원들과의 논의를 거쳐 구체화하는 과정을 거쳤습니다. 그 과정에서 가설을 검증하는데에 있어 필요한 최소 스펙들을 재검토하는 과정을 여러번 거쳤고, 오버 스펙이라 분류된 스펙은 과감히 범위(scope)에서 제외했습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><strong>STEP4 가설 검증을 위한 로드맵</strong></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>가설의 빠른 검증을 위해 하나의 액션에 대한 최대 배포 주기는 4주를 넘지 않기로 했습니다. 주 1회 주간 회의에서 진행했던 액션들에 대한 결과를 리뷰하는 시간을 가지며 가설이 잘 동작하지 않는다고 판단되면, 기존에 기획중이던 액션을 과감히 버리고 액션의 우선순위를 재검토했습니다. 때때로 효과를 내고 있는 액션들을 빼는 것은 매우 조심스러운 결정이었기 때문에, 현재 수치를 떨어뜨리지 않되 현재 유효하지 않다고 판단되는 액션들을 재배치하는 작업 시점을 고려하여 가설 검증 로드맵을 세팅했습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><strong>STEP5 투명한 지표 공유</strong></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>KR은 핵심 목표에서는 제외되었지만, 고객의 동향을 파악하는데 있어 항상 모니터링해야하는 중요한 지표 중 하나입니다. 때문에 프로필 크루에서는 주요 모니터링 지표들을 태블로(TABLEAU)에 대쉬보드로 만들어두고 크루원 누구든, 언제나 쉽게 확인이 가능하게끔 했습니다. 모두가 머릴 맞대고 고민한 액션을 증명해가며 주요 지표들이 올라갈 때마다, 다함께 서비스를 성장시키고 있다는 확신을 가질 수 있었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":2456,"width":768,"height":476,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large is-resized"><a href="https://blog.dramancompany.com/wp-content/uploads/2021/12/pj05.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2021/12/pj05-1024x634.png" alt="" class="wp-image-2456" width="768" height="476"/></a><figcaption><em>TABLEAU 대쉬보드 주요 모니터링 지표.</em></figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:spacer {"height":33} -->
<div style="height:33px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading -->
<h2>06 맺음말</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>개인적으로 전체는 그 부분의 합보다 크다는 말을 좋아합니다. 팀의 문화가 이끌어내는 시너지의 합이 개인 역량의 총합보다 더 크다고 믿기 때문인데요. 앞선 1년간 다양한 조직 운영 방식을 테스트하며 많은 시행착오와 실패들을 겪었지만, 여전히 부족한 부분들을 많이 느끼고 있습니다. 그럼에도 불구하고, 앞으로 더 나아갈 것이라는 믿음을 가지게 되는 이유는 함께 더 잘 일하기 위해 고민하는 팀원들이 있기 때문입니다. <br><br>긴 글 읽어주셔서 감사합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":33} -->
<div style="height:33px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:separator -->
<hr class="wp-block-separator" id="footnote"/>
<!-- /wp:separator -->

<!-- wp:paragraph -->
<p><span style="color:#9a9a9a" class="has-inline-color">¹ 린 사고방식(Lean Thinking)의 핵심은 낭비를 줄이는 것. 린 스타트업 프로세스는&nbsp;고객 개발(Customer Development)을 사용하여, 실제 고객과 접촉하는 빈도를 높여서 낭비를 줄입니다. 이를 통해 시장에 대한 잘못된 가정을 최대한 빨리 검증하고 회피하고자 하는 방법론입니다.</span></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><span style="color:#9a9a9a" class="has-inline-color">² 개밥먹기는 원래 개발자가 자신이 개발한 프로그램을 테스트로 직접 사용해보는 것을 가리키는 단어로, 제품을 만든 메이커가 스스로 만든 서비스를 사용해보는 것을 뜻합니다.</span></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><span style="color:#9a9a9a" class="has-inline-color">³ **아이스 프레임워크는 I,C,E 를 기준으로 일의 가중치를 합산하여 실행 우선순위를 정하는 방법론이다. I(Impact): 이 실험이 얼마나 영향력 있을까?, C(confidence): 이 실험이 성공할 확신을 가지고 있는가?, E(ease): 이 실험을 완성하는데 시간이 얼마나 걸리는가?</span></p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":200} -->
<div style="height:200px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->]]></content:encoded>
		<excerpt:encoded><![CDATA[지난 몇 분기 간 드라마는 OKR 방법론을 바탕으로 제품 팀을 이끌었습니다. 목표는 3개월 주기로 세팅되었고, 그에 맞는 KR과 initiative를 설정하여 목표 달성을 위해 빠르게 움직였습니다. 도전적인 목표를 세우고 KR을 달성해가는 과정은 서비스가 빠르게 성장하고 있다고 느끼게 해주었고, OKR은 아주 효율적으로 동작하는 듯 보였습니다. 그런데 몇 분기가 지나자 팀에서의 여러 이상 신호들이 생겨나기 시작했습니다.]]></excerpt:encoded>
		<wp:post_id>2424</wp:post_id>
		<wp:post_date><![CDATA[2021-12-02 14:36:36]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-12-02 05:36:36]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-12-14 10:54:16]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-12-14 01:54:16]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[__trashed-3]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="design"><![CDATA[Design]]></category>
		<category domain="post_tag" nicename="okr"><![CDATA[okr]]></category>
		<category domain="post_tag" nicename="%ea%b0%9c%eb%b0%a5%eb%a8%b9%ea%b8%b0"><![CDATA[개밥먹기]]></category>
		<category domain="post_tag" nicename="%ec%82%ac%ec%9d%bc%eb%a1%9c"><![CDATA[사일로]]></category>
		<category domain="post_tag" nicename="%ec%8a%a4%ed%83%80%ed%8a%b8%ec%97%85"><![CDATA[스타트업]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729529826;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:2330;}i:1;a:1:{s:2:"id";i:2770;}i:2;a:1:{s:2:"id";i:1783;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[50]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_single_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:22:{s:8:"subtitle";s:48:"우리는 정말 린(Lean)¹하게 일했을까?";s:6:"format";s:8:"standard";s:5:"video";s:0:"";s:7:"gallery";s:0:"";s:11:"source_name";s:0:"";s:10:"source_url";s:0:"";s:8:"via_name";s:0:"";s:7:"via_url";s:0:"";s:17:"override_template";s:1:"0";s:8:"override";a:1:{i:0;a:32:{s:8:"template";s:1:"1";s:18:"single_blog_custom";s:0:"";s:8:"parallax";s:1:"1";s:10:"fullscreen";s:1:"1";s:6:"layout";s:13:"right-sidebar";s:7:"sidebar";s:15:"default-sidebar";s:14:"second_sidebar";s:15:"default-sidebar";s:14:"sticky_sidebar";s:1:"1";s:14:"share_position";s:3:"top";s:17:"share_float_style";s:16:"share-monocrhome";s:18:"show_share_counter";s:1:"1";s:17:"show_view_counter";s:1:"1";s:13:"show_featured";s:1:"1";s:14:"show_post_meta";s:1:"1";s:16:"show_post_author";s:1:"1";s:22:"show_post_author_image";s:1:"1";s:14:"show_post_date";s:1:"1";s:16:"post_date_format";s:7:"default";s:23:"post_date_format_custom";s:5:"Y/m/d";s:18:"show_post_category";s:1:"1";s:22:"show_post_reading_time";s:1:"0";s:21:"post_reading_time_wpm";s:3:"300";s:16:"show_zoom_button";s:1:"0";s:20:"zoom_button_out_step";s:1:"2";s:19:"zoom_button_in_step";s:1:"3";s:13:"show_post_tag";s:1:"1";s:19:"show_prev_next_post";s:1:"1";s:15:"show_popup_post";s:1:"1";s:17:"number_popup_post";s:1:"1";s:15:"show_author_box";s:1:"0";s:17:"show_post_related";s:1:"0";s:24:"show_inline_post_related";s:1:"0";}}s:19:"override_image_size";s:1:"0";s:14:"image_override";a:1:{i:0;a:2:{s:26:"single_post_thumbnail_size";s:8:"crop-500";s:24:"single_post_gallery_size";s:8:"crop-500";}}s:13:"trending_post";s:1:"0";s:22:"trending_post_position";s:4:"meta";s:19:"trending_post_label";s:8:"Trending";s:14:"sponsored_post";s:1:"0";s:20:"sponsored_post_label";s:12:"Sponsored by";s:19:"sponsored_post_name";s:0:"";s:18:"sponsored_post_url";s:0:"";s:26:"sponsored_post_logo_enable";s:1:"0";s:19:"sponsored_post_logo";s:0:"";s:19:"sponsored_post_desc";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:2:"id";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[30]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_estimated-reading-time-minutes]]></wp:meta_key>
		<wp:meta_value><![CDATA[6]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle_flag]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle]]></wp:meta_key>
		<wp:meta_value><![CDATA[우리는 정말 린(Lean)¹하게 일했을까?]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[스타트업에서 OKR 방법론을 통한 제품 개선 방식에 대한 회고]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
		<wp:meta_value><![CDATA[지난 몇 분기 간 드라마는 OKR 방법론을 바탕으로 제품 팀을 이끌었습니다. 목표는 3개월 주기로 세팅되었고, 그에 맞는 KR과 initiative를 설정하여 목표 달성을 위해 빠르게 움직였습니다. 도전적인 목표를 세우고 KR을 달성해가는 과정은 서비스가 빠르게 성장하고 있다고 느끼게 해주었고, OKR은 아주 효율적으로 동작하는 듯 보였습니다. 그런데 몇 분기가 지나자 팀에서의 여러 이상 신호들이 생겨나기 시작했습니다.]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[61]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_desired_post_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[93]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[2464]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Pretendard 커스텀 폰트 도입기]]></title>
		<link>https://blog.dramancompany.com/2022/01/pretendard-%ec%bb%a4%ec%8a%a4%ed%85%80-%ed%8f%b0%ed%8a%b8-%eb%8f%84%ec%9e%85%ea%b8%b0/</link>
		<pubDate>Mon, 10 Jan 2022 00:49:30 +0000</pubDate>
		<dc:creator><![CDATA[ms.kang]]></dc:creator>
		<guid isPermaLink="false">https://blog.dramancompany.com/?p=2479</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:spacer {"height":50} -->
<div style="height:50px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:paragraph -->
<p>안녕하세요, 드라마앤컴퍼니에서 플랫폼 디자인을 담당하고 있는 프로덕트 디자이너 강민석입니다. 새해를 맞아 현재 리멤버 앱에 적용 중인 커스텀 폰트인 Pretendard에 대해 이야기해 보려고 합니다. 폰트는 디지털 프로덕트 디자인의 전부라고 해도 과언이 아닌데요, 리멤버는 왜 기본 폰트 대신 커스텀 폰트를 적용하기로 했는지 이번 글을 통해 공유해보려고 합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":50} -->
<div style="height:50px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading -->
<h2><strong>고민의 시작</strong></h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>리멤버는 iOS와 안드로이드 양 플랫폼에서 모바일 앱을 운영하고 있으며, 각 플랫폼에서 제공하는 시스템 폰트(한글 기준으로 iOS는 Apple SD Neo gothic, 안드로이드는 Noto sans kr)로 작업을 해왔습니다. 그러다 보니 디자이너들은 디자인된 화면을 개발자에게 전달하기 위해 폰트만 다른 2벌의 같은 화면을 만들어야만 했습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":25} -->
<div style="height:25px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:image {"id":2485,"sizeSlug":"large","linkDestination":"media"} -->
<figure class="wp-block-image size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2022/01/1.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2022/01/1-1024x382.png" alt="" class="wp-image-2485"/></a><figcaption>개발자들은 주로 피그마의 화면을 보고 작업을 하기 때문에 화면 상의 플로우나 설명 역시 플랫폼 별로 2벌로 만들어서 전달</figcaption></figure>
<!-- /wp:image -->

<!-- wp:spacer {"height":25} -->
<div style="height:25px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:paragraph -->
<p>한쪽 플랫폼의 화면만 만들고 다른 플랫폼의 개발자에게 폰트만 교체해서 '알아서' 작업해달라고 할 수도 있지만, 디자이너가 실제로 출력되는 화면을 제대로 확인하지 않고 배포할 수 없었기 때문에 어쩔 수 없이 플랫폼별로 동일한 화면을 매번 만들 수밖에 없었습니다. 비단 화면뿐만 아니라 디자인의 베이스가 되는 디자인 시스템(RDS)의 컴포넌트 역시 폰트만 다르게 플랫폼마다 별도로 만들어야 했습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":25} -->
<div style="height:25px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:gallery {"ids":[2490],"linkTo":"file"} -->
<figure class="wp-block-gallery columns-0 is-cropped"><ul class="blocks-gallery-grid"></ul></figure>
<!-- /wp:gallery -->

<!-- wp:spacer {"height":25} -->
<div style="height:25px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:paragraph -->
<p>이런 이유로 각 제품 크루의 프로덕트 디자이너들이 불필요한 리소스 낭비가 크다는 판단이 들어 플랫폼에 상관없이 통합해서 사용할 수 있는 커스텀 폰트 적용을 검토하게 되었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":50} -->
<div style="height:50px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading -->
<h2><strong>고려사항</strong></h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>커스텀 폰트를 찾기에 앞서 우리가 원하는 고려사항을 먼저 정리해봤습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":25} -->
<div style="height:25px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading {"level":3} -->
<h3>1. 상업용 무료 폰트일 것</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>브랜딩을 목적으로 한 폰트 교체가 아니라서 유료 폰트를 라이센스 비용 지불해가며 사용하기는 아직 부담스러웠습니다. 따라서 상업용 무료 폰트를 후보로 먼저 고려했습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":25} -->
<div style="height:25px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading {"level":3} -->
<h3>2. 다양한 굵기(Weight)를 지원할 것</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>기존의 타이포그래피 스타일에서 폰트만 교체하는 것이라, 최소한 기존 양 플랫폼에서 제공하는 시스템 폰트들의 굵기는 다 커버할 수 있어야 했습니다.&nbsp;</p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":25} -->
<div style="height:25px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:image {"id":2519,"sizeSlug":"large","linkDestination":"media"} -->
<figure class="wp-block-image size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2022/01/Weight.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2022/01/Weight-1024x490.png" alt="" class="wp-image-2519"/></a><figcaption>iOS의 시스템폰트가 안드로이드 대비 더 많은 굵기를 제공하므로, 커스텀 폰트는 iOS의 폰트 굵기를 모두 지원가능해야 함</figcaption></figure>
<!-- /wp:image -->

<!-- wp:spacer {"height":25} -->
<div style="height:25px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading {"level":3} -->
<h3>3. UI 상에 한글이 잘 표현될 것</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>리멤버는 한글을 기반으로 서비스를 하고 있기 때문에 한글을 가장 잘 표현해줄 수 있는 서체가 필요합니다. 플랫폼에서 제공하는 시스템 폰트들의 경우 한글을 지원하고 있지만, 범용성을 위해 가장 많이 쓰이는 알파벳을 중심으로 폰트가 제작된 뒤 한글을 적당히 얹힌 느낌이라 한글로 된 텍스트를 UI에 배치할 때 아래 이미지처럼 원하는 정렬을 맞추기가 무척 어렵습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":25} -->
<div style="height:25px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:image {"id":2500,"sizeSlug":"full","linkDestination":"media"} -->
<figure class="wp-block-image size-full"><a href="https://blog.dramancompany.com/wp-content/uploads/2022/01/3.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2022/01/3.png" alt="" class="wp-image-2500"/></a><figcaption>UI 상에서 1행의 한글 텍스트를 배치했을 때 기존 시스템 서체의 쏠림 문제 발생</figcaption></figure>
<!-- /wp:image -->

<!-- wp:spacer {"height":25} -->
<div style="height:25px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:paragraph -->
<p>이런 문제를 해결하기 위해 디자이너들은 '시각 보정'이라는 이름으로 UI 요소로 쓰인 한글 텍스트의 기본 행간을 초기화(폰트 크기와 둥기화)한 뒤 정렬을 맞춰야 했습니다. 행간을 초기화하더라도 폰트 디자이너가 서체 제작 시에 임의로 넣은, 제어할 수 없는 여백이 위아래에 포함되어 있어 원하는 간격으로 정확하게 디자인할 수 없습니다. 새롭게 적용할 커스텀 폰트에서는 한글이 UI 요소로써 사용했을 때 이런 문제가 최대한 해결될 수 있어야 했습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":50} -->
<div style="height:50px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading -->
<h2><strong><strong>리멤버에 적합한 폰트 찾기</strong></strong></h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>위의 고려사항들을 바탕으로 최종적으로 "Spoqa han sans Neo" 와 "Pretendard" 2개의 서체가 후보에 올랐습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":25} -->
<div style="height:25px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading {"level":3} -->
<h3><strong>1.Spoqa Han Sans Neo</strong></h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>스포카 폰트는 이미 디자이너들 사이에서 대체 시스템 폰트로 널리 사용되고 있으며, 리멤버 역시 웹사이트에서 사용하고 있었기 때문에 가장 유력한 후보였습니다. 아무래도 폰트를 만들어서 배포하고 있는 스포카가 직접 실무에서 활용하기 위해 만들었기 때문에 지속적으로 유지보수가 된다는 점과 한글에 최적화되어 있다는 점이 장점입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>스포카 폰트 다운로드 :&nbsp;<a target="_blank" href="https://spoqa.github.io/spoqa-han-sans/" rel="noreferrer noopener">https://spoqa.github.io/spoqa-han-sans/</a></p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":25} -->
<div style="height:25px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading {"level":3} -->
<h3><strong>2. Pretendard</strong></h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>프리텐다드는 요즘 디자인 업계에서 가장 핫한 시스템 폰트로, 디자이너 길형진 님이 inter와 noto를 결합해 서로의 단점을 보완해서 만든 폰트입니다. 여러 플랫폼에서 애플의 san francisco나 apple sd gothic처럼 사용할 수 있는 시스템 폰트를 만들기 위한 목적이라고 합니다. Noto Sans KR(본고딕)을 베이스로 가장 두꺼운 Black 마스터를 만든 후, 9개의 레벨 굵기로 만들어졌으며, Window, iOS 둘 다 지원하고 조형적인 아름다움, 다국어 환경 조화, 한국어에 최적화된 기호까지 지원됩니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>길형진 디자이너 티스토리: &nbsp;<a target="_blank" href="https://cactus.tistory.com/306" rel="noreferrer noopener">https://cactus.tistory.com/306</a></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>프리텐다드 폰트 다운로드:&nbsp;<a target="_blank" href="https://github.com/orioncactus/pretendard" rel="noreferrer noopener">https://github.com/orioncactus/pretendard</a></p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":50} -->
<div style="height:50px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading -->
<h2><strong>최종 검토</strong></h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>고려 사항을 기반으로 두 폰트를 비교해봤습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":25} -->
<div style="height:25px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading {"level":3} -->
<h3>1. 상업적 무료 폰트</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>둘 다&nbsp;<a target="_blank" href="https://scripts.sil.org/OFL" rel="noreferrer noopener">SIL 오픈 폰트 라이선스</a>로 글꼴 단독 판매를 제외한 모든 상업적 행위 및 수정, 재배포가 가능합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":25} -->
<div style="height:25px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading {"level":3} -->
<h3>2. 다양한 굵기(weight) 제공</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>스포카 폰트도 점점 업데이트되면서 기존에 없던 굵기가 추가되고 있지만, 이 부분에 있어서는 프리텐다드가 훨씬 더 다양한 굵기를 제공하고 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":25} -->
<div style="height:25px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:image {"id":2502,"sizeSlug":"large","linkDestination":"media"} -->
<figure class="wp-block-image size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2022/01/6-1.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2022/01/6-1-1024x707.png" alt="" class="wp-image-2502"/></a><figcaption>프리텐다드는 iOS에 1대1 대응할 수 있는 모든 굵기를 갖추었음</figcaption></figure>
<!-- /wp:image -->

<!-- wp:spacer {"height":25} -->
<div style="height:25px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading {"level":3} -->
<h3>3. UI 상의 한글 표현</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>기본적으로 양 폰트 모두 한글을 고려해서 제작되었기 때문에 한글 표현에 강점이 있지만, 한글 폰트의 쏠림 현상은 스포카에서도 여전히 발생하고 있었습니다. 그에 반해 프리텐다드는 폰트에 별 다른 조치를 취하지 않아도 텍스트 박스의 가운데 잘 배치되어 보입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":25} -->
<div style="height:25px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:image {"id":2503,"sizeSlug":"large","linkDestination":"media"} -->
<figure class="wp-block-image size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2022/01/5.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2022/01/5-1024x277.png" alt="" class="wp-image-2503"/></a></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>고려 사항을 바탕으로 최종 검토 결과 Pretendard가 더 적합하다고 판단되어 리멤버의 시스템 폰트로 적용하기로 결정하게 되었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":50} -->
<div style="height:50px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading -->
<h2><strong>적용 후기</strong></h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>시스템 서체가 플랫폼에 상관없이 통합됨에 따라서 더 이상 디자이너들이 플랫폼 별로 디자인을 만들 필요가 없어졌고, 디자인 시스템 상의 컴포넌트도 단일화되어 유지 보수가 더 간편해졌습니다. 아직 적용한 지 얼마 되지 않았지만 실 사용자인 동료 디자이너들의&nbsp;피드백을 통해 커스터 폰트 도입의 효과를 체감할 수 있었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":25} -->
<div style="height:25px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:quote -->
<blockquote class="wp-block-quote"><p>이전에는 안드로이드와 iOS 각각 다른 폰트를 쓰니 같은 디자인을 적용해도 OS별로 다르게 시각 보정을 해야 했습니다. 각각 다른 폰트의 고유 높이와 내부 정렬 때문에 디자인이 같아도 쏠림 현상이 있어서 미세한 디자인 조정을 해야 했었지요. 그런데 프리텐다드를 적용하니 그럴 필요가 없어져서 작업 시간이 엄청 줄었습니다!!!!!</p><cite>권우리 디자이너</cite></blockquote>
<!-- /wp:quote -->

<!-- wp:spacer {"height":25} -->
<div style="height:25px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:quote -->
<blockquote class="wp-block-quote"><p>컴포넌트 내부의 텍스트 정렬 같은 부분에서 개발된 화면과 디자인 화면간의 오차가 사라졌다는게 가장 큰 장점으로 느껴집니다!</p><cite>송우석 디자이너</cite></blockquote>
<!-- /wp:quote -->

<!-- wp:spacer {"height":50} -->
<div style="height:50px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading -->
<h2><strong>마치며</strong></h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>아직 모든 화면에서 100% 완벽하게 대응하지는 못했고, 기존의 플랫폼 시스템 폰트의 이점에 대한 우려들도 있기 때문에 지속적으로 업데이트 해 갈 예정입니다. 저희처럼 커스텀 폰트 도입에 고민이 있으신 분들에게 도움이 되었으면 좋겠습니다. 긴 글 읽어주셔서 감사합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":50} /-->]]></content:encoded>
		<excerpt:encoded><![CDATA[리멤버가 기본 시스템 폰트 대신 커스텀 폰트(프리텐다드)를 쓰게 된 이유]]></excerpt:encoded>
		<wp:post_id>2479</wp:post_id>
		<wp:post_date><![CDATA[2022-01-10 09:49:30]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-01-10 00:49:30]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-01-10 12:38:45]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-01-10 03:38:45]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[pretendard-%ec%bb%a4%ec%8a%a4%ed%85%80-%ed%8f%b0%ed%8a%b8-%eb%8f%84%ec%9e%85%ea%b8%b0]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="customfont"><![CDATA[customfont]]></category>
		<category domain="category" nicename="design"><![CDATA[Design]]></category>
		<category domain="post_tag" nicename="designsystem"><![CDATA[designsystem]]></category>
		<category domain="post_tag" nicename="pretendard"><![CDATA[pretendard]]></category>
		<category domain="post_tag" nicename="systemui"><![CDATA[systemui]]></category>
		<category domain="post_tag" nicename="typography"><![CDATA[typography]]></category>
		<category domain="post_tag" nicename="%eb%94%94%ec%9e%90%ec%9d%b8%ec%8b%9c%ec%8a%a4%ed%85%9c"><![CDATA[디자인시스템]]></category>
		<category domain="post_tag" nicename="%ec%8b%9c%ec%8a%a4%ed%85%9c%ed%8f%b0%ed%8a%b8"><![CDATA[시스템폰트]]></category>
		<category domain="post_tag" nicename="%ec%bb%a4%ec%8a%a4%ed%85%80%ed%8f%b0%ed%8a%b8"><![CDATA[커스텀폰트]]></category>
		<category domain="post_tag" nicename="%ed%83%80%ec%9d%b4%ed%8f%ac%ea%b7%b8%eb%9e%98%ed%94%bc"><![CDATA[타이포그래피]]></category>
		<category domain="post_tag" nicename="%ed%94%84%eb%a6%ac%ed%85%90%eb%8b%a4%eb%93%9c"><![CDATA[프리텐다드]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729518172;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:2124;}i:1;a:1:{s:2:"id";i:2330;}i:2;a:1:{s:2:"id";i:1850;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[46]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_single_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:22:{s:8:"subtitle";s:81:"리멤버가 기본 시스템 폰트 대신 커스텀 폰트를 쓰게 된 이유";s:6:"format";s:8:"standard";s:5:"video";s:0:"";s:7:"gallery";s:0:"";s:11:"source_name";s:0:"";s:10:"source_url";s:0:"";s:8:"via_name";s:0:"";s:7:"via_url";s:0:"";s:17:"override_template";s:1:"0";s:8:"override";a:1:{i:0;a:32:{s:8:"template";s:1:"1";s:18:"single_blog_custom";s:0:"";s:8:"parallax";s:1:"1";s:10:"fullscreen";s:1:"1";s:6:"layout";s:13:"right-sidebar";s:7:"sidebar";s:15:"default-sidebar";s:14:"second_sidebar";s:15:"default-sidebar";s:14:"sticky_sidebar";s:1:"1";s:14:"share_position";s:3:"top";s:17:"share_float_style";s:16:"share-monocrhome";s:18:"show_share_counter";s:1:"1";s:17:"show_view_counter";s:1:"1";s:13:"show_featured";s:1:"1";s:14:"show_post_meta";s:1:"1";s:16:"show_post_author";s:1:"1";s:22:"show_post_author_image";s:1:"1";s:14:"show_post_date";s:1:"1";s:16:"post_date_format";s:7:"default";s:23:"post_date_format_custom";s:5:"Y/m/d";s:18:"show_post_category";s:1:"1";s:22:"show_post_reading_time";s:1:"0";s:21:"post_reading_time_wpm";s:3:"300";s:16:"show_zoom_button";s:1:"0";s:20:"zoom_button_out_step";s:1:"2";s:19:"zoom_button_in_step";s:1:"3";s:13:"show_post_tag";s:1:"1";s:19:"show_prev_next_post";s:1:"1";s:15:"show_popup_post";s:1:"1";s:17:"number_popup_post";s:1:"1";s:15:"show_author_box";s:1:"0";s:17:"show_post_related";s:1:"0";s:24:"show_inline_post_related";s:1:"0";}}s:19:"override_image_size";s:1:"0";s:14:"image_override";a:1:{i:0;a:2:{s:26:"single_post_thumbnail_size";s:8:"crop-500";s:24:"single_post_gallery_size";s:8:"crop-500";}}s:13:"trending_post";s:1:"0";s:22:"trending_post_position";s:4:"meta";s:19:"trending_post_label";s:8:"Trending";s:14:"sponsored_post";s:1:"0";s:20:"sponsored_post_label";s:12:"Sponsored by";s:19:"sponsored_post_name";s:0:"";s:18:"sponsored_post_url";s:0:"";s:26:"sponsored_post_logo_enable";s:1:"0";s:19:"sponsored_post_logo";s:0:"";s:19:"sponsored_post_desc";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:2:"id";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_estimated-reading-time-minutes]]></wp:meta_key>
		<wp:meta_value><![CDATA[5]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle_flag]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle]]></wp:meta_key>
		<wp:meta_value><![CDATA[리멤버가 기본 시스템 폰트 대신 커스텀 폰트를 쓰게 된 이유]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_template_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[wp-post]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_version]]></wp:meta_key>
		<wp:meta_value><![CDATA[3.6.0-dev14]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[2508]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[pretendard 프리텐다드]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
		<wp:meta_value><![CDATA[리멤버가 기본 시스템 폰트 대신 커스텀 폰트인 프리텐다드(Pretendard)를 쓰게 된 이유]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[67]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_opengraph-title]]></wp:meta_key>
		<wp:meta_value><![CDATA[Pretendard 커스텀 폰트 도입기]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_opengraph-description]]></wp:meta_key>
		<wp:meta_value><![CDATA[리멤버가 기본 시스템 폰트 대신 커스텀 폰트를 쓰게 된 이유]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_opengraph-image]]></wp:meta_key>
		<wp:meta_value><![CDATA[https://blog.dramancompany.com/wp-content/uploads/2022/01/Cover-1.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_opengraph-image-id]]></wp:meta_key>
		<wp:meta_value><![CDATA[2508]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_data]]></wp:meta_key>
		<wp:meta_value><![CDATA[[{"id":"55b282a7","elType":"section","settings":[],"elements":[{"id":"4ddb5ef3","elType":"column","settings":{"_column_size":100},"elements":[{"id":"49baea45","elType":"widget","settings":{"editor":"<!-- wp:spacer {\"height\":50} -->\n<div style=\"height:50px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n<!-- \/wp:spacer -->\n\n<!-- wp:paragraph -->\n<p>\uc548\ub155\ud558\uc138\uc694, \ub4dc\ub77c\ub9c8\uc564\ucef4\ud37c\ub2c8\uc5d0\uc11c \ud50c\ub7ab\ud3fc \ub514\uc790\uc778\uc744 \ub2f4\ub2f9\ud558\uace0 \uc788\ub294 \ud504\ub85c\ub355\ud2b8 \ub514\uc790\uc774\ub108 \uac15\ubbfc\uc11d\uc785\ub2c8\ub2e4. \uc0c8\ud574\ub97c \ub9de\uc544 \ud604\uc7ac \ub9ac\uba64\ubc84 \uc571\uc5d0 \uc801\uc6a9 \uc911\uc778 \ucee4\uc2a4\ud140 \ud3f0\ud2b8\uc778 Pretendard\uc5d0 \ub300\ud574 \uc774\uc57c\uae30\ud574 \ubcf4\ub824\uace0 \ud569\ub2c8\ub2e4. \ud3f0\ud2b8\ub294 \ub514\uc9c0\ud138 \ud504\ub85c\ub355\ud2b8 \ub514\uc790\uc778\uc758 \uc804\ubd80\ub77c\uace0 \ud574\ub3c4 \uacfc\uc5b8\uc774 \uc544\ub2cc\ub370\uc694, \ub9ac\uba64\ubc84\ub294 \uc65c \uae30\ubcf8 \ud3f0\ud2b8 \ub300\uc2e0 \ucee4\uc2a4\ud140 \ud3f0\ud2b8\ub97c \uc801\uc6a9\ud558\uae30\ub85c \ud588\ub294\uc9c0 \uc774\ubc88 \uae00\uc744 \ud1b5\ud574 \uacf5\uc720\ud574\ubcf4\ub824\uace0 \ud569\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:spacer {\"height\":50} -->\n<div style=\"height:50px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n<!-- \/wp:spacer -->\n\n<!-- wp:heading -->\n<h2><strong>\uace0\ubbfc\uc758 \uc2dc\uc791<\/strong><\/h2>\n<!-- \/wp:heading -->\n\n<!-- wp:paragraph -->\n<p>\ub9ac\uba64\ubc84\ub294 iOS\uc640 \uc548\ub4dc\ub85c\uc774\ub4dc \uc591 \ud50c\ub7ab\ud3fc\uc5d0\uc11c \ubaa8\ubc14\uc77c \uc571\uc744 \uc6b4\uc601\ud558\uace0 \uc788\uc73c\uba70, \uac01 \ud50c\ub7ab\ud3fc\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 \uc2dc\uc2a4\ud15c \ud3f0\ud2b8(\ud55c\uae00 \uae30\uc900\uc73c\ub85c iOS\ub294 Apple SD Neo gothic, \uc548\ub4dc\ub85c\uc774\ub4dc\ub294 Noto sans kr)\ub85c \uc791\uc5c5\uc744 \ud574\uc654\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\ub2e4 \ubcf4\ub2c8 \ub514\uc790\uc774\ub108\ub4e4\uc740 \ub514\uc790\uc778\ub41c \ud654\uba74\uc744 \uac1c\ubc1c\uc790\uc5d0\uac8c \uc804\ub2ec\ud558\uae30 \uc704\ud574 \ud3f0\ud2b8\ub9cc \ub2e4\ub978 2\ubc8c\uc758 \uac19\uc740 \ud654\uba74\uc744 \ub9cc\ub4e4\uc5b4\uc57c\ub9cc \ud588\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:spacer {\"height\":25} -->\n<div style=\"height:25px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n<!-- \/wp:spacer -->\n\n<!-- wp:image {\"id\":2485,\"sizeSlug\":\"large\",\"linkDestination\":\"media\"} -->\n<figure class=\"wp-block-image size-large\"><a href=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2022\/01\/1.png\"><img src=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2022\/01\/1-1024x382.png\" alt=\"\" class=\"wp-image-2485\"\/><\/a><figcaption>\uac1c\ubc1c\uc790\ub4e4\uc740 \uc8fc\ub85c \ud53c\uadf8\ub9c8\uc758 \ud654\uba74\uc744 \ubcf4\uace0 \uc791\uc5c5\uc744 \ud558\uae30 \ub54c\ubb38\uc5d0 \ud654\uba74 \uc0c1\uc758 \ud50c\ub85c\uc6b0\ub098 \uc124\uba85 \uc5ed\uc2dc \ud50c\ub7ab\ud3fc \ubcc4\ub85c 2\ubc8c\ub85c \ub9cc\ub4e4\uc5b4\uc11c \uc804\ub2ec<\/figcaption><\/figure>\n<!-- \/wp:image -->\n\n<!-- wp:spacer {\"height\":25} -->\n<div style=\"height:25px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n<!-- \/wp:spacer -->\n\n<!-- wp:paragraph -->\n<p>\ud55c\ucabd \ud50c\ub7ab\ud3fc\uc758 \ud654\uba74\ub9cc \ub9cc\ub4e4\uace0 \ub2e4\ub978 \ud50c\ub7ab\ud3fc\uc758 \uac1c\ubc1c\uc790\uc5d0\uac8c \ud3f0\ud2b8\ub9cc \uad50\uccb4\ud574\uc11c '\uc54c\uc544\uc11c' \uc791\uc5c5\ud574\ub2ec\ub77c\uace0 \ud560 \uc218\ub3c4 \uc788\uc9c0\ub9cc, \ub514\uc790\uc774\ub108\uac00 \uc2e4\uc81c\ub85c \ucd9c\ub825\ub418\ub294 \ud654\uba74\uc744 \uc81c\ub300\ub85c \ud655\uc778\ud558\uc9c0 \uc54a\uace0 \ubc30\ud3ec\ud560 \uc218 \uc5c6\uc5c8\uae30 \ub54c\ubb38\uc5d0 \uc5b4\uca54 \uc218 \uc5c6\uc774 \ud50c\ub7ab\ud3fc\ubcc4\ub85c \ub3d9\uc77c\ud55c \ud654\uba74\uc744 \ub9e4\ubc88 \ub9cc\ub4e4 \uc218\ubc16\uc5d0 \uc5c6\uc5c8\uc2b5\ub2c8\ub2e4. \ube44\ub2e8 \ud654\uba74\ubfd0\ub9cc \uc544\ub2c8\ub77c \ub514\uc790\uc778\uc758 \ubca0\uc774\uc2a4\uac00 \ub418\ub294 \ub514\uc790\uc778 \uc2dc\uc2a4\ud15c(RDS)\uc758 \ucef4\ud3ec\ub10c\ud2b8 \uc5ed\uc2dc \ud3f0\ud2b8\ub9cc \ub2e4\ub974\uac8c \ud50c\ub7ab\ud3fc\ub9c8\ub2e4 \ubcc4\ub3c4\ub85c \ub9cc\ub4e4\uc5b4\uc57c \ud588\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:spacer {\"height\":25} -->\n<div style=\"height:25px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n<!-- \/wp:spacer -->\n\n<!-- wp:gallery {\"ids\":[2490],\"linkTo\":\"file\"} -->\n<figure class=\"wp-block-gallery columns-1 is-cropped\"><ul class=\"blocks-gallery-grid\"><li class=\"blocks-gallery-item\"><figure><a href=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2022\/01\/2-1.png\"><img src=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2022\/01\/2-1-1024x417.png\" alt=\"\" data-id=\"2490\" data-full-url=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2022\/01\/2-1.png\" data-link=\"https:\/\/blog.dramancompany.com\/?attachment_id=2490\" class=\"wp-image-2490\"\/><\/a><\/figure><\/li><\/ul><figcaption class=\"blocks-gallery-caption\">\uac19\uc740 \uc885\ub958\uc758 \ucef4\ud3ec\ub10c\ud2b8\uac00 \uc11c\uccb4\uac00 \ub2e4\ub974\ub2e4\ub294 \uc774\uc720\ub85c \ud50c\ub7ab\ud3fc \ubcc4\ub85c \ub530\ub85c \uc81c\uc791<\/figcaption><\/figure>\n<!-- \/wp:gallery -->\n\n<!-- wp:spacer {\"height\":25} -->\n<div style=\"height:25px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n<!-- \/wp:spacer -->\n\n<!-- wp:paragraph -->\n<p>\uc774\ub7f0 \uc774\uc720\ub85c \uac01 \uc81c\ud488 \ud06c\ub8e8\uc758 \ud504\ub85c\ub355\ud2b8 \ub514\uc790\uc774\ub108\ub4e4\uc774 \ubd88\ud544\uc694\ud55c \ub9ac\uc18c\uc2a4 \ub0ad\ube44\uac00 \ud06c\ub2e4\ub294 \ud310\ub2e8\uc774 \ub4e4\uc5b4 \ud50c\ub7ab\ud3fc\uc5d0 \uc0c1\uad00\uc5c6\uc774 \ud1b5\ud569\ud574\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ucee4\uc2a4\ud140 \ud3f0\ud2b8 \uc801\uc6a9\uc744 \uac80\ud1a0\ud558\uac8c \ub418\uc5c8\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:spacer {\"height\":50} -->\n<div style=\"height:50px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n<!-- \/wp:spacer -->\n\n<!-- wp:heading -->\n<h2><strong>\uace0\ub824\uc0ac\ud56d<\/strong><\/h2>\n<!-- \/wp:heading -->\n\n<!-- wp:paragraph -->\n<p>\ucee4\uc2a4\ud140 \ud3f0\ud2b8\ub97c \ucc3e\uae30\uc5d0 \uc55e\uc11c \uc6b0\ub9ac\uac00 \uc6d0\ud558\ub294 \uace0\ub824\uc0ac\ud56d\uc744 \uba3c\uc800 \uc815\ub9ac\ud574\ubd24\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:spacer {\"height\":25} -->\n<div style=\"height:25px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n<!-- \/wp:spacer -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>1. \uc0c1\uc5c5\uc6a9 \ubb34\ub8cc \ud3f0\ud2b8\uc77c \uac83<\/h3>\n<!-- \/wp:heading -->\n\n<!-- wp:paragraph -->\n<p>\ube0c\ub79c\ub529\uc744 \ubaa9\uc801\uc73c\ub85c \ud55c \ud3f0\ud2b8 \uad50\uccb4\uac00 \uc544\ub2c8\ub77c\uc11c \uc720\ub8cc \ud3f0\ud2b8\ub97c \ub77c\uc774\uc13c\uc2a4 \ube44\uc6a9 \uc9c0\ubd88\ud574\uac00\uba70 \uc0ac\uc6a9\ud558\uae30\ub294 \uc544\uc9c1 \ubd80\ub2f4\uc2a4\ub7ec\uc6e0\uc2b5\ub2c8\ub2e4. \ub530\ub77c\uc11c \uc0c1\uc5c5\uc6a9 \ubb34\ub8cc \ud3f0\ud2b8\ub97c \ud6c4\ubcf4\ub85c \uba3c\uc800 \uace0\ub824\ud588\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:spacer {\"height\":25} -->\n<div style=\"height:25px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n<!-- \/wp:spacer -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>2. \ub2e4\uc591\ud55c \uad75\uae30(Weight)\ub97c \uc9c0\uc6d0\ud560 \uac83<\/h3>\n<!-- \/wp:heading -->\n\n<!-- wp:paragraph -->\n<p>\uae30\uc874\uc758 \ud0c0\uc774\ud3ec\uadf8\ub798\ud53c \uc2a4\ud0c0\uc77c\uc5d0\uc11c \ud3f0\ud2b8\ub9cc \uad50\uccb4\ud558\ub294 \uac83\uc774\ub77c, \ucd5c\uc18c\ud55c \uae30\uc874 \uc591 \ud50c\ub7ab\ud3fc\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 \uc2dc\uc2a4\ud15c \ud3f0\ud2b8\ub4e4\uc758 \uad75\uae30\ub294 \ub2e4 \ucee4\ubc84\ud560 \uc218 \uc788\uc5b4\uc57c \ud588\uc2b5\ub2c8\ub2e4.&nbsp;<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:spacer {\"height\":25} -->\n<div style=\"height:25px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n<!-- \/wp:spacer -->\n\n<!-- wp:image {\"id\":2499,\"sizeSlug\":\"large\",\"linkDestination\":\"media\"} -->\n<figure class=\"wp-block-image size-large\"><a href=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2022\/01\/6.png\"><img src=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2022\/01\/6-1024x707.png\" alt=\"\" class=\"wp-image-2499\"\/><\/a><figcaption>iOS\uc758 \uc2dc\uc2a4\ud15c\ud3f0\ud2b8\uac00 \uc548\ub4dc\ub85c\uc774\ub4dc \ub300\ube44 \ub354 \ub9ce\uc740 \uad75\uae30\ub97c \uc81c\uacf5\ud558\ubbc0\ub85c, \ucee4\uc2a4\ud140 \ud3f0\ud2b8\ub294 iOS\uc758 \ud3f0\ud2b8 \uad75\uae30\ub97c \ubaa8\ub450 \uc9c0\uc6d0\uac00\ub2a5\ud574\uc57c \ud568<\/figcaption><\/figure>\n<!-- \/wp:image -->\n\n<!-- wp:spacer {\"height\":25} -->\n<div style=\"height:25px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n<!-- \/wp:spacer -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>3. UI \uc0c1\uc5d0 \ud55c\uae00\uc774 \uc798 \ud45c\ud604\ub420 \uac83<\/h3>\n<!-- \/wp:heading -->\n\n<!-- wp:paragraph -->\n<p>\ub9ac\uba64\ubc84\ub294 \ud55c\uae00\uc744 \uae30\ubc18\uc73c\ub85c \uc11c\ube44\uc2a4\ub97c \ud558\uace0 \uc788\uae30 \ub54c\ubb38\uc5d0 \ud55c\uae00\uc744 \uac00\uc7a5 \uc798 \ud45c\ud604\ud574\uc904 \uc218 \uc788\ub294 \uc11c\uccb4\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. \ud50c\ub7ab\ud3fc\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 \uc2dc\uc2a4\ud15c \ud3f0\ud2b8\ub4e4\uc758 \uacbd\uc6b0 \ud55c\uae00\uc744 \uc9c0\uc6d0\ud558\uace0 \uc788\uc9c0\ub9cc, \ubc94\uc6a9\uc131\uc744 \uc704\ud574 \uac00\uc7a5 \ub9ce\uc774 \uc4f0\uc774\ub294 \uc54c\ud30c\ubcb3\uc744 \uc911\uc2ec\uc73c\ub85c \ud3f0\ud2b8\uac00 \uc81c\uc791\ub41c \ub4a4 \ud55c\uae00\uc744 \uc801\ub2f9\ud788 \uc5b9\ud78c \ub290\ub08c\uc774\ub77c \ud55c\uae00\ub85c \ub41c \ud14d\uc2a4\ud2b8\ub97c UI\uc5d0 \ubc30\uce58\ud560 \ub54c \uc544\ub798 \uc774\ubbf8\uc9c0\ucc98\ub7fc \uc6d0\ud558\ub294 \uc815\ub82c\uc744 \ub9de\ucd94\uae30\uac00 \ubb34\ucc99 \uc5b4\ub835\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:spacer {\"height\":25} -->\n<div style=\"height:25px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n<!-- \/wp:spacer -->\n\n<!-- wp:image {\"id\":2500,\"sizeSlug\":\"full\",\"linkDestination\":\"media\"} -->\n<figure class=\"wp-block-image size-full\"><a href=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2022\/01\/3.png\"><img src=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2022\/01\/3.png\" alt=\"\" class=\"wp-image-2500\"\/><\/a><figcaption>iOS\uc758 \uc2dc\uc2a4\ud15c\ud3f0\ud2b8\uac00 \uc548\ub4dc\ub85c\uc774\ub4dc \ub300\ube44 \ub354 \ub9ce\uc740 \uad75\uae30\ub97c \uc81c\uacf5\ud558\ubbc0\ub85c, \ucee4\uc2a4\ud140 \ud3f0\ud2b8\ub294 iOS\uc758 \ud3f0\ud2b8 \uad75\uae30\ub97c \ubaa8\ub450 \uc9c0\uc6d0\uac00\ub2a5\ud574\uc57c \ud568<\/figcaption><\/figure>\n<!-- \/wp:image -->\n\n<!-- wp:spacer {\"height\":25} -->\n<div style=\"height:25px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n<!-- \/wp:spacer -->\n\n<!-- wp:paragraph -->\n<p>\uc774\ub7f0 \ubb38\uc81c\ub97c \ud574\uacb0\ud558\uae30 \uc704\ud574 \ub514\uc790\uc774\ub108\ub4e4\uc740 '\uc2dc\uac01 \ubcf4\uc815'\uc774\ub77c\ub294 \uc774\ub984\uc73c\ub85c UI \uc694\uc18c\ub85c \uc4f0\uc778 \ud55c\uae00 \ud14d\uc2a4\ud2b8\uc758 \uae30\ubcf8 \ud589\uac04\uc744 \ucd08\uae30\ud654(\ud3f0\ud2b8 \ud06c\uae30\uc640 \ub465\uae30\ud654)\ud55c \ub4a4 \uc815\ub82c\uc744 \ub9de\ucdb0\uc57c \ud588\uc2b5\ub2c8\ub2e4. \ud589\uac04\uc744 \ucd08\uae30\ud654\ud558\ub354\ub77c\ub3c4 \ud3f0\ud2b8 \ub514\uc790\uc774\ub108\uac00 \uc11c\uccb4 \uc81c\uc791 \uc2dc\uc5d0 \uc784\uc758\ub85c \ub123\uc740, \uc81c\uc5b4\ud560 \uc218 \uc5c6\ub294 \uc5ec\ubc31\uc774 \uc704\uc544\ub798\uc5d0 \ud3ec\ud568\ub418\uc5b4 \uc788\uc5b4 \uc6d0\ud558\ub294 \uac04\uaca9\uc73c\ub85c \uc815\ud655\ud558\uac8c \ub514\uc790\uc778\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc0c8\ub86d\uac8c \uc801\uc6a9\ud560 \ucee4\uc2a4\ud140 \ud3f0\ud2b8\uc5d0\uc11c\ub294 \ud55c\uae00\uc774 UI \uc694\uc18c\ub85c\uc368 \uc0ac\uc6a9\ud588\uc744 \ub54c \uc774\ub7f0 \ubb38\uc81c\uac00 \ucd5c\ub300\ud55c \ud574\uacb0\ub420 \uc218 \uc788\uc5b4\uc57c \ud588\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:spacer {\"height\":50} -->\n<div style=\"height:50px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n<!-- \/wp:spacer -->\n\n<!-- wp:heading -->\n<h2><strong><strong>\ub9ac\uba64\ubc84\uc5d0 \uc801\ud569\ud55c \ud3f0\ud2b8 \ucc3e\uae30<\/strong><\/strong><\/h2>\n<!-- \/wp:heading -->\n\n<!-- wp:paragraph -->\n<p>\uc704\uc758 \uace0\ub824\uc0ac\ud56d\ub4e4\uc744 \ubc14\ud0d5\uc73c\ub85c \ucd5c\uc885\uc801\uc73c\ub85c \"Spoqa han sans Neo\" \uc640 \"Pretendard\" 2\uac1c\uc758 \uc11c\uccb4\uac00 \ud6c4\ubcf4\uc5d0 \uc62c\ub790\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:spacer {\"height\":25} -->\n<div style=\"height:25px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n<!-- \/wp:spacer -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3><strong>1.Spoqa Han Sans Neo<\/strong><\/h3>\n<!-- \/wp:heading -->\n\n<!-- wp:paragraph -->\n<p>\uc2a4\ud3ec\uce74 \ud3f0\ud2b8\ub294 \uc774\ubbf8 \ub514\uc790\uc774\ub108\ub4e4 \uc0ac\uc774\uc5d0\uc11c \ub300\uccb4 \uc2dc\uc2a4\ud15c \ud3f0\ud2b8\ub85c \ub110\ub9ac \uc0ac\uc6a9\ub418\uace0 \uc788\uc73c\uba70, \ub9ac\uba64\ubc84 \uc5ed\uc2dc \uc6f9\uc0ac\uc774\ud2b8\uc5d0\uc11c \uc0ac\uc6a9\ud558\uace0 \uc788\uc5c8\uae30 \ub54c\ubb38\uc5d0 \uac00\uc7a5 \uc720\ub825\ud55c \ud6c4\ubcf4\uc600\uc2b5\ub2c8\ub2e4. \uc544\ubb34\ub798\ub3c4 \ud3f0\ud2b8\ub97c \ub9cc\ub4e4\uc5b4\uc11c \ubc30\ud3ec\ud558\uace0 \uc788\ub294 \uc2a4\ud3ec\uce74\uac00 \uc9c1\uc811 \uc2e4\ubb34\uc5d0\uc11c \ud65c\uc6a9\ud558\uae30 \uc704\ud574 \ub9cc\ub4e4\uc5c8\uae30 \ub54c\ubb38\uc5d0 \uc9c0\uc18d\uc801\uc73c\ub85c \uc720\uc9c0\ubcf4\uc218\uac00 \ub41c\ub2e4\ub294 \uc810\uacfc \ud55c\uae00\uc5d0 \ucd5c\uc801\ud654\ub418\uc5b4 \uc788\ub2e4\ub294 \uc810\uc774 \uc7a5\uc810\uc785\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>\uc2a4\ud3ec\uce74 \ud3f0\ud2b8 \ub2e4\uc6b4\ub85c\ub4dc :&nbsp;<a target=\"_blank\" href=\"https:\/\/spoqa.github.io\/spoqa-han-sans\/\" rel=\"noreferrer noopener\">https:\/\/spoqa.github.io\/spoqa-han-sans\/<\/a><\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:spacer {\"height\":25} -->\n<div style=\"height:25px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n<!-- \/wp:spacer -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3><strong>2. Pretendard<\/strong><\/h3>\n<!-- \/wp:heading -->\n\n<!-- wp:paragraph -->\n<p>\ud504\ub9ac\ud150\ub2e4\ub4dc\ub294 \uc694\uc998 \ub514\uc790\uc778 \uc5c5\uacc4\uc5d0\uc11c \uac00\uc7a5 \ud56b\ud55c \uc2dc\uc2a4\ud15c \ud3f0\ud2b8\ub85c, \ub514\uc790\uc774\ub108 \uae38\ud615\uc9c4 \ub2d8\uc774 inter\uc640 noto\ub97c \uacb0\ud569\ud574 \uc11c\ub85c\uc758 \ub2e8\uc810\uc744 \ubcf4\uc644\ud574\uc11c \ub9cc\ub4e0 \ud3f0\ud2b8\uc785\ub2c8\ub2e4. \uc5ec\ub7ec \ud50c\ub7ab\ud3fc\uc5d0\uc11c \uc560\ud50c\uc758 san francisco\ub098 apple sd gothic\ucc98\ub7fc \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uc2dc\uc2a4\ud15c \ud3f0\ud2b8\ub97c \ub9cc\ub4e4\uae30 \uc704\ud55c \ubaa9\uc801\uc774\ub77c\uace0 \ud569\ub2c8\ub2e4. Noto Sans KR(\ubcf8\uace0\ub515)\uc744 \ubca0\uc774\uc2a4\ub85c \uac00\uc7a5 \ub450\uaebc\uc6b4 Black \ub9c8\uc2a4\ud130\ub97c \ub9cc\ub4e0 \ud6c4, 9\uac1c\uc758 \ub808\ubca8 \uad75\uae30\ub85c \ub9cc\ub4e4\uc5b4\uc84c\uc73c\uba70, Window, iOS \ub458 \ub2e4 \uc9c0\uc6d0\ud558\uace0 \uc870\ud615\uc801\uc778 \uc544\ub984\ub2e4\uc6c0, \ub2e4\uad6d\uc5b4 \ud658\uacbd \uc870\ud654, \ud55c\uad6d\uc5b4\uc5d0 \ucd5c\uc801\ud654\ub41c \uae30\ud638\uae4c\uc9c0 \uc9c0\uc6d0\ub429\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>\uae38\ud615\uc9c4 \ub514\uc790\uc774\ub108 \ud2f0\uc2a4\ud1a0\ub9ac: &nbsp;<a target=\"_blank\" href=\"https:\/\/cactus.tistory.com\/306\" rel=\"noreferrer noopener\">https:\/\/cactus.tistory.com\/306<\/a><\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>\ud504\ub9ac\ud150\ub2e4\ub4dc \ud3f0\ud2b8 \ub2e4\uc6b4\ub85c\ub4dc:&nbsp;<a target=\"_blank\" href=\"https:\/\/github.com\/orioncactus\/pretendard\" rel=\"noreferrer noopener\">https:\/\/github.com\/orioncactus\/pretendard<\/a><\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:spacer {\"height\":50} -->\n<div style=\"height:50px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n<!-- \/wp:spacer -->\n\n<!-- wp:heading -->\n<h2><strong>\ucd5c\uc885 \uac80\ud1a0<\/strong><\/h2>\n<!-- \/wp:heading -->\n\n<!-- wp:paragraph -->\n<p>\uace0\ub824 \uc0ac\ud56d\uc744 \uae30\ubc18\uc73c\ub85c \ub450 \ud3f0\ud2b8\ub97c \ube44\uad50\ud574\ubd24\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:spacer {\"height\":25} -->\n<div style=\"height:25px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n<!-- \/wp:spacer -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>1. \uc0c1\uc5c5\uc801 \ubb34\ub8cc \ud3f0\ud2b8<\/h3>\n<!-- \/wp:heading -->\n\n<!-- wp:paragraph -->\n<p>\ub458 \ub2e4&nbsp;<a target=\"_blank\" href=\"https:\/\/scripts.sil.org\/OFL\" rel=\"noreferrer noopener\">SIL \uc624\ud508 \ud3f0\ud2b8 \ub77c\uc774\uc120\uc2a4<\/a>\ub85c \uae00\uaf34 \ub2e8\ub3c5 \ud310\ub9e4\ub97c \uc81c\uc678\ud55c \ubaa8\ub4e0 \uc0c1\uc5c5\uc801 \ud589\uc704 \ubc0f \uc218\uc815, \uc7ac\ubc30\ud3ec\uac00 \uac00\ub2a5\ud569\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:spacer {\"height\":25} -->\n<div style=\"height:25px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n<!-- \/wp:spacer -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>2. \ub2e4\uc591\ud55c \uad75\uae30(weight) \uc81c\uacf5<\/h3>\n<!-- \/wp:heading -->\n\n<!-- wp:paragraph -->\n<p>\uc2a4\ud3ec\uce74 \ud3f0\ud2b8\ub3c4 \uc810\uc810 \uc5c5\ub370\uc774\ud2b8\ub418\uba74\uc11c \uae30\uc874\uc5d0 \uc5c6\ub358 \uad75\uae30\uac00 \ucd94\uac00\ub418\uace0 \uc788\uc9c0\ub9cc, \uc774 \ubd80\ubd84\uc5d0 \uc788\uc5b4\uc11c\ub294 \ud504\ub9ac\ud150\ub2e4\ub4dc\uac00 \ud6e8\uc52c \ub354 \ub2e4\uc591\ud55c \uad75\uae30\ub97c \uc81c\uacf5\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:spacer {\"height\":25} -->\n<div style=\"height:25px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n<!-- \/wp:spacer -->\n\n<!-- wp:image {\"id\":2502,\"sizeSlug\":\"large\",\"linkDestination\":\"media\"} -->\n<figure class=\"wp-block-image size-large\"><a href=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2022\/01\/6-1.png\"><img src=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2022\/01\/6-1-1024x707.png\" alt=\"\" class=\"wp-image-2502\"\/><\/a><figcaption>\ud504\ub9ac\ud150\ub2e4\ub4dc\ub294 iOS\uc5d0 1\ub3001 \ub300\uc751\ud560 \uc218 \uc788\ub294 \ubaa8\ub4e0 \uad75\uae30\ub97c \uac16\ucd94\uc5c8\uc74c<\/figcaption><\/figure>\n<!-- \/wp:image -->\n\n<!-- wp:spacer {\"height\":25} -->\n<div style=\"height:25px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n<!-- \/wp:spacer -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>3. UI \uc0c1\uc758 \ud55c\uae00 \ud45c\ud604<\/h3>\n<!-- \/wp:heading -->\n\n<!-- wp:paragraph -->\n<p>\uae30\ubcf8\uc801\uc73c\ub85c \uc591 \ud3f0\ud2b8 \ubaa8\ub450 \ud55c\uae00\uc744 \uace0\ub824\ud574\uc11c \uc81c\uc791\ub418\uc5c8\uae30 \ub54c\ubb38\uc5d0 \ud55c\uae00 \ud45c\ud604\uc5d0 \uac15\uc810\uc774 \uc788\uc9c0\ub9cc, \ud55c\uae00 \ud3f0\ud2b8\uc758 \uc3e0\ub9bc \ud604\uc0c1\uc740 \uc2a4\ud3ec\uce74\uc5d0\uc11c\ub3c4 \uc5ec\uc804\ud788 \ubc1c\uc0dd\ud558\uace0 \uc788\uc5c8\uc2b5\ub2c8\ub2e4. \uadf8\uc5d0 \ubc18\ud574 \ud504\ub9ac\ud150\ub2e4\ub4dc\ub294 \ud3f0\ud2b8\uc5d0 \ubcc4 \ub2e4\ub978 \uc870\uce58\ub97c \ucde8\ud558\uc9c0 \uc54a\uc544\ub3c4 \ud14d\uc2a4\ud2b8 \ubc15\uc2a4\uc758 \uac00\uc6b4\ub370 \uc798 \ubc30\uce58\ub418\uc5b4 \ubcf4\uc785\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:spacer {\"height\":25} -->\n<div style=\"height:25px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n<!-- \/wp:spacer -->\n\n<!-- wp:image {\"id\":2503,\"sizeSlug\":\"large\",\"linkDestination\":\"media\"} -->\n<figure class=\"wp-block-image size-large\"><a href=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2022\/01\/5.png\"><img src=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2022\/01\/5-1024x277.png\" alt=\"\" class=\"wp-image-2503\"\/><\/a><\/figure>\n<!-- \/wp:image -->\n\n<!-- wp:spacer {\"height\":50} -->\n<div style=\"height:50px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n<!-- \/wp:spacer -->\n\n<!-- wp:heading -->\n<h2><strong>\uc801\uc6a9 \ud6c4\uae30<\/strong><\/h2>\n<!-- \/wp:heading -->\n\n<!-- wp:paragraph -->\n<p>\uc2dc\uc2a4\ud15c \uc11c\uccb4\uac00 \ud50c\ub7ab\ud3fc\uc5d0 \uc0c1\uad00\uc5c6\uc774 \ud1b5\ud569\ub428\uc5d0 \ub530\ub77c\uc11c \ub354 \uc774\uc0c1 \ub514\uc790\uc774\ub108\ub4e4\uc774 \ud50c\ub7ab\ud3fc \ubcc4\ub85c \ub514\uc790\uc778\uc744 \ub9cc\ub4e4 \ud544\uc694\uac00 \uc5c6\uc5b4\uc84c\uace0, \ub514\uc790\uc778 \uc2dc\uc2a4\ud15c \uc0c1\uc758 \ucef4\ud3ec\ub10c\ud2b8\ub3c4 \ub2e8\uc77c\ud654\ub418\uc5b4 \uc720\uc9c0 \ubcf4\uc218\uac00 \ub354 \uac04\ud3b8\ud574\uc84c\uc2b5\ub2c8\ub2e4. \uc544\uc9c1 \uc801\uc6a9\ud55c \uc9c0 \uc5bc\ub9c8 \ub418\uc9c0 \uc54a\uc558\uc9c0\ub9cc \uc2e4 \uc0ac\uc6a9\uc790\uc778 \ub3d9\ub8cc \ub514\uc790\uc774\ub108\ub4e4\uc758&nbsp;\ud53c\ub4dc\ubc31\uc744 \ud1b5\ud574 \ucee4\uc2a4\ud130 \ud3f0\ud2b8 \ub3c4\uc785\uc758 \ud6a8\uacfc\ub97c \uccb4\uac10\ud560 \uc218 \uc788\uc5c8\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:spacer {\"height\":25} -->\n<div style=\"height:25px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n<!-- \/wp:spacer -->\n\n<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\"><p>\uc774\uc804\uc5d0\ub294 \uc548\ub4dc\ub85c\uc774\ub4dc\uc640 iOS \uac01\uac01 \ub2e4\ub978 \ud3f0\ud2b8\ub97c \uc4f0\ub2c8 \uac19\uc740 \ub514\uc790\uc778\uc744 \uc801\uc6a9\ud574\ub3c4 OS\ubcc4\ub85c \ub2e4\ub974\uac8c \uc2dc\uac01 \ubcf4\uc815\uc744 \ud574\uc57c \ud588\uc2b5\ub2c8\ub2e4. \uac01\uac01 \ub2e4\ub978 \ud3f0\ud2b8\uc758 \uace0\uc720 \ub192\uc774\uc640 \ub0b4\ubd80 \uc815\ub82c \ub54c\ubb38\uc5d0 \ub514\uc790\uc778\uc774 \uac19\uc544\ub3c4 \uc3e0\ub9bc \ud604\uc0c1\uc774 \uc788\uc5b4\uc11c \ubbf8\uc138\ud55c \ub514\uc790\uc778 \uc870\uc815\uc744 \ud574\uc57c \ud588\uc5c8\uc9c0\uc694. \uadf8\ub7f0\ub370 \ud504\ub9ac\ud150\ub2e4\ub4dc\ub97c \uc801\uc6a9\ud558\ub2c8 \uadf8\ub7f4 \ud544\uc694\uac00 \uc5c6\uc5b4\uc838\uc11c \uc791\uc5c5 \uc2dc\uac04\uc774 \uc5c4\uccad \uc904\uc5c8\uc2b5\ub2c8\ub2e4!!!!!<\/p><cite>\uad8c\uc6b0\ub9ac \ub514\uc790\uc774\ub108<\/cite><\/blockquote>\n<!-- \/wp:quote -->\n\n<!-- wp:spacer {\"height\":25} -->\n<div style=\"height:25px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n<!-- \/wp:spacer -->\n\n<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\"><p>\ucef4\ud3ec\ub10c\ud2b8 \ub0b4\ubd80\uc758 \ud14d\uc2a4\ud2b8 \uc815\ub82c \uac19\uc740 \ubd80\ubd84\uc5d0\uc11c \uac1c\ubc1c\ub41c \ud654\uba74\uacfc \ub514\uc790\uc778 \ud654\uba74\uac04\uc758 \uc624\ucc28\uac00 \uc0ac\ub77c\uc84c\ub2e4\ub294\uac8c \uac00\uc7a5 \ud070 \uc7a5\uc810\uc73c\ub85c \ub290\uaef4\uc9d1\ub2c8\ub2e4!<\/p><cite>\uc1a1\uc6b0\uc11d \ub514\uc790\uc774\ub108<\/cite><\/blockquote>\n<!-- \/wp:quote -->\n\n<!-- wp:spacer {\"height\":50} -->\n<div style=\"height:50px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n<!-- \/wp:spacer -->\n\n<!-- wp:heading -->\n<h2><strong>\ub9c8\uce58\uba70<\/strong><\/h2>\n<!-- \/wp:heading -->\n\n<!-- wp:paragraph -->\n<p>\uc544\uc9c1 \ubaa8\ub4e0 \ud654\uba74\uc5d0\uc11c 100% \uc644\ubcbd\ud558\uac8c \ub300\uc751\ud558\uc9c0\ub294 \ubabb\ud588\uace0, \uae30\uc874\uc758 \ud50c\ub7ab\ud3fc \uc2dc\uc2a4\ud15c \ud3f0\ud2b8\uc758 \uc774\uc810\uc5d0 \ub300\ud55c \uc6b0\ub824\ub4e4\ub3c4 \uc788\uae30 \ub54c\ubb38\uc5d0 \uc9c0\uc18d\uc801\uc73c\ub85c \uc5c5\ub370\uc774\ud2b8 \ud574 \uac08 \uc608\uc815\uc785\ub2c8\ub2e4. \uc800\ud76c\ucc98\ub7fc \ucee4\uc2a4\ud140 \ud3f0\ud2b8 \ub3c4\uc785\uc5d0 \uace0\ubbfc\uc774 \uc788\uc73c\uc2e0 \ubd84\ub4e4\uc5d0\uac8c \ub3c4\uc6c0\uc774 \ub418\uc5c8\uc73c\uba74 \uc88b\uaca0\uc2b5\ub2c8\ub2e4. \uae34 \uae00 \uc77d\uc5b4\uc8fc\uc154\uc11c \uac10\uc0ac\ud569\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:spacer {\"height\":50} -->\n<div style=\"height:50px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n<!-- \/wp:spacer -->"},"elements":[],"widgetType":"text-editor"}],"isInner":false}],"isInner":false}]]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_page_assets]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[pretendard-%ec%8b%9c%ec%8a%a4%ed%85%9c-%ed%8f%b0%ed%8a%b8-%eb%8f%84%ec%9e%85%ea%b8%b0]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>12238</wp:comment_id>
			<wp:comment_author><![CDATA[김동후]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[donghoo.kim@42dot.ai]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.13.88]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2022-01-10 16:13:57]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2022-01-10 07:13:57]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[같은 고민을 하고 있었는데 좋은 인사이트를 주셔서 감사합니다!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1641798837.950059;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1641798899.678937;s:5:"event";s:15:"status-approved";s:4:"user";s:3:"tom";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>12692</wp:comment_id>
			<wp:comment_author><![CDATA[흔한 대한민국의 디자이너 1]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[musume@empal.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.29.246]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2022-12-02 00:54:33]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2022-12-01 15:54:33]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[프리텐다드 폰트를 커스텀 폰트로 채택하게 되면 안드로이드에서의 이점은 매우 큰듯한데요, iOS도 커스텀 폰트를 사용함에 있어서  많은 고민을 하셨을것 같습니다.
SF폰트의 디테일을 포기하고 iOS에서도 프리텐다드를 커스텀 폰트로 사용하는 것의 장점을 공유해주실 수 있을까요?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1669910073.970461;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1675250159.798371;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"hb.lee";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[Java 기반의 알림 서비스로 MSA 전환기]]></title>
		<link>https://blog.dramancompany.com/2022/01/java-%ea%b8%b0%eb%b0%98%ec%9d%98-%ec%95%8c%eb%a6%bc-%ec%84%9c%eb%b9%84%ec%8a%a4%eb%a1%9c-msa-%ec%a0%84%ed%99%98%ea%b8%b0/</link>
		<pubDate>Wed, 12 Jan 2022 02:54:52 +0000</pubDate>
		<dc:creator><![CDATA[s.sunyoung]]></dc:creator>
		<guid isPermaLink="false">https://blog.dramancompany.com/?p=2528</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">안녕하세요, 리멤버에서 Platform Crew에 속해있는 서버 개발자 신선영입니다. 플랫폼 크루에서는 다양한 업무를 하고 있지만, 그중 하나는 성능에 문제가 발생하는 부분을 수정하여 유저분들이 더욱 쾌적하게 서비스를 사용할 수 있도록 개선하는 것인데요.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">최근에는 알림 기능에 병목이 발생하는 것을 파악했고, Ruby로 만들어진 모놀리틱 서비스에서 알림 기능만 Java 기반의 별도 API로 분리해 성능을 개선하는 작업을 진행했습니다. 이번 포스팅에서는 이 경험을 공유해보려고 합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><br></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":1} -->
<h1>알림 서비스를 소개합니다</h1>
<!-- /wp:heading -->

<!-- wp:image {"align":"center","id":2529,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2022/01/Untitled.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2022/01/Untitled-473x1024.png" alt="" class="wp-image-2529"/></a></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">알림 서비스는 최근에 받았던 소식들을 모아두는 공간입니다. 푸시와 함께 보낼 수도, 알림만 단독적으로 추가할 수도 있는데요. 여기에 몇 가지 비즈니스 요구사항이 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:list {"fontSize":"medium"} -->
<ul class="has-medium-font-size"><li><strong>최근 30일</strong>의 알림만 보여주면 된다.</li><li>추후 고도화를 위해 <strong>필터(인맥 소식/커리어/커뮤니티 ...)로</strong> 분리할 수 있어야 한다.</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p><br></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":1} -->
<h1>분리하게 된 배경</h1>
<!-- /wp:heading -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">기존 알림에서의 DB는 RDB를 사용하고 있었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">비즈니스 요구사항에 따르면 30일 치의 알림까지만 보여주면 되지만, 30일이 지난 데이터도 삭제하지 않고 계속 쌓고 있었습니다. 더군다나 확장성 있게 설계를 하다 보니 알림을 여러 테이블로 분리하게 되었고, <strong>알림 1개당 평균 7개의 행</strong>을 쌓고 있었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">그러다 보니 알림 관련 테이블에는 <strong>도합 21억 개라는 어마어마한 행이</strong> 쌓여있었는데요. 이렇게 많은 데이터가 쌓이니 당연히 성능 문제가 발생했습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":2530,"sizeSlug":"large","linkDestination":"media"} -->
<figure class="wp-block-image size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2022/01/Untitled-1.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2022/01/Untitled-1-1024x552.png" alt="" class="wp-image-2530"/></a></figure>
<!-- /wp:image -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">리멤버 앱을 켜면 첫 화면에 보여줄 정보를 가져오기 위한 API를 호출하고 있습니다. 여기에서는 읽지 않은 알림의 개수를 가져오는 API도 호출하고 있는데요. <strong>알림의 데이터가 너무 많다 보니 조회할 때 슬로우 쿼리가 발생했고, 그로 인해 DB에서 읽기 전용 스레드 할당이 제대로 되지 않아 병목 구간이 발생하여 에러</strong>가 나는 경우가 종종 있었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">저희 팀에서도 이런 문제를 인식하고 있었고, 성능을 개선하기 위해 알림 도메인을 분리하게 되었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><br></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":1} -->
<h1>데이터베이스 설정</h1>
<!-- /wp:heading -->

<!-- wp:heading -->
<h2>RDB vs NoSQL</h2>
<!-- /wp:heading -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">기존과 같이 RDB를 사용할지, NoSQL을 사용할지 많은 논의를 거친 결과 알림 도메인에는 RDB보다는 NoSQL이 더 적합하다는 결론이 났습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:list {"fontSize":"medium"} -->
<ul class="has-medium-font-size"><li>TTL<ul><li>알림은 한 달 이후 건은 보이지 않기 때문에 계속 알림을 쌓아둘 필요가 없습니다.<ul><li>즉, 일정 시간이 지난 데이터에 대한 스키마 관리를 안 해도 되는 도메인입니다.</li><li><strong>TTL을 기본적으로 지원</strong>해주는 NoSQL이 RDB보다 적합합니다.</li></ul></li></ul></li><li>유연한 스키마 대응<ul><li>Read/Write가 굉장히 빈번하게 일어나는 도메인 특성상 한 번에 최대한 적은 행이 추가되어야 합니다.</li><li>알림 도메인의 큰 틀은 고정되어있지만, 알림의 행위를 정의하는 부분은 구조의 변경이 잦기 때문에 유연한 스키마를 가질 수 있어야 합니다.<ul><li><strong>Schema-less</strong>한 NoSQL이 RDB보다 적합합니다.</li></ul></li></ul></li><li>성능<ul><li>알림 도메인에는 트랜잭션 관리가 필요 없습니다.<ul><li><strong>트랜잭션 관리를 하지 않고 성능을 챙길 수 있는</strong> NoSQL이 RDB보다 적합합니다.</li></ul></li></ul></li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p><br></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>MongoDB vs Redis vs DynamoDB</h2>
<!-- /wp:heading -->

<!-- wp:image {"id":2531,"sizeSlug":"large","linkDestination":"media"} -->
<figure class="wp-block-image size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2022/01/Untitled-2.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2022/01/Untitled-2-1024x354.png" alt="" class="wp-image-2531"/></a></figure>
<!-- /wp:image -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">다음 단계로는 어떤 NoSQL을 사용할지 정해야 합니다. 저희 크루는 여러 NoSQL 후보 중에서도 MongoDB, Redis, DynamoDB 중에 고려하기로 했습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:list {"fontSize":"medium"} -->
<ul class="has-medium-font-size"><li>DynamoDB<ul><li>고가용성을 보장하지만, 가격이 비싸 Read/Write가 잦은 알림 시스템에 적합하지 않다고 생각했습니다.</li></ul></li><li>Redis<ul><li>Key-Value로 조합을 하는데 그 과정에서 설계의 복잡성이 올라가 추후에 유지보수가 어려울 것이라고 생각했습니다.</li></ul></li></ul>
<!-- /wp:list -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">이러한 이유로 알림 도메인의 데이터베이스는 <strong>MongoDB</strong>가 가장 적합하다고 생각이 들었고, 리멤버에서는 AWS를 활발하게 사용하고 있기 때문에 MongoDB와 호환되는 AWS의 NoSQL인 <strong>DocumentDB</strong>를 사용하기로 했습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><br></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>RDB 다시 한번 고려해 보기</h2>
<!-- /wp:heading -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">최종적으로 데이터베이스를 결정하기 전에, RDB와 NoSQL을 사용하기로 결정한 게 너무 빠르게 결정된 것 같아 다음과 같은 이유로 <strong>다시 한번 RDB도 고려해 보기</strong>로 했습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true,"fontSize":"medium"} -->
<ol class="has-medium-font-size"><li>배치 스케줄러 또는 DB 내에서 이벤트 처리를 하면 RDB로도 TTL을 구현할 수 있다.</li><li>스키마를 유연하게 사용하는 게 오히려 독이 될 수도 있다.</li><li>트랜잭션 처리가 정말&nbsp;필요 없을지&nbsp;다시 한번&nbsp;고려해 보아야&nbsp;한다.</li></ol>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p><br></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>TTL 수동으로 구현</h3>
<!-- /wp:heading -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">위에서 서술한 대로 RDB에서도 수동으로 구현이 가능합니다. 하지만 수동으로 구현하게 되면 어쩔 수 없이 기본적으로 제공해 주는 기능보다 추가적인 컴퓨팅 리소스를 사용해야 합니다. 또한 배치로 TTL을 구현할경우, 배치 애플리케이션에서 장애가 나게 되면 고스란히 비용으로 남게 됩니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">그렇기 때문에 안전하고 빠른 TTL을 위해서는 NoSQL이 더 적합하다는 의견으로 결정이 되었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><br></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>스키마의 유연성</h3>
<!-- /wp:heading -->

<!-- wp:image {"id":2532,"sizeSlug":"large","linkDestination":"media"} -->
<figure class="wp-block-image size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2022/01/Untitled-3.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2022/01/Untitled-3-1024x558.png" alt="" class="wp-image-2532"/></a></figure>
<!-- /wp:image -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">기존의 데이터베이스 구조는 그림처럼 3개의 테이블로 나누어져 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:list {"fontSize":"medium"} -->
<ul class="has-medium-font-size"><li style="line-height: 1.5"><code>notifications</code>
<ul style="line-height: 1.5">
<li style="line-height: 1.5">알림의 정보</li></ul></li><li style="line-height: 1.5"><code>notification_messages</code><ul style="line-height: 1.5"><li style="line-height: 1.5">알림의 메시지에 들어갈 값</li></ul></li><li style="line-height: 1.5"><code>notification_data</code><ul style="line-height: 1.5"><li style="line-height: 1.5">알림의 이미지 정보 (링크, 모양)</li><li style="line-height: 1.5">알림을 누르면 이동할 경로</li><li style="line-height: 1.5">알림에서 보여줄 추가적인 정보들</li></ul></li></ul>
<!-- /wp:list -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">NoSQL은 RDB보다 많은 타입을 지원하고 있고, 스키마도 유연하게 변경이 가능합니다. 그에 비해 RDB는 한정적인 타입을 지원하고 스키마의 유연성도 떨어지기 때문에 기존의 테이블 구조처럼 조인이 들어가야 하고, 구조의 변경이 잦은 부분은 JSON 문자열로 해야 하는 등 한눈에 알아보기 어렵습니다. 또한 알림 자체가 복잡한 테이블 구조를 가질 필요가 없기 때문에 NoSQL이 더 적합하다는 의견으로 통일 되었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">하지만, <strong>스키마를 무분별하게 사용하다가 장애</strong>가 난 경험을 가지고 있는 동료분이 이에 대해 우려를 가지고 계셨습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">다른 요소들(TTL, 직관성, 성능 ...)을 생각해 보았을 때 RDB보다 NoSQL이 알림 도메인이 훨씬 적합하다고 생각이 들었고, 엔티티로 만들어 필드를 고정한 뒤에 고정된 필드에 대해서는 간단한 <strong>Validation</strong>이라도 적용하면 충분히 예방 가능한 일이었습니다. 또한 고정된 스키마 틀을 바꾸는 것을 최대한 지양해서 무분별하게 사용할 일이 없도록 만들었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock {"language":"java","theme":"classic"} -->
<pre class="EnlighterJSRAW" data-enlighter-language="java" data-enlighter-theme="classic" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">@NoArgsConstructor(access = AccessLevel.PROTECTED)
@Document(collection = "notifications")
public class Notification {
    @Id
    private String id;

    @NotNull
    private Long userId;

    @NotBlank
    private String transactionId;

    @Valid
    private NotificationImage image;

    // ...
}

public static class NotificationImage {
        @NotBlank
        @URL
        private final String url;

        @NotNull
        private final Shape shape;
}
﻿</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p><br></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>성능</h3>
<!-- /wp:heading -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">RDB에서는 ACID 트랜잭션 관리를 위해 성능이 NoSQL보다 상대적으로 느릴 수밖에 없습니다. 하지만 알림 도메인의 특성상 트랜잭션 관리가 중요하지 않다고 판단하여 성능이 우선순위가 높다면 NoSQL을 선택하는 게 맞다는 의견으로 통일되었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2><br>그래서, 이 선택이 도움이 되었을까?</h2>
<!-- /wp:heading -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">개발을 끝내고 안정화가 된 후에 선택을 돌아보면 NoSQL은 좋은 선택이었습니다. 실제로 성능을 올리는 데에도 많은 부분을 차지했습니다. RDB를 채택하지는 않았지만, NoSQL 선택을 부정적으로 바라보고 다시 한번 의논을 거친 과정에서 고려할 점을 찾게 되는 과정도 많은 도움이 되었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">다만, DocumentDB를 사용하며 몇 가지 아쉬웠던 점이 있었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:list {"fontSize":"medium"} -->
<ul class="has-medium-font-size"><li>DocumentDB와 MongoDB의 다른 부분이 있는데, MongoDB를 지원하는 라이브러리(Spring Data MongoDB, Mongoid ...)에서는 DocumentDB의 지원하지 않는 기능이 있는 점</li><li>관련 자료가 많지 않다 보니 문제 해결에 있어 많은 어려움을 겪은 점</li><li>NoSQL은 auto-increment가 기본적으로 불가능하기 때문에 auto-increment용 collection인 counter를 추가로 만들어야 했던 점<ul><li>이렇게 되니 insert가 원자적으로 쿼리가 짜여지지 않아 동시성 문제가 발생하기도 했습니다.</li></ul></li></ul>
<!-- /wp:list -->

<!-- wp:enlighter/codeblock {"language":"java","theme":"classic"} -->
<pre class="EnlighterJSRAW" data-enlighter-language="java" data-enlighter-theme="classic" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">// 아토믹하지 않은 코드 😭
private Notification insert(final NotificationUpsertRequest request) {
		final long seq = sequenceGeneratorService.generateSequence(Notification.SEQUENCE_NAME);
		return notificationRepository.save(Notification.create(request, seq));
}
﻿</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:enlighter/codeblock {"language":"java","theme":"classic"} -->
<pre class="EnlighterJSRAW" data-enlighter-language="java" data-enlighter-theme="classic" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">public long generateSequence(final String seqName) {
  final Counter counter = mongoOperations.findAndModify(query(where(NAME).is(seqName)),
          new Update().inc("value", 1), options()
                  .returnNew(true)
                  .upsert(true), Counter.class);

  return Objects.isNull(counter) ? INIT_VALUE : counter.getValue();
}</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:heading {"level":1} -->
<h1><br>설계</h1>
<!-- /wp:heading -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">알림 아키텍처를 설계할 때 고려해야 했던 점이 몇 가지 있었습니다.<br></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>앱에서의 호출 하위호환성</h3>
<!-- /wp:heading -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">리멤버에서는 사용자 경험을 위해 앱을 강제 업데이트하지 않고 있습니다. 그래서 이미 배포된 앱에서는 호출하는 URI를 바꿀 수 없는데요. 기존에 호출하는 API로 요청을 받되, API에서 처리하는 것이 아닌 알림 도메인으로 포워딩만 하도록 했습니다.<br></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>이벤트</h3>
<!-- /wp:heading -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">기존에는 생성, 수정, 삭제, 조회 모두 API로 요청을 받아 처리하고 응답을 보내고 있었습니다. 하지만 분리를 하며 다음과 같은 이유로 조회를 제외한 나머지 동작들은 모두 이벤트로 동작하도록 수정했습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:list {"fontSize":"medium"} -->
<ul class="has-medium-font-size"><li>조회 외에는 응답을 받을 필요가 없다.</li><li>조회 외에는 실시간으로 처리가 될 필요가 없다.</li><li>이벤트 방식으로 구현하면 외부 서비스의 의존성을 격리 시킬 수 있다.</li></ul>
<!-- /wp:list -->

<!-- wp:image {"id":2558,"sizeSlug":"large","linkDestination":"media"} -->
<figure class="wp-block-image size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2022/01/Untitled-4.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2022/01/Untitled-4-1024x396.png" alt="" class="wp-image-2558"/></a></figure>
<!-- /wp:image -->

<!-- wp:heading {"level":1} -->
<h1><br>개발</h1>
<!-- /wp:heading -->

<!-- wp:heading -->
<h2>기술 스택</h2>
<!-- /wp:heading -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">기술 스택은 분리 작업을 하기 전에 미리 Java + Spring으로 개발을 하자고 결정되어 있었기 때문에 어렵지 않게 기술 스택을 정할 수 있었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:list {"fontSize":"medium"} -->
<ul class="has-medium-font-size"><li>Java 11</li><li>Spring Boot 2.5</li><li>Spring Data MongoDB</li></ul>
<!-- /wp:list -->

<!-- wp:heading -->
<h2><br>코드리뷰</h2>
<!-- /wp:heading -->

<!-- wp:image {"id":2559,"sizeSlug":"large","linkDestination":"media"} -->
<figure class="wp-block-image size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2022/01/Untitled-5.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2022/01/Untitled-5-1024x427.png" alt="" class="wp-image-2559"/></a></figure>
<!-- /wp:image -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">개발할 때에는 이슈를 최대한 잘게 쪼개서 어느 정도 진행이 되었는지 명확하게 파악할 수 있도록 했고, 코드리뷰를 진행하며 더 나은 코드를 함께 고민했습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>페어 프로그래밍</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":2562,"width":888,"height":82,"sizeSlug":"large","linkDestination":"media"} -->
<figure class="wp-block-image size-large is-resized"><a href="https://blog.dramancompany.com/wp-content/uploads/2022/01/Untitled-6-1.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2022/01/Untitled-6-1-1024x94.png" alt="" class="wp-image-2562" width="888" height="82"/></a></figure>
<!-- /wp:image -->

<!-- wp:image {"id":2563,"width":451,"height":77,"sizeSlug":"full","linkDestination":"media"} -->
<figure class="wp-block-image size-full is-resized"><a href="https://blog.dramancompany.com/wp-content/uploads/2022/01/Untitled-7-1.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2022/01/Untitled-7-1.png" alt="" class="wp-image-2563" width="451" height="77"/></a></figure>
<!-- /wp:image -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">또한 개발 진행 중에 디버깅이 잘 안되거나, 로직을 짜는 도중에 고민이 생기면 페어 프로그래밍을 통해 함께 문제를 해결하며 개발을 진행했습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":1} -->
<h1><br>마이그레이션</h1>
<!-- /wp:heading -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">DB를 옮겼다고 기존에 쌓아둔 알림을 무시하고 새로 쌓을 수는 없으니 마이그레이션을 진행해야 했습니다. 이때 마이그레이션 대상 데이터는 700만 건이었는데요. 추가로 정보를 조회해야 하는 테이블을 포함하면 <strong>약 5,000만 건의 데이터를 읽어 마이그레이션을 진행</strong>해야 했습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">RDB에서 NoSQL로 전환을 해야 했기 때문에 별도의 실행 스크립트를 짜서 돌리기로 했습니다. 또한 읽기 전용 레플리카 DB에 연결하여 마이그레이션의 이유로 실제 운영 중인 서비스에 영향이 가지 않게 했습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">계산해보니 한 달 치 데이터를 한 번에 옮기는데 24시간이 넘어가기 때문에 하루 만에 마이그레이션은 불가능하다고 생각했습니다. 그래서 새로운 알림 도메인을 개발하기 시작함과 동시에 테스트 환경에서 마이그레이션 스크립트를 미리 돌려보고, 문제가 없다고 판단되면 조금씩 마이그레이션을 하기로 결론이 났습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2><br>그런데 ...</h2>
<!-- /wp:heading -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">순탄할 줄만 알았던 마이그레이션 작업에 문제가 생겼습니다. 동기적으로 돌리려고 하니 시간이 너무 오래 걸렸습니다. 그래서 이를 해결하기 위해 멀티 스레드로 작업을 하기로 했습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">처음에는 스레드의 I/O를 고려해서 스레드 개수를 정했는데 여러 스레드에서 한꺼번에 많은 객체를 생성해 메모리가 부족해져서 프로그램이 비정상적으로 종료되는 상황이 발생했고, 해결을 위해 여러 가지 방법을 사용했습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:list {"fontSize":"medium"} -->
<ul class="has-medium-font-size"><li>스레드 개수 조정</li><li>Ruby에서 제공하는 Garbage Collector 메소드인 <code>GC.start</code>를 사용해서 강제적으로 Garbage Collecting을 하여 메모리의 용량도 확보</li><li>데이터베이스에서 데이터를 가져올 때 청크 단위 조정</li></ul>
<!-- /wp:list -->

<!-- wp:enlighter/codeblock {"language":"ruby","theme":"classic"} -->
<pre class="EnlighterJSRAW" data-enlighter-language="ruby" data-enlighter-theme="classic" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">def migration(start_range, end_range)
      # 마이그레이션 로직

      begin
        insert_document(insert_documents)
      rescue StandardError => e
        @logger.error ...
      ensure
        @logger.info ...
        GC.start
      end
    end
  end
end

def start_migration
  thread_pool = Concurrent::FixedThreadPool.new(6)

  Time.new(yyyy, mm, dd).to_date.upto(Time.current.to_date).each do |date|
    thread_pool.post do
      start_of_date = date.beginning_of_day
      end_of_day = date.end_of_day
      migration(start_of_date, end_of_day)
    end
  end
  thread_pool.wait_for_termination
end
﻿
﻿</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":2564,"sizeSlug":"large","linkDestination":"media"} -->
<figure class="wp-block-image size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2022/01/Untitled-8.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2022/01/Untitled-8-1024x141.png" alt="" class="wp-image-2564"/></a><figcaption>마이그레이션 끝내고 인스턴스 종료 😭</figcaption></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">처음에는 CS 처리용으로 운영 DB에 임의의 작업이 허용된 인스턴스에 돌렸는데, 인스턴스에 무리가 가는 작업을 하다 보니 서버가 느려졌고, 이 인스턴스를 사용하는 다른 개발자분들이 인스턴스를 사용하지 못하는 상황이 발생했습니다. 그래서 마이그레이션용 인스턴스를 하나 만들고 그 인스턴스에서 작업하도록 수정했습니다.<br></p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":2565,"sizeSlug":"large","linkDestination":"media"} -->
<figure class="wp-block-image size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2022/01/Untitled-9.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2022/01/Untitled-9-1024x146.png" alt="" class="wp-image-2565"/></a></figure>
<!-- /wp:image -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">또한, 마이그레이션 과정 중에는 총작업량에 대비하여 얼마나 남았는지 파악하고, 중간에 에러가 났을 때 재시작한 부분을 파악하기 위해 현재 상태를 파악할 수 있는 프로그레스 로그를 찍었는데, 이 로그가 많은 도움이 되었습니다.<br></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":1} -->
<h1><br>성능테스트</h1>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p> </p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":2567,"width":596,"height":295,"sizeSlug":"large","linkDestination":"media"} -->
<figure class="wp-block-image size-large is-resized"><a href="https://blog.dramancompany.com/wp-content/uploads/2022/01/image.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2022/01/image-1024x507.png" alt="" class="wp-image-2567" width="596" height="295"/></a></figure>
<!-- /wp:image -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">성능 테스트에서는 가장 중요한 응답시간 측정을 위해 더미 알림을 쌓고, 응답 시간을 측정해보았습니다. 생성, 삭제, 수정은 이벤트로 발행하기 때문에 성능 테스트에서 제외하고 조회 API의 응답속도만 측정했습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true,"fontSize":"medium"} -->
<ol class="has-medium-font-size"><li>알림을 400개 가지고 있는 유저 데이터 2개 생성 (최대 알림을 가지고 있는 유저의 알림 개수)</li><li>1K request/per second로 조회 요청 (평균적인 요청량)</li><li>NewRelic에서 확인 결과 40ms 이내의 응답 속도</li></ol>
<!-- /wp:list -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">최대 40ms정도면 준수한 속도였기 때문에 추가적인 성능 개선 작업 없이 배포하기로 했습니다.<br></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":1} -->
<h1><br>배포</h1>
<!-- /wp:heading -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">배포는 롤링 배포 방식을 선택했습니다. 배포 도중에 저장은 새로운 DB에 저장이 되고, 조회는 배포되지 않은 서버에 조회하는 경우 제대로 데이터가 보이지 않는 이슈가 생길 것 같다고 생각했지만, 마이너한 이슈이기 때문에 감안하기로 했습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">단, 최대한 이러한 영향을 줄이기 위해 사용자 수가 가장 적은 새벽 시간대에 배포했고, 배포 이후에는 증분값에 대해서 마이그레이션을 한 번 더 했습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">그리고 열심히 오류를 잡은 결과, 다행히 롤백하지 않아도 될 만큼 안정화가 되었습니다! 여러 이슈를 처리하는 과정에서 많은 레슨을 얻었고, 그 내용도 공유하고 싶지만 글이 너무 길어질 것 같아 다음에 기회가 되면 새로운 글 공유드리겠습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":2568,"sizeSlug":"large","linkDestination":"media"} -->
<figure class="wp-block-image size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2022/01/Untitled-11.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2022/01/Untitled-11-1024x479.png" alt="" class="wp-image-2568"/></a></figure>
<!-- /wp:image -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">서버를 분리하며 <strong>도합 21억 건 정도의 데이터를 삭제</strong>할 수 있었고, 성능도 많이 개선할 수 있었습니다. 평균적으로는 응답 시간이 3배 이상 줄어들었고, <strong>분리 이전에는 예전부터 알림이 많이 쌓인 일부 유저의 경우 최대 30초까지 걸리던 처리 시간이 현재는 최대 17ms가 되었습니다.</strong></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":1} -->
<h1><br>마치며</h1>
<!-- /wp:heading -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">아직 모놀리틱으로 되어있는 부분이 남아있어 저희는 앞으로도 점진적으로 MSA로 옮기며 성능을 개선해 나아갈 예정입니다. 현재 리멤버에서는 활발한 채용이 진행 중이니, 많은 관심 부탁드립니다!</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">읽어주셔서 감사합니다! 🙂</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2528</wp:post_id>
		<wp:post_date><![CDATA[2022-01-12 11:54:52]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-01-12 02:54:52]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2024-05-22 17:39:17]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2024-05-22 08:39:17]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[java-%ea%b8%b0%eb%b0%98%ec%9d%98-%ec%95%8c%eb%a6%bc-%ec%84%9c%eb%b9%84%ec%8a%a4%eb%a1%9c-msa-%ec%a0%84%ed%99%98%ea%b8%b0]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="develop"><![CDATA[Tech]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729522236;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:2277;}i:1;a:1:{s:2:"id";i:2967;}i:2;a:1:{s:2:"id";i:312;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[40]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_single_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:23:{s:8:"subtitle";s:0:"";s:6:"format";s:8:"standard";s:5:"video";s:0:"";s:7:"gallery";s:0:"";s:11:"source_name";s:0:"";s:10:"source_url";s:0:"";s:8:"via_name";s:0:"";s:7:"via_url";s:0:"";s:17:"override_template";s:1:"0";s:8:"override";a:1:{i:0;a:32:{s:8:"template";s:1:"1";s:18:"single_blog_custom";s:0:"";s:8:"parallax";s:1:"1";s:10:"fullscreen";s:1:"1";s:6:"layout";s:13:"right-sidebar";s:7:"sidebar";s:15:"default-sidebar";s:14:"second_sidebar";s:15:"default-sidebar";s:14:"sticky_sidebar";s:1:"1";s:14:"share_position";s:3:"top";s:17:"share_float_style";s:16:"share-monocrhome";s:18:"show_share_counter";s:1:"1";s:17:"show_view_counter";s:1:"1";s:13:"show_featured";s:1:"1";s:14:"show_post_meta";s:1:"1";s:16:"show_post_author";s:1:"1";s:22:"show_post_author_image";s:1:"1";s:14:"show_post_date";s:1:"1";s:16:"post_date_format";s:7:"default";s:23:"post_date_format_custom";s:5:"Y/m/d";s:18:"show_post_category";s:1:"1";s:22:"show_post_reading_time";s:1:"0";s:21:"post_reading_time_wpm";s:3:"300";s:16:"show_zoom_button";s:1:"0";s:20:"zoom_button_out_step";s:1:"2";s:19:"zoom_button_in_step";s:1:"3";s:13:"show_post_tag";s:1:"1";s:19:"show_prev_next_post";s:1:"1";s:15:"show_popup_post";s:1:"1";s:17:"number_popup_post";s:1:"1";s:15:"show_author_box";s:1:"0";s:17:"show_post_related";s:1:"0";s:24:"show_inline_post_related";s:1:"0";}}s:19:"override_image_size";s:1:"0";s:14:"image_override";a:1:{i:0;a:2:{s:26:"single_post_thumbnail_size";s:8:"crop-500";s:24:"single_post_gallery_size";s:8:"crop-500";}}s:13:"trending_post";s:1:"0";s:22:"trending_post_position";s:4:"meta";s:19:"trending_post_label";s:8:"Trending";s:14:"sponsored_post";s:1:"0";s:20:"sponsored_post_label";s:12:"Sponsored by";s:19:"sponsored_post_name";s:0:"";s:18:"sponsored_post_url";s:0:"";s:26:"sponsored_post_logo_enable";s:1:"0";s:19:"sponsored_post_logo";s:0:"";s:19:"sponsored_post_desc";s:0:"";s:10:"disable_ad";s:1:"0";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:2:"id";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_estimated-reading-time-minutes]]></wp:meta_key>
		<wp:meta_value><![CDATA[10]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle_flag]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[8]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[2573]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_wordproof_timestamp]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>12240</wp:comment_id>
			<wp:comment_author><![CDATA[지젤 제노글로시]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[yongsk0066@naver.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.8.56]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2022-01-12 12:01:46]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2022-01-12 03:01:46]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[와우 엄청나네요!! 다음편도 기대가 됩니다]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1641956506.22039;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1641957636.796353;s:5:"event";s:15:"status-approved";s:4:"user";s:10:"s.sunyoung";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>12243</wp:comment_id>
			<wp:comment_author><![CDATA[문성혁]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[roeniss2@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.19.90]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2022-01-13 01:49:03]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2022-01-12 16:49:03]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[SEQUENCE 의 용도가 궁금합니다. 동시성 이슈를 해결해야 해서 결국 DocumentDB의 성능을 저하시키는 요인처럼 느껴지는데, 꼭 필요한 부분이었을까요? 정확한 용도를 모르는 상황이라서, { create_at: new Date() } 필드와 함께 1번의 insert 로 충분한 문제 아닌가? 싶은 부분이 있어요.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1642006143.094105;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1642040016.515743;s:5:"event";s:15:"status-approved";s:4:"user";s:10:"s.sunyoung";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>12247</wp:comment_id>
			<wp:comment_author><![CDATA[선영 신]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[s.sunyoung@dramancompany.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.8.56]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2022-01-13 11:13:37]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2022-01-13 02:13:37]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[안녕하세요 성혁님! 댓글 감사합니다.
말씀해주신대로 이에 대해서 많은 논의가 있었는데요. 따로 Sequence를 만든 이유는 <strong>앱에서의 하위 호환성</strong>을 지키기 위해서였습니다.
앱에서는 알림의 id를 int로  받고 있었고, id를 사용해서 요청을 보내고 있었습니다. 그런데 MongoDB에서 자동으로 생성되는 id는 Oid 타입이었고, 안에 들어가는 파라미터가 String 타입이라 그대로 보내줄 수 없었는데요. 이를 해결하기 위해 몇 가지 방안이 나왔습니다.

1. MongoDB에서 생성되는 oid를 byte단위로 변환해서 int 형태로 변환 -> int값을 넘어감
2. 만들어진 날짜 기반으로 int 형태로 변경 -> 중복 값이 나올 확률이 있음

결국 마땅한 방안을 찾지 못해 auto-increment되는 별도의 Collection를 만들고, Sequence도 만들게 되었습니다 ㅠㅠ
처음에는 MongoDB의 function을 사용해서 내부적으로 동작하게 하려고 했습니다. 하지만 DocumentDB에서 함수를 지원하지 않는 것인지 함수를 추가하고 인스턴스를 재시작하면 함수가 사라지는 현상이 발생했고, 결국 코드로 해결하게 되었습니다. 😭]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>12243</wp:comment_parent>
			<wp:comment_user_id>40</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1642040017.264144;s:5:"event";s:9:"check-ham";s:4:"user";s:10:"s.sunyoung";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>12248</wp:comment_id>
			<wp:comment_author><![CDATA[선영 신]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[s.sunyoung@dramancompany.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.8.56]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2022-01-13 11:14:07]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2022-01-13 02:14:07]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[감사합니다 지젤 제노글로시님 🙂]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>12240</wp:comment_parent>
			<wp:comment_user_id>40</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1642040047.954237;s:5:"event";s:9:"check-ham";s:4:"user";s:10:"s.sunyoung";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>12249</wp:comment_id>
			<wp:comment_author><![CDATA[권준]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[junkwon@doodlin.co.kr]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.19.90]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2022-01-13 11:47:33]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2022-01-13 02:47:33]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[안녕하세요, 좋은 글 감사합니다!
읽다가 궁금한 점이 생겨서 댓글 남깁니다.
알림 데이터는 읽음/읽지 않음 이란 status가 존재할텐데 해당 status때문에 update가 매우 빈번할 것으로 예상됩니다.
nosql은 update의 performance가 좋지 않은데, 혹시 이에 대해선 어떻게 생각하셨나요?
예를 들면 해당 update를 감안하고도 mongodb를 선택하는 것이 더 큰 이점이 있다고 생각하셨는지요?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1642042053.57984;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1642045884.245338;s:5:"event";s:15:"status-approved";s:4:"user";s:10:"s.sunyoung";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>12250</wp:comment_id>
			<wp:comment_author><![CDATA[선영 신]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[s.sunyoung@dramancompany.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.19.90]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2022-01-13 12:51:24]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2022-01-13 03:51:24]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[안녕하세요 권준님! 댓글 감사합니다.
일반적으로 NoSQL이 일관성보장(ACID)을 하지 않는 대신 쓰기 성능이 RDB보다 좋기 때문에, 업데이트의 성능 역시 더 좋은것으로 알고 있습니다!
알림 리스트를 가져오는 동시에 읽음 처리를 하고, 한 번에 읽음 처리가 되는 개수도 적기 때문에 따로 업데이트 성능에 대해 우려하지 않았습니다. 🙏]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>12249</wp:comment_parent>
			<wp:comment_user_id>40</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1642045884.895868;s:5:"event";s:9:"check-ham";s:4:"user";s:10:"s.sunyoung";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>12252</wp:comment_id>
			<wp:comment_author><![CDATA[조성진]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[iss6388@naver.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.8.56]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2022-01-14 09:22:31]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2022-01-14 00:22:31]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[좋은 글 잘 읽었습니다 :)
저도 질문 하나 스윽 남겨봅니다.
// 기술 스택은 분리 작업을 하기 전에 미리 Java + Spring으로 개발을 하자고 결정되어 있었기 때문에 어렵지 않게 기술 스택을 정할 수 있었습니다.
혹시 기술 스텍을 JAVA + Spring 환경으로 결정하신 이유가 있을까요?
다른 언어나 프레임워크와 비교했을때 어떤 이유로 이 서비스에서 자바를 선택하게 된것인지 궁금합니다.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1642119751.515598;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1642140603.193685;s:5:"event";s:15:"status-approved";s:4:"user";s:3:"tom";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>12253</wp:comment_id>
			<wp:comment_author><![CDATA[선영 신]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[s.sunyoung@dramancompany.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.19.90]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2022-01-14 18:18:57]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2022-01-14 09:18:57]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[안녕하세요 성진님! 댓글 감사합니다.
기술 스택을 정할 때 여러 후보군을 정해서 결정하진 않았고, 이 조합이 크루원들이 가장 익숙하며 잘 사용할 수 있는 언어 + 프레임워크였습니다.
이미 너무나 메이저한 조합이기도 하고, 안정적이라는 기술이라는 사실 역시도 입증된 상태였기 때문에 굳이 다른 대안을 고려해보진 않았던 것 같아요! 또한 메이저한 조합인 만큼 알림 도메인을 개발한 사람이 아니더라도 추후에 유지 보수하기에도 용이하다는 것도 한몫했습니다. 🙂]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>12252</wp:comment_parent>
			<wp:comment_user_id>40</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1642151938.037523;s:5:"event";s:9:"check-ham";s:4:"user";s:10:"s.sunyoung";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>12257</wp:comment_id>
			<wp:comment_author><![CDATA[문성혁]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[roeniss2@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.8.56]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2022-01-16 15:24:47]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2022-01-16 06:24:47]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[자세한 설명 감사합니다. 그러면 말씀 주신 동시성 이슈는 어떻게 해결하신건지 궁금합니다. 확실히 findAndModify 메소드 때 동일 id가 두 번 발급될 수 있겠는데요?

...라고 질문하려고 했는데 https://stackoverflow.com/a/26359924/8556340 와 https://docs.mongodb.com/manual/reference/method/db.collection.findAndModify/ 에 따르면 findAndModify 에서 항상 중복되지 않은 id가 발급될 것 같습니다. 동시성 이슈는 없었다, 고 이해하면 될까요? (제가 본문의 문장 톤을 정확하게 이해하지 못한 것 같습니다)]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>12247</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1642314287.220925;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1642382006.567072;s:5:"event";s:15:"status-approved";s:4:"user";s:3:"tom";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>12258</wp:comment_id>
			<wp:comment_author><![CDATA[선영 신]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[s.sunyoung@dramancompany.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.8.56]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2022-01-17 14:27:54]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2022-01-17 05:27:54]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[네! 동시성 이슈는 findAndModify()에서 발생된 것이 아닌, 다른 곳에서 발생된것이었는데 이제보니 제가 오해할 소지가 있을 수 있게 글을 작성했었네요 ㅠㅠ
findAndModify()에서는 동시성 문제가 발생하지 않았습니다.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>12257</wp:comment_parent>
			<wp:comment_user_id>40</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1642397274.828614;s:5:"event";s:9:"check-ham";s:4:"user";s:10:"s.sunyoung";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>12658</wp:comment_id>
			<wp:comment_author><![CDATA[ㅇㅇ]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[user@example.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.20.201]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2022-10-29 20:46:14]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2022-10-29 11:46:14]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[마이그레이션이 며칠 내에 끝날 수준이라 다행인데, 30일 보관이 아닌 영구저장 또는 연 단위 저장 데이터를 마이그레이션 하려면 어떻게 해야될까요?
또, 스키마가 자주 변할 수 있는데.. 매번 배치를 돌리는건 좀 부담스러워 보이네요..
좋은 방법이 없을까요 nosql은 거의 안써봐서 모르겠네요;]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1667043974.710107;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1667282370.098936;s:5:"event";s:15:"status-approved";s:4:"user";s:10:"s.sunyoung";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>12661</wp:comment_id>
			<wp:comment_author><![CDATA[선영 신]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[s.sunyoung@dramancompany.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.9.93]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2022-11-01 14:59:30]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2022-11-01 05:59:30]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[안녕하세요! 리멤버에서도 기존의 알림 데이터를 영구저장 방식으로 저장하고 있었습니다. 많은 데이터를 다루기 위해 루비에서 제공해주는 배치성 작업을 위해 제공해주는 모듈인 ActiveRecord::Batches를 사용해 작업을 진행했습니다. 이외에 마이그레이션 속도를 올리기 위해 FixedThreadPool(multi thread), screen 등을 사용했습니다. 저희는 여러 문제들때문에 사용하지 못한 방법이지만 정말 큰 용량이라면 csv 파일로 추출 후에 업로드하는 방법도 고려해볼 수 있을 것 같습니다. (관련해서 참고했던 링크 : https://whatsupkorea.com/2018/06/02/mongodb-%EC%9D%98-%EC%84%A0%ED%83%9D%EA%B3%BC-%EB%A7%88%EC%9D%B4%EA%B7%B8%EB%A0%88%EC%9D%B4%EC%85%98/)

스키마의 경우에는 말씀주신대로 알림의 특성상 변화 가능성이 크기 때문에 schemaless한 nosql을 사용했고, 스키마가 변경된다고 별도의 배치를 돌리지는 않았습니다. 그래서 validation도 알림의 제목, 내용같이 변경될 일이 없는 부분에만 적용해두었습니다.

답변이 잘 되었는지 모르겠네요. 혹시나 추가로 궁금한 점이 있으시면 답글 부탁드립니다. 읽어주셔서 감사합니다!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>12658</wp:comment_parent>
			<wp:comment_user_id>40</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1667282370.813725;s:5:"event";s:9:"check-ham";s:4:"user";s:10:"s.sunyoung";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[사용자 스토리 기반의 제품 개발]]></title>
		<link>https://blog.dramancompany.com/2022/03/%ec%82%ac%ec%9a%a9%ec%9e%90-%ec%8a%a4%ed%86%a0%eb%a6%ac-%ea%b8%b0%eb%b0%98%ec%9d%98-%ec%a0%9c%ed%92%88-%ea%b0%9c%eb%b0%9c/</link>
		<pubDate>Wed, 09 Mar 2022 13:57:54 +0000</pubDate>
		<dc:creator><![CDATA[hh.jeong]]></dc:creator>
		<guid isPermaLink="false">https://blog.dramancompany.com/?p=2603</guid>
		<description></description>
		<content:encoded><![CDATA[<img width="834" height="556" src="https://blog.dramancompany.com/wp-content/uploads/2022/03/ck_2-2.jpg" alt="" loading="lazy" srcset="https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2022/03/ck_2-2.jpg?w=834&amp;ssl=1 834w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2022/03/ck_2-2.jpg?resize=300%2C200&amp;ssl=1 300w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2022/03/ck_2-2.jpg?resize=768%2C512&amp;ssl=1 768w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2022/03/ck_2-2.jpg?resize=750%2C500&amp;ssl=1 750w" sizes="(max-width: 834px) 100vw, 834px" />
		<p><!-- wp:paragraph --></p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>안녕하세요, 리멤버에서 CPO를 맡고 있는 정현호 입니다.<br />이번 글에서는 리멤버 제품 크루들이 일하는 방식에 대해 소개드릴까 합니다.</p>
<p>리멤버의 제품 크루들은 [사용자 스토리] 기반으로 기획서를 작성하고, 팀과 공유하여 제품 개발을 진행하고 있습니다.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>사용자 스토리 기반의 기술 방식은 일반적으로 생각하는 기능명세서와는 사뭇 다른 형태를 띄고 있어서 이런 형태의 문서를 처음 접하는 분들에게는 꽤나 생소하게 느껴질 수 있습니다.<br />가끔씩 드라마앤컴퍼니에 새롭게 합류하신 분들이 사용자 스토리 기반으로 기술된 문서를 처음 접하면서, “읭? 이게 기획서야?” 라는 반응을 보이는 경우들도 있는데요.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>일하는 방식에 있어서 항상 정답이란게 있을 수는 없겠지만, 저희는 아래 두 가지 가치에 중점을 두고 현재와 같은 업무 방식을 유지해오고 있습니다.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:list {"ordered":true,"style":{"typography":{"fontSize":"16px"}}} --></p>
<ol style="font-size: 16px;">
<li>우리는 고객의 가치에 초점을 두어야 한다. 고객에게 가치를 전달하는 일은 우리 모두의 역할이자 책임이다.</li>
<li>우리는 대화를 지향한다. 대화를 통해 더 좋은 방향으로 발전할 수 있다고 믿는다.</li>
</ol>
<p><!-- /wp:list --></p>
<p><!-- wp:paragraph --></p>
<p>많은 분들이 드라마는 제품 개발이 어떤 프로세스로 진행되는지 궁금해하시고, 특히나 기획 단계에서부터 어떤 식으로 문서를 만들고 프로세스가 진행되는지 궁금해하셔서 사용자 스토리에 기반한 드라마의 제품 개발 프로세스를 소개드리면 좋겠다고 생각했습니다.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>그럼 사용자 스토리란 무엇이고, 리멤버에서 어떻게 제품 개발 프로세스가 진행되는지 설명해보겠습니다.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:spacer {"height":"59px"} --></p>
 
<p><!-- /wp:spacer --></p>
<p><!-- wp:heading {"level":3} --></p>
<h3>사용자 스토리란?</h3>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p>사용자 스토리는 <strong>사용자나 구매자에게 가치를 줄 수 있는 소프트웨어의 기능을 서술한 것</strong>입니다.<br />쉽게 얘기하면, 사용자가 소프트웨어를 통해 무엇을 할 수 있는지를 사용자 관점에서 서술한 것이라고 할 수 있습니다.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p><strong>&lt;사용자 스토리의 예시&gt;</strong></p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:pullquote {"textAlign":"left"} --></p>
<figure>
<blockquote>
<p><em>사용자는 자신의 프로필을 특정 기업이 검색하지 못하도록 제한할 수 있다</em></p>
<p><em>사용자는 자신의 프로필을 채용 기업들이 검색, 열람할 수 있도록 허용할 수 있다</em></p>
</blockquote>
</figure>
<p><!-- /wp:pullquote --></p>
<p><!-- wp:paragraph --></p>
<p>이렇게 사용자 관점으로 서술하면 사용자 스토리만 보아도 사용자가 서비스에서 어떤 것들을 할 수 있는지 쉽게 이해할 수 있습니다.<br />사용자 스토리는 기술적인 세부사항이나 구현의 용이성 보다는 ‘사용자 가치’에 초점을 두고 있기 때문에, <strong>이 스토리가 사용자에게 필요한가, 가치가 있는가를 우선적으로 고려</strong>하게 합니다.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>사용자 스토리는 "대화"라는 측면을 특히 강조합니다.<br />스토리는 처음부터 그 기능의 동작과 예외사항을 모두 포함하지 않으며, 스토리를 구현하기 위해 고려해야할 사항들은 제품팀 안에서 <strong>"대화"를 통해 완성해나가는 방식을 지향</strong>합니다.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:spacer {"height":"59px"} --></p>
 
<p><!-- /wp:spacer --></p>
<p><!-- wp:heading {"level":3} --></p>
<h3>왜 사용자 스토리인가?</h3>
<p><!-- /wp:heading --></p>
<p><!-- wp:heading {"level":5} --></p>
<h5><strong>고객 관점으로 서술하여 누구나 이해하기 쉽다</strong></h5>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p>앞서 보았듯이, 사용자 스토리는 소프트웨어, 시스템을 통해 사용자가 무엇을 할 수 있는지를 기술한 것이기 때문에 사용자 스토리만 읽어보아도 어떤 기능들이 있는지를 쉽게 이해할 수 있습니다.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>제품 개발팀이 아닌 영업담당자가 보더라도 혹은 새로 합류한 사람이 보더라도 이해하기 쉽기 때문에 “이 스토리가 고객에게 정말 필요한가? 가치있는가?” 라는 관점으로 모두가 함께 고민할 수 있고 얘기를 나누기가 용이합니다.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>기술적인 구현 난이도나 예외사항에 대해 집중하기 전에 사용자가 필요로 하는 스토리인가, 사용자의 문제를 해결해줄 수 있는 스토리인가로 초점을 맞추어 고민할 수 있습니다.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:heading {"level":5} --></p>
<h5><strong>대화를 유도하고 참여적인 설계를 이끌어낼 수 있다</strong></h5>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p>Waterfall 방식의 제품 개발 프로세스에서는 기획 단계에서 굉장히 구체적인 사항을 결정하고 기술해야 합니다. 각 단계에서 다시 역행하는 논의를 최소화해야 합니다.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>이 과정에서 대체로 사용자의 가치를 우선하기보다는 기술적인 구현 용이성을 고려하게 되기 쉽고, 필요한 모든 세부사항을 이미 포함하고 있기 때문에 더 의논할 필요가 없을 거라는 그릇된 믿음으로 이어지게 되어 대화를 단절한다는 점이 있습니다. (항상 그런 것은 아닙니다만)</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>제품 관리자(또는 기획자)는 기술적인 배경 지식이 완벽하지 않기에, 기획자가 생각한 예외사항에는 누락된 사항이 발생할 수 있습니다. 이런 세부적인 고려사항을 채워나가는 것의 책임은 기획자 뿐만 아니라 제품팀 모두에게 있으며, 디자이너, 개발자도 이 스토리를 구현하기 위해 필요한 사항을 함께 고민하고 대화를 통해 완성해나가야 합니다.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>일단 “이 스토리가 사용자에게 가치있는 것”이라는 공감대를 가진 후에는 이를 구현하기 위해 고려해야할 사항을 함께 질문하며 대화를 통해 구체화해나갑니다.<br />결과적으로 스토리가 구현되어 고객에게 릴리즈되는 시점에는 모든 사항들이 정리되어 완성되겠지만, '점차적으로 채워지며 보완되는' 문서라는 측면에서 차이가 있습니다.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>스토리 작성의 목적은 구현할 기능을 논의하기 위한 단서 역할입니다.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:heading {"level":5} --></p>
<h5><strong>반복적인 개발에 효율적이다</strong></h5>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p>스토리는 대부분 독립적이며, 나누기 용이합니다.<br />기술된 여러 개의 스토리 중에 고객 가치에 따라 우선 순위를 부여하고 우선 순위에 따라 스토리를 구현해나가는 방식으로 진행합니다.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>스토리는 하나하나가 가치 단위로 서술된 것이므로 모든 스토리가 완료되어야 고객에게 릴리즈할 수 있는 것이 아닙니다. 때문에 우선 순위에 따라 스토리를 구현해나가며 새로운 스토리를 추가할 수도, 스토리의 우선 순위를 변경할 수도 있습니다.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>하나의 예로, 리멤버의 채용 공고에는 검색 기능을 아직 지원하지 않고 있습니다.<br />“구직자는 회사명이나 공고명으로 게시된 공고를 검색할 수 있다" 라는 스토리가 검색을 해야할만큼 충분히 공고가 많아져야 사용자에게 가치있는 스토리일 것이라는 판단 하에 우선 순위가 낮았었던 겁니다. (물론 현재는 공고가 충분히 많아져서 이 스토리가 고객에게 매우 가치있는 스토리가 되어버렸습니다.)</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>이렇듯, 사용자 스토리는 스토리 단위로 우선 순위를 부여하여 반복적으로 제품을 보완하고 개선해나가는데에 효율적이라고 생각합니다.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:spacer {"height":"59px"} --></p>
 
<p><!-- /wp:spacer --></p>
<p><!-- wp:heading {"level":3} --></p>
<h3>어떻게 업무가 진행되는가?</h3>
<p><!-- /wp:heading --></p>
<p><!-- wp:heading {"level":5} --></p>
<h5><strong>문제 정의 및 가설 수립</strong></h5>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p>제품관리자는 다양한 소스(VoC, 관찰, 설문, 사용자 로그 등)를 통해 문제를 발견하고 이를 구체화합니다.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>제품관리자가 집중해야하는 것은 <b>사용자가 실제 겪고 있는 문제가 무엇인지를 발견하고 이를 명확히 정의하는 것에서 출발</b>합니다.<br />현재 발생하는 현상이나 고객 의견 등을 토대로 어떤 문제가 존재하고, 그 문제의 원인이 무엇인지 분석하여 우리가 해결하고자 하는 문제와 이를 해결함으로써 달성하고자 하는 목표를 명확하게 기술합니다.<br />이 단계를 탄탄하게 다져놓지 않는다면, 이후 이 스토리가 정말 가치있는 것인지, 이 스토리가 정말 문제를 해결하는 것인지 여러 논의를 거치며 다시 원론으로 돌아오게 되는 과정을 반복하게 될 수 있습니다.<br />단순한 아이디어에서 출발한 기획일지라도, 이것이 사용자의 어떤 문제를 해결할 수 있을 것인지 명확히 정의하지 않는다면 스토리의 우선 순위를 부여하기도 어렵거니와 이 스토리에 가치를 부여하기도 어렵습니다.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:heading {"level":5} --></p>
<h5><strong>스토리의 작성과 논의</strong></h5>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p>정의한 문제를 해결하기 위한 사용자 스토리를 기술합니다.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>제품관리자가 고객의 입장을 대변하여 1차적으로 스토리를 기술하는 책임을 가집니다. 물론 이 과정에서 필요하다면 영업담당자, 마케터 등과 함께 스토리에 대해 논의하기도 하고, 직접 고객의 의견을 참고하여 반영합니다. 이 단계에서는 스토리의 구현을 위한 구체적인 사항에 집중하지는 않습니다.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>1차적인 스토리 작성이 완료되면, 제품팀과 공유하여 아래의 순서대로 논의를 진행합니다.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:list {"style":{"typography":{"fontSize":"16px"}}} --></p>
<ul style="font-size: 16px;">
<li>문제에 대한 명확한 이해 (모두가 동일한 이해를 가져야 합니다)</li>
<li>이 스토리가 사용자의 문제를 해결해줄 수 있을 것인가?</li>
<li>스토리가 빠짐없이 기술되어 있는가? 추가해야할 스토리는 없는가?</li>
<li>스토리의 중요도는 각각 어떠한가? 중요도에 따라 우선 순위를 부여할 수 있는가?</li>
<li>스토리를 구현하기 위해 고려해야할 요소가 있는가?</li>
</ul>
<p><!-- /wp:list --></p>
<p><!-- wp:paragraph --></p>
<p>스토리를 구현하기 위해 고려할 사항은 질문 사항으로 기록해두며 결정한 사항이 있다면 이를 함께 기록합니다.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:heading {"level":5} --></p>
<h5><strong>디자인, 설계, 구현</strong></h5>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p>충분한 대화를 통해 모두가 스토리에 대한 동일한 이해를 가졌다면, 디자인/개발 파트에서 스토리 구현을 위한 설계를 진행합니다.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p><strong>디자인 파트</strong>에서는 user flow를 고려하여 디자인을 진행하면서 드는 질문 사항을 수시로 팀과 공유하며 구체화하고, 제품 관리자는 과정마다 나오는 질문과 결정 사항들을 스토리에 주석으로 기록합니다.<br /><strong>개발 파트</strong>에서는 스토리를 구현하기 위한 DB구조와 API 스펙 등 필요한 사항들을 설계하고 문서화하여 팀에 공유하고 피드백을 받아 보완해나갑니다.<br />모든 설계 내용은 초안 단계에서부터 팀에 공유됩니다.<br /><strong>데이터 분석 파트</strong>에서는 기술된 문제와 가설, user flow를 참고하여 검증해야할 지표를 정의하고 이를 측정하기 위한 이벤트 로그를 설계합니다.<br /><strong>QA 파트</strong>에서는 설계된 user flow를 바탕으로 누락된 시나리오나 예외사항이 없는지 점검하며 테스트 시나리오를 세웁니다.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>위의 모든 과정은 순차적으로 진행된다기 보다는 동시에 진행되는 경우가 많습니다. 계속해서 대화를 통해 질문하고 의견을 나눠가며 진행되기 때문에 반드시 디자인 &gt; 개발설계 &gt; ... 순으로 진행될 필요는 없습니다</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>어느 정도 설계와 디자인이 구체화 되면 우선순위에 따라 스토리를 구현해나갑니다. 매일매일 Daily-scrum과 slack을 통해 각자의 진행상황과 진행과정에서의 장애요소를 공유하고 놓쳤던 사항이 있다면 바로 관련한 사람들과 대화하며 결정하고 기록합니다.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>우선 순위가 높은 스토리 위주로 순차적으로 진행되기 때문에 연관된 모든 스토리를 포함한 디자인, 설계가 아닌 경우가 많고 이는 이후 스토리들을 구현하면서 계속 보강되어갑니다.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:heading {"level":5} --></p>
<h5><strong>테스트 및 배포</strong></h5>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p>우선 순위에 맞춰 세워진 배포 계획에 따라 필요한 스토리의 구현이 완료되면 테스트 과정을 거쳐 고객에게로 릴리즈됩니다.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>테스트 과정에서도 예외적인 시나리오가 발견되거나, 크고 작은 수정사항들이 발생하게 되지만 모든 사항을 다 한번에 대응하기 보다는 팀에서 이 시나리오가 얼마나 발생하게 될지, 발생했을때 얼마나 크리티컬할지를 판단하여 릴리즈에 포함할 대응사항인지, fast follow로 가져가야할 사항인지를 결정합니다. 거의 일어나지 않을 시나리오를 대응하기 위해 고객에게 가치를 딜리버리하는 시간이 늦어져서는 안된다고 전제하고 이에 맞춰 판단하고 있습니다.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:heading {"level":5} --></p>
<h5><strong>가설 검증 및 모니터링</strong></h5>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p>배포한 후에는 예상하지 못한 크래시나 버그가 발생하지는 않는지, 응답 속도에는 문제가 없는지 등을 모니터링하면서 이벤트 로그를 확인하며 처음에 세워뒀던 가설이 맞는지 검증하거나 실제 문제가 해결되었는지 확인합니다.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>미리 설정한 가설을 검증하면서, 가설과 다르다면 원인을 찾아보고 보완하면서 위의 iteration을 다시 반복합니다.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:spacer {"height":"59px"} --></p>
 
<p><!-- /wp:spacer --></p>
<p><!-- wp:heading {"level":3} --></p>
<h3>무엇을 유의해야 하는가?</h3>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p>사용자 스토리를 기반으로 제품을 구현해나갈 때 몇 가지 유의사항이 있습니다.<br />사용자 스토리와 관련한 책들에서 이 외에도 얘기하는 것들이 더 있지만, 제 생각에 특별히 유의하면 좋을 세 가지를 꼽아보았습니다.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:heading {"level":5} --></p>
<h5><strong>처음부터 너무 세부적인 사항을 기술하지 않는다</strong></h5>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p>두 가지 측면이 있습니다.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:list {"ordered":true,"style":{"typography":{"fontSize":"16px"}}} --></p>
<ol style="font-size: 16px;">
<li>스토리가 사용자에게 가치 있는 것인가 라는 본질적인 논의에서 벗어나게 될 수 있다.</li>
<li>대화를 단절하고, 필요한 사항이 모두 포함되어 있어 더 논의할 필요가 없다는 그릇된 믿음을 줄 수 있다.</li>
</ol>
가장 명심해야할 것은, 세부적인 사항에 집중하기 전에 이 스토리가 사용자에게 중요한 것인지를 우선 적으로 고민해야한다는 것입니다.
<p><!-- /wp:list --></p>
<p><!-- wp:paragraph --></p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:heading {"level":5} --></p>
<h5><strong>되도록 사용자 인터페이스를 배제한다</strong></h5>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p>첫 번째 유의사항과 비슷한 맥락입니다.<br />사용자 인터페이스가 처음부터 스토리에 반영되어 있다면 구성원들의 창의적인 생각과 논의를 방해할 수 있고, 제품 디자이너가 더 나은 UX를 위한 고민을 하지 않게 될 수 있습니다.</p>
<p>제품관리자가 스토리를 정의하며 머릿속에 어느 정도 user flow나 좀 더 구체화된 wireframe이 있을 수 있지만 제품 디자이너가 그 wireframe에 생각이 고정되어 버릴 수 있기 때문에 기술된 스토리를 기반으로 구체적인 대화를 하기 전에 wireframe부터 제시하지 않을 것을 권장합니다.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:heading {"level":5} --></p>
<h5><strong>사용자 역할(User role) 모델을 명확히 정의한다</strong></h5>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p>서비스(제품)를 이용하는 사용자 유형은 매우 다양할 수 있습니다. 한 유형의 사용자를 생각하고 스토리를 기술하는 경우, 일부 사용자 유형의 요구를 무시하는 결과를 낳을 수 있습니다. 다양한 사용자 역할을 정의하여 각각마다 적절한 속성을 정의하고, 이들 간의 차이를 충분히 이해한 후 스토리를 생각해보면 자칫 지나칠 수 있는 사용자 스토리를 발견할 수도 있습니다.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>필요하다면 persona를 정의해서 특정 사용자 역할을 대표하는 인물을 설정해둔다면 커뮤니케이션이 훨씬 수월해지기도 합니다.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:spacer {"height":"59px"} --></p>
 
<p><!-- /wp:spacer --></p>
<p><!-- wp:heading {"level":3} --></p>
<h3>마치며</h3>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p>이상 리멤버의 제품 크루들이 사용자 스토리에 기반하여 어떻게 제품을 만들어나가는지 간략히 설명 드렸습니다.<br />아직 부족한 부분도 많고, 계속해서 보완해나가고 있지만 서두에서 말씀드린 “고객 가치"와 “대화" 라는 두 가치를 기반으로 한다는 것에는 변함이 없는 것 같습니다.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>많은 회사에서 이미 비슷한 방식으로 업무를 진행하고 있기도 하고, 그렇지 않은 곳들도 있으실텐데요. 정답은 없다고 생각합니다.<br />이런 식으로 일하는 곳도 있구나 라고 생각하고 참고해주시기를 바랍니다.</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p>혹시라도 이런 방식으로 저희와 함께 일해보고 싶은 분이 계시다면, <br />드라마앤컴퍼니의 채용은 항상 열려 있으니 주저말고 연락 주세요!</p>
<p> </p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p> </p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --></p>
<p><!-- /wp:paragraph --></p>
													<a href="https://hello.remember.co.kr">
							<img width="1024" height="367" src="https://blog.dramancompany.com/wp-content/uploads/2022/03/채용-포지션-확인-CTA_1-1024x367.png" alt="" loading="lazy" srcset="https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2022/03/채용-포지션-확인-CTA_1.png?resize=1024%2C367&amp;ssl=1 1024w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2022/03/채용-포지션-확인-CTA_1.png?resize=300%2C108&amp;ssl=1 300w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2022/03/채용-포지션-확인-CTA_1.png?resize=768%2C275&amp;ssl=1 768w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2022/03/채용-포지션-확인-CTA_1.png?resize=750%2C269&amp;ssl=1 750w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2022/03/채용-포지션-확인-CTA_1.png?resize=1140%2C409&amp;ssl=1 1140w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2022/03/채용-포지션-확인-CTA_1.png?w=1200&amp;ssl=1 1200w" sizes="(max-width: 1024px) 100vw, 1024px" />								</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2603</wp:post_id>
		<wp:post_date><![CDATA[2022-03-09 22:57:54]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-03-09 13:57:54]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-03-11 16:27:39]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-03-11 07:27:39]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%ec%82%ac%ec%9a%a9%ec%9e%90-%ec%8a%a4%ed%86%a0%eb%a6%ac-%ea%b8%b0%eb%b0%98%ec%9d%98-%ec%a0%9c%ed%92%88-%ea%b0%9c%eb%b0%9c]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="culture"><![CDATA[Culture]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle_flag]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle]]></wp:meta_key>
		<wp:meta_value><![CDATA[리멤버의 제품 크루는 어떻게 일하는가?]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729395989;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:2174;}i:1;a:1:{s:2:"id";i:1783;}i:2;a:1:{s:2:"id";i:2479;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[51]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_single_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:23:{s:8:"subtitle";s:53:"리멤버의 제품 크루는 어떻게 일하는가?";s:6:"format";s:8:"standard";s:5:"video";s:0:"";s:7:"gallery";s:0:"";s:11:"source_name";s:0:"";s:10:"source_url";s:0:"";s:8:"via_name";s:0:"";s:7:"via_url";s:0:"";s:17:"override_template";s:1:"0";s:8:"override";a:1:{i:0;a:32:{s:8:"template";s:1:"1";s:18:"single_blog_custom";s:0:"";s:8:"parallax";s:1:"1";s:10:"fullscreen";s:1:"1";s:6:"layout";s:13:"right-sidebar";s:7:"sidebar";s:15:"default-sidebar";s:14:"second_sidebar";s:15:"default-sidebar";s:14:"sticky_sidebar";s:1:"1";s:14:"share_position";s:3:"top";s:17:"share_float_style";s:16:"share-monocrhome";s:18:"show_share_counter";s:1:"1";s:17:"show_view_counter";s:1:"1";s:13:"show_featured";s:1:"1";s:14:"show_post_meta";s:1:"1";s:16:"show_post_author";s:1:"1";s:22:"show_post_author_image";s:1:"1";s:14:"show_post_date";s:1:"1";s:16:"post_date_format";s:7:"default";s:23:"post_date_format_custom";s:5:"Y/m/d";s:18:"show_post_category";s:1:"1";s:22:"show_post_reading_time";s:1:"0";s:21:"post_reading_time_wpm";s:3:"300";s:16:"show_zoom_button";s:1:"0";s:20:"zoom_button_out_step";s:1:"2";s:19:"zoom_button_in_step";s:1:"3";s:13:"show_post_tag";s:1:"1";s:19:"show_prev_next_post";s:1:"1";s:15:"show_popup_post";s:1:"1";s:17:"number_popup_post";s:1:"1";s:15:"show_author_box";s:1:"0";s:17:"show_post_related";s:1:"0";s:24:"show_inline_post_related";s:1:"0";}}s:19:"override_image_size";s:1:"0";s:14:"image_override";a:1:{i:0;a:2:{s:26:"single_post_thumbnail_size";s:8:"crop-500";s:24:"single_post_gallery_size";s:8:"crop-500";}}s:13:"trending_post";s:1:"0";s:22:"trending_post_position";s:4:"meta";s:19:"trending_post_label";s:8:"Trending";s:14:"sponsored_post";s:1:"0";s:20:"sponsored_post_label";s:12:"Sponsored by";s:19:"sponsored_post_name";s:0:"";s:18:"sponsored_post_url";s:0:"";s:26:"sponsored_post_logo_enable";s:1:"0";s:19:"sponsored_post_logo";s:0:"";s:19:"sponsored_post_desc";s:0:"";s:10:"disable_ad";s:1:"0";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:2:"id";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_estimated-reading-time-minutes]]></wp:meta_key>
		<wp:meta_value><![CDATA[9]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_template_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[wp-post]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_version]]></wp:meta_key>
		<wp:meta_value><![CDATA[3.6.0-dev39]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_data]]></wp:meta_key>
		<wp:meta_value><![CDATA[[{"id":"1f271de3","elType":"section","settings":[],"elements":[{"id":"38eaa149","elType":"column","settings":{"_column_size":100},"elements":[{"id":"a50d607","elType":"widget","settings":{"image":{"url":"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2022\/03\/ck_2-2.jpg","id":2693,"alt":"","source":"library"}},"elements":[],"widgetType":"image"},{"id":"4b124337","elType":"widget","settings":{"editor":"<p><!-- wp:paragraph --><\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\uc548\ub155\ud558\uc138\uc694, \ub9ac\uba64\ubc84\uc5d0\uc11c CPO\ub97c \ub9e1\uace0 \uc788\ub294 \uc815\ud604\ud638 \uc785\ub2c8\ub2e4.<br \/><span style=\"color: var( --e-global-color-text );\">\uc774\ubc88 \uae00\uc5d0\uc11c\ub294 \ub9ac\uba64\ubc84 \uc81c\ud488 \ud06c\ub8e8\ub4e4\uc774 \uc77c\ud558\ub294 \ubc29\uc2dd\uc5d0 \ub300\ud574 \uc18c\uac1c\ub4dc\ub9b4\uae4c \ud569\ub2c8\ub2e4.<\/span><\/p>\n<p>\ub9ac\uba64\ubc84\uc758 \uc81c\ud488 \ud06c\ub8e8\ub4e4\uc740 [\uc0ac\uc6a9\uc790 \uc2a4\ud1a0\ub9ac] \uae30\ubc18\uc73c\ub85c \uae30\ud68d\uc11c\ub97c \uc791\uc131\ud558\uace0, \ud300\uacfc \uacf5\uc720\ud558\uc5ec \uc81c\ud488 \uac1c\ubc1c\uc744 \uc9c4\ud589\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\uc0ac\uc6a9\uc790 \uc2a4\ud1a0\ub9ac \uae30\ubc18\uc758 \uae30\uc220 \ubc29\uc2dd\uc740 \uc77c\ubc18\uc801\uc73c\ub85c \uc0dd\uac01\ud558\ub294 \uae30\ub2a5\uba85\uc138\uc11c\uc640\ub294 \uc0ac\ubb47 \ub2e4\ub978 \ud615\ud0dc\ub97c \ub744\uace0 \uc788\uc5b4\uc11c \uc774\ub7f0 \ud615\ud0dc\uc758 \ubb38\uc11c\ub97c \ucc98\uc74c \uc811\ud558\ub294 \ubd84\ub4e4\uc5d0\uac8c\ub294 \uaf64\ub098 \uc0dd\uc18c\ud558\uac8c \ub290\uaef4\uc9c8 \uc218 \uc788\uc2b5\ub2c8\ub2e4.<br \/>\uac00\ub054\uc529 \ub4dc\ub77c\ub9c8\uc564\ucef4\ud37c\ub2c8\uc5d0 \uc0c8\ub86d\uac8c \ud569\ub958\ud558\uc2e0 \ubd84\ub4e4\uc774 \uc0ac\uc6a9\uc790 \uc2a4\ud1a0\ub9ac \uae30\ubc18\uc73c\ub85c \uae30\uc220\ub41c \ubb38\uc11c\ub97c \ucc98\uc74c \uc811\ud558\uba74\uc11c, \u201c\uc76d? \uc774\uac8c \uae30\ud68d\uc11c\uc57c?\u201d \ub77c\ub294 \ubc18\uc751\uc744 \ubcf4\uc774\ub294 \uacbd\uc6b0\ub4e4\ub3c4 \uc788\ub294\ub370\uc694.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\uc77c\ud558\ub294 \ubc29\uc2dd\uc5d0 \uc788\uc5b4\uc11c \ud56d\uc0c1 \uc815\ub2f5\uc774\ub780\uac8c \uc788\uc744 \uc218\ub294 \uc5c6\uaca0\uc9c0\ub9cc, \uc800\ud76c\ub294 \uc544\ub798 \ub450 \uac00\uc9c0 \uac00\uce58\uc5d0 \uc911\uc810\uc744 \ub450\uace0 \ud604\uc7ac\uc640 \uac19\uc740 \uc5c5\ubb34 \ubc29\uc2dd\uc744 \uc720\uc9c0\ud574\uc624\uace0 \uc788\uc2b5\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:list {\"ordered\":true,\"style\":{\"typography\":{\"fontSize\":\"16px\"}}} --><\/p>\n<ol style=\"font-size: 16px;\">\n<li>\uc6b0\ub9ac\ub294 \uace0\uac1d\uc758 \uac00\uce58\uc5d0 \ucd08\uc810\uc744 \ub450\uc5b4\uc57c \ud55c\ub2e4. \uace0\uac1d\uc5d0\uac8c \uac00\uce58\ub97c \uc804\ub2ec\ud558\ub294 \uc77c\uc740 \uc6b0\ub9ac \ubaa8\ub450\uc758 \uc5ed\ud560\uc774\uc790 \ucc45\uc784\uc774\ub2e4.<\/li>\n<li>\uc6b0\ub9ac\ub294 \ub300\ud654\ub97c \uc9c0\ud5a5\ud55c\ub2e4. \ub300\ud654\ub97c \ud1b5\ud574 \ub354 \uc88b\uc740 \ubc29\ud5a5\uc73c\ub85c \ubc1c\uc804\ud560 \uc218 \uc788\ub2e4\uace0 \ubbff\ub294\ub2e4.<\/li>\n<\/ol>\n<p><!-- \/wp:list --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\ub9ce\uc740 \ubd84\ub4e4\uc774 \ub4dc\ub77c\ub9c8\ub294 \uc81c\ud488 \uac1c\ubc1c\uc774 \uc5b4\ub5a4 \ud504\ub85c\uc138\uc2a4\ub85c \uc9c4\ud589\ub418\ub294\uc9c0 \uad81\uae08\ud574\ud558\uc2dc\uace0, \ud2b9\ud788\ub098 \uae30\ud68d \ub2e8\uacc4\uc5d0\uc11c\ubd80\ud130 \uc5b4\ub5a4 \uc2dd\uc73c\ub85c \ubb38\uc11c\ub97c \ub9cc\ub4e4\uace0 \ud504\ub85c\uc138\uc2a4\uac00 \uc9c4\ud589\ub418\ub294\uc9c0 \uad81\uae08\ud574\ud558\uc154\uc11c \uc0ac\uc6a9\uc790 \uc2a4\ud1a0\ub9ac\uc5d0 \uae30\ubc18\ud55c \ub4dc\ub77c\ub9c8\uc758 \uc81c\ud488 \uac1c\ubc1c \ud504\ub85c\uc138\uc2a4\ub97c \uc18c\uac1c\ub4dc\ub9ac\uba74 \uc88b\uaca0\ub2e4\uace0 \uc0dd\uac01\ud588\uc2b5\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\uadf8\ub7fc \uc0ac\uc6a9\uc790 \uc2a4\ud1a0\ub9ac\ub780 \ubb34\uc5c7\uc774\uace0, \ub9ac\uba64\ubc84\uc5d0\uc11c \uc5b4\ub5bb\uac8c \uc81c\ud488 \uac1c\ubc1c \ud504\ub85c\uc138\uc2a4\uac00 \uc9c4\ud589\ub418\ub294\uc9c0 \uc124\uba85\ud574\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:spacer {\"height\":\"59px\"} --><\/p>\n<div class=\"wp-block-spacer\" style=\"height: 59px;\" aria-hidden=\"true\">\u00a0<\/div>\n<p><!-- \/wp:spacer --><\/p>\n<p><!-- wp:heading {\"level\":3} --><\/p>\n<h3>\uc0ac\uc6a9\uc790 \uc2a4\ud1a0\ub9ac\ub780?<\/h3>\n<p><!-- \/wp:heading --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\uc0ac\uc6a9\uc790 \uc2a4\ud1a0\ub9ac\ub294 <strong>\uc0ac\uc6a9\uc790\ub098 \uad6c\ub9e4\uc790\uc5d0\uac8c \uac00\uce58\ub97c \uc904 \uc218 \uc788\ub294 \uc18c\ud504\ud2b8\uc6e8\uc5b4\uc758 \uae30\ub2a5\uc744 \uc11c\uc220\ud55c \uac83<\/strong>\uc785\ub2c8\ub2e4.<br \/>\uc27d\uac8c \uc598\uae30\ud558\uba74, \uc0ac\uc6a9\uc790\uac00 \uc18c\ud504\ud2b8\uc6e8\uc5b4\ub97c \ud1b5\ud574 \ubb34\uc5c7\uc744 \ud560 \uc218 \uc788\ub294\uc9c0\ub97c \uc0ac\uc6a9\uc790 \uad00\uc810\uc5d0\uc11c \uc11c\uc220\ud55c \uac83\uc774\ub77c\uace0 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p><strong>&lt;\uc0ac\uc6a9\uc790 \uc2a4\ud1a0\ub9ac\uc758 \uc608\uc2dc&gt;<\/strong><\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:pullquote {\"textAlign\":\"left\"} --><\/p>\n<figure class=\"wp-block-pullquote has-text-align-left\">\n<blockquote>\n<p><em>\uc0ac\uc6a9\uc790\ub294 \uc790\uc2e0\uc758 \ud504\ub85c\ud544\uc744 \ud2b9\uc815 \uae30\uc5c5\uc774 \uac80\uc0c9\ud558\uc9c0 \ubabb\ud558\ub3c4\ub85d \uc81c\ud55c\ud560 \uc218 \uc788\ub2e4<\/em><\/p>\n<p><em>\uc0ac\uc6a9\uc790\ub294 \uc790\uc2e0\uc758 \ud504\ub85c\ud544\uc744 \ucc44\uc6a9 \uae30\uc5c5\ub4e4\uc774 \uac80\uc0c9, \uc5f4\ub78c\ud560 \uc218 \uc788\ub3c4\ub85d \ud5c8\uc6a9\ud560 \uc218 \uc788\ub2e4<\/em><\/p>\n<\/blockquote>\n<\/figure>\n<p><!-- \/wp:pullquote --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\uc774\ub807\uac8c \uc0ac\uc6a9\uc790 \uad00\uc810\uc73c\ub85c \uc11c\uc220\ud558\uba74 \uc0ac\uc6a9\uc790 \uc2a4\ud1a0\ub9ac\ub9cc \ubcf4\uc544\ub3c4 \uc0ac\uc6a9\uc790\uac00 \uc11c\ube44\uc2a4\uc5d0\uc11c \uc5b4\ub5a4 \uac83\ub4e4\uc744 \ud560 \uc218 \uc788\ub294\uc9c0 \uc27d\uac8c \uc774\ud574\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.<br \/>\uc0ac\uc6a9\uc790 \uc2a4\ud1a0\ub9ac\ub294 \uae30\uc220\uc801\uc778 \uc138\ubd80\uc0ac\ud56d\uc774\ub098 \uad6c\ud604\uc758 \uc6a9\uc774\uc131 \ubcf4\ub2e4\ub294 \u2018\uc0ac\uc6a9\uc790 \uac00\uce58\u2019\uc5d0 \ucd08\uc810\uc744 \ub450\uace0 \uc788\uae30 \ub54c\ubb38\uc5d0, <strong><span style=\"text-decoration: underline;\">\uc774 \uc2a4\ud1a0\ub9ac\uac00 \uc0ac\uc6a9\uc790\uc5d0\uac8c \ud544\uc694\ud55c\uac00, \uac00\uce58\uac00 \uc788\ub294\uac00\ub97c \uc6b0\uc120\uc801\uc73c\ub85c \uace0\ub824<\/span><\/strong>\ud558\uac8c \ud569\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\uc0ac\uc6a9\uc790 \uc2a4\ud1a0\ub9ac\ub294 \"\ub300\ud654\"\ub77c\ub294 \uce21\uba74\uc744 \ud2b9\ud788 \uac15\uc870\ud569\ub2c8\ub2e4.<br \/>\uc2a4\ud1a0\ub9ac\ub294 \ucc98\uc74c\ubd80\ud130 \uadf8 \uae30\ub2a5\uc758 \ub3d9\uc791\uacfc \uc608\uc678\uc0ac\ud56d\uc744 \ubaa8\ub450 \ud3ec\ud568\ud558\uc9c0 \uc54a\uc73c\uba70, \uc2a4\ud1a0\ub9ac\ub97c \uad6c\ud604\ud558\uae30 \uc704\ud574 \uace0\ub824\ud574\uc57c\ud560 \uc0ac\ud56d\ub4e4\uc740 \uc81c\ud488\ud300 \uc548\uc5d0\uc11c <strong><span style=\"text-decoration: underline;\">\"\ub300\ud654\"\ub97c \ud1b5\ud574 \uc644\uc131\ud574\ub098\uac00\ub294 \ubc29\uc2dd\uc744 \uc9c0\ud5a5<\/span><\/strong>\ud569\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:spacer {\"height\":\"59px\"} --><\/p>\n<div class=\"wp-block-spacer\" style=\"height: 59px;\" aria-hidden=\"true\">\u00a0<\/div>\n<p><!-- \/wp:spacer --><\/p>\n<p><!-- wp:heading {\"level\":3} --><\/p>\n<h3>\uc65c \uc0ac\uc6a9\uc790 \uc2a4\ud1a0\ub9ac\uc778\uac00?<\/h3>\n<p><!-- \/wp:heading --><\/p>\n<p><!-- wp:heading {\"level\":5} --><\/p>\n<h5><strong>\uace0\uac1d \uad00\uc810\uc73c\ub85c \uc11c\uc220\ud558\uc5ec \ub204\uad6c\ub098 \uc774\ud574\ud558\uae30 \uc27d\ub2e4<\/strong><\/h5>\n<p><!-- \/wp:heading --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\uc55e\uc11c \ubcf4\uc558\ub4ef\uc774, \uc0ac\uc6a9\uc790 \uc2a4\ud1a0\ub9ac\ub294 \uc18c\ud504\ud2b8\uc6e8\uc5b4, \uc2dc\uc2a4\ud15c\uc744 \ud1b5\ud574 \uc0ac\uc6a9\uc790\uac00 \ubb34\uc5c7\uc744 \ud560 \uc218 \uc788\ub294\uc9c0\ub97c \uae30\uc220\ud55c \uac83\uc774\uae30 \ub54c\ubb38\uc5d0 \uc0ac\uc6a9\uc790 \uc2a4\ud1a0\ub9ac\ub9cc \uc77d\uc5b4\ubcf4\uc544\ub3c4 \uc5b4\ub5a4 \uae30\ub2a5\ub4e4\uc774 \uc788\ub294\uc9c0\ub97c \uc27d\uac8c \uc774\ud574\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\uc81c\ud488 \uac1c\ubc1c\ud300\uc774 \uc544\ub2cc \uc601\uc5c5\ub2f4\ub2f9\uc790\uac00 \ubcf4\ub354\ub77c\ub3c4 \ud639\uc740 \uc0c8\ub85c \ud569\ub958\ud55c \uc0ac\ub78c\uc774 \ubcf4\ub354\ub77c\ub3c4 \uc774\ud574\ud558\uae30 \uc27d\uae30 \ub54c\ubb38\uc5d0 \u201c\uc774 \uc2a4\ud1a0\ub9ac\uac00 \uace0\uac1d\uc5d0\uac8c \uc815\ub9d0 \ud544\uc694\ud55c\uac00? \uac00\uce58\uc788\ub294\uac00?\u201d \ub77c\ub294 \uad00\uc810\uc73c\ub85c \ubaa8\ub450\uac00 \ud568\uaed8 \uace0\ubbfc\ud560 \uc218 \uc788\uace0 \uc598\uae30\ub97c \ub098\ub204\uae30\uac00 \uc6a9\uc774\ud569\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\uae30\uc220\uc801\uc778 \uad6c\ud604 \ub09c\uc774\ub3c4\ub098 \uc608\uc678\uc0ac\ud56d\uc5d0 \ub300\ud574 \uc9d1\uc911\ud558\uae30 \uc804\uc5d0 \uc0ac\uc6a9\uc790\uac00 \ud544\uc694\ub85c \ud558\ub294 \uc2a4\ud1a0\ub9ac\uc778\uac00, \uc0ac\uc6a9\uc790\uc758 \ubb38\uc81c\ub97c \ud574\uacb0\ud574\uc904 \uc218 \uc788\ub294 \uc2a4\ud1a0\ub9ac\uc778\uac00\ub85c \ucd08\uc810\uc744 \ub9de\ucd94\uc5b4 \uace0\ubbfc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:heading {\"level\":5} --><\/p>\n<h5><strong>\ub300\ud654\ub97c \uc720\ub3c4\ud558\uace0 \ucc38\uc5ec\uc801\uc778 \uc124\uacc4\ub97c \uc774\ub04c\uc5b4\ub0bc \uc218 \uc788\ub2e4<\/strong><\/h5>\n<p><!-- \/wp:heading --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>Waterfall \ubc29\uc2dd\uc758 \uc81c\ud488 \uac1c\ubc1c \ud504\ub85c\uc138\uc2a4\uc5d0\uc11c\ub294 \uae30\ud68d \ub2e8\uacc4\uc5d0\uc11c \uad49\uc7a5\ud788 \uad6c\uccb4\uc801\uc778 \uc0ac\ud56d\uc744 \uacb0\uc815\ud558\uace0 \uae30\uc220\ud574\uc57c \ud569\ub2c8\ub2e4. \uac01 \ub2e8\uacc4\uc5d0\uc11c \ub2e4\uc2dc \uc5ed\ud589\ud558\ub294 \ub17c\uc758\ub97c \ucd5c\uc18c\ud654\ud574\uc57c \ud569\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\uc774 \uacfc\uc815\uc5d0\uc11c \ub300\uccb4\ub85c \uc0ac\uc6a9\uc790\uc758 \uac00\uce58\ub97c \uc6b0\uc120\ud558\uae30\ubcf4\ub2e4\ub294 \uae30\uc220\uc801\uc778 \uad6c\ud604 \uc6a9\uc774\uc131\uc744 \uace0\ub824\ud558\uac8c \ub418\uae30 \uc27d\uace0, \ud544\uc694\ud55c \ubaa8\ub4e0 \uc138\ubd80\uc0ac\ud56d\uc744 \uc774\ubbf8 \ud3ec\ud568\ud558\uace0 \uc788\uae30 \ub54c\ubb38\uc5d0 \ub354 \uc758\ub17c\ud560 \ud544\uc694\uac00 \uc5c6\uc744 \uac70\ub77c\ub294 \uadf8\ub987\ub41c \ubbff\uc74c\uc73c\ub85c \uc774\uc5b4\uc9c0\uac8c \ub418\uc5b4 \ub300\ud654\ub97c \ub2e8\uc808\ud55c\ub2e4\ub294 \uc810\uc774 \uc788\uc2b5\ub2c8\ub2e4. (\ud56d\uc0c1 \uadf8\ub7f0 \uac83\uc740 \uc544\ub2d9\ub2c8\ub2e4\ub9cc)<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\uc81c\ud488 \uad00\ub9ac\uc790(\ub610\ub294 \uae30\ud68d\uc790)\ub294 \uae30\uc220\uc801\uc778 \ubc30\uacbd \uc9c0\uc2dd\uc774 \uc644\ubcbd\ud558\uc9c0 \uc54a\uae30\uc5d0, \uae30\ud68d\uc790\uac00 \uc0dd\uac01\ud55c \uc608\uc678\uc0ac\ud56d\uc5d0\ub294 \ub204\ub77d\ub41c \uc0ac\ud56d\uc774 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7f0 \uc138\ubd80\uc801\uc778 \uace0\ub824\uc0ac\ud56d\uc744 \ucc44\uc6cc\ub098\uac00\ub294 \uac83\uc758 \ucc45\uc784\uc740 \uae30\ud68d\uc790 \ubfd0\ub9cc \uc544\ub2c8\ub77c \uc81c\ud488\ud300 \ubaa8\ub450\uc5d0\uac8c \uc788\uc73c\uba70, \ub514\uc790\uc774\ub108, \uac1c\ubc1c\uc790\ub3c4 \uc774 \uc2a4\ud1a0\ub9ac\ub97c \uad6c\ud604\ud558\uae30 \uc704\ud574 \ud544\uc694\ud55c \uc0ac\ud56d\uc744 \ud568\uaed8 \uace0\ubbfc\ud558\uace0 \ub300\ud654\ub97c \ud1b5\ud574 \uc644\uc131\ud574\ub098\uac00\uc57c \ud569\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\uc77c\ub2e8 \u201c\uc774 \uc2a4\ud1a0\ub9ac\uac00 \uc0ac\uc6a9\uc790\uc5d0\uac8c \uac00\uce58\uc788\ub294 \uac83\u201d\uc774\ub77c\ub294 \uacf5\uac10\ub300\ub97c \uac00\uc9c4 \ud6c4\uc5d0\ub294 \uc774\ub97c \uad6c\ud604\ud558\uae30 \uc704\ud574 \uace0\ub824\ud574\uc57c\ud560 \uc0ac\ud56d\uc744 \ud568\uaed8 \uc9c8\ubb38\ud558\uba70 \ub300\ud654\ub97c \ud1b5\ud574 \uad6c\uccb4\ud654\ud574\ub098\uac11\ub2c8\ub2e4.<br \/>\uacb0\uacfc\uc801\uc73c\ub85c \uc2a4\ud1a0\ub9ac\uac00 \uad6c\ud604\ub418\uc5b4 \uace0\uac1d\uc5d0\uac8c \ub9b4\ub9ac\uc988\ub418\ub294 \uc2dc\uc810\uc5d0\ub294 \ubaa8\ub4e0 \uc0ac\ud56d\ub4e4\uc774 \uc815\ub9ac\ub418\uc5b4 \uc644\uc131\ub418\uaca0\uc9c0\ub9cc, '\uc810\ucc28\uc801\uc73c\ub85c \ucc44\uc6cc\uc9c0\uba70 \ubcf4\uc644\ub418\ub294' \ubb38\uc11c\ub77c\ub294 \uce21\uba74\uc5d0\uc11c \ucc28\uc774\uac00 \uc788\uc2b5\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\uc2a4\ud1a0\ub9ac \uc791\uc131\uc758 \ubaa9\uc801\uc740 \uad6c\ud604\ud560 \uae30\ub2a5\uc744 \ub17c\uc758\ud558\uae30 \uc704\ud55c \ub2e8\uc11c \uc5ed\ud560\uc785\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:heading {\"level\":5} --><\/p>\n<h5><strong>\ubc18\ubcf5\uc801\uc778 \uac1c\ubc1c\uc5d0 \ud6a8\uc728\uc801\uc774\ub2e4<\/strong><\/h5>\n<p><!-- \/wp:heading --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\uc2a4\ud1a0\ub9ac\ub294 \ub300\ubd80\ubd84 \ub3c5\ub9bd\uc801\uc774\uba70, \ub098\ub204\uae30 \uc6a9\uc774\ud569\ub2c8\ub2e4.<br \/>\uae30\uc220\ub41c \uc5ec\ub7ec \uac1c\uc758 \uc2a4\ud1a0\ub9ac \uc911\uc5d0 \uace0\uac1d \uac00\uce58\uc5d0 \ub530\ub77c \uc6b0\uc120 \uc21c\uc704\ub97c \ubd80\uc5ec\ud558\uace0 \uc6b0\uc120 \uc21c\uc704\uc5d0 \ub530\ub77c \uc2a4\ud1a0\ub9ac\ub97c \uad6c\ud604\ud574\ub098\uac00\ub294 \ubc29\uc2dd\uc73c\ub85c \uc9c4\ud589\ud569\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\uc2a4\ud1a0\ub9ac\ub294 \ud558\ub098\ud558\ub098\uac00 \uac00\uce58 \ub2e8\uc704\ub85c \uc11c\uc220\ub41c \uac83\uc774\ubbc0\ub85c \ubaa8\ub4e0 \uc2a4\ud1a0\ub9ac\uac00 \uc644\ub8cc\ub418\uc5b4\uc57c \uace0\uac1d\uc5d0\uac8c \ub9b4\ub9ac\uc988\ud560 \uc218 \uc788\ub294 \uac83\uc774 \uc544\ub2d9\ub2c8\ub2e4. \ub54c\ubb38\uc5d0 \uc6b0\uc120 \uc21c\uc704\uc5d0 \ub530\ub77c \uc2a4\ud1a0\ub9ac\ub97c \uad6c\ud604\ud574\ub098\uac00\uba70 \uc0c8\ub85c\uc6b4 \uc2a4\ud1a0\ub9ac\ub97c \ucd94\uac00\ud560 \uc218\ub3c4, \uc2a4\ud1a0\ub9ac\uc758 \uc6b0\uc120 \uc21c\uc704\ub97c \ubcc0\uacbd\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\ud558\ub098\uc758 \uc608\ub85c, \ub9ac\uba64\ubc84\uc758 \ucc44\uc6a9 \uacf5\uace0\uc5d0\ub294 \uac80\uc0c9 \uae30\ub2a5\uc744 \uc544\uc9c1 \uc9c0\uc6d0\ud558\uc9c0 \uc54a\uace0 \uc788\uc2b5\ub2c8\ub2e4.<br \/>\u201c\uad6c\uc9c1\uc790\ub294 \ud68c\uc0ac\uba85\uc774\ub098 \uacf5\uace0\uba85\uc73c\ub85c \uac8c\uc2dc\ub41c \uacf5\uace0\ub97c \uac80\uc0c9\ud560 \uc218 \uc788\ub2e4\" \ub77c\ub294 \uc2a4\ud1a0\ub9ac\uac00 \uac80\uc0c9\uc744 \ud574\uc57c\ud560\ub9cc\ud07c \ucda9\ubd84\ud788 \uacf5\uace0\uac00 \ub9ce\uc544\uc838\uc57c \uc0ac\uc6a9\uc790\uc5d0\uac8c \uac00\uce58\uc788\ub294 \uc2a4\ud1a0\ub9ac\uc77c \uac83\uc774\ub77c\ub294 \ud310\ub2e8 \ud558\uc5d0 \uc6b0\uc120 \uc21c\uc704\uac00 \ub0ae\uc558\uc5c8\ub358 \uac81\ub2c8\ub2e4. (\ubb3c\ub860 \ud604\uc7ac\ub294 \uacf5\uace0\uac00 \ucda9\ubd84\ud788 \ub9ce\uc544\uc838\uc11c \uc774 \uc2a4\ud1a0\ub9ac\uac00 \uace0\uac1d\uc5d0\uac8c \ub9e4\uc6b0 \uac00\uce58\uc788\ub294 \uc2a4\ud1a0\ub9ac\uac00 \ub418\uc5b4\ubc84\ub838\uc2b5\ub2c8\ub2e4.)<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\uc774\ub807\ub4ef, \uc0ac\uc6a9\uc790 \uc2a4\ud1a0\ub9ac\ub294 \uc2a4\ud1a0\ub9ac \ub2e8\uc704\ub85c \uc6b0\uc120 \uc21c\uc704\ub97c \ubd80\uc5ec\ud558\uc5ec \ubc18\ubcf5\uc801\uc73c\ub85c \uc81c\ud488\uc744 \ubcf4\uc644\ud558\uace0 \uac1c\uc120\ud574\ub098\uac00\ub294\ub370\uc5d0 \ud6a8\uc728\uc801\uc774\ub77c\uace0 \uc0dd\uac01\ud569\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:spacer {\"height\":\"59px\"} --><\/p>\n<div class=\"wp-block-spacer\" style=\"height: 59px;\" aria-hidden=\"true\">\u00a0<\/div>\n<p><!-- \/wp:spacer --><\/p>\n<p><!-- wp:heading {\"level\":3} --><\/p>\n<h3>\uc5b4\ub5bb\uac8c \uc5c5\ubb34\uac00 \uc9c4\ud589\ub418\ub294\uac00?<\/h3>\n<p><!-- \/wp:heading --><\/p>\n<p><!-- wp:heading {\"level\":5} --><\/p>\n<h5><strong>\ubb38\uc81c \uc815\uc758 \ubc0f \uac00\uc124 \uc218\ub9bd<\/strong><\/h5>\n<p><!-- \/wp:heading --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\uc81c\ud488\uad00\ub9ac\uc790\ub294 \ub2e4\uc591\ud55c \uc18c\uc2a4(VoC, \uad00\ucc30, \uc124\ubb38, \uc0ac\uc6a9\uc790 \ub85c\uadf8 \ub4f1)\ub97c \ud1b5\ud574 \ubb38\uc81c\ub97c \ubc1c\uacac\ud558\uace0 \uc774\ub97c \uad6c\uccb4\ud654\ud569\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\uc81c\ud488\uad00\ub9ac\uc790\uac00 \uc9d1\uc911\ud574\uc57c\ud558\ub294 \uac83\uc740 <b>\uc0ac\uc6a9\uc790\uac00 \uc2e4\uc81c \uacaa\uace0 \uc788\ub294 \ubb38\uc81c\uac00 \ubb34\uc5c7\uc778\uc9c0\ub97c \ubc1c\uacac\ud558\uace0 \uc774\ub97c \uba85\ud655\ud788 \uc815\uc758\ud558\ub294 \uac83\uc5d0\uc11c \ucd9c\ubc1c<\/b>\ud569\ub2c8\ub2e4.<br \/>\ud604\uc7ac \ubc1c\uc0dd\ud558\ub294 \ud604\uc0c1\uc774\ub098 \uace0\uac1d \uc758\uacac \ub4f1\uc744 \ud1a0\ub300\ub85c \uc5b4\ub5a4 \ubb38\uc81c\uac00 \uc874\uc7ac\ud558\uace0, \uadf8 \ubb38\uc81c\uc758 \uc6d0\uc778\uc774 \ubb34\uc5c7\uc778\uc9c0 \ubd84\uc11d\ud558\uc5ec \uc6b0\ub9ac\uac00 \ud574\uacb0\ud558\uace0\uc790 \ud558\ub294 \ubb38\uc81c\uc640 \uc774\ub97c \ud574\uacb0\ud568\uc73c\ub85c\uc368 \ub2ec\uc131\ud558\uace0\uc790 \ud558\ub294 \ubaa9\ud45c\ub97c \uba85\ud655\ud558\uac8c \uae30\uc220\ud569\ub2c8\ub2e4.<br \/>\uc774 \ub2e8\uacc4\ub97c \ud0c4\ud0c4\ud558\uac8c \ub2e4\uc838\ub193\uc9c0 \uc54a\ub294\ub2e4\uba74, \uc774\ud6c4 \uc774 \uc2a4\ud1a0\ub9ac\uac00 \uc815\ub9d0 \uac00\uce58\uc788\ub294 \uac83\uc778\uc9c0, \uc774 \uc2a4\ud1a0\ub9ac\uac00 \uc815\ub9d0 \ubb38\uc81c\ub97c \ud574\uacb0\ud558\ub294 \uac83\uc778\uc9c0 \uc5ec\ub7ec \ub17c\uc758\ub97c \uac70\uce58\uba70 \ub2e4\uc2dc \uc6d0\ub860\uc73c\ub85c \ub3cc\uc544\uc624\uac8c \ub418\ub294 \uacfc\uc815\uc744 \ubc18\ubcf5\ud558\uac8c \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4.<br \/>\ub2e8\uc21c\ud55c \uc544\uc774\ub514\uc5b4\uc5d0\uc11c \ucd9c\ubc1c\ud55c \uae30\ud68d\uc77c\uc9c0\ub77c\ub3c4, \uc774\uac83\uc774 \uc0ac\uc6a9\uc790\uc758 \uc5b4\ub5a4 \ubb38\uc81c\ub97c \ud574\uacb0\ud560 \uc218 \uc788\uc744 \uac83\uc778\uc9c0 \uba85\ud655\ud788 \uc815\uc758\ud558\uc9c0 \uc54a\ub294\ub2e4\uba74 \uc2a4\ud1a0\ub9ac\uc758 \uc6b0\uc120 \uc21c\uc704\ub97c \ubd80\uc5ec\ud558\uae30\ub3c4 \uc5b4\ub835\uac70\ub2c8\uc640 \uc774 \uc2a4\ud1a0\ub9ac\uc5d0 \uac00\uce58\ub97c \ubd80\uc5ec\ud558\uae30\ub3c4 \uc5b4\ub835\uc2b5\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:heading {\"level\":5} --><\/p>\n<h5><strong>\uc2a4\ud1a0\ub9ac\uc758 \uc791\uc131\uacfc \ub17c\uc758<\/strong><\/h5>\n<p><!-- \/wp:heading --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\uc815\uc758\ud55c \ubb38\uc81c\ub97c \ud574\uacb0\ud558\uae30 \uc704\ud55c \uc0ac\uc6a9\uc790 \uc2a4\ud1a0\ub9ac\ub97c \uae30\uc220\ud569\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\uc81c\ud488\uad00\ub9ac\uc790\uac00 \uace0\uac1d\uc758 \uc785\uc7a5\uc744 \ub300\ubcc0\ud558\uc5ec 1\ucc28\uc801\uc73c\ub85c \uc2a4\ud1a0\ub9ac\ub97c \uae30\uc220\ud558\ub294 \ucc45\uc784\uc744 \uac00\uc9d1\ub2c8\ub2e4. \ubb3c\ub860 \uc774 \uacfc\uc815\uc5d0\uc11c \ud544\uc694\ud558\ub2e4\uba74 \uc601\uc5c5\ub2f4\ub2f9\uc790, \ub9c8\ucf00\ud130 \ub4f1\uacfc \ud568\uaed8 \uc2a4\ud1a0\ub9ac\uc5d0 \ub300\ud574 \ub17c\uc758\ud558\uae30\ub3c4 \ud558\uace0, \uc9c1\uc811 \uace0\uac1d\uc758 \uc758\uacac\uc744 \ucc38\uace0\ud558\uc5ec \ubc18\uc601\ud569\ub2c8\ub2e4. \uc774 \ub2e8\uacc4\uc5d0\uc11c\ub294 \uc2a4\ud1a0\ub9ac\uc758 \uad6c\ud604\uc744 \uc704\ud55c \uad6c\uccb4\uc801\uc778 \uc0ac\ud56d\uc5d0 \uc9d1\uc911\ud558\uc9c0\ub294 \uc54a\uc2b5\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>1\ucc28\uc801\uc778 \uc2a4\ud1a0\ub9ac \uc791\uc131\uc774 \uc644\ub8cc\ub418\uba74, \uc81c\ud488\ud300\uacfc \uacf5\uc720\ud558\uc5ec \uc544\ub798\uc758 \uc21c\uc11c\ub300\ub85c \ub17c\uc758\ub97c \uc9c4\ud589\ud569\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:list {\"style\":{\"typography\":{\"fontSize\":\"16px\"}}} --><\/p>\n<ul style=\"font-size: 16px;\">\n<li>\ubb38\uc81c\uc5d0 \ub300\ud55c \uba85\ud655\ud55c \uc774\ud574 (\ubaa8\ub450\uac00 \ub3d9\uc77c\ud55c \uc774\ud574\ub97c \uac00\uc838\uc57c \ud569\ub2c8\ub2e4)<\/li>\n<li>\uc774 \uc2a4\ud1a0\ub9ac\uac00 \uc0ac\uc6a9\uc790\uc758 \ubb38\uc81c\ub97c \ud574\uacb0\ud574\uc904 \uc218 \uc788\uc744 \uac83\uc778\uac00?<\/li>\n<li>\uc2a4\ud1a0\ub9ac\uac00 \ube60\uc9d0\uc5c6\uc774 \uae30\uc220\ub418\uc5b4 \uc788\ub294\uac00? \ucd94\uac00\ud574\uc57c\ud560 \uc2a4\ud1a0\ub9ac\ub294 \uc5c6\ub294\uac00?<\/li>\n<li>\uc2a4\ud1a0\ub9ac\uc758 \uc911\uc694\ub3c4\ub294 \uac01\uac01 \uc5b4\ub5a0\ud55c\uac00? \uc911\uc694\ub3c4\uc5d0 \ub530\ub77c \uc6b0\uc120 \uc21c\uc704\ub97c \ubd80\uc5ec\ud560 \uc218 \uc788\ub294\uac00?<\/li>\n<li>\uc2a4\ud1a0\ub9ac\ub97c \uad6c\ud604\ud558\uae30 \uc704\ud574 \uace0\ub824\ud574\uc57c\ud560 \uc694\uc18c\uac00 \uc788\ub294\uac00?<\/li>\n<\/ul>\n<p><!-- \/wp:list --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\uc2a4\ud1a0\ub9ac\ub97c \uad6c\ud604\ud558\uae30 \uc704\ud574 \uace0\ub824\ud560 \uc0ac\ud56d\uc740 \uc9c8\ubb38 \uc0ac\ud56d\uc73c\ub85c \uae30\ub85d\ud574\ub450\uba70 \uacb0\uc815\ud55c \uc0ac\ud56d\uc774 \uc788\ub2e4\uba74 \uc774\ub97c \ud568\uaed8 \uae30\ub85d\ud569\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:heading {\"level\":5} --><\/p>\n<h5><strong>\ub514\uc790\uc778, \uc124\uacc4, \uad6c\ud604<\/strong><\/h5>\n<p><!-- \/wp:heading --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\ucda9\ubd84\ud55c \ub300\ud654\ub97c \ud1b5\ud574 \ubaa8\ub450\uac00 \uc2a4\ud1a0\ub9ac\uc5d0 \ub300\ud55c \ub3d9\uc77c\ud55c \uc774\ud574\ub97c \uac00\uc84c\ub2e4\uba74, \ub514\uc790\uc778\/\uac1c\ubc1c \ud30c\ud2b8\uc5d0\uc11c \uc2a4\ud1a0\ub9ac \uad6c\ud604\uc744 \uc704\ud55c \uc124\uacc4\ub97c \uc9c4\ud589\ud569\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p><strong>\ub514\uc790\uc778 \ud30c\ud2b8<\/strong>\uc5d0\uc11c\ub294 user flow\ub97c \uace0\ub824\ud558\uc5ec \ub514\uc790\uc778\uc744 \uc9c4\ud589\ud558\uba74\uc11c \ub4dc\ub294 \uc9c8\ubb38 \uc0ac\ud56d\uc744 \uc218\uc2dc\ub85c \ud300\uacfc \uacf5\uc720\ud558\uba70 \uad6c\uccb4\ud654\ud558\uace0, \uc81c\ud488 \uad00\ub9ac\uc790\ub294 \uacfc\uc815\ub9c8\ub2e4 \ub098\uc624\ub294 \uc9c8\ubb38\uacfc \uacb0\uc815 \uc0ac\ud56d\ub4e4\uc744 \uc2a4\ud1a0\ub9ac\uc5d0 \uc8fc\uc11d\uc73c\ub85c \uae30\ub85d\ud569\ub2c8\ub2e4.<br \/><strong>\uac1c\ubc1c \ud30c\ud2b8<\/strong>\uc5d0\uc11c\ub294 \uc2a4\ud1a0\ub9ac\ub97c \uad6c\ud604\ud558\uae30 \uc704\ud55c DB\uad6c\uc870\uc640 API \uc2a4\ud399 \ub4f1 \ud544\uc694\ud55c \uc0ac\ud56d\ub4e4\uc744 \uc124\uacc4\ud558\uace0 \ubb38\uc11c\ud654\ud558\uc5ec \ud300\uc5d0 \uacf5\uc720\ud558\uace0 \ud53c\ub4dc\ubc31\uc744 \ubc1b\uc544 \ubcf4\uc644\ud574\ub098\uac11\ub2c8\ub2e4.<br \/>\ubaa8\ub4e0 \uc124\uacc4 \ub0b4\uc6a9\uc740 \ucd08\uc548 \ub2e8\uacc4\uc5d0\uc11c\ubd80\ud130 \ud300\uc5d0 \uacf5\uc720\ub429\ub2c8\ub2e4.<br \/><strong>\ub370\uc774\ud130 \ubd84\uc11d \ud30c\ud2b8<\/strong>\uc5d0\uc11c\ub294 \uae30\uc220\ub41c \ubb38\uc81c\uc640 \uac00\uc124, user flow\ub97c \ucc38\uace0\ud558\uc5ec \uac80\uc99d\ud574\uc57c\ud560 \uc9c0\ud45c\ub97c \uc815\uc758\ud558\uace0 \uc774\ub97c \uce21\uc815\ud558\uae30 \uc704\ud55c \uc774\ubca4\ud2b8 \ub85c\uadf8\ub97c \uc124\uacc4\ud569\ub2c8\ub2e4.<br \/><strong>QA \ud30c\ud2b8<\/strong>\uc5d0\uc11c\ub294 \uc124\uacc4\ub41c user flow\ub97c \ubc14\ud0d5\uc73c\ub85c \ub204\ub77d\ub41c \uc2dc\ub098\ub9ac\uc624\ub098 \uc608\uc678\uc0ac\ud56d\uc774 \uc5c6\ub294\uc9c0 \uc810\uac80\ud558\uba70 \ud14c\uc2a4\ud2b8 \uc2dc\ub098\ub9ac\uc624\ub97c \uc138\uc6c1\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\uc704\uc758 \ubaa8\ub4e0 \uacfc\uc815\uc740 \uc21c\ucc28\uc801\uc73c\ub85c \uc9c4\ud589\ub41c\ub2e4\uae30 \ubcf4\ub2e4\ub294 \ub3d9\uc2dc\uc5d0 \uc9c4\ud589\ub418\ub294 \uacbd\uc6b0\uac00 \ub9ce\uc2b5\ub2c8\ub2e4. \uacc4\uc18d\ud574\uc11c \ub300\ud654\ub97c \ud1b5\ud574 \uc9c8\ubb38\ud558\uace0 \uc758\uacac\uc744 \ub098\ub220\uac00\uba70 \uc9c4\ud589\ub418\uae30 \ub54c\ubb38\uc5d0 \ubc18\ub4dc\uc2dc \ub514\uc790\uc778 &gt; \uac1c\ubc1c\uc124\uacc4 &gt; ... \uc21c\uc73c\ub85c \uc9c4\ud589\ub420 \ud544\uc694\ub294 \uc5c6\uc2b5\ub2c8\ub2e4<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\uc5b4\ub290 \uc815\ub3c4 \uc124\uacc4\uc640 \ub514\uc790\uc778\uc774 \uad6c\uccb4\ud654 \ub418\uba74 \uc6b0\uc120\uc21c\uc704\uc5d0 \ub530\ub77c \uc2a4\ud1a0\ub9ac\ub97c \uad6c\ud604\ud574\ub098\uac11\ub2c8\ub2e4. \ub9e4\uc77c\ub9e4\uc77c Daily-scrum\uacfc slack\uc744 \ud1b5\ud574 \uac01\uc790\uc758 \uc9c4\ud589\uc0c1\ud669\uacfc \uc9c4\ud589\uacfc\uc815\uc5d0\uc11c\uc758 \uc7a5\uc560\uc694\uc18c\ub97c \uacf5\uc720\ud558\uace0 \ub193\ucce4\ub358 \uc0ac\ud56d\uc774 \uc788\ub2e4\uba74 \ubc14\ub85c \uad00\ub828\ud55c \uc0ac\ub78c\ub4e4\uacfc \ub300\ud654\ud558\uba70 \uacb0\uc815\ud558\uace0 \uae30\ub85d\ud569\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\uc6b0\uc120 \uc21c\uc704\uac00 \ub192\uc740 \uc2a4\ud1a0\ub9ac \uc704\uc8fc\ub85c \uc21c\ucc28\uc801\uc73c\ub85c \uc9c4\ud589\ub418\uae30 \ub54c\ubb38\uc5d0 \uc5f0\uad00\ub41c \ubaa8\ub4e0 \uc2a4\ud1a0\ub9ac\ub97c \ud3ec\ud568\ud55c \ub514\uc790\uc778, \uc124\uacc4\uac00 \uc544\ub2cc \uacbd\uc6b0\uac00 \ub9ce\uace0 \uc774\ub294 \uc774\ud6c4 \uc2a4\ud1a0\ub9ac\ub4e4\uc744 \uad6c\ud604\ud558\uba74\uc11c \uacc4\uc18d \ubcf4\uac15\ub418\uc5b4\uac11\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:heading {\"level\":5} --><\/p>\n<h5><strong>\ud14c\uc2a4\ud2b8 \ubc0f \ubc30\ud3ec<\/strong><\/h5>\n<p><!-- \/wp:heading --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\uc6b0\uc120 \uc21c\uc704\uc5d0 \ub9de\ucdb0 \uc138\uc6cc\uc9c4 \ubc30\ud3ec \uacc4\ud68d\uc5d0 \ub530\ub77c \ud544\uc694\ud55c \uc2a4\ud1a0\ub9ac\uc758 \uad6c\ud604\uc774 \uc644\ub8cc\ub418\uba74 \ud14c\uc2a4\ud2b8 \uacfc\uc815\uc744 \uac70\uccd0 \uace0\uac1d\uc5d0\uac8c\ub85c \ub9b4\ub9ac\uc988\ub429\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\ud14c\uc2a4\ud2b8 \uacfc\uc815\uc5d0\uc11c\ub3c4 \uc608\uc678\uc801\uc778 \uc2dc\ub098\ub9ac\uc624\uac00 \ubc1c\uacac\ub418\uac70\ub098, \ud06c\uace0 \uc791\uc740 \uc218\uc815\uc0ac\ud56d\ub4e4\uc774 \ubc1c\uc0dd\ud558\uac8c \ub418\uc9c0\ub9cc \ubaa8\ub4e0 \uc0ac\ud56d\uc744 \ub2e4 \ud55c\ubc88\uc5d0 \ub300\uc751\ud558\uae30 \ubcf4\ub2e4\ub294 \ud300\uc5d0\uc11c \uc774 \uc2dc\ub098\ub9ac\uc624\uac00 \uc5bc\ub9c8\ub098 \ubc1c\uc0dd\ud558\uac8c \ub420\uc9c0, \ubc1c\uc0dd\ud588\uc744\ub54c \uc5bc\ub9c8\ub098 \ud06c\ub9ac\ud2f0\uceec\ud560\uc9c0\ub97c \ud310\ub2e8\ud558\uc5ec \ub9b4\ub9ac\uc988\uc5d0 \ud3ec\ud568\ud560 \ub300\uc751\uc0ac\ud56d\uc778\uc9c0, fast follow\ub85c \uac00\uc838\uac00\uc57c\ud560 \uc0ac\ud56d\uc778\uc9c0\ub97c \uacb0\uc815\ud569\ub2c8\ub2e4. \uac70\uc758 \uc77c\uc5b4\ub098\uc9c0 \uc54a\uc744 \uc2dc\ub098\ub9ac\uc624\ub97c \ub300\uc751\ud558\uae30 \uc704\ud574 \uace0\uac1d\uc5d0\uac8c \uac00\uce58\ub97c \ub51c\ub9ac\ubc84\ub9ac\ud558\ub294 \uc2dc\uac04\uc774 \ub2a6\uc5b4\uc838\uc11c\ub294 \uc548\ub41c\ub2e4\uace0 \uc804\uc81c\ud558\uace0 \uc774\uc5d0 \ub9de\ucdb0 \ud310\ub2e8\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:heading {\"level\":5} --><\/p>\n<h5><strong>\uac00\uc124 \uac80\uc99d \ubc0f \ubaa8\ub2c8\ud130\ub9c1<\/strong><\/h5>\n<p><!-- \/wp:heading --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\ubc30\ud3ec\ud55c \ud6c4\uc5d0\ub294 \uc608\uc0c1\ud558\uc9c0 \ubabb\ud55c \ud06c\ub798\uc2dc\ub098 \ubc84\uadf8\uac00 \ubc1c\uc0dd\ud558\uc9c0\ub294 \uc54a\ub294\uc9c0, \uc751\ub2f5 \uc18d\ub3c4\uc5d0\ub294 \ubb38\uc81c\uac00 \uc5c6\ub294\uc9c0 \ub4f1\uc744 \ubaa8\ub2c8\ud130\ub9c1\ud558\uba74\uc11c \uc774\ubca4\ud2b8 \ub85c\uadf8\ub97c \ud655\uc778\ud558\uba70 \ucc98\uc74c\uc5d0 \uc138\uc6cc\ub480\ub358 \uac00\uc124\uc774 \ub9de\ub294\uc9c0 \uac80\uc99d\ud558\uac70\ub098 \uc2e4\uc81c \ubb38\uc81c\uac00 \ud574\uacb0\ub418\uc5c8\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\ubbf8\ub9ac \uc124\uc815\ud55c \uac00\uc124\uc744 \uac80\uc99d\ud558\uba74\uc11c, \uac00\uc124\uacfc \ub2e4\ub974\ub2e4\uba74 \uc6d0\uc778\uc744 \ucc3e\uc544\ubcf4\uace0 \ubcf4\uc644\ud558\uba74\uc11c \uc704\uc758 iteration\uc744 \ub2e4\uc2dc \ubc18\ubcf5\ud569\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:spacer {\"height\":\"59px\"} --><\/p>\n<div class=\"wp-block-spacer\" style=\"height: 59px;\" aria-hidden=\"true\">\u00a0<\/div>\n<p><!-- \/wp:spacer --><\/p>\n<p><!-- wp:heading {\"level\":3} --><\/p>\n<h3>\ubb34\uc5c7\uc744 \uc720\uc758\ud574\uc57c \ud558\ub294\uac00?<\/h3>\n<p><!-- \/wp:heading --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\uc0ac\uc6a9\uc790 \uc2a4\ud1a0\ub9ac\ub97c \uae30\ubc18\uc73c\ub85c \uc81c\ud488\uc744 \uad6c\ud604\ud574\ub098\uac08 \ub54c \uba87 \uac00\uc9c0 \uc720\uc758\uc0ac\ud56d\uc774 \uc788\uc2b5\ub2c8\ub2e4.<br \/>\uc0ac\uc6a9\uc790 \uc2a4\ud1a0\ub9ac\uc640 \uad00\ub828\ud55c \ucc45\ub4e4\uc5d0\uc11c \uc774 \uc678\uc5d0\ub3c4 \uc598\uae30\ud558\ub294 \uac83\ub4e4\uc774 \ub354 \uc788\uc9c0\ub9cc, \uc81c \uc0dd\uac01\uc5d0 \ud2b9\ubcc4\ud788 \uc720\uc758\ud558\uba74 \uc88b\uc744 \uc138 \uac00\uc9c0\ub97c \uaf3d\uc544\ubcf4\uc558\uc2b5\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:heading {\"level\":5} --><\/p>\n<h5><strong>\ucc98\uc74c\ubd80\ud130 \ub108\ubb34 \uc138\ubd80\uc801\uc778 \uc0ac\ud56d\uc744 \uae30\uc220\ud558\uc9c0 \uc54a\ub294\ub2e4<\/strong><\/h5>\n<p><!-- \/wp:heading --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\ub450 \uac00\uc9c0 \uce21\uba74\uc774 \uc788\uc2b5\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:list {\"ordered\":true,\"style\":{\"typography\":{\"fontSize\":\"16px\"}}} --><\/p>\n<ol style=\"font-size: 16px;\">\n<li>\uc2a4\ud1a0\ub9ac\uac00 \uc0ac\uc6a9\uc790\uc5d0\uac8c \uac00\uce58 \uc788\ub294 \uac83\uc778\uac00 \ub77c\ub294 \ubcf8\uc9c8\uc801\uc778 \ub17c\uc758\uc5d0\uc11c \ubc97\uc5b4\ub098\uac8c \ub420 \uc218 \uc788\ub2e4.<\/li>\n<li>\ub300\ud654\ub97c \ub2e8\uc808\ud558\uace0, \ud544\uc694\ud55c \uc0ac\ud56d\uc774 \ubaa8\ub450 \ud3ec\ud568\ub418\uc5b4 \uc788\uc5b4 \ub354 \ub17c\uc758\ud560 \ud544\uc694\uac00 \uc5c6\ub2e4\ub294 \uadf8\ub987\ub41c \ubbff\uc74c\uc744 \uc904 \uc218 \uc788\ub2e4.<\/li>\n<\/ol>\n<div>\uac00\uc7a5 \uba85\uc2ec\ud574\uc57c\ud560 \uac83\uc740, \uc138\ubd80\uc801\uc778 \uc0ac\ud56d\uc5d0 \uc9d1\uc911\ud558\uae30 \uc804\uc5d0 \uc774 \uc2a4\ud1a0\ub9ac\uac00 \uc0ac\uc6a9\uc790\uc5d0\uac8c \uc911\uc694\ud55c \uac83\uc778\uc9c0\ub97c \uc6b0\uc120 \uc801\uc73c\ub85c \uace0\ubbfc\ud574\uc57c\ud55c\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4.<\/div>\n<p><!-- \/wp:list --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:heading {\"level\":5} --><\/p>\n<h5><strong>\ub418\ub3c4\ub85d \uc0ac\uc6a9\uc790 \uc778\ud130\ud398\uc774\uc2a4\ub97c \ubc30\uc81c\ud55c\ub2e4<\/strong><\/h5>\n<p><!-- \/wp:heading --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\uccab \ubc88\uc9f8 \uc720\uc758\uc0ac\ud56d\uacfc \ube44\uc2b7\ud55c \ub9e5\ub77d\uc785\ub2c8\ub2e4.<br \/>\uc0ac\uc6a9\uc790 \uc778\ud130\ud398\uc774\uc2a4\uac00 \ucc98\uc74c\ubd80\ud130 \uc2a4\ud1a0\ub9ac\uc5d0 \ubc18\uc601\ub418\uc5b4 \uc788\ub2e4\uba74 \uad6c\uc131\uc6d0\ub4e4\uc758 \ucc3d\uc758\uc801\uc778 \uc0dd\uac01\uacfc \ub17c\uc758\ub97c \ubc29\ud574\ud560 \uc218 \uc788\uace0, \uc81c\ud488 \ub514\uc790\uc774\ub108\uac00 \ub354 \ub098\uc740 UX\ub97c \uc704\ud55c \uace0\ubbfc\uc744 \ud558\uc9c0 \uc54a\uac8c \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4.<\/p>\n<p>\uc81c\ud488\uad00\ub9ac\uc790\uac00 \uc2a4\ud1a0\ub9ac\ub97c \uc815\uc758\ud558\uba70 \uba38\ub9bf\uc18d\uc5d0 \uc5b4\ub290 \uc815\ub3c4 user flow\ub098 \uc880 \ub354 \uad6c\uccb4\ud654\ub41c wireframe\uc774 \uc788\uc744 \uc218 \uc788\uc9c0\ub9cc \uc81c\ud488 \ub514\uc790\uc774\ub108\uac00 \uadf8 wireframe\uc5d0 \uc0dd\uac01\uc774 \uace0\uc815\ub418\uc5b4 \ubc84\ub9b4 \uc218 \uc788\uae30 \ub54c\ubb38\uc5d0 \uae30\uc220\ub41c \uc2a4\ud1a0\ub9ac\ub97c \uae30\ubc18\uc73c\ub85c \uad6c\uccb4\uc801\uc778 \ub300\ud654\ub97c \ud558\uae30 \uc804\uc5d0 wireframe\ubd80\ud130 \uc81c\uc2dc\ud558\uc9c0 \uc54a\uc744 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:heading {\"level\":5} --><\/p>\n<h5><strong>\uc0ac\uc6a9\uc790 \uc5ed\ud560(User role) \ubaa8\ub378\uc744 \uba85\ud655\ud788 \uc815\uc758\ud55c\ub2e4<\/strong><\/h5>\n<p><!-- \/wp:heading --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\uc11c\ube44\uc2a4(\uc81c\ud488)\ub97c \uc774\uc6a9\ud558\ub294 \uc0ac\uc6a9\uc790 \uc720\ud615\uc740 \ub9e4\uc6b0 \ub2e4\uc591\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud55c \uc720\ud615\uc758 \uc0ac\uc6a9\uc790\ub97c \uc0dd\uac01\ud558\uace0 \uc2a4\ud1a0\ub9ac\ub97c \uae30\uc220\ud558\ub294 \uacbd\uc6b0, \uc77c\ubd80 \uc0ac\uc6a9\uc790 \uc720\ud615\uc758 \uc694\uad6c\ub97c \ubb34\uc2dc\ud558\ub294 \uacb0\uacfc\ub97c \ub0b3\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc591\ud55c \uc0ac\uc6a9\uc790 \uc5ed\ud560\uc744 \uc815\uc758\ud558\uc5ec \uac01\uac01\ub9c8\ub2e4 \uc801\uc808\ud55c \uc18d\uc131\uc744 \uc815\uc758\ud558\uace0, \uc774\ub4e4 \uac04\uc758 \ucc28\uc774\ub97c \ucda9\ubd84\ud788 \uc774\ud574\ud55c \ud6c4 \uc2a4\ud1a0\ub9ac\ub97c \uc0dd\uac01\ud574\ubcf4\uba74 \uc790\uce6b \uc9c0\ub098\uce60 \uc218 \uc788\ub294 \uc0ac\uc6a9\uc790 \uc2a4\ud1a0\ub9ac\ub97c \ubc1c\uacac\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\ud544\uc694\ud558\ub2e4\uba74 persona\ub97c \uc815\uc758\ud574\uc11c \ud2b9\uc815 \uc0ac\uc6a9\uc790 \uc5ed\ud560\uc744 \ub300\ud45c\ud558\ub294 \uc778\ubb3c\uc744 \uc124\uc815\ud574\ub454\ub2e4\uba74 \ucee4\ubba4\ub2c8\ucf00\uc774\uc158\uc774 \ud6e8\uc52c \uc218\uc6d4\ud574\uc9c0\uae30\ub3c4 \ud569\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:spacer {\"height\":\"59px\"} --><\/p>\n<div class=\"wp-block-spacer\" style=\"height: 59px;\" aria-hidden=\"true\">\u00a0<\/div>\n<p><!-- \/wp:spacer --><\/p>\n<p><!-- wp:heading {\"level\":3} --><\/p>\n<h3>\ub9c8\uce58\uba70<\/h3>\n<p><!-- \/wp:heading --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\uc774\uc0c1 \ub9ac\uba64\ubc84\uc758 \uc81c\ud488 \ud06c\ub8e8\ub4e4\uc774 \uc0ac\uc6a9\uc790 \uc2a4\ud1a0\ub9ac\uc5d0 \uae30\ubc18\ud558\uc5ec \uc5b4\ub5bb\uac8c \uc81c\ud488\uc744 \ub9cc\ub4e4\uc5b4\ub098\uac00\ub294\uc9c0 \uac04\ub7b5\ud788 \uc124\uba85 \ub4dc\ub838\uc2b5\ub2c8\ub2e4.<br \/>\uc544\uc9c1 \ubd80\uc871\ud55c \ubd80\ubd84\ub3c4 \ub9ce\uace0, \uacc4\uc18d\ud574\uc11c \ubcf4\uc644\ud574\ub098\uac00\uace0 \uc788\uc9c0\ub9cc \uc11c\ub450\uc5d0\uc11c \ub9d0\uc500\ub4dc\ub9b0 \u201c\uace0\uac1d \uac00\uce58\"\uc640 \u201c\ub300\ud654\" \ub77c\ub294 \ub450 \uac00\uce58\ub97c \uae30\ubc18\uc73c\ub85c \ud55c\ub2e4\ub294 \uac83\uc5d0\ub294 \ubcc0\ud568\uc774 \uc5c6\ub294 \uac83 \uac19\uc2b5\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\ub9ce\uc740 \ud68c\uc0ac\uc5d0\uc11c \uc774\ubbf8 \ube44\uc2b7\ud55c \ubc29\uc2dd\uc73c\ub85c \uc5c5\ubb34\ub97c \uc9c4\ud589\ud558\uace0 \uc788\uae30\ub3c4 \ud558\uace0, \uadf8\ub807\uc9c0 \uc54a\uc740 \uacf3\ub4e4\ub3c4 \uc788\uc73c\uc2e4\ud150\ub370\uc694. \uc815\ub2f5\uc740 \uc5c6\ub2e4\uace0 \uc0dd\uac01\ud569\ub2c8\ub2e4.<br \/>\uc774\ub7f0 \uc2dd\uc73c\ub85c \uc77c\ud558\ub294 \uacf3\ub3c4 \uc788\uad6c\ub098 \ub77c\uace0 \uc0dd\uac01\ud558\uace0 \ucc38\uace0\ud574\uc8fc\uc2dc\uae30\ub97c \ubc14\ub78d\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\ud639\uc2dc\ub77c\ub3c4 \uc774\ub7f0 \ubc29\uc2dd\uc73c\ub85c \uc800\ud76c\uc640 \ud568\uaed8 \uc77c\ud574\ubcf4\uace0 \uc2f6\uc740 \ubd84\uc774 \uacc4\uc2dc\ub2e4\uba74, <br \/>\ub4dc\ub77c\ub9c8\uc564\ucef4\ud37c\ub2c8\uc758 \ucc44\uc6a9\uc740 \ud56d\uc0c1 \uc5f4\ub824 \uc788\uc73c\ub2c8 \uc8fc\uc800\ub9d0\uace0 \uc5f0\ub77d \uc8fc\uc138\uc694!<\/p>\n<p>\u00a0<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\u00a0<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p><!-- \/wp:paragraph --><\/p>"},"elements":[],"widgetType":"text-editor"},{"id":"cc1d8ef","elType":"widget","settings":{"image":{"url":"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2022\/03\/\u110e\u1162\u110b\u116d\u11bc-\u1111\u1169\u110c\u1175\u1109\u1167\u11ab-\u1112\u116a\u11a8\u110b\u1175\u11ab-CTA_1.png","id":2705,"alt":"","source":"library"},"link_to":"custom","link":{"url":"https:\/\/hello.remember.co.kr","is_external":"","nofollow":"","custom_attributes":""}},"elements":[],"widgetType":"image"},{"id":"98a25f4","elType":"widget","settings":{"editor":""},"elements":[],"widgetType":"text-editor"}],"isInner":false}],"isInner":false}]]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_page_assets]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[2693]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_edit_mode]]></wp:meta_key>
		<wp:meta_value><![CDATA[builder]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Document Understanding 그리고 Information Extraction의 Multi-Modal Embedding]]></title>
		<link>https://blog.dramancompany.com/2022/03/document-understanding-information-extraction-multi-modal-embedding-layoutlm-docformer-vibertgrid/</link>
		<pubDate>Tue, 08 Mar 2022 07:09:10 +0000</pubDate>
		<dc:creator><![CDATA[minseokkang]]></dc:creator>
		<guid isPermaLink="false">https://blog.dramancompany.com/?p=2629</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">안녕하세요 드라마앤컴퍼니 빅데이터 센터의 AI Lab에서 일하고 있는 강민석입니다.<br><strong>빅데이터 센터</strong>의 간략한 소개부터 하면 약 3.5억 장의 명함과 관계 데이터, 채용 정보를 활용해 비즈니스 도메인에서 더 높은 차원의 가치를 창출하기 위한 관련 연구와 관리 활동을 담당하는 조직입니다.<br>빅데이터 센터의 <strong>AI Lab</strong>은 Recommendation System, Ranking Model, Graph Neural Network, Natural Language Processing, Document Understanding 등 연구 영역을 넓혀가고 있으며, 기반 연구를 통해 고객의 비즈니스에서 WOW 하는 경험을 제공하고자 노력하고 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">빅데이터 센터의 AI Lab에서 주기적으로 기술 블로그에 포스팅하기로 했습니다. 많은 관심 부탁드립니다.🙂</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">게시물의 내용은 아래와 같이 구성되어 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:list {"fontSize":"medium"} -->
<ul class="has-medium-font-size"><li><strong>Document Understanding</strong>의 정의와 문제점</li><li><strong>Business Task</strong> (Document Image Classification, Visual Question Answering, Document Layout Analysis, Information Extraction)</li><li><strong>Information Extraction</strong>의 3가지 접근법과 <strong>Multi-Modal Embedding</strong></li><li>마무리</li></ul>
<!-- /wp:list -->

<!-- wp:spacer {"height":"48px"} -->
<div style="height:48px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading -->
<h2><strong>Document Understanding이란?</strong></h2>
<!-- /wp:heading -->

<!-- wp:paragraph {"align":"center","fontSize":"medium"} -->
<p class="has-text-align-center has-medium-font-size"><strong><em>문서 이미지를 AI 모델을 통해 문서 이미지 내용을 해석하고 유저가 필요한 정보로 가공해주는 작업</em></strong></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-2678" style="width: 700px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/03/1-14.png" alt=""><br>Document Understanding의 전체 흐름도 [1]</p>
<!-- /wp:paragraph -->

<!-- wp:list {"fontSize":"medium"} -->
<ul class="has-medium-font-size"><li>Document Understanding의 세부적인 작업을 처리해주는<strong> 대표 기술은 네 가지</strong>가 있습니다<strong>.</strong><ul><li>문서를 분류(Document Classification)</li><li>문서를 기반으로 질문을 던졌을 때 답변(Question Answering)</li><li>문서에서 구성요소(Text, Title, Table)를 분석 (Document Layout Analysis)</li><li>문서에서 원하는 정보를 추출(Information Extraction)</li></ul></li></ul>
<!-- /wp:list -->

<!-- wp:list {"fontSize":"medium"} -->
<ul class="has-medium-font-size"><li>이 글의 후반부에서 <strong>Information Extraction</strong>에 대한 접근법과 <strong>Embedding Feeding</strong> 전략에 대해 설명할 예정입니다.</li></ul>
<!-- /wp:list -->

<!-- wp:list {"fontSize":"medium"} -->
<ul class="has-medium-font-size"><li>사람이 직접 문서의 정보를 추출하는 것은 정확도가 낮고 재사용성이 낮아 시간이 오래 걸리고 노동 집약적입니다. 이를 해결하고자 Document Understanding에 대해 많은 연구가 진행되고 있습니다.</li></ul>
<!-- /wp:list -->

<!-- wp:list {"fontSize":"medium"} -->
<ul class="has-medium-font-size"><li><strong>Document Understanding은 실제 저희 주변에서 자주 사용될 수 있습니다.</strong><ul><li>리멤버의 명함 입력, 금융 어플에서의 주민등록증 정보 자동 입력, 송장 및 계약서 자동입력 등이 있습니다.</li><li>2025년까지 150조 기가바이트(150 제타 바이트) 이상의 비정형 데이터를 분석해야 할 것으로 추정된다고 합니다.[2]</li><li>Document Understanding은 현재 Microsoft, Google, Amazon과 같은 다국적 기업 뿐만 아니라 다양한 기업 및 학계에서 관련 논문이 쏟아져 나온다고 해도 과언이 아닐 정도로 많은 연구가 진행 되고 있습니다.<br></li></ul></li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p> </p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":"67px"} -->
<div style="height:67px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading {"fontSize":"large"} -->
<h2 class="has-large-font-size"><strong>Document Understanding의 문제점</strong></h2>
<!-- /wp:heading -->

<!-- wp:list {"ordered":true,"fontSize":"medium"} -->
<ol class="has-medium-font-size"><li><strong>사진 촬영 문제와 텍스트의 속성에 따라 성능은 계속 변화합니다.</strong><ul><li>너무 밝거나 어두운 이미지, 움직이는 피사체, 블러현상 들은 글자를 읽기 어렵게 만듭니다.</li><li>글자의 다양한 폰트, 크기, 색상뿐만 아니라 구겨져 있는 종이에 쓰여 있는 글자, 복잡한 배열들은 글 전체의 해석이 어렵게 합니다.</li><li>관련 연구 - 이미지의 Denoising, Super Resolution, 합성 및 증강 기술에 관한 연구<br></li></ul></li><li><strong>학습 데이터의 부족 및 수집의 어려움</strong><ul><li>품질이 높은 학습 데이터를 만들어 내는데 큰 비용이 필요합니다.</li><li>관련 연구 - Multi-Task Learning, Active-Learning, Synthetic Data 등 연구<br></li></ul></li><li><strong>문서 내용의 문맥을 이해하기 위한 거대한 Language Model을 만들고 수정하는 데 어려움이 있습니다.</strong><ul><li>새롭게 Language Model을 학습하는 데 필요한 자원(인프라, 시간, 비용)이 많이 필요합니다.</li><li>복잡하고 긴 문서의 정보는 한 번에 입력받기 어려워 쪼개서 입력할 때 결과 값을 예측하기 어렵습니다.</li><li>관련 연구 - 페이지를 부분적으로 나누어 상관관계를 포함한 모델, Lightweight 모델 설계에 관한 연구<br></li></ul></li></ol>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p> </p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":"80px"} -->
<div style="height:80px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading {"fontSize":"large"} -->
<h2 class="has-large-font-size"><strong>Business Task (Downstream Task)</strong></h2>
<!-- /wp:heading -->

<!-- wp:paragraph {"align":"center","fontSize":"medium"} -->
<p class="has-text-align-center has-medium-font-size"><em>문서 이미지를 OCR을 통해 디지털화된 텍스트 정보로 변환하고 디지털 텍스트 정보를 활용해 비즈니스에 필요한 문제를 해결하는 작업을 뜻합니다. 일반적으로 사전 학습된 Language 모델을 Business Task에 맞게 Downstream Task를 추가하여 Fine-Tuning 하여 문제를 해결합니다.</em></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size"><em>대표적으로 Document Image Classification, Visual Question Answering, Information Extraction, Document Layout Analysis가 있습니다.</em></p>
<!-- /wp:paragraph -->

<!-- wp:columns -->
<div class="wp-block-columns"><!-- wp:column -->
<div class="wp-block-column"><!-- wp:heading {"level":3} -->
<h3><strong>1. Document Image Classification</strong></h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>문서 이미지를 과학 논문, 이력서, 청구서, 영수증 및 기타 여러 범주로 자동 분류하는 작업입니다.<br><img class="wp-image-2679" style="width: 550px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/03/2.png" alt=""></p>
<!-- /wp:paragraph --></div>
<!-- /wp:column -->

<!-- wp:column -->
<div class="wp-block-column"><!-- wp:heading {"level":3} -->
<h3><strong>2. Visual Question Answering</strong></h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>문서 이미지에서 획득한 텍스트 정보, 시각 정보 및 레이아웃 정보를 분석하여 질문에 대한 답을 출력하는 작업입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":2643,"className":"is-style-default"} -->
<figure class="wp-block-image is-style-default"><img src="https://blog.dramancompany.com/wp-content/uploads/2022/03/3.png" alt="" class="wp-image-2643"/></figure>
<!-- /wp:image -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center">Document Visual Question Answering [3]</p>
<!-- /wp:paragraph --></div>
<!-- /wp:column --></div>
<!-- /wp:columns -->

<!-- wp:columns -->
<div class="wp-block-columns"><!-- wp:column -->
<div class="wp-block-column"><!-- wp:heading {"level":3} -->
<h3><strong>3. Document Layout Analysis</strong></h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>문서 레이아웃에서 텍스트 및 시각적 정보를 활용하여 표/그림/차트 정보 및 위치 관계를 찾아 주는 작업입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":2614,"className":"is-style-default"} -->
<figure class="wp-block-image is-style-default"><img src="https://blog.dramancompany.com/wp-content/uploads/2022/03/image-1.png" alt="" class="wp-image-2614"/></figure>
<!-- /wp:image -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center">Document Layout Analysis [4]</p>
<!-- /wp:paragraph --></div>
<!-- /wp:column -->

<!-- wp:column -->
<div class="wp-block-column"><!-- wp:heading {"level":3} -->
<h3><strong>4. Information Extraction</strong></h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>문서에 있는 2차원 공간에 배열된 비정형 정보에서 필요로 하는 정보만을 추출하는 기술을 나타냅니다.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":2646,"className":"is-style-default"} -->
<figure class="wp-block-image is-style-default"><img src="https://blog.dramancompany.com/wp-content/uploads/2022/03/5.gif" alt="" class="wp-image-2646"/></figure>
<!-- /wp:image -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center">Information Extraction [5]<br></p>
<!-- /wp:paragraph --></div>
<!-- /wp:column --></div>
<!-- /wp:columns -->

<!-- wp:paragraph -->
<p> </p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":"39px"} -->
<div style="height:39px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading {"fontSize":"large"} -->
<h2 class="has-large-font-size"><strong>Information Extraction의 3가지 접근법</strong></h2>
<!-- /wp:heading -->

<!-- wp:paragraph {"align":"center","fontSize":"medium"} -->
<p class="has-text-align-center has-medium-font-size">3가지 접근법과 LayoutLM 시리즈, Docformer, PICK, ViBERTgrid 논문을 소개합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3><strong>1. Sequence-based approaches</strong></h3>
<!-- /wp:heading -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">텍스트 정보, 시각 정보 및 레이아웃 정보 시퀀스로 직렬 화한 다음 NLP의 기존 시퀀스 태깅 모델을 사용하여 원하는 정보와 클래스값을 추출합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:columns -->
<div class="wp-block-columns"><!-- wp:column -->
<div class="wp-block-column"><!-- wp:list {"fontSize":"medium"} -->
<ul class="has-medium-font-size"><li><strong>Layoutlmv2 [6]</strong><ul><li>Multi-Modal 정보를 이용한 사전 학습 전략을 제안했다.<br></li></ul></li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p><br><br><br><img class="wp-image-2615" style="width: 600px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/03/image-2.png" alt=""></p>
<!-- /wp:paragraph --></div>
<!-- /wp:column -->

<!-- wp:column -->
<div class="wp-block-column"><!-- wp:list {"fontSize":"medium"} -->
<ul class="has-medium-font-size"><li><strong>Docformer [7]</strong><ul><li>텍스트, 시각 및 레이아웃 정보의 상관관계를 학습시키기 위한 Cross-Modality Feature Correlation을 통한 Embedding Feeding 전략을 제안했다.</li><li>Multi-Modal Self-Attention Layer 구조 설계를 제안했다.</li></ul></li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p><img class="wp-image-2617" style="width: 600px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/03/image-4.png" alt=""></p>
<!-- /wp:paragraph --></div>
<!-- /wp:column --></div>
<!-- /wp:columns -->

<!-- wp:heading {"level":3} -->
<h3><strong>2. Graph-based approaches</strong></h3>
<!-- /wp:heading -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">문서 각 페이지 정보를 그래프로 모델링하며, 텍스트 정보는 노드로 표시되고 표현되는 정보에 시각적, 텍스트 및 위치 기능을 결합하는 방법입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:list {"fontSize":"medium"} -->
<ul class="has-medium-font-size"><li><strong>PICK [8]</strong><ul><li>Graph를 이용하여 텍스트 정보의 시각적, 위치 정보 결합한 모델을 제안했다.</li></ul></li></ul>
<!-- /wp:list -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-2618" style="width: 900px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/03/image-5.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3><strong>3. Grid-based approaches</strong></h3>
<!-- /wp:heading -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">텍스트 정보의 토큰 임베딩을 2D 그리드로 표현한 다음 Instance Segmentation 모델에 Feature와 결합하여 2D 그리드에서 원하는 정보와 클래스값을 찾는 방법입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:list {"fontSize":"medium"} -->
<ul class="has-medium-font-size"><li><strong>ViBERTgrid [9]</strong><ul><li>기존 방대한 Dataset으로 사전 학습된 Model에 의존 하지 않고 시각적 정보에 좀 더 초점을 맞춘 모델</li></ul></li></ul>
<!-- /wp:list -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-2620" style="width: 900px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/03/image-6.png" alt=""><br></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p> </p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":"59px"} -->
<div style="height:59px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading {"fontSize":"large"} -->
<h2 class="has-large-font-size"><strong>Multi-Modal Embedding</strong></h2>
<!-- /wp:heading -->

<!-- wp:paragraph {"align":"center","fontSize":"medium"} -->
<p class="has-text-align-center has-medium-font-size">시각적으로 정보가 풍부한 문서에는 주로 텍스트 정보, 시각적 정보 및 레이아웃 정보를 포함하고 있습니다. 이를 각각 임베딩 화 하여 모델의 입력으로 활용하는 기술입니다. 세 가지 임베딩(Text, Visual, Spatial)을 소개하고 위에 소개한 논문을 통해 비교를 하겠습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3><strong>1. Text Embedding</strong></h3>
<!-- /wp:heading -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">일반적으로 단어 단위 텍스트를 토큰 화하고 1차원 위치 임베딩 및 세그먼트 임베딩을 추가하여 최종 텍스트 임베딩을 얻습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:list {"fontSize":"medium"} -->
<ul class="has-medium-font-size"><li>LayoutLM 시리즈, Docformer, PICK의 경우 : 단어 단위 Tokenizer를 통해서 토큰화된 값</li><li>ViBERTgrid의 경우 : BERT Encoder를 활용해 추출된 Word 임베딩</li></ul>
<!-- /wp:list -->

<!-- wp:heading {"level":3} -->
<h3><strong>2. Visual Embedding</strong></h3>
<!-- /wp:heading -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">일반적으로 Visual Backbone을 이용하여 fature map을 추출한 다음 Pooling 및 Flatten을 거쳐 나온 벡터를 고정 차원 벡터를 얻기 위해 Linear Projection을 거칩니다.</p>
<!-- /wp:paragraph -->

<!-- wp:list {"fontSize":"medium"} -->
<ul class="has-medium-font-size"><li>LayoutLM 시리즈, Docformer, PICK의 경우 : Visual Backbone(Resnet-FPN, Resnet50)를 사용해 피처 추출 후 Flatten 및 Linear 작업으로 Shape 변형된 값</li><li>ViBERTgrid의 경우 : Resnet 모델 2번째 레이어 결과 값에 Text 임베딩을 합쳐서 최종 P_fuse Feature 맵 계산하여 Segmentation과 Classification을 진행하여 암묵적으로 학습</li></ul>
<!-- /wp:list -->

<!-- wp:heading {"level":3} -->
<h3><strong>3. Spatial(Position) Embedding</strong></h3>
<!-- /wp:heading -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">단어의 이미지상의 위치 좌표와 텍스트 상자의 너비와 높이, 좌표간의 상관관계를 벡터화하여 Spatial 임베딩을 얻습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:list {"fontSize":"medium"} -->
<ul class="has-medium-font-size"><li>LayoutLM 시리즈 : OCR 박스 값의 좌표와 상대적인 거리를 추출하여 Text 임베딩과 Visual 임베딩에 각각 결합하여 Transformer로 입력</li><li>Docformer의 경우 : OCR 박스 값의 좌표와 상대적인 거리를 추출하여 Multi-Modal Self-Attention Layer의 각 모든 레이어에 추가로 결합</li><li>ViBERTgrid의 경우 : 전체 모델의 흐름 안에서 Text과 Visual, Spatial 표현이 암묵적으로 학습된다고 판단</li><li>PICK의 경우 : OCR 박스 값의 좌표와 상대적인 크기를 Graph 모델 구조로 활용<br></li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p> </p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":"54px"} -->
<div style="height:54px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading {"fontSize":"large"} -->
<h2 class="has-large-font-size"><strong>마무리 하며</strong></h2>
<!-- /wp:heading -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">Document Understanding에 대한 소개, Business Task, Information Extraction의 3가지 접근법과 Multi-Modal Embedding을 소개하였습니다. Document Understanding은 현재에도 많은 연구가 진행되는 분야이며 실제 다양한 분야에서 활용도가 높은 연구중 하나 입니다. 특히, 드라마앤컴퍼니의 명함인식 서비스와 같이 특정 도메인에 최적화하게 된다면 기존 서비스에서 고객에게 더 WOW 할 수 있는 경험를 제공해줄 수 있는 연구 분야라고 생각됩니다.<br>본 글에서는 Document Understanding에 대해 전반적으로 이해를 돕기 위해 사전 학습 방법 및 Multi-Task 학습 전략등 복잡한 수식은 제외하고 설명하였습니다. 자세한 내용은 아래의 레퍼런스 논문을 통해 확인하시거나 댓글을 통해 문의 부탁드립니다. 처음 작성한 기술 블로그이다 보니 부족한 부분이 많은 것 같습니다. 다음 작성하는 기술 블로그는 좀 더 알차게 구성하도록 노력해보겠습니다.<br>부족하지만, 읽어 주셔서 감사합니다. 🙂</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p> </p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":"59px"} -->
<div style="height:59px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading {"fontSize":"large"} -->
<h2 class="has-large-font-size"><strong>Reference</strong></h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>[1] Cui, Lei, et al. "Document AI: Benchmarks, Models and Applications." <em>arXiv preprint arXiv:2111.08609</em> (2021).<br>[2] <a href="https://en.wikipedia.org/wiki/Document_layout_analysis">https://en.wikipedia.org/wiki/Document_layout_analysis</a><br>[3] Mathew, Minesh, et al. "InfographicVQA." <em>Proceedings of the IEEE/CVF Winter Conference on Applications of Computer Vision</em>. 2022.APA<br>[4] Zhong, Xu, Jianbin Tang, and Antonio Jimeno Yepes. "Publaynet: largest dataset ever for document layout analysis." <em>2019 International Conference on Document Analysis and Recognition (ICDAR)</em> . IEEE, 2019.<br>[5] What is Information Extraction? - A Detailed Guide [by Vihar Kurama, <a href="https://nanonets.com/blog/information-extraction/">https://nanonets.com/blog/information-extraction/</a>]<br>[6] Xu, Yang, et al. "Layoutlmv2: Multi-modal pre-training for visually-rich document understanding." <em>arXiv preprint arXiv:2012.14740</em> (2020).<br>[7] Appalaraju, Srikar, et al. "Docformer: End-to-end transformer for document understanding." <em>Proceedings of the IEEE/CVF International Conference on Computer Vision</em>. 2021.APA<br>[8] Yu, Wenwen, et al. "PICK: processing key information extraction from documents using improved graph learning-convolutional networks." <em>2020 25th International Conference on Pattern Recognition (ICPR)</em>. IEEE, 2021.APA<br>[9] Lin, Weihong, et al. "ViBERTgrid: A Jointly Trained Multi-Modal 2D Document Representation for Key Information Extraction from Documents." <em>International Conference on Document Analysis and Recognition</em>. Springer, Cham, 2021.APA<br><br><br></p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":"59px"} -->
<div style="height:59px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->]]></content:encoded>
		<excerpt:encoded><![CDATA[Document Understanding은 AI 모델을 통해 문서 이미지 내용을 해석하고 유저가 필요한 정보로 가공해주는 작업 이 글의 후반부에서 Information Extraction에 대한 접근법과 Embedding Feeding에 대해 구체적으로 설명할 예정입니다.]]></excerpt:encoded>
		<wp:post_id>2629</wp:post_id>
		<wp:post_date><![CDATA[2022-03-08 16:09:10]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-03-08 07:09:10]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-03-08 16:09:15]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-03-08 07:09:15]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[document-understanding-information-extraction-multi-modal-embedding-layoutlm-docformer-vibertgrid]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="ailab"><![CDATA[AI Lab.]]></category>
		<category domain="post_tag" nicename="bdc"><![CDATA[BDC]]></category>
		<category domain="post_tag" nicename="docformer"><![CDATA[Docformer]]></category>
		<category domain="post_tag" nicename="document-understanding"><![CDATA[Document Understanding]]></category>
		<category domain="post_tag" nicename="information-extraction"><![CDATA[Information Extraction]]></category>
		<category domain="post_tag" nicename="layoutlm"><![CDATA[LayoutLM]]></category>
		<category domain="post_tag" nicename="multi-modal-embedding"><![CDATA[Multi-Modal Embedding]]></category>
		<category domain="post_tag" nicename="%eb%a6%ac%eb%a9%a4%eb%b2%84"><![CDATA[리멤버]]></category>
		<category domain="post_tag" nicename="%eb%b9%85%eb%8d%b0%ec%9d%b4%ed%84%b0%ec%84%bc%ed%84%b0"><![CDATA[빅데이터센터]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle_flag]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle]]></wp:meta_key>
		<wp:meta_value><![CDATA[Document Understanding 그리고 Information Extraction의 Approach, Multi-Modal Embedding]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729509073;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:2722;}i:1;a:1:{s:2:"id";i:3343;}i:2;a:1:{s:2:"id";i:2978;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[52]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_single_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:23:{s:8:"subtitle";s:90:"Document Understanding 그리고 Information Extraction의 Approach, Multi-Modal Embedding";s:6:"format";s:8:"standard";s:5:"video";s:0:"";s:7:"gallery";s:0:"";s:11:"source_name";s:0:"";s:10:"source_url";s:0:"";s:8:"via_name";s:0:"";s:7:"via_url";s:0:"";s:17:"override_template";s:1:"0";s:8:"override";a:1:{i:0;a:32:{s:8:"template";s:1:"1";s:18:"single_blog_custom";s:0:"";s:8:"parallax";s:1:"1";s:10:"fullscreen";s:1:"1";s:6:"layout";s:13:"right-sidebar";s:7:"sidebar";s:15:"default-sidebar";s:14:"second_sidebar";s:15:"default-sidebar";s:14:"sticky_sidebar";s:1:"1";s:14:"share_position";s:3:"top";s:17:"share_float_style";s:16:"share-monocrhome";s:18:"show_share_counter";s:1:"1";s:17:"show_view_counter";s:1:"1";s:13:"show_featured";s:1:"1";s:14:"show_post_meta";s:1:"1";s:16:"show_post_author";s:1:"1";s:22:"show_post_author_image";s:1:"1";s:14:"show_post_date";s:1:"1";s:16:"post_date_format";s:7:"default";s:23:"post_date_format_custom";s:5:"Y/m/d";s:18:"show_post_category";s:1:"1";s:22:"show_post_reading_time";s:1:"0";s:21:"post_reading_time_wpm";s:3:"300";s:16:"show_zoom_button";s:1:"0";s:20:"zoom_button_out_step";s:1:"2";s:19:"zoom_button_in_step";s:1:"3";s:13:"show_post_tag";s:1:"1";s:19:"show_prev_next_post";s:1:"1";s:15:"show_popup_post";s:1:"1";s:17:"number_popup_post";s:1:"1";s:15:"show_author_box";s:1:"0";s:17:"show_post_related";s:1:"0";s:24:"show_inline_post_related";s:1:"0";}}s:19:"override_image_size";s:1:"0";s:14:"image_override";a:1:{i:0;a:2:{s:26:"single_post_thumbnail_size";s:8:"crop-500";s:24:"single_post_gallery_size";s:8:"crop-500";}}s:13:"trending_post";s:1:"0";s:22:"trending_post_position";s:4:"meta";s:19:"trending_post_label";s:8:"Trending";s:14:"sponsored_post";s:1:"0";s:20:"sponsored_post_label";s:12:"Sponsored by";s:19:"sponsored_post_name";s:0:"";s:18:"sponsored_post_url";s:0:"";s:26:"sponsored_post_logo_enable";s:1:"0";s:19:"sponsored_post_logo";s:0:"";s:19:"sponsored_post_desc";s:0:"";s:10:"disable_ad";s:1:"0";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:2:"id";s:3:"114";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[Document Understanding Information Extraction Multi-Modal Embedding]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
		<wp:meta_value><![CDATA[구체적인 작업을 처리해주는 대표 기술 네 가지가 있습니다.문서를 분류(Document Classification)문서를 기반으로 질문을 던졌을 때 답변(Question Answering)문서에서 구성요소(Text, Title, Table)를 분석 (Document Layout Analysis)문서에서 원하는 정보를 추출(Information Extraction)]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[57]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_estimated-reading-time-minutes]]></wp:meta_key>
		<wp:meta_value><![CDATA[9]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[114]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[%%title%% %%sitename%% %%primary_category%%]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[2614]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_template_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[wp-post]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_version]]></wp:meta_key>
		<wp:meta_value><![CDATA[3.6.0-dev39]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_data]]></wp:meta_key>
		<wp:meta_value><![CDATA[[{"id":"1af8f1c0","elType":"section","settings":[],"elements":[{"id":"76c7bde2","elType":"column","settings":{"_column_size":100},"elements":[{"id":"10a8bc16","elType":"widget","settings":{"editor":"<p><!-- wp:paragraph {\"fontSize\":\"medium\"} --><\/p>\n<p class=\"has-medium-font-size\">\uc548\ub155\ud558\uc138\uc694 \ub9ac\uba64\ubc84 \ube45\ub370\uc774\ud130 \uc13c\ud130\uc758 AI Lab\uc5d0\uc11c \uc77c\ud558\uace0 \uc788\ub294 \uac15\ubbfc\uc11d\uc785\ub2c8\ub2e4.<br><strong>\ube45\ub370\uc774\ud130 \uc13c\ud130<\/strong>\uc758 \uac04\ub7b5\ud55c \uc18c\uac1c\ubd80\ud130 \ud558\uba74 \uc57d 3.5\uc5b5 \uc7a5\uc758 \uba85\ud568\uacfc \uad00\uacc4 \ub370\uc774\ud130, \ucc44\uc6a9 \uc815\ubcf4\ub97c \ud65c\uc6a9\ud574 \ube44\uc988\ub2c8\uc2a4 \ub3c4\uba54\uc778\uc5d0\uc11c \ub354 \ub192\uc740 \ucc28\uc6d0\uc758 \uac00\uce58\ub97c \ucc3d\ucd9c\ud558\uae30 \uc704\ud55c \uad00\ub828 \uc5f0\uad6c\uc640 \uad00\ub9ac \ud65c\ub3d9\uc744 \ub2f4\ub2f9\ud558\ub294 \uc870\uc9c1\uc785\ub2c8\ub2e4.<br>\ube45\ub370\uc774\ud130 \uc13c\ud130\uc758 <strong>AI Lab<\/strong>\uc740 Recommendation System, Ranking Model, Graph Neural Network, Natural Language Processing, Document Understanding \ub4f1 \uc5f0\uad6c \uc601\uc5ed\uc744 \ub113\ud600\uac00\uace0 \uc788\uc73c\uba70, \uae30\ubc18 \uc5f0\uad6c\ub97c \ud1b5\ud574 \uace0\uac1d\uc758 \ube44\uc988\ub2c8\uc2a4\uc5d0\uc11c WOW \ud558\ub294 \uacbd\ud5d8\uc744 \uc81c\uacf5\ud558\uace0\uc790 \ub178\ub825\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:paragraph {\"fontSize\":\"medium\"} --><\/p>\n<p class=\"has-medium-font-size\">\ube45\ub370\uc774\ud130 \uc13c\ud130\uc758 AI Lab\uc5d0\uc11c \uc8fc\uae30\uc801\uc73c\ub85c \uae30\uc220 \ube14\ub85c\uadf8\uc5d0 \ud3ec\uc2a4\ud305\ud558\uae30\ub85c \ud588\uc2b5\ub2c8\ub2e4. \ub9ce\uc740 \uad00\uc2ec \ubd80\ud0c1\ub4dc\ub9bd\ub2c8\ub2e4.<img draggable=\"false\" role=\"img\" class=\"emoji\" alt=\"\ud83d\ude42\" src=\"https:\/\/s.w.org\/images\/core\/emoji\/13.1.0\/svg\/1f642.svg\"><\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:paragraph {\"fontSize\":\"medium\"} --><\/p>\n<p class=\"has-medium-font-size\">\uac8c\uc2dc\ubb3c\uc758 \ub0b4\uc6a9\uc740 \uc544\ub798\uc640 \uac19\uc774 \uad6c\uc131\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:list {\"fontSize\":\"medium\"} --><\/p>\n<ul class=\"has-medium-font-size\">\n<li>Document Understanding\uc758 \uc815\uc758\uc640 \ubb38\uc81c\uc810<\/li>\n<li>Business Task (Document Image Classification, Visual Question Answering, Document Layout Analysis, Information Extraction)<\/li>\n<li>Information Extraction\uc758 3\uac00\uc9c0 \uc811\uadfc\ubc95\uacfc Multi-Modal Embedding<\/li>\n<li>\ub9c8\ubb34\ub9ac<\/li>\n<\/ul>\n<p><!-- \/wp:list --><\/p>\n<p><!-- wp:heading --><\/p>\n<h2><strong>Document Understanding\uc774\ub780?<\/strong><\/h2>\n<p><!-- \/wp:heading --><\/p>\n<p><!-- wp:quote {\"className\":\"is-style-large\",\"fontSize\":\"medium\"} --><\/p>\n<blockquote class=\"wp-block-quote is-style-large has-medium-font-size\">\n<p><strong>\ubb38\uc11c \uc774\ubbf8\uc9c0\ub97c AI \ubaa8\ub378\uc744 \ud1b5\ud574 \ubb38\uc11c \uc774\ubbf8\uc9c0 \ub0b4\uc6a9\uc744 \ud574\uc11d\ud558\uace0 \uc720\uc800\uac00 \ud544\uc694\ud55c \uc815\ubcf4\ub85c \uac00\uacf5\ud574\uc8fc\ub294 \uc791\uc5c5<\/strong><\/p><p><strong><br><\/strong><\/p>\n<\/blockquote>\n<p><!-- \/wp:quote --><\/p>\n<p><!-- wp:list {\"fontSize\":\"medium\"} --><\/p>\n<ul class=\"has-medium-font-size\">\n<li><strong>\uad6c\uccb4\uc801\uc778 \uc791\uc5c5\uc744 \ucc98\ub9ac\ud574\uc8fc\ub294 \ub300\ud45c \uae30\uc220 \ub124 \uac00\uc9c0\uac00 \uc788\uc2b5\ub2c8\ub2e4.<\/strong>\n<ul>\n<li>\ubb38\uc11c\ub97c \ubd84\ub958(Document Classification)<\/li>\n<li>\ubb38\uc11c\ub97c \uae30\ubc18\uc73c\ub85c \uc9c8\ubb38\uc744 \ub358\uc84c\uc744 \ub54c \ub2f5\ubcc0(Question Answering)<\/li>\n<li>\ubb38\uc11c\uc5d0\uc11c \uad6c\uc131\uc694\uc18c(Text, Title, Table)\ub97c \ubd84\uc11d (Document Layout Analysis)<\/li>\n<li>\ubb38\uc11c\uc5d0\uc11c \uc6d0\ud558\ub294 \uc815\ubcf4\ub97c \ucd94\ucd9c(Information Extraction)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<p><!-- \/wp:list --><\/p>\n<p><!-- wp:list {\"fontSize\":\"medium\"} --><\/p>\n<ul class=\"has-medium-font-size\">\n<li>\uc774 \uae00\uc758 \ud6c4\ubc18\ubd80\uc5d0\uc11c <strong>Information Extraction<\/strong>\uc5d0 \ub300\ud55c \uc811\uadfc\ubc95\uacfc <strong>Embedding Feeding<\/strong>\uc5d0 \ub300\ud574 \uad6c\uccb4\uc801\uc73c\ub85c \uc124\uba85\ud560 \uc608\uc815\uc785\ub2c8\ub2e4.<\/li>\n<\/ul>\n<p><!-- \/wp:list --><\/p>\n<p><!-- wp:list {\"fontSize\":\"medium\"} --><\/p>\n<ul class=\"has-medium-font-size\">\n<li>\uc0ac\ub78c\uc774 \uc9c1\uc811 \ubb38\uc11c\uc758 \uc815\ubcf4\ub97c \ucd94\ucd9c\ud558\ub294 \uac83\uc740 \uc815\ud655\ub3c4\uac00 \ub0ae\uace0 \uc7ac\uc0ac\uc6a9\uc131\uc774 \ub0ae\uc544 \uc2dc\uac04\uc774 \uc624\ub798 \uac78\ub9ac\uace0 \ub178\ub3d9 \uc9d1\uc57d\uc801\uc785\ub2c8\ub2e4. \uc774\ub97c \ud574\uacb0\ud558\uace0\uc790 Document Understanding\uc774 \uc5f0\uad6c \ub418\uace0 \uc788\uc2b5\ub2c8\ub2e4.<\/li>\n<\/ul>\n<p><!-- \/wp:list --><\/p>\n<p><!-- wp:list {\"fontSize\":\"medium\"} --><\/p>\n<ul class=\"has-medium-font-size\">\n<li><strong>Document Understanding\uc740 \uc2e4\uc81c \uc800\ud76c \uc8fc\ubcc0\uc5d0\uc11c \uc790\uc8fc \uc0ac\uc6a9\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4.<\/strong>\n<ul>\n<li>\ub9ac\uba64\ubc84\uc758 \uba85\ud568 \uc785\ub825, \uae08\uc735 \uc5b4\ud50c\uc5d0\uc11c\uc758 \uc8fc\ubbfc\ub4f1\ub85d\uc99d \uc815\ubcf4 \uc790\ub3d9 \uc785\ub825, \uc1a1\uc7a5 \ubc0f \uacc4\uc57d\uc11c \uc790\ub3d9\uc785\ub825 \ub4f1\uc774 \uc788\uc2b5\ub2c8\ub2e4.<\/li>\n<li>2025\ub144\uae4c\uc9c0 150\uc870 \uae30\uac00\ubc14\uc774\ud2b8(150 \uc81c\ud0c0 \ubc14\uc774\ud2b8) \uc774\uc0c1\uc758 \ube44\uc815\ud615 \ub370\uc774\ud130\ub97c \ubd84\uc11d\ud574\uc57c \ud560 \uac83\uc73c\ub85c \ucd94\uc815\ub41c\ub2e4\uace0 \ud569\ub2c8\ub2e4.[2]<\/li>\n<li>Document Understanding\uc740 \ud604\uc7ac Microsoft, Google, Amazon\uacfc \uac19\uc740 \ub2e4\uad6d\uc801 \uae30\uc5c5 \ubfd0\ub9cc \uc544\ub2c8\ub77c \ub2e4\uc591\ud55c \uae30\uc5c5 \ubc0f \ud559\uacc4\uc5d0\uc11c \uad00\ub828 \ub17c\ubb38\uc774 \uc3df\uc544\uc838 \ub098\uc628\ub2e4\uace0 \ud574\ub3c4 \uacfc\uc5b8\uc774 \uc544\ub2d0 \uc815\ub3c4\ub85c \ub9ce\uc740 \uc5f0\uad6c\uac00 \uc9c4\ud589 \ub418\uace0 \uc788\uc2b5\ub2c8\ub2e4.<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<p><!-- \/wp:list --><\/p>\n<p><!-- wp:heading {\"fontSize\":\"large\"} --><\/p>\n<h2 class=\"has-large-font-size\"><strong>Document Understanding\uc758 \ubb38\uc81c\uc810<\/strong><\/h2>\n<p><!-- \/wp:heading --><\/p>\n<p><!-- wp:list {\"ordered\":true,\"fontSize\":\"medium\"} --><\/p>\n<ol class=\"has-medium-font-size\">\n<li><strong>\uc0ac\uc9c4 \ucd2c\uc601 \ubb38\uc81c\uc640 \ud14d\uc2a4\ud2b8\uc758 \uc18d\uc131\uc5d0 \ub530\ub77c \uc131\ub2a5\uc740 \uacc4\uc18d \ubcc0\ud654\ud569\ub2c8\ub2e4.<\/strong>\n<ul>\n<li>\ub108\ubb34 \ubc1d\uac70\ub098 \uc5b4\ub450\uc6b4 \uc774\ubbf8\uc9c0, \uc6c0\uc9c1\uc774\ub294 \ud53c\uc0ac\uccb4, \ube14\ub7ec\ud604\uc0c1 \ub4e4\uc740 \uae00\uc790\ub97c \uc77d\uae30 \uc5b4\ub835\uac8c \ub9cc\ub4ed\ub2c8\ub2e4.<\/li>\n<li>\uae00\uc790\uc758 \ub2e4\uc591\ud55c \ud3f0\ud2b8, \ud06c\uae30, \uc0c9\uc0c1\ubfd0\ub9cc \uc544\ub2c8\ub77c \uad6c\uaca8\uc838 \uc788\ub294 \uc885\uc774\uc5d0 \uc4f0\uc5ec \uc788\ub294 \uae00\uc790, \ubcf5\uc7a1\ud55c \ubc30\uc5f4\ub4e4\uc740 \uae00 \uc804\uccb4\uc758 \ud574\uc11d\uc774 \uc5b4\ub835\uac8c \ud569\ub2c8\ub2e4.\uad00\ub828 \uc5f0\uad6c - \uc774\ubbf8\uc9c0\uc758 Denoising, Super Resolution, \ud569\uc131 \ubc0f \uc99d\uac15 \uae30\uc220\uc5d0 \uad00\ud55c \uc5f0\uad6c<br><\/li>\n<\/ul>\n<\/li>\n<li><strong>\ud559\uc2b5 \ub370\uc774\ud130\uc758 \ubd80\uc871 \ubc0f \uc218\uc9d1\uc758 \uc5b4\ub824\uc6c0<\/strong>\n<ul>\n<li>\ud488\uc9c8\uc774 \ub192\uc740 \ud559\uc2b5 \ub370\uc774\ud130\ub97c \ub9cc\ub4e4\uc5b4 \ub0b4\ub294\ub370 \ud070 \ube44\uc6a9\uc774 \ud544\uc694\ud569\ub2c8\ub2e4.\uad00\ub828 \uc5f0\uad6c - Multi-Task Learning, Active-Learning, Synthetic Data \ub4f1 \uc5f0\uad6c<br><\/li>\n<\/ul>\n<\/li>\n<li><strong>\ubb38\uc11c \ub0b4\uc6a9\uc758 \ubb38\ub9e5\uc744 \uc774\ud574\ud558\uae30 \uc704\ud55c \uac70\ub300\ud55c Language Model\uc744 \ub9cc\ub4e4\uace0 \uc218\uc815\ud558\ub294 \ub370 \uc5b4\ub824\uc6c0\uc774 \uc788\uc2b5\ub2c8\ub2e4.<\/strong>\n<ul>\n<li>\uc0c8\ub86d\uac8c Language Model\uc744 \ud559\uc2b5\ud558\ub294 \ub370 \ud544\uc694\ud55c \uc790\uc6d0(\uc778\ud504\ub77c, \uc2dc\uac04, \ube44\uc6a9)\uc774 \ub9ce\uc774 \ud544\uc694\ud569\ub2c8\ub2e4.<\/li>\n<li>\ubcf5\uc7a1\ud558\uace0 \uae34 \ubb38\uc11c\uc758 \uc815\ubcf4\ub294 \ud55c \ubc88\uc5d0 \uc785\ub825\ubc1b\uae30 \uc5b4\ub824\uc6cc \ucabc\uac1c\uc11c \uc785\ub825\ud560 \ub54c \uacb0\uacfc \uac12\uc744 \uc608\uce21\ud558\uae30 \uc5b4\ub835\uc2b5\ub2c8\ub2e4.\uad00\ub828 \uc5f0\uad6c - \ud398\uc774\uc9c0\ub97c \ubd80\ubd84\uc801\uc73c\ub85c \ub098\ub204\uc5b4 \uc0c1\uad00\uad00\uacc4\ub97c \ud3ec\ud568\ud55c \ubaa8\ub378, Lightweight \ubaa8\ub378 \uc124\uacc4\uc5d0 \uad00\ud55c \uc5f0\uad6c<\/li>\n<\/ul>\n<\/li>\n<\/ol>\n<p><!-- \/wp:list --><\/p>\n<p><!-- wp:heading {\"fontSize\":\"large\"} --><\/p>\n<h2 class=\"has-large-font-size\"><strong>Business Task (Downstream Task)<\/strong><\/h2>\n<p><!-- \/wp:heading --><\/p>\n<p><!-- wp:quote {\"className\":\"is-style-large\"} --><\/p>\n<blockquote class=\"wp-block-quote is-style-large\">\n<p>\ubb38\uc11c \uc774\ubbf8\uc9c0\ub97c OCR\uc744 \ud1b5\ud574 \ub514\uc9c0\ud138\ud654\ub41c \ud14d\uc2a4\ud2b8 \uc815\ubcf4\ub85c \ubcc0\ud658\ud558\uace0 \ub514\uc9c0\ud138 \ud14d\uc2a4\ud2b8 \uc815\ubcf4\ub97c \ud65c\uc6a9\ud574 \ube44\uc988\ub2c8\uc2a4\uc5d0 \ud544\uc694\ud55c \ubb38\uc81c\ub97c \ud574\uacb0\ud558\ub294 \uc791\uc5c5\uc744 \ub73b\ud569\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \uc0ac\uc804 \ud559\uc2b5\ub41c Language \ubaa8\ub378\uc744 Business Task\uc5d0 \ub9de\uac8c Downstream Task\ub97c \ucd94\uac00\ud558\uc5ec Fine-Tuning \ud558\uc5ec \ubb38\uc81c\ub97c \ud574\uacb0\ud569\ub2c8\ub2e4.<\/p>\n<\/blockquote>\n<p><!-- \/wp:quote --><\/p>\n<p><!-- wp:paragraph {\"fontSize\":\"medium\"} --><\/p>\n<p class=\"has-medium-font-size\"><em>\ub300\ud45c\uc801\uc73c\ub85c Document Image Classification, Visual Question Answering, Information Extraction, Document Layout Analysis\uac00 \uc788\uc2b5\ub2c8\ub2e4.<\/em><\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:columns --><\/p>\n<div class=\"wp-block-columns\"><p><!-- wp:column --><\/p>\n<div class=\"wp-block-column\"><p><!-- wp:heading {\"level\":3} --><\/p>\n<h3><strong>1. Document Image Classification<\/strong><\/h3>\n<p><!-- \/wp:heading --><\/p>\n<p><!-- wp:quote --><\/p>\n<blockquote class=\"wp-block-quote\">\n<p>\ubb38\uc11c \uc774\ubbf8\uc9c0\ub97c \uacfc\ud559 \ub17c\ubb38, \uc774\ub825\uc11c, \uccad\uad6c\uc11c, \uc601\uc218\uc99d \ubc0f \uae30\ud0c0 \uc5ec\ub7ec \ubc94\uc8fc\ub85c \uc790\ub3d9 \ubd84\ub958\ud558\ub294 \uc791\uc5c5\uc785\ub2c8\ub2e4.<\/p>\n<\/blockquote>\n<p><!-- \/wp:quote --><\/p><\/div>\n<p><!-- \/wp:column --><\/p>\n<p><!-- wp:column --><\/p>\n<div class=\"wp-block-column\"><p><!-- wp:heading {\"level\":3} --><\/p>\n<h3><strong>2. Visual Question Answering<\/strong><\/h3>\n<p><!-- \/wp:heading --><\/p>\n<p><!-- wp:quote --><\/p>\n<blockquote class=\"wp-block-quote\">\n<p>\ubb38\uc11c \uc774\ubbf8\uc9c0\uc5d0\uc11c \ud68d\ub4dd\ud55c \ud14d\uc2a4\ud2b8 \uc815\ubcf4, \uc2dc\uac01 \uc815\ubcf4 \ubc0f \ub808\uc774\uc544\uc6c3 \uc815\ubcf4\ub97c \ubd84\uc11d\ud558\uc5ec \uc9c8\ubb38\uc5d0 \ub300\ud55c \ub2f5\uc744 \ucd9c\ub825\ud558\ub294 \uc791\uc5c5\uc785\ub2c8\ub2e4.<\/p>\n<\/blockquote>\n<p><!-- \/wp:quote --><\/p><\/div>\n<p><!-- \/wp:column --><\/p><\/div>\n<p><!-- \/wp:columns --><\/p>\n<p><!-- wp:columns --><\/p>\n<div class=\"wp-block-columns\"><p><!-- wp:column --><\/p>\n<div class=\"wp-block-column\"><p><!-- wp:heading {\"level\":3} --><\/p>\n<h3><strong>3. Document Layout Analysis<\/strong><\/h3>\n<p><!-- \/wp:heading --><\/p>\n<p><!-- wp:quote --><\/p>\n<blockquote class=\"wp-block-quote\">\n<p>\ubb38\uc11c \ub808\uc774\uc544\uc6c3\uc5d0\uc11c \ud14d\uc2a4\ud2b8 \ubc0f \uc2dc\uac01\uc801 \uc815\ubcf4\ub97c \ud65c\uc6a9\ud558\uc5ec \ud45c\/\uadf8\ub9bc\/\ucc28\ud2b8 \uc815\ubcf4 \ubc0f \uc704\uce58 \uad00\uacc4\ub97c \ucc3e\uc544 \uc8fc\ub294 \uc791\uc5c5\uc785\ub2c8\ub2e4.<\/p>\n<\/blockquote>\n<p><!-- \/wp:quote --><\/p><\/div>\n<p><!-- \/wp:column --><\/p>\n<p><!-- wp:column --><\/p>\n<div class=\"wp-block-column\"><p><!-- wp:heading --><\/p>\n<h2><strong>4. Information Extraction<\/strong><\/h2>\n<p><!-- \/wp:heading --><\/p>\n<p><!-- wp:quote --><\/p>\n<blockquote class=\"wp-block-quote\">\n<p>\ubb38\uc11c\uc5d0 \uc788\ub294 2\ucc28\uc6d0 \uacf5\uac04\uc5d0 \ubc30\uc5f4\ub41c \ube44\uc815\ud615 \uc815\ubcf4\uc5d0\uc11c \ud544\uc694\ub85c \ud558\ub294 \uc815\ubcf4\ub9cc\uc744 \ucd94\ucd9c\ud558\ub294 \uae30\uc220\uc744 \ub098\ud0c0\ub0c5\ub2c8\ub2e4.<\/p>\n<\/blockquote>\n<p><!-- \/wp:quote --><\/p><\/div>\n<p><!-- \/wp:column --><\/p><\/div>\n<p><!-- \/wp:columns --><\/p>\n<p><!-- wp:heading {\"fontSize\":\"large\"} --><\/p>\n<h2 class=\"has-large-font-size\"><strong>Information Extraction\uc758 3\uac00\uc9c0 \uc811\uadfc\ubc95<\/strong><\/h2>\n<p><!-- \/wp:heading --><\/p>\n<p><!-- wp:quote {\"className\":\"is-style-large\"} --><\/p>\n<blockquote class=\"wp-block-quote is-style-large\">\n<p><strong>3\uac00\uc9c0 \uc811\uadfc\ubc95\uacfc LayoutLM \uc2dc\ub9ac\uc988, Docformer, PICK, ViBERTgrid \ub17c\ubb38\uc744 \uc18c\uac1c\ud569\ub2c8\ub2e4.<\/strong><\/p>\n<\/blockquote>\n<p><!-- \/wp:quote --><\/p>\n<p><!-- wp:heading {\"level\":3} --><\/p>\n<h3><strong>1. Sequence-based approaches<\/strong><\/h3>\n<p><!-- \/wp:heading --><\/p>\n<p><!-- wp:paragraph {\"fontSize\":\"medium\"} --><\/p>\n<p class=\"has-medium-font-size\">\ud14d\uc2a4\ud2b8 \uc815\ubcf4, \uc2dc\uac01 \uc815\ubcf4 \ubc0f \ub808\uc774\uc544\uc6c3 \uc815\ubcf4 \uc2dc\ud000\uc2a4\ub85c \uc9c1\ub82c \ud654\ud55c \ub2e4\uc74c NLP\uc758 \uae30\uc874 \uc2dc\ud000\uc2a4 \ud0dc\uae45 \ubaa8\ub378\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc6d0\ud558\ub294 \uc815\ubcf4\uc640 \ud074\ub798\uc2a4\uac12\uc744 \ucd94\ucd9c\ud569\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:columns --><\/p>\n<div class=\"wp-block-columns\"><p><!-- wp:column --><\/p>\n<div class=\"wp-block-column\"><p><!-- wp:list {\"fontSize\":\"medium\"} --><\/p>\n<ul class=\"has-medium-font-size\">\n<li><strong>Layoutlmv2 [6] \u2192 Joint Multi-Modal<\/strong>\n<ul>\n<li>Multi-Modal \uc815\ubcf4\ub97c \uc774\uc6a9\ud55c \uc0ac\uc804 \ud559\uc2b5 \uc804\ub7b5\uc744 \uc81c\uc548\ud588\ub2e4.<br><br><br><\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<p><!-- \/wp:list --><\/p><\/div>\n<p><!-- \/wp:column --><\/p>\n<p><!-- wp:column --><\/p>\n<div class=\"wp-block-column\"><p><!-- wp:list {\"fontSize\":\"medium\"} --><\/p>\n<ul class=\"has-medium-font-size\">\n<li><strong>Docformer [7] \u2192 Discrete Multi-Modal<\/strong>\n<ul>\n<li>\ud14d\uc2a4\ud2b8, \uc2dc\uac01 \ubc0f \ub808\uc774\uc544\uc6c3 \uc815\ubcf4\uc758 \uc0c1\uad00\uad00\uacc4\ub97c \ud559\uc2b5\uc2dc\ud0a4\uae30 \uc704\ud55c Cross-Modality Feature Correlation\uc744 \ud1b5\ud55c Embedding Feeding \uc804\ub7b5\uc744 \uc81c\uc548\ud588\ub2e4.<\/li>\n<li>Multi-Modal Self-Attention Layer \uad6c\uc870 \uc124\uacc4\ub97c \uc81c\uc548\ud588\ub2e4<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<p><!-- \/wp:list --><\/p><\/div>\n<p><!-- \/wp:column --><\/p><\/div>\n<p><!-- \/wp:columns --><\/p>\n<p><!-- wp:heading {\"level\":3} --><\/p>\n<h3><strong>2. Graph-based approaches<\/strong><\/h3>\n<p><!-- \/wp:heading --><\/p>\n<p><!-- wp:paragraph {\"fontSize\":\"medium\"} --><\/p>\n<p class=\"has-medium-font-size\">\ubb38\uc11c \uac01 \ud398\uc774\uc9c0 \uc815\ubcf4\ub97c \uadf8\ub798\ud504\ub85c \ubaa8\ub378\ub9c1\ud558\uba70, \ud14d\uc2a4\ud2b8 \uc815\ubcf4\ub294 \ub178\ub4dc\ub85c \ud45c\uc2dc\ub418\uace0 \ud45c\ud604\ub418\ub294 \uc815\ubcf4\uc5d0 \uc2dc\uac01\uc801, \ud14d\uc2a4\ud2b8 \ubc0f \uc704\uce58 \uae30\ub2a5\uc744 \uacb0\ud569\ud558\ub294 \ubc29\ubc95\uc785\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:list {\"fontSize\":\"medium\"} --><\/p>\n<ul class=\"has-medium-font-size\">\n<li><strong>PICK [8]\u2192 Joint Multi-Modal + graph<\/strong>\n<ul>\n<li>Graph\ub97c \uc774\uc6a9\ud558\uc5ec \ud14d\uc2a4\ud2b8 \uc815\ubcf4\uc758 \uc2dc\uac01\uc801, \uc704\uce58 \uc815\ubcf4 \uacb0\ud569\ud55c \ubaa8\ub378\uc744 \uc81c\uc548\ud588\ub2e4.<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<p><!-- \/wp:list --><\/p>\n<p><!-- wp:heading {\"level\":3} --><\/p>\n<h3><strong>3. Grid-based approaches<\/strong><\/h3>\n<p><!-- \/wp:heading --><\/p>\n<p><!-- wp:paragraph {\"fontSize\":\"medium\"} --><\/p>\n<p class=\"has-medium-font-size\">\ud14d\uc2a4\ud2b8 \uc815\ubcf4\uc758 \ud1a0\ud070 \uc784\ubca0\ub529\uc744 2D \uadf8\ub9ac\ub4dc\ub85c \ud45c\ud604\ud55c \ub2e4\uc74c Instance Segmentation \ubaa8\ub378\uc5d0 Feature\uc640 \uacb0\ud569\ud558\uc5ec 2D \uadf8\ub9ac\ub4dc\uc5d0\uc11c \uc6d0\ud558\ub294 \uc815\ubcf4\uc640 \ud074\ub798\uc2a4\uac12\uc744 \ucc3e\ub294 \ubc29\ubc95\uc785\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:list {\"fontSize\":\"medium\"} --><\/p>\n<ul class=\"has-medium-font-size\">\n<li><strong>ViBERTgrid [9] \u2192 Two-stream Multi-Modal<\/strong>\n<ul>\n<li>\uae30\uc874 \ubc29\ub300\ud55c Dataset\uc73c\ub85c \uc0ac\uc804 \ud559\uc2b5\ub41c Model\uc5d0 \uc758\uc874 \ud558\uc9c0 \uc54a\uace0 \uc2dc\uac01\uc801 \uc815\ubcf4\uc5d0 \uc880 \ub354 \ucd08\uc810\uc744 \ub9de\ucd98 \ubaa8\ub378<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<p><!-- \/wp:list --><\/p>\n<p><!-- wp:heading {\"fontSize\":\"large\"} --><\/p>\n<h2 class=\"has-large-font-size\"><strong>Multi-Modal Embedding<\/strong><\/h2>\n<p><!-- \/wp:heading --><\/p>\n<p><!-- wp:quote {\"className\":\"is-style-large\"} --><\/p>\n<blockquote class=\"wp-block-quote is-style-large\">\n<p>\uc2dc\uac01\uc801\uc73c\ub85c \uc815\ubcf4\uac00 \ud48d\ubd80\ud55c \ubb38\uc11c\uc5d0\ub294 \uc8fc\ub85c \ud14d\uc2a4\ud2b8 \uc815\ubcf4, \uc2dc\uac01\uc801 \uc815\ubcf4 \ubc0f \ub808\uc774\uc544\uc6c3 \uc815\ubcf4\ub97c \ud3ec\ud568\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \uac01\uac01 Embedding\ud654 \ud558\uc5ec \ubaa8\ub378\uc758 \uc785\ub825\uc73c\ub85c \ud65c\uc6a9\ud558\ub294 \uae30\uc220\uc785\ub2c8\ub2e4. \uc138 \uac00\uc9c0 Embedding(Text, Visual, Spatial)\uc744 \uc18c\uac1c\ud558\uace0 \uc704\uc5d0 \uc18c\uac1c\ud55c \ub17c\ubb38\uc744 \ud1b5\ud574 \ube44\uad50\ub97c \ud558\uaca0\uc2b5\ub2c8\ub2e4.<\/p>\n<\/blockquote>\n<p><!-- \/wp:quote --><\/p>\n<p><!-- wp:heading {\"level\":3} --><\/p>\n<h3><strong>1. Text Embedding<\/strong><\/h3>\n<p><!-- \/wp:heading --><\/p>\n<p><!-- wp:paragraph {\"fontSize\":\"medium\"} --><\/p>\n<p class=\"has-medium-font-size\">\uc77c\ubc18\uc801\uc73c\ub85c \ub2e8\uc5b4 \ub2e8\uc704 \ud14d\uc2a4\ud2b8\ub97c \ud1a0\ud070 \ud654\ud558\uace0 1\ucc28\uc6d0 \uc704\uce58 \uc784\ubca0\ub529 \ubc0f \uc138\uadf8\uba3c\ud2b8 \uc784\ubca0\ub529\uc744 \ucd94\uac00\ud558\uc5ec \ucd5c\uc885 \ud14d\uc2a4\ud2b8 \uc784\ubca0\ub529\uc744 \uc5bb\uc2b5\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:list {\"fontSize\":\"medium\"} --><\/p>\n<ul class=\"has-medium-font-size\">\n<li>LayoutLM \uc2dc\ub9ac\uc988, Docformer, PICK\uc758 \uacbd\uc6b0 : \ub2e8\uc5b4 \ub2e8\uc704 Tokenizer\ub97c \ud1b5\ud574\uc11c \ud1a0\ud070\ud654\ub41c \uac12<\/li>\n<li>ViBERTgrid\uc758 \uacbd\uc6b0 : BERT Encoder\ub97c \ud65c\uc6a9\ud574 \ucd94\ucd9c\ub41c Word embedding<\/li>\n<\/ul>\n<p><!-- \/wp:list --><\/p>\n<p><!-- wp:heading {\"level\":3} --><\/p>\n<h3><strong>2. Visual Embedding<\/strong><\/h3>\n<p><!-- \/wp:heading --><\/p>\n<p><!-- wp:paragraph {\"fontSize\":\"medium\"} --><\/p>\n<p class=\"has-medium-font-size\">\uc77c\ubc18\uc801\uc73c\ub85c Visual Backbone\uc744 \uc774\uc6a9\ud558\uc5ec fature map\uc744 \ucd94\ucd9c\ud55c \ub2e4\uc74c Pooling \ubc0f Flatten\uc744 \uac70\uccd0 \ub098\uc628 \ubca1\ud130\ub97c \uace0\uc815 \ucc28\uc6d0 \ubca1\ud130\ub97c \uc5bb\uae30 \uc704\ud574 Linear Projection\uc744 \uac70\uce69\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:list {\"fontSize\":\"medium\"} --><\/p>\n<ul class=\"has-medium-font-size\">\n<li>LayoutLM \uc2dc\ub9ac\uc988, Docformer, PICK\uc758 \uacbd\uc6b0 : Visual Backbone(Resnet-FPN, Resnet50)\ub97c \uc0ac\uc6a9\ud574 \ud53c\ucc98 \ucd94\ucd9c \ud6c4 Flatten \ubc0f Linear \uc791\uc5c5\uc73c\ub85c Shape \ubcc0\ud615\ub41c \uac12<\/li>\n<li>ViBERTgrid\uc758 \uacbd\uc6b0 : Resnet \ubaa8\ub378 2\ubc88\uc9f8 \ub808\uc774\uc5b4 \uacb0\uacfc \uac12\uc5d0 Word embedding\uc744 \ud569\uccd0\uc11c \ucd5c\uc885 P_fuse Feature \ub9f5 \uacc4\uc0b0\ud558\uc5ec Segmentation\uacfc Classification\uc744 \uc9c4\ud589<\/li>\n<\/ul>\n<p><!-- \/wp:list --><\/p>\n<p><!-- wp:heading {\"level\":3} --><\/p>\n<h3><strong>3. Spatial(Position) Embedding<\/strong><\/h3>\n<p><!-- \/wp:heading --><\/p>\n<p><!-- wp:paragraph {\"fontSize\":\"medium\"} --><\/p>\n<p class=\"has-medium-font-size\">\ub2e8\uc5b4\uc758 \uc774\ubbf8\uc9c0\uc0c1\uc758 \uc704\uce58 \uc88c\ud45c\uc640 \ud14d\uc2a4\ud2b8 \uc0c1\uc790\uc758 \ub108\ube44\uc640 \ub192\uc774, \uc88c\ud45c\uac04\uc758 \uc0c1\uad00\uad00\uacc4\ub97c \ubca1\ud130\ud654\ud558\uc5ec Spatial \uc784\ubca0\ub529\uc744 \uc5bb\uc2b5\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:list {\"fontSize\":\"medium\"} --><\/p>\n<ul class=\"has-medium-font-size\">\n<li>LayoutLM \uc2dc\ub9ac\uc988 : OCR \ubc15\uc2a4 \uac12\uc758 \uc88c\ud45c\uc640 \uc0c1\ub300\uc801\uc778 \uac70\ub9ac\ub97c \ucd94\ucd9c\ud558\uc5ec Laguage Embedding\uacfc Visual Embedding\uc5d0 \uac01\uac01 \uacb0\ud569\ud558\uc5ec Transformer\ub85c \uc785\ub825<\/li>\n<li>Docformer\uc758 \uacbd\uc6b0 : OCR \ubc15\uc2a4 \uac12\uc758 \uc88c\ud45c\uc640 \uc0c1\ub300\uc801\uc778 \uac70\ub9ac\ub97c \ucd94\ucd9c\ud558\uc5ec \uac01 \ubaa8\ub4e0 \ub808\uc774\uc5b4\uc5d0 \ucd94\uac00\ub85c \uacb0\ud569\ud568<\/li>\n<li>ViBERTgrid\uc758 \uacbd\uc6b0 : \uc804\uccb4 \ubaa8\ub378\uc758 \ud750\ub984 \uc548\uc5d0\uc11c \ud559\uc2b5\ub41c\ub2e4\uace0 \ud310\ub2e8<\/li>\n<li>PICK\uc758 \uacbd\uc6b0 : OCR \ubc15\uc2a4 \uac12\uc758 \uc88c\ud45c\uc640 \uc0c1\ub300\uc801\uc778 \ud06c\uae30\ub97c Graph \ubaa8\ub378 \uad6c\uc870\ub85c \ud65c\uc6a9<\/li>\n<\/ul>\n<p><!-- \/wp:list --><\/p>\n<p><!-- wp:heading {\"fontSize\":\"large\"} --><\/p>\n<h2 class=\"has-large-font-size\"><strong>\ub9c8\ubb34\ub9ac \ud558\uba70<\/strong><\/h2>\n<p><!-- \/wp:heading --><\/p>\n<p><!-- wp:paragraph {\"fontSize\":\"medium\"} --><\/p>\n<p class=\"has-medium-font-size\">Document Understanding\uc5d0 \ub300\ud55c \uc18c\uac1c, Business Task, Information Extraction\uc758 3\uac00\uc9c0 \uc811\uadfc\ubc95\uacfc Multi-Modal Embedding\uc744 \uc18c\uac1c\ud558\uc600\uc2b5\ub2c8\ub2e4. Document Understanding\uc740 \ud604\uc7ac\uc5d0\ub3c4 \ub9ce\uc740 \uc5f0\uad6c\uac00 \uc9c4\ud589\ub418\ub294 \ubd84\uc57c\uc774\uba70 \uc2e4\uc81c \ub2e4\uc591\ud55c \ubd84\uc57c\uc5d0\uc11c \ud65c\uc6a9\ub3c4\uac00 \ub192\uc740 \uc5f0\uad6c\uc911 \ud558\ub098 \uc785\ub2c8\ub2e4. \ud2b9\ud788, \ub4dc\ub77c\ub9c8\uc564\ucef4\ud37c\ub2c8\uc758 \uba85\ud568\uc778\uc2dd \uc11c\ube44\uc2a4\uc640 \uac19\uc774 \ud2b9\uc815 \ub3c4\uba54\uc778\uc5d0 \ucd5c\uc801\ud654\ud558\uac8c \ub41c\ub2e4\uba74 \uae30\uc874 \uc11c\ube44\uc2a4\uc5d0\uc11c \uace0\uac1d\uc5d0\uac8c \ub354 WOW \ud560 \uc218 \uc788\ub294 \uacbd\ud5d8\ub97c \uc81c\uacf5\ud574\uc904 \uc218 \uc788\ub294 \uc5f0\uad6c \ubd84\uc57c\ub77c\uace0 \uc0dd\uac01\ub429\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:paragraph {\"fontSize\":\"medium\"} --><\/p>\n<p class=\"has-medium-font-size\">\ubcf8 \uae00\uc5d0\uc11c\ub294 Document Understanding\uc5d0 \ub300\ud574 \uc804\ubc18\uc801\uc73c\ub85c \uc774\ud574\ub97c \ub3d5\uae30 \uc704\ud574 \uc0ac\uc804 \ud559\uc2b5 \ubc29\ubc95 \ubc0f Multi-Task \ud559\uc2b5 \uc804\ub7b5\ub4f1 \ubcf5\uc7a1\ud55c \uc218\uc2dd\uc740 \uc81c\uc678\ud558\uace0 \uc124\uba85\ud558\uc600\uc2b5\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \uc544\ub798\uc758 \ub808\ud37c\ub7f0\uc2a4 \ub17c\ubb38\uc744 \ud1b5\ud574 \ud655\uc778\ud558\uc2dc\uac70\ub098 \ub313\uae00\uc744 \ud1b5\ud574 \ubb38\uc758 \ubd80\ud0c1\ub4dc\ub9bd\ub2c8\ub2e4. \ucc98\uc74c \uc791\uc131\ud55c \uae30\uc220 \ube14\ub85c\uadf8\uc774\ub2e4 \ubcf4\ub2c8 \ubd80\uc871\ud55c \ubd80\ubd84\uc774 \ub9ce\uc740 \uac83 \uac19\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c \uc791\uc131\ud558\ub294 \uae30\uc220 \ube14\ub85c\uadf8\ub294 \uc880 \ub354 \uc54c\ucc28\uac8c \uad6c\uc131\ud558\ub3c4\ub85d \ub178\ub825\ud574\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.<br>\ubd80\uc871\ud558\uc9c0\ub9cc, \uc77d\uc5b4 \uc8fc\uc154\uc11c \uac10\uc0ac\ud569\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:heading {\"fontSize\":\"large\"} --><\/p>\n<h2 class=\"has-large-font-size\"><strong>Reference<\/strong><\/h2>\n<p><!-- \/wp:heading --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>[1] Cui, Lei, et al. \"Document AI: Benchmarks, Models and Applications.\"&nbsp;<em>arXiv preprint arXiv:2111.08609<\/em>&nbsp;(2021).<br>[2] <a href=\"https:\/\/en.wikipedia.org\/wiki\/Document_layout_analysis\">https:\/\/en.wikipedia.org\/wiki\/Document_layout_analysis<\/a><br>[3] Mathew, Minesh, et al. \"InfographicVQA.\"&nbsp;<em>Proceedings of the IEEE\/CVF Winter Conference on Applications of Computer Vision<\/em>. 2022.APA<br>[4] Zhong, Xu, Jianbin Tang, and Antonio Jimeno Yepes. \"Publaynet: largest dataset ever for document layout analysis.\"&nbsp;<em>2019 International Conference on Document Analysis and Recognition (ICDAR)<\/em> . IEEE, 2019.<br>[5] What is Information Extraction? - A Detailed Guide [by Vihar Kurama, <a href=\"https:\/\/nanonets.com\/blog\/information-extraction\/\">https:\/\/nanonets.com\/blog\/information-extraction\/<\/a>]<br>[6] Xu, Yang, et al. \"Layoutlmv2: Multi-modal pre-training for visually-rich document understanding.\"&nbsp;<em>arXiv preprint arXiv:2012.14740<\/em>&nbsp;(2020).<br>[7] Appalaraju, Srikar, et al. \"Docformer: End-to-end transformer for document understanding.\"&nbsp;<em>Proceedings of the IEEE\/CVF International Conference on Computer Vision<\/em>. 2021.APA<br>[8] Yu, Wenwen, et al. \"PICK: processing key information extraction from documents using improved graph learning-convolutional networks.\"&nbsp;<em>2020 25th International Conference on Pattern Recognition (ICPR)<\/em>. IEEE, 2021.APA<br>[9] Lin, Weihong, et al. \"ViBERTgrid: A Jointly Trained Multi-Modal 2D Document Representation for Key Information Extraction from Documents.\"&nbsp;<em>International Conference on Document Analysis and Recognition<\/em>. Springer, Cham, 2021.APA<br><\/p>\n<p><!-- \/wp:paragraph --><\/p>"},"elements":[],"widgetType":"text-editor"}],"isInner":false}],"isInner":false}]]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_page_assets]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Learning to Rank]]></title>
		<link>https://blog.dramancompany.com/2022/04/learning-to-rank/</link>
		<pubDate>Wed, 06 Apr 2022 07:42:24 +0000</pubDate>
		<dc:creator><![CDATA[mgpark]]></dc:creator>
		<guid isPermaLink="false">https://blog.dramancompany.com/?p=2722</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">안녕하세요!😀&nbsp; 빅데이터센터 AI Lab 박민규입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">저번달에 작성한 Document Understanding 글에서 저희 빅데이터센터에서는 Recommendation System을 연구하고 있다고 했었는데요. 이번 글에서는 Recommendation System에서 사용되는 <strong>Learning to Rank(LTR)</strong>에 대해 소개하려고 합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":"25px"} -->
<div style="height:25px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading -->
<h2>Learning to Rank(LTR)이란 무엇일까?</h2>
<!-- /wp:heading -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">Learning to Rank(LTR)란 Ranking System에서 머신러닝을 사용하는 방법론을 말합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"className":".m0 {     margin-top: 0!important;     margin-bottom: 0!important; }","fontSize":"medium"} -->
<p class=".m0 { margin-top: 0!important; margin-bottom: } has-medium-font-size">Ranking System은 아래와 같은 분야에서 사용되고 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:list {"fontSize":"medium"} -->
<ul class="has-medium-font-size"><li><strong>Search Engines</strong> : 구글 같은 웹페이지에서 검색 시 나오는 결과들(문서)를 연관성이 높은 순서로 정렬하기.</li></ul>
<!-- /wp:list -->

<!-- wp:group -->
<div class="wp-block-group"><!-- wp:columns -->
<div class="wp-block-columns"><!-- wp:column {"width":"100%"} -->
<div class="wp-block-column" style="flex-basis:100%"><!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-2725" style="width: 800px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/04/스크린샷-2022-04-05-오전-9.15.11.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center","style":{"color":{"text":"#adadad"}}} -->
<p class="has-text-align-center has-text-color" style="color:#adadad">Figure 1. Searching “artificial intelligence” in Google Search Engines.</p>
<!-- /wp:paragraph --></div>
<!-- /wp:column --></div>
<!-- /wp:columns --></div>
<!-- /wp:group -->

<!-- wp:list {"fontSize":"medium"} -->
<ul class="has-medium-font-size"><li><strong>Recommendation System</strong> : 유저의 특성에 따라 가장 유저에게 알맞을 것 같은 Item을 추천 점수가 높은 순서대로 정렬하기.</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-2741" style="width: 1000px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/04/스크린샷-2022-04-05-오전-9.12.11.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center","style":{"color":{"text":"#adadad"}}} -->
<p class="has-text-align-center has-text-color" style="color:#adadad">Figure 2. Personalized ranked contents in Netflix.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">Ranking System은 Query(검색어, 유저의 특성 등)에 따라 Item들(문서, 컨텐츠 등)이 연관성 높은 순서로 정렬되는 알고리즘이라고 말할 수 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">LTR은 이러한 Ranking System을 <strong>머신러닝에 적용하여 Query와 Item의 연관성 점수를 예측</strong>합니다. 머신러닝을 사용하기 이전에는 <strong>Vector Space Model, Probabilistic model</strong>과 같은 전통적 방법을 사용하여 Item의 Ranking을 구했습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":"25px"} -->
<div style="height:25px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading -->
<h2>머신러닝 이전 Model</h2>
<!-- /wp:heading -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">1. Vector Space Model</p>
<!-- /wp:paragraph -->

<!-- wp:list {"fontSize":"medium"} -->
<ul class="has-medium-font-size"><li>TF-IDF(여러 문서 안에서 단어의 상대적인 중요도)와 같은 방법으로 Query와 Item(문서)를 각각 임베딩하여 Query-Item relevance score(cosine similarity)를 구하고 높은 유사도 값을 가지는 Item을 상위에 위치시킬 수 있습니다.</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">2. Probabilistic Model</p>
<!-- /wp:paragraph -->

<!-- wp:list {"fontSize":"medium"} -->
<ul class="has-medium-font-size"><li>BM25 : TF와 IDF, 문서 길이 등을 가지고 Query와 Item(문서)의 relevancy를 구하는 방법으로 TF-IDF보다 성능이 좋을 것으로 알려졌습니다.</li><li>Language model : Likelihood 방법을 활용하여 Query가 Item의 임의의 샘플로 관찰될 확률에 따라 Item 순위를 구합니다.</li></ul>
<!-- /wp:list -->

<!-- wp:spacer {"height":"25px"} -->
<div style="height:25px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading -->
<h2>Ranking에 사용되는 Metric</h2>
<!-- /wp:heading -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">Ranking에서는 모델이 얼마나 Item에 대한 순위를 잘 매기는지 측정하기 위해 다음과 같은 metric(평가 지표)를 사용합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":"10px"} -->
<div style="height:10px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading {"level":3} -->
<h3>MRR(Mean Reciprocal Rank)</h3>
<!-- /wp:heading -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-2743" style="width: 800px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/04/Untitled-1.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">각 Query마다 1위 Item을 맞춘 점수를 평균하는 방법입니다. Query에 대해 여러 Item들이 rank됐을 때 test set의 정답(1위)인 Item이 몇위에 있는가에 따라 reciprocal rank가 계산됩니다. 그리고 모든 Query의 reciprocal rank를 평균하면 MRR 점수가 산출됩니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">해당 방법은 1위의 item의 위치만 파악하기에 다른 Item의 관련성은 무시한다는 한계점을 가집니다.</p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":"10px"} -->
<div style="height:10px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading -->
<h2>Precision at k</h2>
<!-- /wp:heading -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-2744" style="width: 800px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/04/Untitled_1-1.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">Precision은 추천된 top k의 Item 중 관련성 있는 아이템의 비율을 의미합니다. 해당 metric은 관련이 있는지 없는지만 판단합니다. 즉, rank에 대한 점수는 계산하지 않는다는 한계점을 가집니다.</p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":"10px"} -->
<div style="height:10px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading {"level":3} -->
<h3>nDCG(normalized Discounted Cumulative Gain)</h3>
<!-- /wp:heading -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-2745" style="width: 700px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/04/Untitled_2-1.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-2746" style="width: 700px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/04/Untitled_3-1.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-2736" style="width: 300px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/04/Untitled_4.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-2748" style="width: 300px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/04/Untitled_5-1.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">nDCG는 MRR과 Precision의 단점을 모두 보완한 metric입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:list {"fontSize":"medium"} -->
<ul class="has-medium-font-size"><li>DCG<ul><li>DCG는 Ranking 순서에 따라 점점 비중을 줄여 discounted된 관련 점수를 계산하는 방법입니다. 순위가 하위로 갈 수록 패널티를 준다고 보면 됩니다. Ranking 순서보다 관련성에 비중을 두고 싶으면 위 계산식 중에 두 번째 식을 사용하면 됩니다.</li></ul></li></ul>
<!-- /wp:list -->

<!-- wp:list {"fontSize":"medium"} -->
<ul class="has-medium-font-size"><li>IDCG → nDCG<ul><li>DCG는 Ranking 결과 길이인 p에 따라 값이 많이 변하기에 일정 스케일의 값을 가지도록 normalize가 필요합니다. IDCG를 구하여 이를 해결할 수 있습니다.</li><li>DCG를 IDCG로 나누면 nDCG를 구할 수 있습니다.</li></ul></li></ul>
<!-- /wp:list -->

<!-- wp:spacer {"height":"25px"} -->
<div style="height:25px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading -->
<h2>LTR을 위한 머신러닝 모델</h2>
<!-- /wp:heading -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-2734" style="width: 700px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/04/스크린샷-2022-04-04-오후-8.27.15.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center","style":{"color":{"text":"#adadad"}}} -->
<p class="has-text-align-center has-text-color" style="color:#adadad">Figure 3. Learning to Rank framework.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">Figure 3은 LTR의 framework입니다. n개의 Query에 대해서 각 Item에 대한 m개의 feature(x)가 있고, n개의 relevance score y(예. 유저의 클릭 수, 평점 등)이 있습니다. 이 학습데이터로 모델 h를 만들어 테스트데이터를 입력했을 때 relevance score를 예측합니다. LTR에서 중요한 것은 “<strong>어떤 손실함수(Loss Function)을 활용해 모델을 학습하는가</strong>” 입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":"10px"} -->
<div style="height:10px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading {"level":3} -->
<h3>Loss Function</h3>
<!-- /wp:heading -->

<!-- wp:heading {"level":4} -->
<h4><strong>Point-wise</strong></h4>
<!-- /wp:heading -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">한개의 입력 데이터에 대해 예측된 y값과 ground truth y값에 대한 차이만 계산하는 방법입니다. MSE(Mean Square Error) loss가 대표적인 예라고 볼 수 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":"3px"} -->
<div style="height:3px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading {"level":4} -->
<h4><strong>Pair-wise</strong></h4>
<!-- /wp:heading -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">두개의 Item을 비교해 어느 Item이 Query와 가장 유사한지 판단하는 방법입니다. Point-wise 방법을 사용하기 위해서는 테스트데이터에 대한 ground truth값이 모두 절대적이어야 하는데 현실에서는 그러한 데이터를 찾기가 어렵습니다. 이에 대한 해결책으로 Pair-wise 방법은 두 Item 사이의 상대적인 relevancy를 학습합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:list {"fontSize":"medium"} -->
<ul class="has-medium-font-size"><li>RankNet : Binary Cross Entropy loss를 사용하여 Pair-wise를 학습합니다.</li><li>LambdaRank : 높은 rank에 해당하는 Item은 높은 gradients를 주는 방식으로 학습합니다.</li><li>LambdaMART: Grdient Boosting 방법을 활용하여 LambdaRank보다 더 좋은 성능을 냅니다.</li></ul>
<!-- /wp:list -->

<!-- wp:heading {"level":4} -->
<h4><strong>List-wise</strong></h4>
<!-- /wp:heading -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">해당 방법은 Pair를 넘어서 Item list에 대한 모든 relevancy를 계산합니다. Ranking metric을 최대화하는 방법이기에 가장 좋은 성능을 기대할 수 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:list {"fontSize":"medium"} -->
<ul class="has-medium-font-size"><li>LambdaRank, LambdaMART는 List-wise에서도 사용가능합니다.</li><li>SoftRank : 각 Item에 대한 rank 확률 분포를 구합니다.</li><li>ListNet : Plackett-Luce model를 사용하여 모든 rank 조합(permutation)에 대한 loss를 계산합니다.</li></ul>
<!-- /wp:list -->

<!-- wp:spacer {"height":"25px"} -->
<div style="height:25px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading -->
<h2>최신 LTR 연구들</h2>
<!-- /wp:heading -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">딥러닝을 LTR에 적용하는 최신 연구들을 살펴보겠습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3><strong>GSF(Groupwise Scoring Function)</strong></h3>
<!-- /wp:heading -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-2733" style="width: 600px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/04/스크린샷-2022-04-05-오전-10.56.32.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center","style":{"color":{"text":"#adadad"}}} -->
<p class="has-text-align-center has-text-color" style="color:#adadad">Figure 4. GSF architecture</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">GSF[2]는 여러 Item feature들(x1, x2, x3)에 대한 조합([x1, x2], [x1, x3], …)을 만들고 MLP를 통과시켜 각 Item에 대한 output들을 합산하여 하나의 output으로 만듭니다.</p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":"10px"} -->
<div style="height:10px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading {"level":3} -->
<h3><strong>seq2slate</strong></h3>
<!-- /wp:heading -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-2732" style="width: 700px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/04/스크린샷-2022-04-05-오전-11.26.15.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center","style":{"color":{"text":"#adadad"}}} -->
<p class="has-text-align-center has-text-color" style="color:#adadad">Figure 5. seq2slate architecture</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">seq2slate[3]는 Point Network의 varient와 조합된 RNN을 사용하는 방법입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:list {"fontSize":"medium"} -->
<ul class="has-medium-font-size"><li>여기서 Pointer Network는 결과 출력 시 입력 문장 중 정답에 해당하는 부분의 index를 출력하는 네트워크입니다. seq2seq의 변형으로 고정된 길이의 결과를 출력하는 기존 RNN과 달리 입력에 따라 유동적인 출력이 가능합니다.</li></ul>
<!-- /wp:list -->

<!-- wp:spacer {"height":"10px"} -->
<div style="height:10px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading {"level":3} -->
<h3><strong>DLCM(Deep Listwise Context Model)</strong></h3>
<!-- /wp:heading -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-2731" style="width: 850px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/04/스크린샷-2022-04-05-오전-11.44.52.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center","style":{"color":{"text":"#adadad"}}} -->
<p class="has-text-align-center has-text-color" style="color:#adadad">Figure 6. DLCM architecture</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">DLCM[1]은 Query와 Item의 feature를 역방향으로 GRU에 통과시킨 각 결과와 마지막 결과에 대해 local ranking function을 적용하여 score를 얻는 방법입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":"10px"} -->
<div style="height:10px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading {"level":3} -->
<h3><strong>Context-Aware Ranker</strong></h3>
<!-- /wp:heading -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-2730" style="width: 800px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/04/스크린샷-2022-03-02-오후-4.36.39.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center","style":{"color":{"text":"#adadad"}}} -->
<p class="has-text-align-center has-text-color" style="color:#adadad">Figure 7. Context-Aware Ranker architecture</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">Context-Aware Ranker[6]는 각 Query와 Item에 대한 feature vector를 하나로 만들어 (FF)Feed Forward Network에 입력하고, transformer를 거쳐 다시 FF에 통과시킨 후 최종 score를 얻는 방법입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">LTR 벤치마크 데이터셋인 MSLR-WEB30K에서 가장 좋은 성능(SOTA)을 보이고 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":"25px"} -->
<div style="height:25px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading -->
<h2>마무리 하며</h2>
<!-- /wp:heading -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">이번 포스팅에서는 LTR의 기본적인 개념과 최신연구를 살펴봤습니다. 드라마앤컴퍼니에서는 LTR의 최신연구를 활용하여 인재 추천 서비스, 광고 추천 서비스에 대한 연구를 수행하고 있습니다. AI Lab에서 구체적으로 LTR을 어떻게 적용하고 있는지는 다음에 공유하도록 하겠습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">궁금하신 사항은 댓글을 통해 문의해주시면 감사하겠습니다. 부족한 글 읽어주셔서 감사드립니다. 다음번에 더 좋은 글로 찾아뵙겠습니다 🤗</p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":"25px"} -->
<div style="height:25px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading -->
<h2>Reference</h2>
<!-- /wp:heading -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">[1] Ai, Q., Bi, K., Guo, J., &amp; Croft, W. B. (2018, June). Learning a deep listwise context model for ranking refinement. In&nbsp;<em>The 41st international ACM SIGIR conference on research &amp; development in information retrieval</em> (pp. 135-144).</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">[2] Ai, Q., Wang, X., Bruch, S., Golbandi, N., Bendersky, M., &amp; Najork, M. (2019, September). Learning groupwise multivariate scoring functions using deep neural networks. In&nbsp;<em>Proceedings of the 2019 ACM SIGIR international conference on theory of information retrieval</em>&nbsp;(pp. 85-92).</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">[3] Bello, I., Kulkarni, S., Jain, S., Boutilier, C., Chi, E., Eban, E., ... &amp; Meshi, O. (2018). Seq2slate: Re-ranking and slate optimization with rnns.&nbsp;<em>arXiv preprint arXiv:1810.02019.</em></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">[4] <a href="https://en.wikipedia.org/wiki/Learning_to_rank">https://en.wikipedia.org/wiki/Learning_to_rank</a></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">[5] Liu, T. Y. (2009). Learning to rank for information retrieval.&nbsp;<em>Foundations and Trends® in Information Retrieval</em>,&nbsp;<em>3</em>(3), 225-331.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">[6] Pobrotyn, P., Bartczak, T., Synowiec, M., Białobrzeski, R., &amp; Bojar, J. (2020). Context-aware learning to rank with self-attention.&nbsp;<em>arXiv preprint arXiv:2005.10084</em>.</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2722</wp:post_id>
		<wp:post_date><![CDATA[2022-04-06 16:42:24]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-04-06 07:42:24]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-04-06 16:49:12]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-04-06 07:49:12]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[learning-to-rank]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="ailab"><![CDATA[AI Lab.]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle_flag]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729426035;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:2629;}i:1;a:1:{s:2:"id";i:3343;}i:2;a:1:{s:2:"id";i:3398;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_single_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:23:{s:8:"subtitle";s:0:"";s:6:"format";s:8:"standard";s:5:"video";s:0:"";s:7:"gallery";s:0:"";s:11:"source_name";s:0:"";s:10:"source_url";s:0:"";s:8:"via_name";s:0:"";s:7:"via_url";s:0:"";s:17:"override_template";s:1:"0";s:8:"override";a:1:{i:0;a:32:{s:8:"template";s:1:"1";s:18:"single_blog_custom";s:0:"";s:8:"parallax";s:1:"1";s:10:"fullscreen";s:1:"1";s:6:"layout";s:13:"right-sidebar";s:7:"sidebar";s:15:"default-sidebar";s:14:"second_sidebar";s:15:"default-sidebar";s:14:"sticky_sidebar";s:1:"1";s:14:"share_position";s:3:"top";s:17:"share_float_style";s:16:"share-monocrhome";s:18:"show_share_counter";s:1:"1";s:17:"show_view_counter";s:1:"1";s:13:"show_featured";s:1:"1";s:14:"show_post_meta";s:1:"1";s:16:"show_post_author";s:1:"1";s:22:"show_post_author_image";s:1:"1";s:14:"show_post_date";s:1:"1";s:16:"post_date_format";s:7:"default";s:23:"post_date_format_custom";s:5:"Y/m/d";s:18:"show_post_category";s:1:"1";s:22:"show_post_reading_time";s:1:"0";s:21:"post_reading_time_wpm";s:3:"300";s:16:"show_zoom_button";s:1:"0";s:20:"zoom_button_out_step";s:1:"2";s:19:"zoom_button_in_step";s:1:"3";s:13:"show_post_tag";s:1:"1";s:19:"show_prev_next_post";s:1:"1";s:15:"show_popup_post";s:1:"1";s:17:"number_popup_post";s:1:"1";s:15:"show_author_box";s:1:"0";s:17:"show_post_related";s:1:"0";s:24:"show_inline_post_related";s:1:"0";}}s:19:"override_image_size";s:1:"0";s:14:"image_override";a:1:{i:0;a:2:{s:26:"single_post_thumbnail_size";s:8:"crop-500";s:24:"single_post_gallery_size";s:8:"crop-500";}}s:13:"trending_post";s:1:"0";s:22:"trending_post_position";s:4:"meta";s:19:"trending_post_label";s:8:"Trending";s:14:"sponsored_post";s:1:"0";s:20:"sponsored_post_label";s:12:"Sponsored by";s:19:"sponsored_post_name";s:0:"";s:18:"sponsored_post_url";s:0:"";s:26:"sponsored_post_logo_enable";s:1:"0";s:19:"sponsored_post_logo";s:0:"";s:19:"sponsored_post_desc";s:0:"";s:10:"disable_ad";s:1:"0";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[53]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:2:"id";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_estimated-reading-time-minutes]]></wp:meta_key>
		<wp:meta_value><![CDATA[8]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[2766]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[114]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[프로덕트 디자인팀 2022.1Q 회고]]></title>
		<link>https://blog.dramancompany.com/2022/04/%ed%94%84%eb%a1%9c%eb%8d%95%ed%8a%b8-%eb%94%94%ec%9e%90%ec%9d%b8%ed%8c%80-2022-1q-%ed%9a%8c%ea%b3%a0/</link>
		<pubDate>Thu, 28 Apr 2022 00:00:27 +0000</pubDate>
		<dc:creator><![CDATA[soo.ahn]]></dc:creator>
		<guid isPermaLink="false">https://blog.dramancompany.com/?p=2770</guid>
		<description></description>
		<content:encoded><![CDATA[어느덧 2022년의 4월도 마무리되어가고 있습니다. 조금 늦은 감이 있지만, 프로덕트 디자인팀은 워크샵을 통해 지난 1분기를 돌아보는 회고 시간을 가졌습니다.

이를 준비하게 된 계기와 짤막한 소감을 남겨 봅니다.<br></p><br />
            <h2>리멤버 프로덕트 디자인팀</h2><br />
        <p>본론에 앞서 리멤버 프로덕트 디자인 팀의 구성과 업무 공유 방식에 대해 간략히 설명하고자 합니다.</p><p style="font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; font-size: 16px; font-family: Roboto, sans-serif;">리멤버는 크게 기능 조직과 미션 조직으로 나누어집니다. 기능 조직의 팀원들은 각각 미션 조직(이하 크루)에 속하여 실무를 진행합니다.&nbsp;</p><p style="font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; font-size: 16px; font-family: Roboto, sans-serif;">예를 들어 저는 프로덕트 디자인팀이라는 기능 조직의 팀원이며 동시에 콘텐츠 크루에서의 실무를 담당하고 있습니다.&nbsp;</p><h3><strong>Daily 데일리</strong></h3><p>이렇듯 기능 조직의 팀원은 모두 진행하는 업무가 상이합니다. 때문에 프로덕트 디자인팀은 매일 데일리를 통해 업무를 공유하고 있습니다.&nbsp;

팀원들은 각자 진행하고 있는 업무를 공유하고, 자유롭게 디자인 피드백을 주고받습니다.&nbsp;

이 과정에서 프로덕트 전반의 디자인 톤앤매너를 맞추고, RDS(Remember Design System)를 체계화 및 발전시키고 있습니다.</p>

<h3><strong>Weekly 위클리</strong></h3>

주 1회 약 2시간가량 위클리를 진행합니다.&nbsp;

이 시간에는 업무 중 좀 더 디자인적 관점이 필요하다고 판단되는 아젠다를 논의하거나 함께 진행하는 프로젝트를 작업합니다.

<h3><strong>Workshop 워크샵</strong></h3>

마지막으로 위클리 시간을 활용해 비정기적으로 워크샵을 진행합니다.&nbsp;

이번 1분기 회고 역시 이와 같은 방식으로 진행한 것인데요, 4월 네 번째주 위클리 시간을 활용해 워크샵을 진행하였습니다.&nbsp;

<pre><code>        &lt;h2&gt;분기 회고 진행 방식&lt;/h2&gt;
    &lt;h3&gt;&lt;strong&gt;Form&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;Form은 이름과 크루 명 등을 제외하면 총 6가지의 항목으로 구성됩니다. 
</code></pre>

 </p><br />
                                    <figure>
                                        <img src="https://blog.dramancompany.com/wp-content/uploads/2022/04/스크린샷-2022-04-26-오후-8.09.38-1.png" title="1분기 회고 form" alt="1분기 회고 form" />                                          <figcaption>KPT 회고 방식을 참고하였습니다. 해당 form은 조직의 구성과 특성에 맞추어 개인적으로 만든 것입니다.</figcaption>
                                        </figure>
        <ul><li>항목 1. task : 지난 1분기에 진행한 업무를 작성합니다.</li><li>항목 2. summary : task에 대한 간단한 설명을 적습니다.</li><li>항목 3. 만족도 : 해당 task에 대한 만족도를 별 1~5개로 평가합니다<br />                          여기서 주의할 것은 만족도 평가를 포함한 모든 항목은 현재 시점을 기준으로 작성한다는 점입니다.<i><br /></i>                          예를 들어 당시 task에 대한 만족도가 5점이었으나, 현시점에서 3점이라면 해당 task에 대한 만족도는 3점으로 기재하는 방식입니다.</li><li>항목 4. Keep 지속할 것을 적습니다.</li><li>항목 5. Problem 해결하고 싶은 점을 적습니다.</li><li>항목 6. Try 시도할 것을 작성합니다.</li></ul><p>1분기 task에 대한 정리가 끝났다면, 마지막으로 1분기 전체에 대한 만족도와 KPT를 작성합니다.

작성 순서는 자유입니다. task를 먼저 정리한 후에 KPT를 정리해도 좋고, 한 task의 항목을 KPT까지 모두 작성한 후에 다음 task를 작성하는 식으로 정리해도 좋습니다.<br>

</p>

<h3><strong>뚜렷함에서 얻는 양질의 KPT</strong></h3>

어쩌면 task를 정리하는 것부터가 부담으로 다가올 수 있을 것 같습니다. 그래서 제 나름 도움이 되었던 방법을 공유하고자 합니다. 

개인적으로는 떠오르는 대로 마구잡이로(?) 우선 작성해 보는 것이 훨씬 진행하기 수월했습니다. 

보통 task를 정리하기 위해 figma, slack, wiki 등의 업무 파일을 참고하여 시기별로 리스트업합니다. 

하지만 현시점에서 회상해 보았을 때 머릿속에 남는 task는 시기와 상관없이 나에게 인상적이었던 것들이 우선적으로 떠오릅니다. 

그 이유가 긍정적이건 부정적이건 혹은 현재의 일과 연관이 있어서건 말입니다. 

따라서 이러한 task 들은 구체적으로 연상하기 쉽고 KPT에 대해서도 좀 더 양질의 회고를 얻을 수 있었습니다.

많은 시간을 들여 꼼꼼히 정리할 수 있는 상황이 아니라면 연상되는 것을 우선으로 정리하고,&nbsp;

이후 문서를 열어보며 조금씩 다듬어 나가는 것도 하나의 방법이 될 수 있을 것 같습니다.&nbsp;

(어쩌면 제가 mbti의 P 유형이라 가능한 것일지도..^^;)

<br>

<h3><strong>공유와 감상</strong></h3>

약 30분 정도 작성 시간을 가진 후 함께 공유하는 시간을 가졌는데요,&nbsp;

개인마다 2가지 task와 1분기 전체에 대한 회고를 공유하였습니다.

공유할 2가지 task를 선별하는 것은 주관적 기준에 따랐습니다.&nbsp;

재미있게도(?) 저희 팀원들은 전반적으로 만족도가 높은 task 2개를 골랐고, 1분기 전체에 대한 평점은 모두 3점이었습니다.&nbsp;

<pre><code>                                &lt;figure&gt;
                                    &lt;img width="768" height="772" src="https://blog.dramancompany.com/wp-content/uploads/2022/04/스크린샷-2022-04-27-오후-1.06.-768x772.png" alt="" loading="lazy" srcset="https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2022/04/스크린샷-2022-04-27-오후-1.06..png?resize=768%2C772&amp;ssl=1 768w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2022/04/스크린샷-2022-04-27-오후-1.06..png?resize=298%2C300&amp;ssl=1 298w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2022/04/스크린샷-2022-04-27-오후-1.06..png?resize=1018%2C1024&amp;ssl=1 1018w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2022/04/스크린샷-2022-04-27-오후-1.06..png?resize=150%2C150&amp;ssl=1 150w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2022/04/스크린샷-2022-04-27-오후-1.06..png?resize=1528%2C1536&amp;ssl=1 1528w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2022/04/스크린샷-2022-04-27-오후-1.06..png?resize=75%2C75&amp;ssl=1 75w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2022/04/스크린샷-2022-04-27-오후-1.06..png?resize=750%2C754&amp;ssl=1 750w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2022/04/스크린샷-2022-04-27-오후-1.06..png?resize=1140%2C1146&amp;ssl=1 1140w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2022/04/스크린샷-2022-04-27-오후-1.06..png?w=1830&amp;ssl=1 1830w" sizes="(max-width: 768px) 100vw, 768px" /&gt;                                         &lt;figcaption&gt;2022.4.20. 프로덕트 디자인팀 워크샵&lt;/figcaption&gt;
                                    &lt;/figure&gt;
        &lt;h2&gt;회고의 필요성_함께 자라기&lt;/h2&gt;
    &lt;p&gt;워크샵에서 1분기 회고를 제안하게 된 가장 큰 동기는 ‘함께 자라기: 애자일로 가는 길 / 저자 김창준’이라는 책이었습니다.&amp;nbsp;
</code></pre>

꽤 중요한 역할을 한 책이기에 내용에 대해 짤막하게 다뤄보고자 합니다.

이 책은 애자일 방법론 도입을 개인과 조직의 관점에서 말하고 있습니다.&nbsp;

구성은 ‘자라기', ‘함께', ‘애자일'의 총 3가지 파트로 이루어집니다.</p>

<h3><strong>복리 구조로 자라기</strong></h3>

제가 회고에 대한 필요성을 느끼게 된 부분은 책의 첫 번째 파트인 ‘자라기’였습니다. 해당 파트는 ‘필드에서 개인이 어떻게 성장할 것인가’에 대해 다루고 있습니다.

그 중 ‘일반 조직이 일하는 구조’와 ‘복리 조직이 일하는 구조'에 대한 부분이 인상적이었는데요, 핵심을 압축적으로 보여주는 그림이 있어 인용해 보자면 다음과 같습니다. 

<pre><code>                                &lt;figure&gt;
                                    &lt;img width="1024" height="331" src="https://blog.dramancompany.com/wp-content/uploads/2022/04/스크린샷-2022-04-26-오후-4.53.18-1024x331.png" alt="일반조직이 일하는 구조와 복리조직이 일하는 구조" loading="lazy" srcset="https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2022/04/스크린샷-2022-04-26-오후-4.53.18.png?resize=1024%2C331&amp;ssl=1 1024w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2022/04/스크린샷-2022-04-26-오후-4.53.18.png?resize=300%2C97&amp;ssl=1 300w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2022/04/스크린샷-2022-04-26-오후-4.53.18.png?resize=768%2C248&amp;ssl=1 768w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2022/04/스크린샷-2022-04-26-오후-4.53.18.png?resize=1536%2C497&amp;ssl=1 1536w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2022/04/스크린샷-2022-04-26-오후-4.53.18.png?resize=750%2C243&amp;ssl=1 750w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2022/04/스크린샷-2022-04-26-오후-4.53.18.png?resize=1140%2C369&amp;ssl=1 1140w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2022/04/스크린샷-2022-04-26-오후-4.53.18.png?w=2034&amp;ssl=1 2034w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;                                         &lt;figcaption&gt;함께 자라기:애자일로 가는 길_김창준 지음 35-36p&lt;/figcaption&gt;
                                    &lt;/figure&gt;
    &lt;p&gt;이 부분에서 제가 가장 중요하다고 생각한 포인트는 ‘복리'입니다. 아시다시피 복리는 더하기가 아닌 곱하기의 개념인데요,&amp;nbsp;
</code></pre>

저자가 말하는 ‘복리 구조'로 개인과 조직이 주기적 디벨롭 과정을 갖는다면 아마 그 성장 곡선은 다음과 같을 것이라고 생각했습니다.</p><br />
                                    <figure>
                                        <img src="https://blog.dramancompany.com/wp-content/uploads/elementor/thumbs/-2022-04-26-오후-5.38.53-pnyr80z5m8jacgkmzxoyjtoab3ti0391jobvmtff9c.png" title="이상적 복리 구조라면&#8230;" alt="이상적 복리 구조라면..." />                                            <figcaption></figcaption>
                                        </figure>
        <h3><strong>회고를 회고</strong></h3><p>‘복리 조직이 일하는 구조’로 가기 위해 저자가 권하는 방법 중 하나는 ‘자신이 이미 가진 것들을 잘 활용하는 것’, 즉 ‘자기 회고’입니다.&nbsp;

나의 작업 프로세스를 되돌아보고, 나아가 이 과정을 개선하는 프로세스에 대해 생각함으로써 전체 구조에 대한 개선을 고민하는 것입니다.</p><br />
                                    <figure>
                                        <img src="https://blog.dramancompany.com/wp-content/uploads/elementor/thumbs/-2022-04-26-오후-6.06.18-pnyra9t9xzlnumn2pvan8pcx7biyr46d81opw4u39c.png" title="더글러스 엥겔바트의 A,B,C 작업 시각화" alt="더글러스 엥겔바트의 A,B,C 작업 시각화" />                                          <figcaption>더글러스 엥겔바트의 A,B,C 작업 시각화 (함께 자라기:애자일로 가는 길_김창준 지음 33-40p 참고)</figcaption>
                                        </figure>
            <h2>소감</h2><br />
        <p>사실 회고의 장점, 중요성은 익히 알고 있지만, 실무와 일정에 쫓기다 보면 어느새 나중으로 미뤄지곤 합니다. 저 또한 그렇고요.&nbsp;

때문에, 이번 분기 회고는 더 늦기 전에 꼭 진행해야겠다는 생각이 들었습니다.&nbsp;

개인적으로는 분기에 대한 회고는 처음이었기에 또 다른 관점에서 task를 바라볼 수 있어 새로웠습니다.&nbsp;

어쩌다 보니 회고와 더불어 책 추천 글이 된 것 같기도 하네요. (머쓱) 

자발적 환기는 어느 분야, 또 누구에게나 필요한 과정이라고 생각합니다. 그리고 이를 위한 가장 쉬운 방법은 책의 내용을 따라 해 보는 것이 아닐까 싶습니다.&nbsp;

이후에 또 “요건 한번 따라 해봄 직하다!” 싶은 무언가가 있다면 팀원들을 대상으로 스윽- 한번 시도해 볼까 합니다. (미리 많은 협조 부탁드려요..^^)

긴 글 읽어주셔서 감사합니다.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2770</wp:post_id>
		<wp:post_date><![CDATA[2022-04-28 09:00:27]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-04-28 00:00:27]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-04-28 14:06:52]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-04-28 05:06:52]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%ed%94%84%eb%a1%9c%eb%8d%95%ed%8a%b8-%eb%94%94%ec%9e%90%ec%9d%b8%ed%8c%80-2022-1q-%ed%9a%8c%ea%b3%a0]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="design"><![CDATA[Design]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle_flag]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729265096;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:2330;}i:1;a:1:{s:2:"id";i:1850;}i:2;a:1:{s:2:"id";i:1783;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_template_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[wp-post]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_version]]></wp:meta_key>
		<wp:meta_value><![CDATA[3.6.1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_single_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:23:{s:8:"subtitle";s:0:"";s:6:"format";s:8:"standard";s:5:"video";s:0:"";s:7:"gallery";s:0:"";s:11:"source_name";s:0:"";s:10:"source_url";s:0:"";s:8:"via_name";s:0:"";s:7:"via_url";s:0:"";s:17:"override_template";s:1:"0";s:8:"override";a:1:{i:0;a:32:{s:8:"template";s:1:"1";s:18:"single_blog_custom";s:0:"";s:8:"parallax";s:1:"1";s:10:"fullscreen";s:1:"1";s:6:"layout";s:13:"right-sidebar";s:7:"sidebar";s:15:"default-sidebar";s:14:"second_sidebar";s:15:"default-sidebar";s:14:"sticky_sidebar";s:1:"1";s:14:"share_position";s:3:"top";s:17:"share_float_style";s:16:"share-monocrhome";s:18:"show_share_counter";s:1:"1";s:17:"show_view_counter";s:1:"1";s:13:"show_featured";s:1:"1";s:14:"show_post_meta";s:1:"1";s:16:"show_post_author";s:1:"1";s:22:"show_post_author_image";s:1:"1";s:14:"show_post_date";s:1:"1";s:16:"post_date_format";s:7:"default";s:23:"post_date_format_custom";s:5:"Y/m/d";s:18:"show_post_category";s:1:"1";s:22:"show_post_reading_time";s:1:"0";s:21:"post_reading_time_wpm";s:3:"300";s:16:"show_zoom_button";s:1:"0";s:20:"zoom_button_out_step";s:1:"2";s:19:"zoom_button_in_step";s:1:"3";s:13:"show_post_tag";s:1:"1";s:19:"show_prev_next_post";s:1:"1";s:15:"show_popup_post";s:1:"1";s:17:"number_popup_post";s:1:"1";s:15:"show_author_box";s:1:"0";s:17:"show_post_related";s:1:"0";s:24:"show_inline_post_related";s:1:"0";}}s:19:"override_image_size";s:1:"0";s:14:"image_override";a:1:{i:0;a:2:{s:26:"single_post_thumbnail_size";s:8:"crop-500";s:24:"single_post_gallery_size";s:8:"crop-500";}}s:13:"trending_post";s:1:"0";s:22:"trending_post_position";s:4:"meta";s:19:"trending_post_label";s:8:"Trending";s:14:"sponsored_post";s:1:"0";s:20:"sponsored_post_label";s:12:"Sponsored by";s:19:"sponsored_post_name";s:0:"";s:18:"sponsored_post_url";s:0:"";s:26:"sponsored_post_logo_enable";s:1:"0";s:19:"sponsored_post_logo";s:0:"";s:19:"sponsored_post_desc";s:0:"";s:10:"disable_ad";s:1:"0";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[49]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:2:"id";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_estimated-reading-time-minutes]]></wp:meta_key>
		<wp:meta_value><![CDATA[6]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_data]]></wp:meta_key>
		<wp:meta_value><![CDATA[[{"id":"46e1131","elType":"section","settings":[],"elements":[{"id":"c98bfd3","elType":"column","settings":{"_column_size":100,"_inline_size":null},"elements":[{"id":"41f2eef","elType":"widget","settings":{"space":{"unit":"px","size":38,"sizes":[]}},"elements":[],"widgetType":"spacer"},{"id":"0537f71","elType":"widget","settings":{"editor":"<p>\uc5b4\ub290\ub367 2022\ub144\uc758 4\uc6d4\ub3c4 \ub9c8\ubb34\ub9ac\ub418\uc5b4\uac00\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc870\uae08 \ub2a6\uc740 \uac10\uc774 \uc788\uc9c0\ub9cc, \ud504\ub85c\ub355\ud2b8 \ub514\uc790\uc778\ud300\uc740 \uc6cc\ud06c\uc0f5\uc744 \ud1b5\ud574 \uc9c0\ub09c 1\ubd84\uae30\ub97c \ub3cc\uc544\ubcf4\ub294 \ud68c\uace0 \uc2dc\uac04\uc744 \uac00\uc84c\uc2b5\ub2c8\ub2e4.<\/p>\n<p>\uc774\ub97c \uc900\ube44\ud558\uac8c \ub41c \uacc4\uae30\uc640 \uc9e4\ub9c9\ud55c \uc18c\uac10\uc744 \ub0a8\uaca8 \ubd05\ub2c8\ub2e4.<br><\/p>","text_color":"#000000","typography_typography":"custom","typography_font_family":"Roboto","typography_line_height":{"unit":"px","size":"","sizes":[]},"typography_line_height_tablet":{"unit":"px","size":"","sizes":[]},"typography_line_height_mobile":{"unit":"px","size":"","sizes":[]}},"elements":[],"widgetType":"text-editor"},{"id":"e2b79c6","elType":"widget","settings":{"space":{"unit":"px","size":38,"sizes":[]}},"elements":[],"widgetType":"spacer"}],"isInner":false}],"isInner":false},{"id":"2c3876f","elType":"section","settings":[],"elements":[{"id":"8bb356e","elType":"column","settings":{"_column_size":100,"_inline_size":null},"elements":[{"id":"6699c02","elType":"widget","settings":{"title":"\ub9ac\uba64\ubc84 \ud504\ub85c\ub355\ud2b8 \ub514\uc790\uc778\ud300","title_color":"#000000"},"elements":[],"widgetType":"heading"},{"id":"cc9bc98","elType":"widget","settings":{"space":{"unit":"px","size":3,"sizes":[]}},"elements":[],"widgetType":"spacer"},{"id":"4243557","elType":"widget","settings":{"editor":"<p>\ubcf8\ub860\uc5d0 \uc55e\uc11c \ub9ac\uba64\ubc84 \ud504\ub85c\ub355\ud2b8 \ub514\uc790\uc778 \ud300\uc758 \uad6c\uc131\uacfc \uc5c5\ubb34 \uacf5\uc720 \ubc29\uc2dd\uc5d0 \ub300\ud574 \uac04\ub7b5\ud788 \uc124\uba85\ud558\uace0\uc790 \ud569\ub2c8\ub2e4.<\/p><p style=\"font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; font-size: 16px; font-family: Roboto, sans-serif;\">\ub9ac\uba64\ubc84\ub294 \ud06c\uac8c \uae30\ub2a5 \uc870\uc9c1\uacfc \ubbf8\uc158 \uc870\uc9c1\uc73c\ub85c \ub098\ub204\uc5b4\uc9d1\ub2c8\ub2e4. \uae30\ub2a5 \uc870\uc9c1\uc758 \ud300\uc6d0\ub4e4\uc740 \uac01\uac01 \ubbf8\uc158 \uc870\uc9c1(\uc774\ud558 \ud06c\ub8e8)\uc5d0 \uc18d\ud558\uc5ec \uc2e4\ubb34\ub97c \uc9c4\ud589\ud569\ub2c8\ub2e4.&nbsp;<\/p><p style=\"font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; font-size: 16px; font-family: Roboto, sans-serif;\">\uc608\ub97c \ub4e4\uc5b4 \uc800\ub294 \ud504\ub85c\ub355\ud2b8 \ub514\uc790\uc778\ud300\uc774\ub77c\ub294 \uae30\ub2a5 \uc870\uc9c1\uc758 \ud300\uc6d0\uc774\uba70 \ub3d9\uc2dc\uc5d0 \ucf58\ud150\uce20 \ud06c\ub8e8\uc5d0\uc11c\uc758 \uc2e4\ubb34\ub97c \ub2f4\ub2f9\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4.&nbsp;<\/p>","text_color":"#000000","typography_typography":"custom","typography_font_family":"Roboto","typography_font_weight":"400","typography_line_height":{"unit":"px","size":"","sizes":[]},"typography_line_height_tablet":{"unit":"px","size":"","sizes":[]},"typography_line_height_mobile":{"unit":"px","size":"","sizes":[]}},"elements":[],"widgetType":"text-editor"},{"id":"6df12e8","elType":"widget","settings":{"editor":"<h3><strong>Daily \ub370\uc77c\ub9ac<\/strong><\/h3>","typography_typography":"custom","typography_font_family":"Roboto","typography_font_weight":"400"},"elements":[],"widgetType":"text-editor"},{"id":"877e864","elType":"widget","settings":{"editor":"<p>\uc774\ub807\ub4ef \uae30\ub2a5 \uc870\uc9c1\uc758 \ud300\uc6d0\uc740 \ubaa8\ub450 \uc9c4\ud589\ud558\ub294 \uc5c5\ubb34\uac00 \uc0c1\uc774\ud569\ub2c8\ub2e4. \ub54c\ubb38\uc5d0 \ud504\ub85c\ub355\ud2b8 \ub514\uc790\uc778\ud300\uc740 \ub9e4\uc77c \ub370\uc77c\ub9ac\ub97c \ud1b5\ud574 \uc5c5\ubb34\ub97c \uacf5\uc720\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4.&nbsp;<\/p><p>\ud300\uc6d0\ub4e4\uc740 \uac01\uc790 \uc9c4\ud589\ud558\uace0 \uc788\ub294 \uc5c5\ubb34\ub97c \uacf5\uc720\ud558\uace0, \uc790\uc720\ub86d\uac8c \ub514\uc790\uc778 \ud53c\ub4dc\ubc31\uc744 \uc8fc\uace0\ubc1b\uc2b5\ub2c8\ub2e4.&nbsp;<\/p><p>\uc774 \uacfc\uc815\uc5d0\uc11c \ud504\ub85c\ub355\ud2b8 \uc804\ubc18\uc758 \ub514\uc790\uc778 \ud1a4\uc564\ub9e4\ub108\ub97c \ub9de\ucd94\uace0, RDS(Remember Design System)\ub97c \uccb4\uacc4\ud654 \ubc0f \ubc1c\uc804\uc2dc\ud0a4\uace0 \uc788\uc2b5\ub2c8\ub2e4.<\/p>","text_color":"#000000","typography_typography":"custom","typography_font_family":"Roboto","typography_font_weight":"400","typography_line_height":{"unit":"px","size":"","sizes":[]},"typography_line_height_tablet":{"unit":"px","size":"","sizes":[]},"typography_line_height_mobile":{"unit":"px","size":"","sizes":[]}},"elements":[],"widgetType":"text-editor"},{"id":"dd7a0c9","elType":"widget","settings":{"editor":"<h3><strong>Weekly \uc704\ud074\ub9ac<\/strong><\/h3>"},"elements":[],"widgetType":"text-editor"},{"id":"587565e","elType":"widget","settings":{"editor":"<p>\uc8fc 1\ud68c \uc57d 2\uc2dc\uac04\uac00\ub7c9 \uc704\ud074\ub9ac\ub97c \uc9c4\ud589\ud569\ub2c8\ub2e4.&nbsp;<\/p><p>\uc774 \uc2dc\uac04\uc5d0\ub294 \uc5c5\ubb34 \uc911 \uc880 \ub354 \ub514\uc790\uc778\uc801 \uad00\uc810\uc774 \ud544\uc694\ud558\ub2e4\uace0 \ud310\ub2e8\ub418\ub294 \uc544\uc820\ub2e4\ub97c \ub17c\uc758\ud558\uac70\ub098 \ud568\uaed8 \uc9c4\ud589\ud558\ub294 \ud504\ub85c\uc81d\ud2b8\ub97c \uc791\uc5c5\ud569\ub2c8\ub2e4.<\/p>","text_color":"#000000","typography_typography":"custom","typography_font_family":"Roboto","typography_font_weight":"400","typography_line_height":{"unit":"px","size":"","sizes":[]},"typography_line_height_tablet":{"unit":"px","size":"","sizes":[]},"typography_line_height_mobile":{"unit":"px","size":"","sizes":[]}},"elements":[],"widgetType":"text-editor"},{"id":"45d4d1f","elType":"widget","settings":{"editor":"<h3><strong>Workshop \uc6cc\ud06c\uc0f5<\/strong><\/h3>"},"elements":[],"widgetType":"text-editor"},{"id":"e0fa551","elType":"widget","settings":{"editor":"<p>\ub9c8\uc9c0\ub9c9\uc73c\ub85c \uc704\ud074\ub9ac \uc2dc\uac04\uc744 \ud65c\uc6a9\ud574 \ube44\uc815\uae30\uc801\uc73c\ub85c \uc6cc\ud06c\uc0f5\uc744 \uc9c4\ud589\ud569\ub2c8\ub2e4.&nbsp;<\/p><p>\uc774\ubc88 1\ubd84\uae30 \ud68c\uace0 \uc5ed\uc2dc \uc774\uc640 \uac19\uc740 \ubc29\uc2dd\uc73c\ub85c \uc9c4\ud589\ud55c \uac83\uc778\ub370\uc694, 4\uc6d4 \ub124 \ubc88\uc9f8\uc8fc \uc704\ud074\ub9ac \uc2dc\uac04\uc744 \ud65c\uc6a9\ud574 \uc6cc\ud06c\uc0f5\uc744 \uc9c4\ud589\ud558\uc600\uc2b5\ub2c8\ub2e4.&nbsp;<\/p>","text_color":"#000000","typography_typography":"custom","typography_font_family":"Roboto","typography_font_weight":"400","typography_line_height":{"unit":"px","size":"","sizes":[]},"typography_line_height_tablet":{"unit":"px","size":"","sizes":[]},"typography_line_height_mobile":{"unit":"px","size":"","sizes":[]}},"elements":[],"widgetType":"text-editor"},{"id":"98a8c06","elType":"widget","settings":{"space":{"unit":"px","size":80,"sizes":[]}},"elements":[],"widgetType":"spacer"}],"isInner":false}],"isInner":false},{"id":"31b11ee","elType":"section","settings":[],"elements":[{"id":"f0b8fbd","elType":"column","settings":{"_column_size":100,"_inline_size":null},"elements":[{"id":"34b951e","elType":"widget","settings":{"title":"\ubd84\uae30 \ud68c\uace0 \uc9c4\ud589 \ubc29\uc2dd","title_color":"#000000"},"elements":[],"widgetType":"heading"},{"id":"05e172b","elType":"widget","settings":{"editor":"<h3><strong>Form<\/strong><\/h3>"},"elements":[],"widgetType":"text-editor"},{"id":"afce986","elType":"widget","settings":{"editor":"<p>Form\uc740 \uc774\ub984\uacfc \ud06c\ub8e8 \uba85 \ub4f1\uc744 \uc81c\uc678\ud558\uba74 \ucd1d 6\uac00\uc9c0\uc758 \ud56d\ubaa9\uc73c\ub85c \uad6c\uc131\ub429\ub2c8\ub2e4.\u00a0<\/p><p>\u00a0<\/p>","text_color":"#000000","typography_typography":"custom","typography_font_family":"Roboto","typography_font_weight":"400","typography_line_height":{"unit":"px","size":"","sizes":[]},"typography_line_height_tablet":{"unit":"px","size":"","sizes":[]},"typography_line_height_mobile":{"unit":"px","size":"","sizes":[]}},"elements":[],"widgetType":"text-editor"},{"id":"d2fb84b","elType":"widget","settings":{"image":{"url":"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2022\/04\/\u1109\u1173\u110f\u1173\u1105\u1175\u11ab\u1109\u1163\u11ba-2022-04-26-\u110b\u1169\u1112\u116e-8.09.38-1.png","id":2774,"alt":"","source":"library"},"image_size":"custom","caption_source":"custom","caption":"KPT \ud68c\uace0 \ubc29\uc2dd\uc744 \ucc38\uace0\ud558\uc600\uc2b5\ub2c8\ub2e4. \ud574\ub2f9 form\uc740 \uc870\uc9c1\uc758 \uad6c\uc131\uacfc \ud2b9\uc131\uc5d0 \ub9de\ucd94\uc5b4 \uac1c\uc778\uc801\uc73c\ub85c \ub9cc\ub4e0 \uac83\uc785\ub2c8\ub2e4."},"elements":[],"widgetType":"image"},{"id":"f3720fd","elType":"widget","settings":{"space":{"unit":"px","size":24,"sizes":[]}},"elements":[],"widgetType":"spacer"},{"id":"9c42c18","elType":"widget","settings":{"editor":"<ul><li>\ud56d\ubaa9 1. task : \uc9c0\ub09c 1\ubd84\uae30\uc5d0 \uc9c4\ud589\ud55c \uc5c5\ubb34\ub97c \uc791\uc131\ud569\ub2c8\ub2e4.<\/li><li>\ud56d\ubaa9 2. summary : task\uc5d0 \ub300\ud55c \uac04\ub2e8\ud55c \uc124\uba85\uc744 \uc801\uc2b5\ub2c8\ub2e4.<\/li><li>\ud56d\ubaa9 3. \ub9cc\uc871\ub3c4 : \ud574\ub2f9 task\uc5d0 \ub300\ud55c \ub9cc\uc871\ub3c4\ub97c \ubcc4 1~5\uac1c\ub85c \ud3c9\uac00\ud569\ub2c8\ub2e4<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \uc5ec\uae30\uc11c \uc8fc\uc758\ud560 \uac83\uc740 \ub9cc\uc871\ub3c4 \ud3c9\uac00\ub97c \ud3ec\ud568\ud55c \ubaa8\ub4e0 \ud56d\ubaa9\uc740 \ud604\uc7ac \uc2dc\uc810\uc744 \uae30\uc900\uc73c\ub85c \uc791\uc131\ud55c\ub2e4\ub294 \uc810\uc785\ub2c8\ub2e4.<i><br \/><\/i><span style=\"font-family: Roboto, sans-serif; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400;\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0<\/span>\uc608\ub97c \ub4e4\uc5b4 \ub2f9\uc2dc task\uc5d0 \ub300\ud55c \ub9cc\uc871\ub3c4\uac00 5\uc810\uc774\uc5c8\uc73c\ub098, \ud604\uc2dc\uc810\uc5d0\uc11c 3\uc810\uc774\ub77c\uba74 \ud574\ub2f9 task\uc5d0 \ub300\ud55c \ub9cc\uc871\ub3c4\ub294 3\uc810\uc73c\ub85c \uae30\uc7ac\ud558\ub294 \ubc29\uc2dd\uc785\ub2c8\ub2e4.<\/li><li>\ud56d\ubaa9 4. Keep \uc9c0\uc18d\ud560 \uac83\uc744 \uc801\uc2b5\ub2c8\ub2e4.<\/li><li>\ud56d\ubaa9 5. Problem \ud574\uacb0\ud558\uace0 \uc2f6\uc740 \uc810\uc744 \uc801\uc2b5\ub2c8\ub2e4.<\/li><li>\ud56d\ubaa9 6. Try \uc2dc\ub3c4\ud560 \uac83\uc744 \uc791\uc131\ud569\ub2c8\ub2e4.<\/li><\/ul>","text_color":"#000000","typography_typography":"custom","typography_font_family":"Roboto","typography_font_weight":"400","typography_line_height":{"unit":"px","size":"","sizes":[]},"typography_line_height_tablet":{"unit":"px","size":"","sizes":[]},"typography_line_height_mobile":{"unit":"px","size":"","sizes":[]}},"elements":[],"widgetType":"text-editor"},{"id":"298e871","elType":"widget","settings":{"editor":"<p>1\ubd84\uae30 task\uc5d0 \ub300\ud55c \uc815\ub9ac\uac00 \ub05d\ub0ac\ub2e4\uba74, \ub9c8\uc9c0\ub9c9\uc73c\ub85c 1\ubd84\uae30 \uc804\uccb4\uc5d0 \ub300\ud55c \ub9cc\uc871\ub3c4\uc640 KPT\ub97c \uc791\uc131\ud569\ub2c8\ub2e4.<\/p><p><span style=\"font-family: Roboto, sans-serif; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400;\">\uc791\uc131 \uc21c\uc11c\ub294 \uc790\uc720\uc785\ub2c8\ub2e4. task\ub97c \uba3c\uc800 \uc815\ub9ac\ud55c \ud6c4\uc5d0 KPT\ub97c \uc815\ub9ac\ud574\ub3c4 \uc88b\uace0, \ud55c task\uc758 \ud56d\ubaa9\uc744 KPT\uae4c\uc9c0 \ubaa8\ub450 \uc791\uc131\ud55c \ud6c4\uc5d0 \ub2e4\uc74c task\ub97c \uc791\uc131\ud558\ub294 \uc2dd\uc73c\ub85c \uc815\ub9ac\ud574\ub3c4 \uc88b\uc2b5\ub2c8\ub2e4.<\/span><br><\/p>\n<p><\/p>","column_gap":{"unit":"px","size":0,"sizes":[]},"text_color":"#000000","typography_typography":"custom","typography_font_family":"Roboto","typography_font_weight":"400","typography_line_height":{"unit":"px","size":"","sizes":[]},"typography_line_height_tablet":{"unit":"px","size":"","sizes":[]},"typography_line_height_mobile":{"unit":"px","size":"","sizes":[]}},"elements":[],"widgetType":"text-editor"},{"id":"1e0abce","elType":"widget","settings":{"editor":"<h3><strong>\ub69c\ub837\ud568\uc5d0\uc11c \uc5bb\ub294 \uc591\uc9c8\uc758 KPT<\/strong><\/h3>"},"elements":[],"widgetType":"text-editor"},{"id":"c63ac68","elType":"widget","settings":{"editor":"<p>\uc5b4\uca4c\uba74 task\ub97c \uc815\ub9ac\ud558\ub294 \uac83\ubd80\ud130\uac00 \ubd80\ub2f4\uc73c\ub85c \ub2e4\uac00\uc62c \uc218 \uc788\uc744 \uac83 \uac19\uc2b5\ub2c8\ub2e4. \uadf8\ub798\uc11c \uc81c \ub098\ub984 \ub3c4\uc6c0\uc774 \ub418\uc5c8\ub358 \ubc29\ubc95\uc744 \uacf5\uc720\ud558\uace0\uc790 \ud569\ub2c8\ub2e4.\u00a0<\/p><p>\uac1c\uc778\uc801\uc73c\ub85c\ub294 \ub5a0\uc624\ub974\ub294 \ub300\ub85c \ub9c8\uad6c\uc7a1\uc774\ub85c(?) \uc6b0\uc120 \uc791\uc131\ud574 \ubcf4\ub294 \uac83\uc774 \ud6e8\uc52c \uc9c4\ud589\ud558\uae30 \uc218\uc6d4\ud588\uc2b5\ub2c8\ub2e4.\u00a0<\/p><p>\ubcf4\ud1b5 task\ub97c \uc815\ub9ac\ud558\uae30 \uc704\ud574 figma, slack, wiki \ub4f1\uc758 \uc5c5\ubb34 \ud30c\uc77c\uc744 \ucc38\uace0\ud558\uc5ec \uc2dc\uae30\ubcc4\ub85c \ub9ac\uc2a4\ud2b8\uc5c5\ud569\ub2c8\ub2e4.\u00a0<\/p><p>\ud558\uc9c0\ub9cc \ud604\uc2dc\uc810\uc5d0\uc11c \ud68c\uc0c1\ud574 \ubcf4\uc558\uc744 \ub54c \uba38\ub9bf\uc18d\uc5d0 \ub0a8\ub294 task\ub294 \uc2dc\uae30\uc640 \uc0c1\uad00\uc5c6\uc774 \ub098\uc5d0\uac8c \uc778\uc0c1\uc801\uc774\uc5c8\ub358 \uac83\ub4e4\uc774 \uc6b0\uc120\uc801\uc73c\ub85c \ub5a0\uc624\ub985\ub2c8\ub2e4.\u00a0<\/p><p>\uadf8 \uc774\uc720\uac00 \uae0d\uc815\uc801\uc774\uac74 \ubd80\uc815\uc801\uc774\uac74 \ud639\uc740 \ud604\uc7ac\uc758 \uc77c\uacfc \uc5f0\uad00\uc774 \uc788\uc5b4\uc11c\uac74 \ub9d0\uc785\ub2c8\ub2e4.\u00a0<\/p><p>\ub530\ub77c\uc11c \uc774\ub7ec\ud55c task \ub4e4\uc740 \uad6c\uccb4\uc801\uc73c\ub85c \uc5f0\uc0c1\ud558\uae30 \uc27d\uace0 KPT\uc5d0 \ub300\ud574\uc11c\ub3c4 \uc880 \ub354 \uc591\uc9c8\uc758 \ud68c\uace0\ub97c \uc5bb\uc744 \uc218 \uc788\uc5c8\uc2b5\ub2c8\ub2e4.<\/p>","text_color":"#000000","typography_typography":"custom","typography_font_family":"Roboto","typography_font_weight":"400","typography_line_height":{"unit":"px","size":"","sizes":[]},"typography_line_height_tablet":{"unit":"px","size":"","sizes":[]},"typography_line_height_mobile":{"unit":"px","size":"","sizes":[]}},"elements":[],"widgetType":"text-editor"},{"id":"4d8a432","elType":"widget","settings":{"editor":"<p>\ub9ce\uc740 \uc2dc\uac04\uc744 \ub4e4\uc5ec \uaf3c\uaf3c\ud788 \uc815\ub9ac\ud560 \uc218 \uc788\ub294 \uc0c1\ud669\uc774 \uc544\ub2c8\ub77c\uba74 \uc5f0\uc0c1\ub418\ub294 \uac83\uc744 \uc6b0\uc120\uc73c\ub85c \uc815\ub9ac\ud558\uace0,&nbsp;<\/p><p>\uc774\ud6c4 \ubb38\uc11c\ub97c \uc5f4\uc5b4\ubcf4\uba70 \uc870\uae08\uc529 \ub2e4\ub4ec\uc5b4 \ub098\uac00\ub294 \uac83\ub3c4 \ud558\ub098\uc758 \ubc29\ubc95\uc774 \ub420 \uc218 \uc788\uc744 \uac83 \uac19\uc2b5\ub2c8\ub2e4.&nbsp;<\/p><p>(\uc5b4\uca4c\uba74 \uc81c\uac00 mbti\uc758 P \uc720\ud615\uc774\ub77c \uac00\ub2a5\ud55c \uac83\uc77c\uc9c0\ub3c4..^^;)<\/p><p><br><\/p>","text_color":"#000000","typography_typography":"custom","typography_font_family":"Roboto","typography_font_weight":"400","typography_line_height":{"unit":"px","size":"","sizes":[]},"typography_line_height_tablet":{"unit":"px","size":"","sizes":[]},"typography_line_height_mobile":{"unit":"px","size":"","sizes":[]}},"elements":[],"widgetType":"text-editor"},{"id":"e667e52","elType":"widget","settings":{"editor":"<h3><strong>\uacf5\uc720\uc640 \uac10\uc0c1<\/strong><\/h3>"},"elements":[],"widgetType":"text-editor"},{"id":"75fcded","elType":"widget","settings":{"editor":"<p>\uc57d 30\ubd84 \uc815\ub3c4 \uc791\uc131 \uc2dc\uac04\uc744 \uac00\uc9c4 \ud6c4 \ud568\uaed8 \uacf5\uc720\ud558\ub294 \uc2dc\uac04\uc744 \uac00\uc84c\ub294\ub370\uc694,&nbsp;<\/p><p>\uac1c\uc778\ub9c8\ub2e4 2\uac00\uc9c0 task\uc640 1\ubd84\uae30 \uc804\uccb4\uc5d0 \ub300\ud55c \ud68c\uace0\ub97c \uacf5\uc720\ud558\uc600\uc2b5\ub2c8\ub2e4.<\/p>","text_color":"#000000","typography_typography":"custom","typography_font_family":"Roboto","typography_font_weight":"400","typography_line_height":{"unit":"px","size":"","sizes":[]},"typography_line_height_tablet":{"unit":"px","size":"","sizes":[]},"typography_line_height_mobile":{"unit":"px","size":"","sizes":[]}},"elements":[],"widgetType":"text-editor"},{"id":"8f70d72","elType":"widget","settings":{"editor":"<p>\uacf5\uc720\ud560 2\uac00\uc9c0 task\ub97c \uc120\ubcc4\ud558\ub294 \uac83\uc740 \uc8fc\uad00\uc801 \uae30\uc900\uc5d0 \ub530\ub790\uc2b5\ub2c8\ub2e4.&nbsp;<\/p><p>\uc7ac\ubbf8\uc788\uac8c\ub3c4(?) \uc800\ud76c \ud300\uc6d0\ub4e4\uc740 \uc804\ubc18\uc801\uc73c\ub85c \ub9cc\uc871\ub3c4\uac00 \ub192\uc740 task 2\uac1c\ub97c \uace8\ub790\uace0, 1\ubd84\uae30 \uc804\uccb4\uc5d0 \ub300\ud55c \ud3c9\uc810\uc740 \ubaa8\ub450 3\uc810\uc774\uc5c8\uc2b5\ub2c8\ub2e4.&nbsp;<\/p>","text_color":"#000000","typography_typography":"custom","typography_font_family":"Roboto","typography_font_weight":"400","typography_line_height":{"unit":"px","size":"","sizes":[]},"typography_line_height_tablet":{"unit":"px","size":"","sizes":[]},"typography_line_height_mobile":{"unit":"px","size":"","sizes":[]}},"elements":[],"widgetType":"text-editor"},{"id":"2edba57","elType":"widget","settings":{"space":{"unit":"px","size":10,"sizes":[]}},"elements":[],"widgetType":"spacer"},{"id":"f1d194a","elType":"widget","settings":{"image":{"url":"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2022\/04\/\u1109\u1173\u110f\u1173\u1105\u1175\u11ab\u1109\u1163\u11ba-2022-04-27-\u110b\u1169\u1112\u116e-1.06..png","id":2775,"alt":"","source":"library"},"image_size":"medium_large","caption_source":"custom","caption":"2022.4.20. \ud504\ub85c\ub355\ud2b8 \ub514\uc790\uc778\ud300 \uc6cc\ud06c\uc0f5"},"elements":[],"widgetType":"image"},{"id":"f886cb7","elType":"widget","settings":{"space":{"unit":"px","size":80,"sizes":[]}},"elements":[],"widgetType":"spacer"}],"isInner":false}],"isInner":false},{"id":"52741c2","elType":"section","settings":[],"elements":[{"id":"78295ee","elType":"column","settings":{"_column_size":100,"_inline_size":null},"elements":[{"id":"9381357","elType":"widget","settings":{"title":"\ud68c\uace0\uc758 \ud544\uc694\uc131_\ud568\uaed8 \uc790\ub77c\uae30","title_color":"#000000"},"elements":[],"widgetType":"heading"},{"id":"ee3e5d9","elType":"widget","settings":{"space":{"unit":"px","size":3,"sizes":[]}},"elements":[],"widgetType":"spacer"},{"id":"a1f1f49","elType":"widget","settings":{"editor":"<p>\uc6cc\ud06c\uc0f5\uc5d0\uc11c 1\ubd84\uae30 \ud68c\uace0\ub97c \uc81c\uc548\ud558\uac8c \ub41c \uac00\uc7a5 \ud070 \ub3d9\uae30\ub294 \u2018\ud568\uaed8 \uc790\ub77c\uae30: \uc560\uc790\uc77c\ub85c \uac00\ub294 \uae38 \/ \uc800\uc790 \uae40\ucc3d\uc900\u2019\uc774\ub77c\ub294 \ucc45\uc774\uc5c8\uc2b5\ub2c8\ub2e4.&nbsp;<\/p>\n<p>\uaf64 \uc911\uc694\ud55c \uc5ed\ud560\uc744 \ud55c \ucc45\uc774\uae30\uc5d0 \ub0b4\uc6a9\uc5d0 \ub300\ud574 \uc9e4\ub9c9\ud558\uac8c \ub2e4\ub904\ubcf4\uace0\uc790 \ud569\ub2c8\ub2e4.<\/p>","text_color":"#000000","typography_typography":"custom","typography_font_family":"Roboto","typography_font_weight":"400","typography_line_height":{"unit":"px","size":"","sizes":[]},"typography_line_height_tablet":{"unit":"px","size":"","sizes":[]},"typography_line_height_mobile":{"unit":"px","size":"","sizes":[]}},"elements":[],"widgetType":"text-editor"},{"id":"dcf053d","elType":"widget","settings":{"editor":"<p>\uc774 \ucc45\uc740 \uc560\uc790\uc77c \ubc29\ubc95\ub860 \ub3c4\uc785\uc744 \uac1c\uc778\uacfc \uc870\uc9c1\uc758 \uad00\uc810\uc5d0\uc11c \ub9d0\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4.&nbsp;<\/p>\n<p>\uad6c\uc131\uc740 \u2018\uc790\ub77c\uae30', \u2018\ud568\uaed8', \u2018\uc560\uc790\uc77c'\uc758 \ucd1d 3\uac00\uc9c0 \ud30c\ud2b8\ub85c \uc774\ub8e8\uc5b4\uc9d1\ub2c8\ub2e4.<\/p>","text_color":"#000000","typography_typography":"custom","typography_font_family":"Roboto","typography_font_weight":"400","typography_line_height":{"unit":"px","size":"","sizes":[]},"typography_line_height_tablet":{"unit":"px","size":"","sizes":[]},"typography_line_height_mobile":{"unit":"px","size":"","sizes":[]}},"elements":[],"widgetType":"text-editor"},{"id":"9d2c8dc","elType":"widget","settings":{"editor":"<h3><strong>\ubcf5\ub9ac \uad6c\uc870\ub85c \uc790\ub77c\uae30<\/strong><\/h3>"},"elements":[],"widgetType":"text-editor"},{"id":"f001056","elType":"widget","settings":{"editor":"<p>\uc81c\uac00 \ud68c\uace0\uc5d0 \ub300\ud55c \ud544\uc694\uc131\uc744 \ub290\ub07c\uac8c \ub41c \ubd80\ubd84\uc740 \ucc45\uc758 \uccab \ubc88\uc9f8 \ud30c\ud2b8\uc778 \u2018\uc790\ub77c\uae30\u2019\uc600\uc2b5\ub2c8\ub2e4. \ud574\ub2f9 \ud30c\ud2b8\ub294 \u2018\ud544\ub4dc\uc5d0\uc11c \uac1c\uc778\uc774 \uc5b4\ub5bb\uac8c \uc131\uc7a5\ud560 \uac83\uc778\uac00\u2019\uc5d0 \ub300\ud574 \ub2e4\ub8e8\uace0 \uc788\uc2b5\ub2c8\ub2e4.<\/p><p><span style=\"font-family: Roboto, sans-serif; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400;\">\uadf8 \uc911 \u2018\uc77c\ubc18 \uc870\uc9c1\uc774 \uc77c\ud558\ub294 \uad6c\uc870\u2019\uc640 \u2018\ubcf5\ub9ac \uc870\uc9c1\uc774 \uc77c\ud558\ub294 \uad6c\uc870'\uc5d0 \ub300\ud55c \ubd80\ubd84\uc774 \uc778\uc0c1\uc801\uc774\uc5c8\ub294\ub370\uc694, \ud575\uc2ec\uc744 \uc555\ucd95\uc801\uc73c\ub85c \ubcf4\uc5ec\uc8fc\ub294 \uadf8\ub9bc\uc774 \uc788\uc5b4 \uc778\uc6a9\ud574 \ubcf4\uc790\uba74 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4.\u00a0<\/span><\/p>","text_color":"#000000","typography_typography":"custom","typography_font_family":"Roboto","typography_font_weight":"400","typography_line_height":{"unit":"px","size":"","sizes":[]},"typography_line_height_tablet":{"unit":"px","size":"","sizes":[]},"typography_line_height_mobile":{"unit":"px","size":"","sizes":[]}},"elements":[],"widgetType":"text-editor"},{"id":"7b0ea6a","elType":"widget","settings":{"image":{"url":"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2022\/04\/\u1109\u1173\u110f\u1173\u1105\u1175\u11ab\u1109\u1163\u11ba-2022-04-26-\u110b\u1169\u1112\u116e-4.53.18.png","id":2776,"alt":"\uc77c\ubc18\uc870\uc9c1\uc774 \uc77c\ud558\ub294 \uad6c\uc870\uc640 \ubcf5\ub9ac\uc870\uc9c1\uc774 \uc77c\ud558\ub294 \uad6c\uc870","source":"library"},"caption_source":"custom","caption":"\ud568\uaed8 \uc790\ub77c\uae30:\uc560\uc790\uc77c\ub85c \uac00\ub294 \uae38_\uae40\ucc3d\uc900 \uc9c0\uc74c 35-36p"},"elements":[],"widgetType":"image"},{"id":"74eb71d","elType":"widget","settings":{"space":{"unit":"px","size":15,"sizes":[]}},"elements":[],"widgetType":"spacer"},{"id":"6000829","elType":"widget","settings":{"editor":"<p>\uc774 \ubd80\ubd84\uc5d0\uc11c \uc81c\uac00 \uac00\uc7a5 \uc911\uc694\ud558\ub2e4\uace0 \uc0dd\uac01\ud55c \ud3ec\uc778\ud2b8\ub294 \u2018\ubcf5\ub9ac'\uc785\ub2c8\ub2e4. \uc544\uc2dc\ub2e4\uc2dc\ud53c \ubcf5\ub9ac\ub294 \ub354\ud558\uae30\uac00 \uc544\ub2cc \uacf1\ud558\uae30\uc758 \uac1c\ub150\uc778\ub370\uc694,&nbsp;<\/p><p>\uc800\uc790\uac00 \ub9d0\ud558\ub294 \u2018\ubcf5\ub9ac \uad6c\uc870'\ub85c \uac1c\uc778\uacfc \uc870\uc9c1\uc774 \uc8fc\uae30\uc801 \ub514\ubca8\ub86d \uacfc\uc815\uc744 \uac16\ub294\ub2e4\uba74 \uc544\ub9c8 \uadf8 \uc131\uc7a5 \uace1\uc120\uc740 \ub2e4\uc74c\uacfc \uac19\uc744 \uac83\uc774\ub77c\uace0 \uc0dd\uac01\ud588\uc2b5\ub2c8\ub2e4.<\/p>","text_color":"#000000","typography_typography":"custom","typography_font_family":"Roboto","typography_font_weight":"400","typography_line_height":{"unit":"px","size":"","sizes":[]},"typography_line_height_tablet":{"unit":"px","size":"","sizes":[]},"typography_line_height_mobile":{"unit":"px","size":"","sizes":[]}},"elements":[],"widgetType":"text-editor"},{"id":"fda986c","elType":"widget","settings":{"image":{"url":"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2022\/04\/\u1109\u1173\u110f\u1173\u1105\u1175\u11ab\u1109\u1163\u11ba-2022-04-26-\u110b\u1169\u1112\u116e-5.38.53.png","id":2777,"alt":"\uc774\uc0c1\uc801 \ubcf5\ub9ac \uad6c\uc870\uc5d0 \ub300\ud55c \uadf8\ub798\ud504 ","source":"library"},"image_size":"custom","image_custom_dimension":{"width":"","height":"300"},"caption_source":"custom"},"elements":[],"widgetType":"image"},{"id":"358bac8","elType":"widget","settings":{"space":{"unit":"px","size":38,"sizes":[]}},"elements":[],"widgetType":"spacer"},{"id":"07e83f7","elType":"widget","settings":{"editor":"<h3><strong>\ud68c\uace0\ub97c \ud68c\uace0<\/strong><\/h3>"},"elements":[],"widgetType":"text-editor"},{"id":"cd243d5","elType":"widget","settings":{"editor":"<p>\u2018\ubcf5\ub9ac \uc870\uc9c1\uc774 \uc77c\ud558\ub294 \uad6c\uc870\u2019\ub85c \uac00\uae30 \uc704\ud574 \uc800\uc790\uac00 \uad8c\ud558\ub294 \ubc29\ubc95 \uc911 \ud558\ub098\ub294 \u2018\uc790\uc2e0\uc774 \uc774\ubbf8 \uac00\uc9c4 \uac83\ub4e4\uc744 \uc798 \ud65c\uc6a9\ud558\ub294 \uac83\u2019, \uc989 \u2018\uc790\uae30 \ud68c\uace0\u2019\uc785\ub2c8\ub2e4.&nbsp;<\/p><p>\ub098\uc758 \uc791\uc5c5 \ud504\ub85c\uc138\uc2a4\ub97c \ub418\ub3cc\uc544\ubcf4\uace0, \ub098\uc544\uac00 \uc774 \uacfc\uc815\uc744 \uac1c\uc120\ud558\ub294 \ud504\ub85c\uc138\uc2a4\uc5d0 \ub300\ud574 \uc0dd\uac01\ud568\uc73c\ub85c\uc368 \uc804\uccb4 \uad6c\uc870\uc5d0 \ub300\ud55c \uac1c\uc120\uc744 \uace0\ubbfc\ud558\ub294 \uac83\uc785\ub2c8\ub2e4.<\/p>","text_color":"#000000","typography_typography":"custom","typography_font_family":"Roboto","typography_font_weight":"400","typography_line_height":{"unit":"px","size":"","sizes":[]},"typography_line_height_tablet":{"unit":"px","size":"","sizes":[]},"typography_line_height_mobile":{"unit":"px","size":"","sizes":[]}},"elements":[],"widgetType":"text-editor"},{"id":"5ebcf7e","elType":"widget","settings":{"image":{"url":"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2022\/04\/\u1109\u1173\u110f\u1173\u1105\u1175\u11ab\u1109\u1163\u11ba-2022-04-26-\u110b\u1169\u1112\u116e-6.06.18.png","id":2778,"alt":"\ub354\uae00\ub7ec\uc2a4 \uc5e5\uac94\ubc14\ud2b8\uc758 A,B,C \uc791\uc5c5 \uc2dc\uac01\ud654","source":"library"},"image_size":"custom","image_custom_dimension":{"width":"","height":"250"},"caption_source":"custom","caption":"\ub354\uae00\ub7ec\uc2a4 \uc5e5\uac94\ubc14\ud2b8\uc758 A,B,C \uc791\uc5c5 \uc2dc\uac01\ud654 (\ud568\uaed8 \uc790\ub77c\uae30:\uc560\uc790\uc77c\ub85c \uac00\ub294 \uae38_\uae40\ucc3d\uc900 \uc9c0\uc74c 33-40p \ucc38\uace0)"},"elements":[],"widgetType":"image"},{"id":"cc515e5","elType":"widget","settings":{"space":{"unit":"px","size":80,"sizes":[]}},"elements":[],"widgetType":"spacer"}],"isInner":false}],"isInner":false},{"id":"377d91c","elType":"section","settings":[],"elements":[{"id":"039b161","elType":"column","settings":{"_column_size":100,"_inline_size":null},"elements":[{"id":"b642470","elType":"widget","settings":{"title":"\uc18c\uac10","title_color":"#000000"},"elements":[],"widgetType":"heading"},{"id":"b46b6d8","elType":"widget","settings":{"space":{"unit":"px","size":3,"sizes":[]}},"elements":[],"widgetType":"spacer"},{"id":"fac7389","elType":"widget","settings":{"editor":"<p>\uc0ac\uc2e4 \ud68c\uace0\uc758 \uc7a5\uc810, \uc911\uc694\uc131\uc740 \uc775\ud788 \uc54c\uace0 \uc788\uc9c0\ub9cc, \uc2e4\ubb34\uc640 \uc77c\uc815\uc5d0 \ucad3\uae30\ub2e4 \ubcf4\uba74 \uc5b4\ub290\uc0c8 \ub098\uc911\uc73c\ub85c \ubbf8\ub904\uc9c0\uace4 \ud569\ub2c8\ub2e4. \uc800 \ub610\ud55c \uadf8\ub807\uace0\uc694.&nbsp;<\/p><p>\ub54c\ubb38\uc5d0, \uc774\ubc88 \ubd84\uae30 \ud68c\uace0\ub294 \ub354 \ub2a6\uae30 \uc804\uc5d0 \uaf2d \uc9c4\ud589\ud574\uc57c\uaca0\ub2e4\ub294 \uc0dd\uac01\uc774 \ub4e4\uc5c8\uc2b5\ub2c8\ub2e4.&nbsp;<\/p><p>\uac1c\uc778\uc801\uc73c\ub85c\ub294 \ubd84\uae30\uc5d0 \ub300\ud55c \ud68c\uace0\ub294 \ucc98\uc74c\uc774\uc5c8\uae30\uc5d0 \ub610 \ub2e4\ub978 \uad00\uc810\uc5d0\uc11c task\ub97c \ubc14\ub77c\ubcfc \uc218 \uc788\uc5b4 \uc0c8\ub85c\uc6e0\uc2b5\ub2c8\ub2e4.&nbsp;<\/p>","text_color":"#000000","typography_typography":"custom","typography_font_family":"Roboto","typography_font_weight":"400","typography_line_height":{"unit":"px","size":"","sizes":[]},"typography_line_height_tablet":{"unit":"px","size":"","sizes":[]},"typography_line_height_mobile":{"unit":"px","size":"","sizes":[]}},"elements":[],"widgetType":"text-editor"},{"id":"2e6b6ec","elType":"widget","settings":{"editor":"<p>\uc5b4\uca4c\ub2e4 \ubcf4\ub2c8 \ud68c\uace0\uc640 \ub354\ubd88\uc5b4 \ucc45 \ucd94\ucc9c \uae00\uc774 \ub41c \uac83 \uac19\uae30\ub3c4 \ud558\ub124\uc694. (\uba38\uc4f1)\u00a0<\/p>","text_color":"#000000","__globals__":{"text_color":""},"typography_typography":"custom","typography_font_family":"Roboto","typography_font_weight":"400","typography_line_height":{"unit":"px","size":"","sizes":[]},"typography_line_height_tablet":{"unit":"px","size":"","sizes":[]},"typography_line_height_mobile":{"unit":"px","size":"","sizes":[]}},"elements":[],"widgetType":"text-editor"},{"id":"1f14454","elType":"widget","settings":{"editor":"<p>\uc790\ubc1c\uc801 \ud658\uae30\ub294 \uc5b4\ub290 \ubd84\uc57c, \ub610 \ub204\uad6c\uc5d0\uac8c\ub098 \ud544\uc694\ud55c \uacfc\uc815\uc774\ub77c\uace0 \uc0dd\uac01\ud569\ub2c8\ub2e4. \uadf8\ub9ac\uace0 \uc774\ub97c \uc704\ud55c \uac00\uc7a5 \uc26c\uc6b4 \ubc29\ubc95\uc740 \ucc45\uc758 \ub0b4\uc6a9\uc744 \ub530\ub77c \ud574 \ubcf4\ub294 \uac83\uc774 \uc544\ub2d0\uae4c \uc2f6\uc2b5\ub2c8\ub2e4.&nbsp;<\/p><p>\uc774\ud6c4\uc5d0 \ub610 \u201c\uc694\uac74 \ud55c\ubc88 \ub530\ub77c \ud574\ubd04 \uc9c1\ud558\ub2e4!\u201d \uc2f6\uc740 \ubb34\uc5b8\uac00\uac00 \uc788\ub2e4\uba74 \ud300\uc6d0\ub4e4\uc744 \ub300\uc0c1\uc73c\ub85c \uc2a4\uc73d- \ud55c\ubc88 \uc2dc\ub3c4\ud574 \ubcfc\uae4c \ud569\ub2c8\ub2e4. (\ubbf8\ub9ac \ub9ce\uc740 \ud611\uc870 \ubd80\ud0c1\ub4dc\ub824\uc694..^^)<\/p>","text_color":"#000000","typography_typography":"custom","typography_font_family":"Roboto","typography_font_weight":"400","typography_line_height":{"unit":"px","size":"","sizes":[]},"typography_line_height_tablet":{"unit":"px","size":"","sizes":[]},"typography_line_height_mobile":{"unit":"px","size":"","sizes":[]}},"elements":[],"widgetType":"text-editor"},{"id":"aeba8f3","elType":"widget","settings":{"editor":"<p>\uae34 \uae00 \uc77d\uc5b4\uc8fc\uc154\uc11c \uac10\uc0ac\ud569\ub2c8\ub2e4.<\/p>","text_color":"#000000","typography_typography":"custom","typography_font_family":"Roboto","typography_font_weight":"400","typography_line_height":{"unit":"px","size":"","sizes":[]},"typography_line_height_tablet":{"unit":"px","size":"","sizes":[]},"typography_line_height_mobile":{"unit":"px","size":"","sizes":[]}},"elements":[],"widgetType":"text-editor"},{"id":"4e8de03","elType":"widget","settings":{"space":{"unit":"px","size":120,"sizes":[]}},"elements":[],"widgetType":"spacer"}],"isInner":false}],"isInner":false}]]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_page_assets]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[93]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[2798]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_edit_mode]]></wp:meta_key>
		<wp:meta_value><![CDATA[builder]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Snorkel을 이용한 직무 키워드 추출]]></title>
		<link>https://blog.dramancompany.com/2022/05/snorkel%ec%9d%84-%ec%9d%b4%ec%9a%a9%ed%95%9c-%ec%a7%81%eb%ac%b4-%ed%82%a4%ec%9b%8c%eb%93%9c-%ec%b6%94%ec%b6%9c/</link>
		<pubDate>Fri, 13 May 2022 07:53:45 +0000</pubDate>
		<dc:creator><![CDATA[gyholee]]></dc:creator>
		<guid isPermaLink="false">https://blog.dramancompany.com/?p=2847</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:group -->
<div class="wp-block-group"><!-- wp:paragraph -->
<p>안녕하세요. 빅데이터 센터 AI Lab의 이경호입니다. <br>오늘은 저희 팀에서 weak supervision framework 인 Snorkel을 키워드 추출 연구에 활용한 경험을 공유드리려고 합니다.<br>이 글의 1장에서는 Snorkel을 사용하게 된 배경에 대해 설명드리고 2장에서는 Snorkel에 대한 간략한 설명을 드리겠습니다. 그리고 3장과 4장에서 실제 Snorkel의 활용한 경험과 그 결과에 대해 공유 드리도록 하겠습니다.</p>
<!-- /wp:paragraph --></div>
<!-- /wp:group -->

<!-- wp:heading -->
<h2>1. 연구 배경</h2>
<!-- /wp:heading -->

<!-- wp:heading {"level":3} -->
<h3>1.1 연구 목적</h3>
<!-- /wp:heading -->

<!-- wp:jetpack/markdown {"source":"- 드라마앤컴퍼니는 90만 인재가 등록되어 있는 리멤버 커리어 서비스를 운영하고 있습니다(https://news.mt.co.kr/mtview.php?no=2022040709102461945).\n- 인재와 회사를 더 잘 연결하기 위해, 인재들이 가지고 있는 역량을 파악하는 것이 저희 AI Lab의 주요 연구 과제 중 하나 입니다. 인재의 역량을 파악하기 위해 명함 네트워크, 커리어 전환 등 다양한 요소를 연구하고 있는데요, 이번에는 인재의 **프로필**에서 **인재가 가진 직무 능력을 나타내는 키워드(직무 키워드)를** **추출하는 연구**를 진행하였습니다."} -->
<div class="wp-block-jetpack-markdown"><ul>
<li>드라마앤컴퍼니는 90만 인재가 등록되어 있는 리멤버 커리어 서비스를 운영하고 있습니다(https://news.mt.co.kr/mtview.php?no=2022040709102461945).</li>
<li>인재와 회사를 더 잘 연결하기 위해, 인재들이 가지고 있는 역량을 파악하는 것이 저희 AI Lab의 주요 연구 과제 중 하나 입니다. 인재의 역량을 파악하기 위해 명함 네트워크, 커리어 전환 등 다양한 요소를 연구하고 있는데요, 이번에는 인재의 <strong>프로필</strong>에서 <strong>인재가 가진 직무 능력을 나타내는 키워드(직무 키워드)를</strong> <strong>추출하는 연구</strong>를 진행하였습니다.</li>
</ul>
</div>
<!-- /wp:jetpack/markdown -->

<!-- wp:paragraph {"align":"center","textColor":"black","fontSize":"small"} -->
<p class="has-text-align-center has-black-color has-text-color has-small-font-size"><sup><img class="wp-image-2859" style="width: 800px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/05/blog_fig_1-2.png" alt=""></sup><br><strong>그림 1. 리멤버 커리어에 유저가 입력한 프로필의 예<br>리멤버 커리어에서 자신의 업무 경력을 담은 프로필을 작성할 수 있습니다.<br></strong></p>
<!-- /wp:paragraph -->

<!-- wp:separator -->
<hr class="wp-block-separator"/>
<!-- /wp:separator -->

<!-- wp:heading {"level":3} -->
<h3>1.2 직무 키워드 추출</h3>
<!-- /wp:heading -->

<!-- wp:jetpack/markdown {"source":"- 텍스트로부터 키워드를 추출하는 방법은 다양합니다. 저희는 키워드 활용 목적과 보유 데이터를 고려하여 1) 후보 키워드 인식 2) 직무 키워드 선택 단계를 통해 직무 키워드를 추출하였습니다. 이렇게 추출된 키워드는 유사 인재 추천, 채용 공고와 인재의 적합도 평가 등 다양하게 활용될 수 있습니다.\n- 인재가 보유한 직무 능력을 풍부하게 파악하기 위해, 이번 연구에서는 인재가 등록한 스킬 목록과 함께 자기소개와 업무 상세, 부서명에서도 직무 키워드를 추출하였습니다. 그림 2는 프로필 텍스트로부터 직무 키워드를 추출하는 과정의 예입니다."} -->
<div class="wp-block-jetpack-markdown"><ul>
<li>텍스트로부터 키워드를 추출하는 방법은 다양합니다. 저희는 키워드 활용 목적과 보유 데이터를 고려하여 1) 후보 키워드 인식 2) 직무 키워드 선택 단계를 통해 직무 키워드를 추출하였습니다. 이렇게 추출된 키워드는 유사 인재 추천, 채용 공고와 인재의 적합도 평가 등 다양하게 활용될 수 있습니다.</li>
<li>인재가 보유한 직무 능력을 풍부하게 파악하기 위해, 이번 연구에서는 인재가 등록한 스킬 목록과 함께 자기소개와 업무 상세, 부서명에서도 직무 키워드를 추출하였습니다. 그림 2는 프로필 텍스트로부터 직무 키워드를 추출하는 과정의 예입니다.</li>
</ul>
</div>
<!-- /wp:jetpack/markdown -->

<!-- wp:paragraph {"align":"center","textColor":"black","fontSize":"small"} -->
<p class="has-text-align-center has-black-color has-text-color has-small-font-size"><img class="wp-image-2862" style="width: 800px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/05/blog_fig_2.png" alt=""><br><strong>그림 2. 키워드 추출 단계 예</strong></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>1.2.1 후보 키워드 인식</h4>
<!-- /wp:heading -->

<!-- wp:jetpack/markdown {"source":"- 저희 **빅데이터 센터**의 **데이터팀**에서는 유저가 입력한 데이터를 기반으로 1만 5천여개의 직무 스킬 키워드를 관리하고 있습니다. 이러한 데이터를 이용해 **스킬 태거(Skill Tagger)** 를 만들었고, 태거를 이용해 텍스트에서 등장한 직무 키워드를 인식하였습니다. 예제 1은 태거를 통해 그림 1의 자기소개를 태깅한 결과 입니다.\n"} -->
<div class="wp-block-jetpack-markdown"><ul>
<li>저희 <strong>빅데이터 센터</strong>의 <strong>데이터팀</strong>에서는 유저가 입력한 데이터를 기반으로 1만 5천여개의 직무 스킬 키워드를 관리하고 있습니다. 이러한 데이터를 이용해 <strong>스킬 태거(Skill Tagger)</strong> 를 만들었고, 태거를 이용해 텍스트에서 등장한 직무 키워드를 인식하였습니다. 예제 1은 태거를 통해 그림 1의 자기소개를 태깅한 결과 입니다.</li>
</ul>
</div>
<!-- /wp:jetpack/markdown -->

<!-- wp:paragraph {"align":"center","textColor":"black","fontSize":"small"} -->
<p class="has-text-align-center has-black-color has-text-color has-small-font-size"><strong>예제 1. 스킬 태거 결과 예<br></strong><img class="wp-image-2887" style="width: 900px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/05/스크린샷-2022-05-13-오후-12.23.35.png" alt=""><br></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>1.2.2 직무 키워드 선택</h4>
<!-- /wp:heading -->

<!-- wp:jetpack/markdown {"source":"- 그림2의 ‘채용’, ‘명함’과 같이, 인재가 보유한 직무 능력을 나타내기에 적합하지 않은 키워드들이 태깅과정에서 인식 될 수 있습니다. 그렇기 때문에, 태깅을 통해 인식된 키워드(**후보 키워드**)들 중 인재가 가진 직무 역량을 잘 나타낼 수 있는 단어들을 선별하는 과정이 필요합니다.\n- TextRank, Yake!와 같이 다양한 keywords, key-phrase 추출 연구들이 존재합니다. 하지만 다음과 같은 문제로 저희 문제에는 적합하지 않다고 판단했습니다.\n    - 1) 저희는 이미 인식된 후보 키워드 중 직무 키워드를 찾아야 합니다.    \n    - 2) 인재가 선택한 직무나 재직해온 회사의 업종, 부서명과 같은 **컨텍스트 정보**를 이용하면 직무 키워드 판단에 도움을 받을 수 있습니다. 하지만 기존 모델에서는 이러한 정보 반영이 제한적입니다.\n    - 3) 기존 방식은 단어의 co-occurrence에 기반한 그래프 정보나 단어의 빈도수, 품사 정보 등의 자질 정보를 기반으로 키워드를 선택합니다. 하지만 프로필 텍스트의 구조와 문제의 특성상, 이러한 정보로 키워드를 온전히 판단하기 어렵다고 생각했습니다.\n- 이러한 이유로, 인재의 컨텍스트 정보와 후보 키워드들을 입력받아 각 후보 키워드의 직무 키워드 여부를 판별하는 트랜스포머 인코더 기반의 이진 분류 모델을 구성하였습니다.\n"} -->
<div class="wp-block-jetpack-markdown"><ul>
<li>그림2의 ‘채용’, ‘명함’과 같이, 인재가 보유한 직무 능력을 나타내기에 적합하지 않은 키워드들이 태깅과정에서 인식 될 수 있습니다. 그렇기 때문에, 태깅을 통해 인식된 키워드(<strong>후보 키워드</strong>)들 중 인재가 가진 직무 역량을 잘 나타낼 수 있는 단어들을 선별하는 과정이 필요합니다.</li>
<li>TextRank, Yake!와 같이 다양한 keywords, key-phrase 추출 연구들이 존재합니다. 하지만 다음과 같은 문제로 저희 문제에는 적합하지 않다고 판단했습니다.
<ul>
<li>
<ol>
<li>저희는 이미 인식된 후보 키워드 중 직무 키워드를 찾아야 합니다.</li>
</ol>
</li>
<li>
<ol start="2">
<li>인재가 선택한 직무나 재직해온 회사의 업종, 부서명과 같은 <strong>컨텍스트 정보</strong>를 이용하면 직무 키워드 판단에 도움을 받을 수 있습니다. 하지만 기존 모델에서는 이러한 정보 반영이 제한적입니다.</li>
</ol>
</li>
<li>
<ol start="3">
<li>기존 방식은 단어의 co-occurrence에 기반한 그래프 정보나 단어의 빈도수, 품사 정보 등의 자질 정보를 기반으로 키워드를 선택합니다. 하지만 프로필 텍스트의 구조와 문제의 특성상, 이러한 정보로 키워드를 온전히 판단하기 어렵다고 생각했습니다.</li>
</ol>
</li>
</ul>
</li>
<li>이러한 이유로, 인재의 컨텍스트 정보와 후보 키워드들을 입력받아 각 후보 키워드의 직무 키워드 여부를 판별하는 트랜스포머 인코더 기반의 이진 분류 모델을 구성하였습니다.</li>
</ul>
</div>
<!-- /wp:jetpack/markdown -->

<!-- wp:heading {"level":4} -->
<h4>1.2.3 모델</h4>
<!-- /wp:heading -->

<!-- wp:jetpack/markdown {"source":"- 이번 연구에서 사용한 모델은 그림 3과 같습니다. 모델에 대한 자세한 설명은 생략하겠습니다.\n    - 입력:\n        - **컨텍스트 정보:**\n            - 유저가 선택한 직무 category IDs,\n            - 재직한 업종 category IDs,\n            - 재직한 부서명들의 tokenized 결과\n        - **list of 후보 키워드:**\n            - 태거를 통해 인식된 후보 키워드 ID\n            - 후보 키워드의 인식 위치(스킬, 부서명, 자기소개 또는 업무 상세)\n    - 출력\n        - **각 후보 키워드의 직무 키워드 확률**\n"} -->
<div class="wp-block-jetpack-markdown"><ul>
<li>이번 연구에서 사용한 모델은 그림 3과 같습니다. 모델에 대한 자세한 설명은 생략하겠습니다.
<ul>
<li>입력:
<ul>
<li><strong>컨텍스트 정보:</strong>
<ul>
<li>유저가 선택한 직무 category IDs,</li>
<li>재직한 업종 category IDs,</li>
<li>재직한 부서명들의 tokenized 결과</li>
</ul>
</li>
<li><strong>list of 후보 키워드:</strong>
<ul>
<li>태거를 통해 인식된 후보 키워드 ID</li>
<li>후보 키워드의 인식 위치(스킬, 부서명, 자기소개 또는 업무 상세)</li>
</ul>
</li>
</ul>
</li>
<li>출력
<ul>
<li><strong>각 후보 키워드의 직무 키워드 확률</strong></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<!-- /wp:jetpack/markdown -->

<!-- wp:paragraph {"align":"center","textColor":"black","fontSize":"small"} -->
<p class="has-text-align-center has-black-color has-text-color has-small-font-size"><img class="wp-image-2866" style="width: 700px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/05/blog_fig_3.png" alt=""><br><strong>그림 3. 직무 키워드 선택 모델 Architecture와 입력 예</strong></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"left","fontSize":"medium"} -->
<p class="has-text-align-left has-medium-font-size"><strong>목적에 맞는 모델을 만들었습니다!<br>그런데, 학습을 위한 레이블은 어디서 구해야 하죠?</strong></p>
<!-- /wp:paragraph -->

<!-- wp:jetpack/markdown {"source":"- 일반적으로 레이블 데이터(label data)는 사람의 수작업을 통해 얻을 수 있습니다. 하지만 레이블링 수작업은 시간과 비용이 많이 소요됩니다. 특히 의학 데이터와 같이, 레이블링에 전문성이 필요한 경우 더욱 그러하지요. 또한 레이블링 정책 변경에 대해서도 유연하지 못합니다. 직무 키워드 선택 문제도 마찬가지 인데요, 직무와 업종이 다양하기 때문에 비전문가가 키워드 여부를 레이블링하기 쉽지 않은 일이라 판단했습니다.\n- 이러한 이유로, Snorkel을 사용해 보았습니다."} -->
<div class="wp-block-jetpack-markdown"><ul>
<li>일반적으로 레이블 데이터(label data)는 사람의 수작업을 통해 얻을 수 있습니다. 하지만 레이블링 수작업은 시간과 비용이 많이 소요됩니다. 특히 의학 데이터와 같이, 레이블링에 전문성이 필요한 경우 더욱 그러하지요. 또한 레이블링 정책 변경에 대해서도 유연하지 못합니다. 직무 키워드 선택 문제도 마찬가지 인데요, 직무와 업종이 다양하기 때문에 비전문가가 키워드 여부를 레이블링하기 쉽지 않은 일이라 판단했습니다.</li>
<li>이러한 이유로, Snorkel을 사용해 보았습니다.</li>
</ul>
</div>
<!-- /wp:jetpack/markdown -->

<!-- wp:separator -->
<hr class="wp-block-separator"/>
<!-- /wp:separator -->

<!-- wp:heading -->
<h2>2. Snorkel</h2>
<!-- /wp:heading -->

<!-- wp:jetpack/markdown {"source":"- Snorkel은 개발자가 작성한 프로그램의 조합을 이용해 unlabeled 데이터에 레이블을 할당해주는 프레임워크입니다. 이렇게 만들어진 labeled data를 이용해 모델을 학습합니다."} -->
<div class="wp-block-jetpack-markdown"><ul>
<li>Snorkel은 개발자가 작성한 프로그램의 조합을 이용해 unlabeled 데이터에 레이블을 할당해주는 프레임워크입니다. 이렇게 만들어진 labeled data를 이용해 모델을 학습합니다.</li>
</ul>
</div>
<!-- /wp:jetpack/markdown -->

<!-- wp:heading {"level":3} -->
<h3>2.1 Labeling Function</h3>
<!-- /wp:heading -->

<!-- wp:jetpack/markdown {"source":"- 사용자 입장에서 Snorkel의 장점을 요약하자면 “**프로그래밍을 이용해 레이블링을 할 수 있다”** 일 것 같습니다.\n- Snorkel을 사용하기 위해 **Labelging Function(LF)** 을 정의합니다. LF는 레이블을 달고자 하는 unlabeled 데이터 인스턴스를 입력받고 해당 인스턴스의 레이블 또는 판별 불가 레이블(ABSTAIN)을 반환하는 Python 함수입니다.\n- 예제 2는 Snorkel 튜토리얼에서 설명하고 있는 LF 예 입니다. 이 LF의 입력 x는 텍스트이고 출력은 x의 스팸 메시지 여부 입니다. 여기서는 간단하게 string type을 입력 받지만 Snorkel 라이브러리는 입력에 대한 다양한 형식을 지원합니다. 만약 레이블을 판별하기 어려울때는 ABSTAIN을 리턴하여 이 인스턴스에 대해 해당 LF는 레이블을 판별하지 못했다는 정보를 전달합니다.\n\n\n\n"} -->
<div class="wp-block-jetpack-markdown"><ul>
<li>사용자 입장에서 Snorkel의 장점을 요약하자면 “<strong>프로그래밍을 이용해 레이블링을 할 수 있다”</strong> 일 것 같습니다.</li>
<li>Snorkel을 사용하기 위해 <strong>Labelging Function(LF)</strong> 을 정의합니다. LF는 레이블을 달고자 하는 unlabeled 데이터 인스턴스를 입력받고 해당 인스턴스의 레이블 또는 판별 불가 레이블(ABSTAIN)을 반환하는 Python 함수입니다.</li>
<li>예제 2는 Snorkel 튜토리얼에서 설명하고 있는 LF 예 입니다. 이 LF의 입력 x는 텍스트이고 출력은 x의 스팸 메시지 여부 입니다. 여기서는 간단하게 string type을 입력 받지만 Snorkel 라이브러리는 입력에 대한 다양한 형식을 지원합니다. 만약 레이블을 판별하기 어려울때는 ABSTAIN을 리턴하여 이 인스턴스에 대해 해당 LF는 레이블을 판별하지 못했다는 정보를 전달합니다.</li>
</ul>
</div>
<!-- /wp:jetpack/markdown -->

<!-- wp:paragraph {"align":"center","textColor":"black","fontSize":"small"} -->
<p class="has-text-align-center has-black-color has-text-color has-small-font-size"><strong>예제 2. Snorkel 공식 튜터리얼 LF 설명 예<br></strong><img class="wp-image-2869" style="width: 700px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/05/blog_example_2.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:jetpack/markdown {"source":"- 도메인 전문가가 레이블링 규칙을 코드로 작성하거나 기술한 결과를 프로그래머가 코드로 작성함으로써, 전문가의 지식을 모델 학습에 녹여낼 수 있습니다. 하나의 LF에서 모든 규칙을 포괄해야할 필요는 없습니다. 여러개의 LF함수를 만듦으로써 도메인 전문가의 지식을 유연하게 표현할 수 있습니다.\n- 또한 외부 지식 베이스 활용하거나 유사한 데이터 또는 다른 방식으로 학습된 머신러닝 모델, 크라우드 작업자의 작업 결과들도 LF로 표현할 수 있습니다. 이러한 유연한 확장이 Snorkel의 장점입니다."} -->
<div class="wp-block-jetpack-markdown"><ul>
<li>도메인 전문가가 레이블링 규칙을 코드로 작성하거나 기술한 결과를 프로그래머가 코드로 작성함으로써, 전문가의 지식을 모델 학습에 녹여낼 수 있습니다. 하나의 LF에서 모든 규칙을 포괄해야할 필요는 없습니다. 여러개의 LF함수를 만듦으로써 도메인 전문가의 지식을 유연하게 표현할 수 있습니다.</li>
<li>또한 외부 지식 베이스 활용하거나 유사한 데이터 또는 다른 방식으로 학습된 머신러닝 모델, 크라우드 작업자의 작업 결과들도 LF로 표현할 수 있습니다. 이러한 유연한 확장이 Snorkel의 장점입니다.</li>
</ul>
</div>
<!-- /wp:jetpack/markdown -->

<!-- wp:heading {"level":3} -->
<h3>2.2 Generative Model</h3>
<!-- /wp:heading -->

<!-- wp:jetpack/markdown {"source":"- unlabeled 데이터 인스턴스들에 4개의 LF를 적용한 결과가 예제 3과 같다고 가정해 봅시다. Snorkel에서는 이러한 매트릭스를 Label Matrix라고 부릅니다."} -->
<div class="wp-block-jetpack-markdown"><ul>
<li>unlabeled 데이터 인스턴스들에 4개의 LF를 적용한 결과가 예제 3과 같다고 가정해 봅시다. Snorkel에서는 이러한 매트릭스를 Label Matrix라고 부릅니다.</li>
</ul>
</div>
<!-- /wp:jetpack/markdown -->

<!-- wp:paragraph {"align":"center","textColor":"black","fontSize":"small"} -->
<p class="has-text-align-center has-black-color has-text-color has-small-font-size"><strong>예제 3. SPAM과 HAM이라는 두가지 레이블을 예측하는 문제의 label matrix 예<br></strong><img class="wp-image-2873" style="width: 700px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/05/스크린샷-2022-05-13-오전-1.33.00.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:jetpack/markdown {"source":"- 인스턴스의 최종 레이블은 어떻게 정하면 될까요? 가장 쉬운 방법은 여러 LF 출력의 투표 결과(voting)를 따르는 방법일 것입니다. 하지만 앞서 말한바와 같이, Snorkel의 LF는 유연하게 정의될 수 있기 때문에 그만큼 서로간의 의존관계나 충돌이 있을 수 있고 LF들의 신뢰도가 다 다를 수 있습니다.\n- Snorkel에서는 생성 모델(generative model)을 이용해 LF 간의 관계와 가중치를 분석합니다. label matrix을 이용해 학습된 생성 모델을 기반으로 각 LF 간의 관계를 추론하고 추론된 결과를 반영한 레이블을 얻을 수 있습니다. 해당 내용은 이 글의 범위를 넘어서기 때문에, 추후에 다뤄보도록 하겠습니다."} -->
<div class="wp-block-jetpack-markdown"><ul>
<li>인스턴스의 최종 레이블은 어떻게 정하면 될까요? 가장 쉬운 방법은 여러 LF 출력의 투표 결과(voting)를 따르는 방법일 것입니다. 하지만 앞서 말한바와 같이, Snorkel의 LF는 유연하게 정의될 수 있기 때문에 그만큼 서로간의 의존관계나 충돌이 있을 수 있고 LF들의 신뢰도가 다 다를 수 있습니다.</li>
<li>Snorkel에서는 생성 모델(generative model)을 이용해 LF 간의 관계와 가중치를 분석합니다. label matrix을 이용해 학습된 생성 모델을 기반으로 각 LF 간의 관계를 추론하고 추론된 결과를 반영한 레이블을 얻을 수 있습니다. 해당 내용은 이 글의 범위를 넘어서기 때문에, 추후에 다뤄보도록 하겠습니다.</li>
</ul>
</div>
<!-- /wp:jetpack/markdown -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-2871" style="width: 300px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/05/blog_magic.jpeg" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:jetpack/markdown {"source":"- Snorkel을 고도화 하기 위한 연구는 계속 진행되고 있습니다. Snorkel의 자세한 이론적 배경은 아래 논문들에서 확인할 수 있습니다.\n    - [Data Programming: Creating Large Training Sets, Quickly](https://arxiv.org/abs/1605.07723) (NeurIPS 2016)\n    - [Learning the Structure of Generative Models without Labeled Data](https://arxiv.org/abs/1703.00854) (ICML 2017)\n    - [Training Complex Models with Multi-Task Weak Supervision](https://arxiv.org/abs/1810.02840) (AAAI 2019)\n\n"} -->
<div class="wp-block-jetpack-markdown"><ul>
<li>Snorkel을 고도화 하기 위한 연구는 계속 진행되고 있습니다. Snorkel의 자세한 이론적 배경은 아래 논문들에서 확인할 수 있습니다.
<ul>
<li><a href="https://arxiv.org/abs/1605.07723">Data Programming: Creating Large Training Sets, Quickly</a> (NeurIPS 2016)</li>
<li><a href="https://arxiv.org/abs/1703.00854">Learning the Structure of Generative Models without Labeled Data</a> (ICML 2017)</li>
<li><a href="https://arxiv.org/abs/1810.02840">Training Complex Models with Multi-Task Weak Supervision</a> (AAAI 2019)</li>
</ul>
</li>
</ul>
</div>
<!-- /wp:jetpack/markdown -->

<!-- wp:heading {"level":3} -->
<h3>2.3 Snorkel을 이용한 학습</h3>
<!-- /wp:heading -->

<!-- wp:jetpack/markdown {"source":"- generative model을 통해 생성된 레이블을 unLabeled 데이터의 label로 간주하여 모델을 학습함으로써 Snorkel을 이용한 모델 학습의 한 사이클이 마무리 됩니다. Snorkel의 목적은 ‘좋은 학습데이터'를 만드는 것이지 LF를 통한 예측 모델 자체를 만드는 것이 아닙니다. 여러 데이터 소스를 이용해 만들어진 labeled data를 기반으로 더 나은 예측을 수행하는 모델을 만드는 것이 목적입니다."} -->
<div class="wp-block-jetpack-markdown"><ul>
<li>generative model을 통해 생성된 레이블을 unLabeled 데이터의 label로 간주하여 모델을 학습함으로써 Snorkel을 이용한 모델 학습의 한 사이클이 마무리 됩니다. Snorkel의 목적은 ‘좋은 학습데이터'를 만드는 것이지 LF를 통한 예측 모델 자체를 만드는 것이 아닙니다. 여러 데이터 소스를 이용해 만들어진 labeled data를 기반으로 더 나은 예측을 수행하는 모델을 만드는 것이 목적입니다.</li>
</ul>
</div>
<!-- /wp:jetpack/markdown -->

<!-- wp:quote -->
<blockquote class="wp-block-quote"><p><em>“Our goal for LF development is to create a high quality set of training labels for our unlabeled dataset, not to label everything or directly create a model for inference using the LFs.</em><br><em> The training labels are used to train a separate discriminative model (in this case, one which just uses the comment text) in order to generalize to new, unseen data points. </em><br><em>Using this model, we can make predictions for data points that our LFs don’t cover.”</em></p><cite><a href="https://www.snorkel.org/use-cases/01-spam-tutorial#recommended-practice-for-lf-development"><a href="https://www.snorkel.org/use-cases/01-spam-tutorial#recommended-practice-for-lf-development" target="_blank" rel="noreferrer noopener">https://www.snorkel.org/use-cases/01-spam-tutorial#recommended-practice-for-lf-development</a></a></cite></blockquote>
<!-- /wp:quote -->

<!-- wp:jetpack/markdown {"source":"- 그림 4는 관련 논문에서 소개하는 Snorkel 사용의 전체 과정 요약입니다.\n"} -->
<div class="wp-block-jetpack-markdown"><ul>
<li>그림 4는 관련 논문에서 소개하는 Snorkel 사용의 전체 과정 요약입니다.</li>
</ul>
</div>
<!-- /wp:jetpack/markdown -->

<!-- wp:paragraph {"align":"center","textColor":"black","fontSize":"small"} -->
<p class="has-text-align-center has-black-color has-text-color has-small-font-size"><img class="wp-image-2877" style="width: 700px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/05/blog_fig_5.png" alt=""><br><strong>그림 4. Snorkel architecture(”<a href="https://arxiv.org/abs/1711.10160">Snorkel: Rapid Training Data Creation with Weak Supervision</a>”, 2017)</strong></p>
<!-- /wp:paragraph -->

<!-- wp:separator -->
<hr class="wp-block-separator"/>
<!-- /wp:separator -->

<!-- wp:heading -->
<h2>3. 직무 키워드 추출에 적용</h2>
<!-- /wp:heading -->

<!-- wp:heading {"level":3} -->
<h3>3.1 키워드 추출 LF 정의</h3>
<!-- /wp:heading -->

<!-- wp:jetpack/markdown {"source":"- Snorkel을 저희 문제에 활용하기 위해, 저희가 가지고 있는 데이터와 경험을 바탕으로 “이런 컨텍스트에서는 이런 키워드가 중요할 것이다\u0022 라는 6개의 규칙을 정의하였고 이들 각각을 LF로 표현하였습니다. 이 중 2가지 LF에 대해 소개하겠습니다."} -->
<div class="wp-block-jetpack-markdown"><ul>
<li>Snorkel을 저희 문제에 활용하기 위해, 저희가 가지고 있는 데이터와 경험을 바탕으로 “이런 컨텍스트에서는 이런 키워드가 중요할 것이다&quot; 라는 6개의 규칙을 정의하였고 이들 각각을 LF로 표현하였습니다. 이 중 2가지 LF에 대해 소개하겠습니다.</li>
</ul>
</div>
<!-- /wp:jetpack/markdown -->

<!-- wp:heading {"level":4} -->
<h4>3.1.1 LF 1: 검색어 사용 빈도수 기반 판별</h4>
<!-- /wp:heading -->

<!-- wp:jetpack/markdown {"source":"- 직무 키워드 판단을 위해 키워드 자체의 중요성도 고려되어야 한다고 생각합니다. 이를 위해 리멤버 커리어의 검색 데이터를 활용하였습니다.\n- 리멤버 커리어의 검색 시스템을 이용해 기업의 리크루터들이 인재를 검색하고 제안을 보냅니다. 리크루터는 원하는 인재를 찾기 위해, 그 인재가 가지고 있기 바라는 핵심 키워드를 검색어로 입력할 것 입니다. 그렇기 때문에 검색어에 많이 등작한 키워드라면, 중요한 키워드일 가능성이 높을 것이라 가정했습니다. 그리고 사용 빈도수가 적은 경우엔 중요한 키워드가 아니라 가정했습니다.\n- 검색어에 등장하지 않은 키워드라면 중요하지 않다고 볼 수도 있고, 또는 너무 구체적이라 사용되지 않았을 수도 있습니다. 이런 경우 판단을 보류 했습니다. 검색어로 사용된 빈도수가 애매한 경우(많고 적음의 기준 사이)에도 판단을 보류 했습니다.\n- LF_1은 이러한 가정을 반영한 함수입니다.\n"} -->
<div class="wp-block-jetpack-markdown"><ul>
<li>직무 키워드 판단을 위해 키워드 자체의 중요성도 고려되어야 한다고 생각합니다. 이를 위해 리멤버 커리어의 검색 데이터를 활용하였습니다.</li>
<li>리멤버 커리어의 검색 시스템을 이용해 기업의 리크루터들이 인재를 검색하고 제안을 보냅니다. 리크루터는 원하는 인재를 찾기 위해, 그 인재가 가지고 있기 바라는 핵심 키워드를 검색어로 입력할 것 입니다. 그렇기 때문에 검색어에 많이 등작한 키워드라면, 중요한 키워드일 가능성이 높을 것이라 가정했습니다. 그리고 사용 빈도수가 적은 경우엔 중요한 키워드가 아니라 가정했습니다.</li>
<li>검색어에 등장하지 않은 키워드라면 중요하지 않다고 볼 수도 있고, 또는 너무 구체적이라 사용되지 않았을 수도 있습니다. 이런 경우 판단을 보류 했습니다. 검색어로 사용된 빈도수가 애매한 경우(많고 적음의 기준 사이)에도 판단을 보류 했습니다.</li>
<li>LF_1은 이러한 가정을 반영한 함수입니다.</li>
</ul>
</div>
<!-- /wp:jetpack/markdown -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center","textColor":"black","fontSize":"small"} -->
<p class="has-text-align-center has-black-color has-text-color has-small-font-size"><strong>예제 4. 검색어 빈도수 기반 Labeling Function</strong></p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock {"language":"python"} -->
<pre class="EnlighterJSRAW" data-enlighter-language="python" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">@labeling_function(resources=dict(query_counter=query_counter))
def LF_1(x, query_counter):

	""" 입력 x = {
 			"candidate": "명함",
			"context": {
					"job_categories": [123],
 					"industries": [34, 23, 54],
					"department_tokens": [135, 14014, 3198, ...]
				},
			...
		}
	"""

	if x["candidate"] not in query_counter: # 검색어로 사용된적 없다면, 판단 불가
		return ABSTAIN

	query_count = query_counter[x["candidate"]] # 해당 키워드가 검색어로 사용된 빈도수

	if query_count >= query_counter_over: # 검색어로 사용된 빈도가 일정 이상이라면, 직무 키워드
		return KEYWORD

	if query_count &lt;= query_counter_under: # 검색어로 사용된 빈도수가 일정 이하라면, 일반 키워드
		return NORMAL

	return ABSTAIN # 기준에 부합하지 않는다면, 판단 보류</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:heading {"level":4} -->
<h4>3.1.2 LF 2: 컨텍스트 - 후보 키워드 관계 기반 판별</h4>
<!-- /wp:heading -->

<!-- wp:jetpack/markdown {"source":"- 직무 키워드 여부는 키워드가 등장한 컨텍스트에 따라 달라질 수 있습니다. 그림 2의 ‘채용', ‘명함’과 같은 키워드도 인사 업무 관련 컨텍스트나 인쇄, 출판 업무 관련 컨텍스트에서는 직무 키워드일 수 있습니다. LF_2 는 컨텍스트와 후보 키워드의 관계를 기반으로 직무 키워드 여부를 판별하는 LF 입니다.\n- 컨텍스트와 키워드의 관계 파악을 위해, word2vec 알고리즘을 이용하여 서로 관련이 있는 컨텍스트 구성 요소(업종, 직무, 부서명 token)와 스킬 키워드들이 가까이 위치할 수 있도록 임베딩 벡터를 학습하였습니다.\n- 이 임베딩에 기반하여, 컨텍스트 벡터(컨텍스트 구성 요소의 임베딩 벡터 평균)와 후보 키워드 벡터의 코사인 유사도로 컨텍스트와  후보 키워드의 관계 정도를 표현하였습니다.\n- 컨텍스트와 후보키워드의 관계가 어느정도이면 (얼마나 유사도가 높다면) 직무키워드로 판별할지(또는 그 반대일지) 결정하기 위해, 학습데이터의 전체 컨텍스트와 각 컨텍스트의 후보키워드들의 코사인 유사도를 계산하였습니다. 그리고 이 분포를 기반으로 일정 유사도 이상(예제 5의 cosims_keyword)이면 직무 키워드로,  일정 유사도 이하(예제 5의 cosims_normal)라면 일반 키워드로 판별하도록 LF를 구성하였습니다. 그리고 그 사이의 유사도를 가진 키워드의 경우 판단을 보류하였습니다.\n"} -->
<div class="wp-block-jetpack-markdown"><ul>
<li>직무 키워드 여부는 키워드가 등장한 컨텍스트에 따라 달라질 수 있습니다. 그림 2의 ‘채용', ‘명함’과 같은 키워드도 인사 업무 관련 컨텍스트나 인쇄, 출판 업무 관련 컨텍스트에서는 직무 키워드일 수 있습니다. LF_2 는 컨텍스트와 후보 키워드의 관계를 기반으로 직무 키워드 여부를 판별하는 LF 입니다.</li>
<li>컨텍스트와 키워드의 관계 파악을 위해, word2vec 알고리즘을 이용하여 서로 관련이 있는 컨텍스트 구성 요소(업종, 직무, 부서명 token)와 스킬 키워드들이 가까이 위치할 수 있도록 임베딩 벡터를 학습하였습니다.</li>
<li>이 임베딩에 기반하여, 컨텍스트 벡터(컨텍스트 구성 요소의 임베딩 벡터 평균)와 후보 키워드 벡터의 코사인 유사도로 컨텍스트와  후보 키워드의 관계 정도를 표현하였습니다.</li>
<li>컨텍스트와 후보키워드의 관계가 어느정도이면 (얼마나 유사도가 높다면) 직무키워드로 판별할지(또는 그 반대일지) 결정하기 위해, 학습데이터의 전체 컨텍스트와 각 컨텍스트의 후보키워드들의 코사인 유사도를 계산하였습니다. 그리고 이 분포를 기반으로 일정 유사도 이상(예제 5의 cosims_keyword)이면 직무 키워드로,  일정 유사도 이하(예제 5의 cosims_normal)라면 일반 키워드로 판별하도록 LF를 구성하였습니다. 그리고 그 사이의 유사도를 가진 키워드의 경우 판단을 보류하였습니다.</li>
</ul>
</div>
<!-- /wp:jetpack/markdown -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:group -->
<div class="wp-block-group"><!-- wp:paragraph {"align":"center","textColor":"black","fontSize":"small"} -->
<p class="has-text-align-center has-black-color has-text-color has-small-font-size"><strong>예제 5. 컨텍스트 - 후보 키워드 유사도 기반 labeling function</strong></p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock {"language":"python"} -->
<pre class="EnlighterJSRAW" data-enlighter-language="python" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">@labeling_function(resources=dict(embeddings=embeddings))
def LF_2(x, embeddings):

	# 컨텍스트와 후보 키워드의 유사도 계산
	vec_candidate = embeddings[x["candidate"]] # 후보 키워드의 임베딩 벡터
	vec_context = average(embeddings, x["context"]) # 컨텍스트 벡터 생성 함수
	candidate_comsim = cosine_similarity(vec_context, vec_candidate)

	if candidate_comsim >= cosims_keyword: # 유사도가 기준치 이상이라면, 직무 키워드
		return KEYWORD

	if candidate_comsim &lt;= cosims_normal: # 유사도가 기준치 이하라면, 일반 키워드
		return NORMAL

	return ABSTAIN # 기준에 부합하지 않는다면, 판단 보류</pre>
<!-- /wp:enlighter/codeblock --></div>
<!-- /wp:group -->

<!-- wp:jetpack/markdown {"source":"- 이 외에도 컨텍스트에서 키워드가 사용된 비율, 각 직무-업종별 키워드의 분포 등, 키워드 추출에 필요하다고 생각된 규칙들을 LF로 표현하였습니다."} -->
<div class="wp-block-jetpack-markdown"><ul>
<li>이 외에도 컨텍스트에서 키워드가 사용된 비율, 각 직무-업종별 키워드의 분포 등, 키워드 추출에 필요하다고 생각된 규칙들을 LF로 표현하였습니다.</li>
</ul>
</div>
<!-- /wp:jetpack/markdown -->

<!-- wp:heading {"level":3} -->
<h3>3.2 학습 데이터 생성</h3>
<!-- /wp:heading -->

<!-- wp:jetpack/markdown {"source":"- 인재들이 등록한 실재 프로필을 1.2.3절에서 소개한 모델의 입력 데이터 형식으로 변환했습니다. 그리고 이 데이터를 다시 예제 4의 입력과 같은 형식의 데이터로 변환하여 LF들에 입력했습니다.\n- [Snorkel에서는 여러 LF를 많은 unlabeled 데이터에 쉽게 적용할 수 있도록 도와주는 다양한 Applier을 제공하고 있습니다.](https://snorkel.readthedocs.io/en/v0.9.7/packages/labeling.html) 이를 이용해 손쉽게 Label Matrix를 생성할 수 있습니다(예제 6의 2 ~ 3).\n\n"} -->
<div class="wp-block-jetpack-markdown"><ul>
<li>인재들이 등록한 실재 프로필을 1.2.3절에서 소개한 모델의 입력 데이터 형식으로 변환했습니다. 그리고 이 데이터를 다시 예제 4의 입력과 같은 형식의 데이터로 변환하여 LF들에 입력했습니다.</li>
<li><a href="https://snorkel.readthedocs.io/en/v0.9.7/packages/labeling.html">Snorkel에서는 여러 LF를 많은 unlabeled 데이터에 쉽게 적용할 수 있도록 도와주는 다양한 Applier을 제공하고 있습니다.</a> 이를 이용해 손쉽게 Label Matrix를 생성할 수 있습니다(예제 6의 2 ~ 3).</li>
</ul>
</div>
<!-- /wp:jetpack/markdown -->

<!-- wp:paragraph {"align":"center","textColor":"black","fontSize":"small"} -->
<p class="has-text-align-center has-black-color has-text-color has-small-font-size"><strong>예제 6. Label Matrix 생성과 분석</strong></p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock {"language":"python"} -->
<pre class="EnlighterJSRAW" data-enlighter-language="python" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">lfs = [LF_1, LF_2, LF_3, LF_4, LF_5, LF_6]  # ····· (1)
applier = LFApplier(lfs=lfs)                # ····· (2)
L_train = applier.apply(train_inputs)       # ····· (3)

lf_analysis = LFAnalysis(L=L_train, lfs=lfs).lf_summary()  # ····· (4)

label_model = LabelModel(cardinality=2, verbose=True)                  # ····· (5)
label_model.fit(L_train=L_train, n_epochs=10000, log_freq=100, seed=7) # ····· (6)

predict_labels = label_model.predict(L=L_train, tie_break_policy="abstain") # ····· (7)</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:jetpack/markdown {"source":"- applier를 통해 생성된 label matrix를 이용해 생성 모델을 학습합니다(예제 6의 5 ~ 6).\n- 그리고 학습된 생성 모델에 label matrix를 입력하여 각 데이터 인스턴스의 레이블을 생성합니다(예제 6의 7).\n- 이렇게 생성된 각 키워드 후보의 레이블을 다시 프로필별로 모아서 최종적인 모델 학습 데이터를 생성하였습니다(예제 7)."} -->
<div class="wp-block-jetpack-markdown"><ul>
<li>applier를 통해 생성된 label matrix를 이용해 생성 모델을 학습합니다(예제 6의 5 ~ 6).</li>
<li>그리고 학습된 생성 모델에 label matrix를 입력하여 각 데이터 인스턴스의 레이블을 생성합니다(예제 6의 7).</li>
<li>이렇게 생성된 각 키워드 후보의 레이블을 다시 프로필별로 모아서 최종적인 모델 학습 데이터를 생성하였습니다(예제 7).</li>
</ul>
</div>
<!-- /wp:jetpack/markdown -->

<!-- wp:group -->
<div class="wp-block-group"><!-- wp:paragraph {"align":"center","textColor":"black","fontSize":"small"} -->
<p class="has-text-align-center has-black-color has-text-color has-small-font-size"><strong>예제 7. 생성된 모델 학습 데이터 예</strong></p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock {"language":"json"} -->
<pre class="EnlighterJSRAW" data-enlighter-language="json" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">{
	"context": {
		"job_categories": [123],
		"industries": [34, 23, 54],
		"department_tokens": [135, 14014, 3198, ...]
		}
	"skill_keywords": ["명함", "NLP", "인공지능", ...],
	"keyword_type": ["description", "skill", "department", ...]
	"labels": [0, 1, 1, ....] # Snorkel을 통해 생성된 labels
}</pre>
<!-- /wp:enlighter/codeblock --></div>
<!-- /wp:group -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>3.3 LFAnalysis</h3>
<!-- /wp:heading -->

<!-- wp:jetpack/markdown {"source":"- [Snorkel에서는 LF의 결과 분석을 도와주는 유틸리티를 제공합니다.](https://snorkel.readthedocs.io/en/master/packages/_autosummary/labeling/snorkel.labeling.LFAnalysis.html) 예제 8은 앞서 생성한 직무 키워드 추출용 LF의 분석 결과 입니다(예제 6의 4)."} -->
<div class="wp-block-jetpack-markdown"><ul>
<li><a href="https://snorkel.readthedocs.io/en/master/packages/_autosummary/labeling/snorkel.labeling.LFAnalysis.html">Snorkel에서는 LF의 결과 분석을 도와주는 유틸리티를 제공합니다.</a> 예제 8은 앞서 생성한 직무 키워드 추출용 LF의 분석 결과 입니다(예제 6의 4).</li>
</ul>
</div>
<!-- /wp:jetpack/markdown -->

<!-- wp:paragraph {"align":"center","textColor":"black","fontSize":"small"} -->
<p class="has-text-align-center has-black-color has-text-color has-small-font-size"><strong>예제 8. 키워드 추출 LF anaiysis<br></strong><img class="wp-image-2893" style="width: 750px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/05/스크린샷-2022-05-13-오후-1.00.40.png" alt=""><br></p>
<!-- /wp:paragraph -->

<!-- wp:jetpack/markdown {"source":"- 예제 8에서 LF 1은,\n    - Polarity: 0(NORMAL)과 1(KEYWORD) 레이블을 출력합니다.\n    - Coverage: 입력 데이터의 약 78%에 대한 레이블을 출력하고 나머지에 대해서는 판정을 보류했습니다.\n    - Overlaps: 출력 결과 중 약 78%는 1개 이상의 다른 다른 LF의 출력과 동일합니다.\n    - Conflicts: 출력 결과 중 약 77%는 1개 이상의 다른 LF의 출력과 다릅니다.\n- 데이터의 coverage가 높다고 해서 꼭 좋은 것은 아니라고 합니다. Snorkel은 ‘좋은 학습 데이터 생성'이 목적이기 때문에, 부정확하게 많은 데이터를 cover한다고 해서 꼭 좋은 것은 아닐 것입니다. 마찬가지로 overlaps이나 conflicts가 높다고해서 나쁜 LF 결과라고 볼 수 없을 것 입니다. [Snorkel에서는 이 값을 토대로 LF를 더 향상할 수 있는 방향을 제안합니다.](https://www.snorkel.org/use-cases/01-spam-tutorial#recommended-practice-for-lf-development)"} -->
<div class="wp-block-jetpack-markdown"><ul>
<li>예제 8에서 LF 1은,
<ul>
<li>Polarity: 0(NORMAL)과 1(KEYWORD) 레이블을 출력합니다.</li>
<li>Coverage: 입력 데이터의 약 78%에 대한 레이블을 출력하고 나머지에 대해서는 판정을 보류했습니다.</li>
<li>Overlaps: 출력 결과 중 약 78%는 1개 이상의 다른 다른 LF의 출력과 동일합니다.</li>
<li>Conflicts: 출력 결과 중 약 77%는 1개 이상의 다른 LF의 출력과 다릅니다.</li>
</ul>
</li>
<li>데이터의 coverage가 높다고 해서 꼭 좋은 것은 아니라고 합니다. Snorkel은 ‘좋은 학습 데이터 생성'이 목적이기 때문에, 부정확하게 많은 데이터를 cover한다고 해서 꼭 좋은 것은 아닐 것입니다. 마찬가지로 overlaps이나 conflicts가 높다고해서 나쁜 LF 결과라고 볼 수 없을 것 입니다. <a href="https://www.snorkel.org/use-cases/01-spam-tutorial#recommended-practice-for-lf-development">Snorkel에서는 이 값을 토대로 LF를 더 향상할 수 있는 방향을 제안합니다.</a></li>
</ul>
</div>
<!-- /wp:jetpack/markdown -->

<!-- wp:separator -->
<hr class="wp-block-separator"/>
<!-- /wp:separator -->

<!-- wp:heading -->
<h2>4. 모델 학습과 분석</h2>
<!-- /wp:heading -->

<!-- wp:jetpack/markdown {"source":"- Snorkel을 이용해 생성된 데이터(예제 7)를 기반으로 직무 키워드 예측 모델(그림 3)을 학습했습니다. 그리고 모델이 실제로 중요한 직무 키워드를 선택할 수 있을지 평가해보았습니다. 실제 직무키워드 여부에 대한 레이블 데이터가 없기 때문에, 간접적인 평가 방법을 고안하였습니다."} -->
<div class="wp-block-jetpack-markdown"><ul>
<li>Snorkel을 이용해 생성된 데이터(예제 7)를 기반으로 직무 키워드 예측 모델(그림 3)을 학습했습니다. 그리고 모델이 실제로 중요한 직무 키워드를 선택할 수 있을지 평가해보았습니다. 실제 직무키워드 여부에 대한 레이블 데이터가 없기 때문에, 간접적인 평가 방법을 고안하였습니다.</li>
</ul>
</div>
<!-- /wp:jetpack/markdown -->

<!-- wp:heading {"level":3} -->
<h3>4.1 Fake Keywords 찾기</h3>
<!-- /wp:heading -->

<!-- wp:list -->
<ul><li>모델이 직무 키워드 여부를 구분할 수 있도록 학습하였기 때문에, 직무 키워드가 아닌 키워드를 얼마나 잘 구분해내는지를 측정하면 모델의 성능을 간접적으로 가늠해볼 수 있을 것이라 판단했습니다.</li><li>이를 위해, 인재의 프로필 정보에 임의로 선택된 가짜 키워드(fake keywords) 3개를 추가하고 모델이 이를 다른 키워드들과 얼마나 잘 구분해내는지를 평가해보았습니다.</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph {"align":"center","textColor":"black","fontSize":"small"} -->
<p class="has-text-align-center has-black-color has-text-color has-small-font-size"><strong>예제 9. 예제 7의 데이터에 fake keywords 입력한 Fake 데이터 예<br></strong><img class="wp-image-2894" style="width: 800px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/05/스크린샷-2022-05-13-오후-1.03.38.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:jetpack/markdown {"source":"- 모델은 직무 키워드 일 경우 1, 아닐 경우 0을 출력하기 때문에, *1 - 모델 출력* 으로 가짜 키워드 확률 점수를 계산하였습니다. 추천 모델 평가에 활용되는 mAP(mean Average Precision)를 이용해 가짜 키워드들의 이 점수가 다른 키워드들의 점수보다 얼마나 더 높은지를 측정하였습니다.\n- 그림 5의 파란색 실선은 학습이 진행되는 동안 평가데이터의 mAP 결과입니다. epoch 0은 학습되기 전 random 하게 초기화된 모델의 결과 입니다. 즉, 가짜 키워드일 확률을 임의로 부여한 결과입니다.\n- Snokel을 통해 만들어진 레이블로 모델을 학습하면서 점점 더 나은 분류 성능을 보이는것을 알 수 있습니다. 이 결과를 통해 Snorkel로 만들어진 레이블이 효과가 있었다고 판단하였습니다.\n- LF들의 voting을 통해 생성된 레이블로도 한번 학습을 진행해보았습니다(그림 5의 주황색 점선). 이를 통해 단순한 voting보다 생성모델을 통해 만들어진 레이블이 좀더 나은 분류기를 학습 시킬 수 있었음을 알 수 있었습니다.\n\n"} -->
<div class="wp-block-jetpack-markdown"><ul>
<li>모델은 직무 키워드 일 경우 1, 아닐 경우 0을 출력하기 때문에, <em>1 - 모델 출력</em> 으로 가짜 키워드 확률 점수를 계산하였습니다. 추천 모델 평가에 활용되는 mAP(mean Average Precision)를 이용해 가짜 키워드들의 이 점수가 다른 키워드들의 점수보다 얼마나 더 높은지를 측정하였습니다.</li>
<li>그림 5의 파란색 실선은 학습이 진행되는 동안 평가데이터의 mAP 결과입니다. epoch 0은 학습되기 전 random 하게 초기화된 모델의 결과 입니다. 즉, 가짜 키워드일 확률을 임의로 부여한 결과입니다.</li>
<li>Snokel을 통해 만들어진 레이블로 모델을 학습하면서 점점 더 나은 분류 성능을 보이는것을 알 수 있습니다. 이 결과를 통해 Snorkel로 만들어진 레이블이 효과가 있었다고 판단하였습니다.</li>
<li>LF들의 voting을 통해 생성된 레이블로도 한번 학습을 진행해보았습니다(그림 5의 주황색 점선). 이를 통해 단순한 voting보다 생성모델을 통해 만들어진 레이블이 좀더 나은 분류기를 학습 시킬 수 있었음을 알 수 있었습니다.</li>
</ul>
</div>
<!-- /wp:jetpack/markdown -->

<!-- wp:paragraph {"align":"center","textColor":"black","fontSize":"small"} -->
<p class="has-text-align-center has-black-color has-text-color has-small-font-size"><img class="wp-image-2895" style="width: 750px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/05/blog_fig_6.png" alt=""><br><strong>그림 5. 모델 평가 mAP 그래프(x 축: epoch, y 축: mAP)</strong></p>
<!-- /wp:paragraph -->

<!-- wp:separator -->
<hr class="wp-block-separator"/>
<!-- /wp:separator -->

<!-- wp:heading -->
<h2>5. 사용 소감</h2>
<!-- /wp:heading -->

<!-- wp:list -->
<ul><li>실제 산업현장에서 머신러닝을 적용할때 가장 큰 난관은 학습 데이터 확보라고 생각합니다. 유저가 입력한 데이터나 행동 이력을 기록한 로그 데이터가 많이 있지만 이를 학습데이터로 사용하기 어려운 경우가 있습니다. Snorkel은 이러한 데이터들과 도메인 전문가의 지식을 결합하기 위한 효과적인 도구라고 생각합니다.</li><li>하지만, 좋은 결과를 얻기 쉽지 않은 것 같습니다. 가장 어려운 점은 labeling function 정의하기 였는데요. 처음에는 많은 LF 아이디어가 나올 줄 알았는데, 아무리 쥐어짜도 10개 이상 만들기 어려웠습니다. 그마저도 적용해보니 결과가 좋지 않았습니다. 그래서 다시 LF를 고민하고 만드는 과정을 반복했습니다. 지금 구성된 LF에도 많은 개선점이 있습니다.</li><li>가능하다면, 만들어진 모델을 실제로 활용하면서 꾸준히 LF를 업데이트하는 방법으로 활용해도 좋을 것 같습니다. 해결하고자 하는 문제의 규모와 활용 방식, 중요도에 따라 Snorkel을 사용할지 다른 방법을 사용할지 잘 고민해봐야 할 것입니다.</li><li>하지만 개인적으론 Snorkel의 전망이 좋다고 생각합니다. 앞으로 Snorkel을 활용한 다양한 결과를 공유드릴 수 있도록 노력하겠습니다!</li></ul>
<!-- /wp:list -->

<!-- wp:heading -->
<h2>Reference</h2>
<!-- /wp:heading -->

<!-- wp:jetpack/markdown {"source":"- [https://www.snorkel.org/](https://www.snorkel.org/) (Snorkel 공식 홈페이지)\n- [Understanding Snorkel](https://medium.com/@annazubovab/understanding-snorkel-5e33351aa43b)(Snorkel 소개 블로그, 2021)\n- [게임의 부정 사용자를 탐지하는 방법, Snorkel을 활용해 라벨 보정하기](https://blog.ncsoft.com/game-data-analytics-20210122/) (NC 소프트 기술 블로그, 2021)\n- [Keyword Extraction Methods — The Overview](https://towardsdatascience.com/keyword-extraction-methods-the-overview-35557350f8bb)(키워드 추출 관련 연구 소개, 2019)"} -->
<div class="wp-block-jetpack-markdown"><ul>
<li><a href="https://www.snorkel.org/">https://www.snorkel.org/</a> (Snorkel 공식 홈페이지)</li>
<li><a href="https://medium.com/@annazubovab/understanding-snorkel-5e33351aa43b">Understanding Snorkel</a>(Snorkel 소개 블로그, 2021)</li>
<li><a href="https://blog.ncsoft.com/game-data-analytics-20210122/">게임의 부정 사용자를 탐지하는 방법, Snorkel을 활용해 라벨 보정하기</a> (NC 소프트 기술 블로그, 2021)</li>
<li><a href="https://towardsdatascience.com/keyword-extraction-methods-the-overview-35557350f8bb">Keyword Extraction Methods — The Overview</a>(키워드 추출 관련 연구 소개, 2019)</li>
</ul>
</div>
<!-- /wp:jetpack/markdown -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2847</wp:post_id>
		<wp:post_date><![CDATA[2022-05-13 16:53:45]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-05-13 07:53:45]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-05-13 16:55:29]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-05-13 07:55:29]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[snorkel%ec%9d%84-%ec%9d%b4%ec%9a%a9%ed%95%9c-%ec%a7%81%eb%ac%b4-%ed%82%a4%ec%9b%8c%eb%93%9c-%ec%b6%94%ec%b6%9c]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="ailab"><![CDATA[AI Lab.]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle_flag]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729423232;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:2978;}i:1;a:1:{s:2:"id";i:3374;}i:2;a:1:{s:2:"id";i:2629;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[55]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_single_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:23:{s:8:"subtitle";s:0:"";s:6:"format";s:8:"standard";s:5:"video";s:0:"";s:7:"gallery";s:0:"";s:11:"source_name";s:0:"";s:10:"source_url";s:0:"";s:8:"via_name";s:20:"BDC AI lab 이경호";s:7:"via_url";s:0:"";s:17:"override_template";s:1:"0";s:8:"override";a:1:{i:0;a:32:{s:8:"template";s:1:"1";s:18:"single_blog_custom";s:0:"";s:8:"parallax";s:1:"1";s:10:"fullscreen";s:1:"1";s:6:"layout";s:13:"right-sidebar";s:7:"sidebar";s:15:"default-sidebar";s:14:"second_sidebar";s:15:"default-sidebar";s:14:"sticky_sidebar";s:1:"1";s:14:"share_position";s:3:"top";s:17:"share_float_style";s:16:"share-monocrhome";s:18:"show_share_counter";s:1:"1";s:17:"show_view_counter";s:1:"1";s:13:"show_featured";s:1:"1";s:14:"show_post_meta";s:1:"1";s:16:"show_post_author";s:1:"1";s:22:"show_post_author_image";s:1:"1";s:14:"show_post_date";s:1:"1";s:16:"post_date_format";s:7:"default";s:23:"post_date_format_custom";s:5:"Y/m/d";s:18:"show_post_category";s:1:"1";s:22:"show_post_reading_time";s:1:"0";s:21:"post_reading_time_wpm";s:3:"300";s:16:"show_zoom_button";s:1:"0";s:20:"zoom_button_out_step";s:1:"2";s:19:"zoom_button_in_step";s:1:"3";s:13:"show_post_tag";s:1:"1";s:19:"show_prev_next_post";s:1:"1";s:15:"show_popup_post";s:1:"1";s:17:"number_popup_post";s:1:"1";s:15:"show_author_box";s:1:"0";s:17:"show_post_related";s:1:"0";s:24:"show_inline_post_related";s:1:"0";}}s:19:"override_image_size";s:1:"0";s:14:"image_override";a:1:{i:0;a:2:{s:26:"single_post_thumbnail_size";s:8:"crop-500";s:24:"single_post_gallery_size";s:8:"crop-500";}}s:13:"trending_post";s:1:"0";s:22:"trending_post_position";s:4:"meta";s:19:"trending_post_label";s:8:"Trending";s:14:"sponsored_post";s:1:"0";s:20:"sponsored_post_label";s:12:"Sponsored by";s:19:"sponsored_post_name";s:0:"";s:18:"sponsored_post_url";s:0:"";s:26:"sponsored_post_logo_enable";s:1:"0";s:19:"sponsored_post_logo";s:0:"";s:19:"sponsored_post_desc";s:0:"";s:10:"disable_ad";s:1:"0";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:2:"id";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_estimated-reading-time-minutes]]></wp:meta_key>
		<wp:meta_value><![CDATA[15]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[114]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_fbcae45c78a69eb667a0995fa1722b06]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[2964]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_template_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[wp-post]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_version]]></wp:meta_key>
		<wp:meta_value><![CDATA[3.6.1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[snorkel ml machine learning deep learning keywords extraction]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[55]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_640c95b26c96fd571a3fcd4c77646cf2]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[리멤버는 서비스 모니터링을 어떻게 하고 있을까?]]></title>
		<link>https://blog.dramancompany.com/2022/06/how-remember-monitors/</link>
		<pubDate>Tue, 21 Jun 2022 07:47:32 +0000</pubDate>
		<dc:creator><![CDATA[hb.lee]]></dc:creator>
		<guid isPermaLink="false">https://blog.dramancompany.com/?p=2967</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph {"style":{"typography":{"fontSize":"16px"}}} -->
<p style="font-size:16px">안녕하세요? 리멤버를 서비스하고 있는 드라마앤컴퍼니의 플랫폼 서버 파트 테크리드 이한별 ⭐ 입니다. 😂</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"style":{"typography":{"fontSize":"16px"}}} -->
<p style="font-size:16px">리멤버는 명함 관리부터 시작하여 인재 검색(다이렉트 소싱), 채용 공고, 헤드헌팅을 비롯한 채용 사업 뿐 아니라 주요 경제 소식을 매일 큐레이션 및 정리해주는 리멤버 나우, 회원들끼리 직장 관련 고민을 털어놓고 해결하기 위한 리멤버 커뮤니티, 전국의 일하는 사람들에게 설문 조사를 가능하게 한 리멤버 서베이 등 다양한 서비스를 하고 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"style":{"typography":{"fontSize":"16px"}}} -->
<p style="font-size:16px">다양한 서비스를 하고 있고, 대규모 트래픽을 안정적으로 잘 처리할 수 있으려면 개발자로서 신경써야할 것들이 상당히 많은데요.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"style":{"typography":{"fontSize":"16px"}}} -->
<p style="font-size:16px">이번에는 그 중에서 모니터링에 초점을 맞춰, 리멤버는 서비스 모니터링을 어떻게 하고 있는지에 대해서 소개하려고 합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>리멤버에서 사용하는 모니터링 도구 : AWS CloudWatch 와 New Relic</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>저희 리멤버 서비스는 대부분 AWS 위에 구축해놓은 infrastructure 를 기반으로 운영되고 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>따라서 AWS CloudWatch 를 적극적으로 활용하여 적절한 지표 및 Alarm/Alert 를 설정하는 것이 중요합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>또한, AWS CloudWatch 만으로는 서비스에서 발생하는 모든 이벤트들에 대해 파악하기가 쉽지 않기 때문에, APM 등을 도입하여 모니터링하는 것도 중요합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>이를 위해 리멤버에서는 모니터링 플랫폼으로써 New Relic 을 오래전부터 사용해오고 있었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:embed {"url":"https://blog.dramancompany.com/2015/12/%ec%95%88%ec%a0%95%ec%a0%81%ec%9d%b8-%ec%84%9c%eb%b9%84%ec%8a%a4-%ec%9a%b4%ec%98%81%ec%9d%84-%ec%9c%84%ed%95%9c-%ec%84%9c%eb%b2%84-%eb%aa%a8%eb%8b%88%ed%84%b0%eb%a7%81-1/","type":"wp-embed","providerNameSlug":"drama-amp-company","align":"center"} -->
<figure class="wp-block-embed aligncenter is-type-wp-embed is-provider-drama-amp-company wp-block-embed-drama-amp-company"><div class="wp-block-embed__wrapper">
https://blog.dramancompany.com/2015/12/%ec%95%88%ec%a0%95%ec%a0%81%ec%9d%b8-%ec%84%9c%eb%b9%84%ec%8a%a4-%ec%9a%b4%ec%98%81%ec%9d%84-%ec%9c%84%ed%95%9c-%ec%84%9c%eb%b2%84-%eb%aa%a8%eb%8b%88%ed%84%b0%eb%a7%81-1/
</div></figure>
<!-- /wp:embed -->

<!-- wp:heading {"level":4} -->
<h4>리멤버에서 모니터링하는 것들</h4>
<!-- /wp:heading -->

<!-- wp:heading {"level":5} -->
<h5>Application Performance</h5>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>New Relic 을 이용하여 서버의 처리량(throughput), 평균 응답 시간, 오류 발생율(Error rate), Slow transactions 가 있는지, Host 의 CPU/Memory 사용율 등을 주로 확인합니다. Error rate 가 0% 초과라면 어떤 Error 가 발생했는지, 해당 Error 가 발생했던 thread 의 stack trace 도 확인하며, 관련 logs 도 조회하면서 어떤 문제가 있는지 진단합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":2975,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2022/06/image.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2022/06/image-1024x753.png" alt="" class="wp-image-2975"/></a><figcaption>Application Performance Monitoring</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":5} -->
<h5>Infrastructure Metrics</h5>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>서비스를 위한 프로세스가 실행중인 서버(EC2, ECS 등)는 하나의 애플리케이션 서버만을 실행하긴 하지만, 애플리케이션 서버 프로세스가 아닌 다른 요인으로 서버에 문제가 발생할 수도 있습니다. 애플리케이션의 트래픽은 낮은데 IO가 높을 수도 있고, Disk Usage 가 100% 가 돼 서비스 불능 상태에 이를 수 있는 등 APM 뿐 아니라 Infrastructure 관점에서의 여러 metrics 도 봐야합니다. 리멤버에서는 이 또한 주로 New Relic 을 활용하여 모니터링하고 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>여기서 Load average, CPU 사용율을 중심으로 어떤 서버에 부하가 쏠리는지, 어떤 프로세스가 문제가 되고 있는지 등을 파악할 수 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>여러 지표를 확인 후 문제가 발견됐다면 조치를 취하고 앞으로는 동일한 문제가 발생하지 않도록 하기 위해 취한 조치를 자동화하고 있습니다. 개발자들이 알게 모르게 시간을 많이 쏟고 있는 반복 작업들(<a href="https://sre.google/sre-book/eliminating-toil/" target="_blank" rel="noreferrer noopener">Toil</a>) 들을 자동화하기 위해 꼭 필요한 지표들입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":2976,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2022/06/image-1.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2022/06/image-1-1024x781.png" alt="" class="wp-image-2976"/></a><figcaption>Infrastructure Metrics - System</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:image {"align":"center","id":2977,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2022/06/image-2.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2022/06/image-2-1024x752.png" alt="" class="wp-image-2977"/></a><figcaption>Infrastructure Metrics - Storage</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":5} -->
<h5>SLI/SLO</h5>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>서비스에 문제가 있는지 없는지 현황을 한 눈에 파악하기위해서 적절한 SLI 와 SLO 를 설정하고, 이를 모니터링하는 것이 가장 기본적인 방법입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":3006,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2022/06/image-5.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2022/06/image-5-1024x242.png" alt="" class="wp-image-3006"/></a><figcaption>Service Levels</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>리멤버는 아직 별도의 SRE 또는 DevOps 포지션이 없는 형태의 조직 구조이기 때문에, 이 SLI/SLO 를 설정하고 모니터링하기 시작한 건 얼마 되지 않았습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>이 글을 쓰는 시점 기준 아직 SLI/SLO 설정을 하지 못한 서비스들도 있습니다. 점진적으로 하나씩 하나씩 저희 서비스의 상태를 가장 빠르게 확인할 수 있도록 필요한 SLI/SLO 를 추가하고 있습니다. 혹시, 독자분들 중에서 이에 대해 관심을 가지신 분이 계시다면, 리멤버에 합류하셔서 함께 만들어 나가보는 것은 어떨까요? 🤣</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>SLI/SLO 설정을 하고 이를 볼 수 있는 페이지를 만드는 것도 자체적으로 할 수도 있고, 3rd party saas 등을 이용할 수도 있는데, 저희는 이미 사용하고 있는 New Relic 에서 제공해주고 있는 Service Levels 기능을 통해 최소한의 리소스 투입으로 만들어가고 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":5} -->
<h5>특정 서비스의 health 를 나타내는 지표</h5>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>애플리케이션의 도메인 특성상 관리해야하는 지표가 있을 수 있습니다. 예를 들어, 리멤버에 있는 명함을 구글 연락처로 동기화하는 기능을 제공하고 있습니다. 사용자의 행태에 따라 동기화해야할 명함 수가 급격하게 늘어나는 때가 종종 생기는데, 그런 경우 개발자들이 인지하고 적절한 조치를 취하거나 개선할 수 있도록 CloudWatch 에 custom metric 을 전송하고, Alarm 을 만들어 관찰하고 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":3004,"width":857,"height":480,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large is-resized"><a href="https://blog.dramancompany.com/wp-content/uploads/2022/06/image-3.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2022/06/image-3-1024x574.png" alt="" class="wp-image-3004" width="857" height="480"/></a><figcaption>CloudWatch 의 custom metric 및 이에 대한 alarm</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>물론, 이렇게 설정해놓은 Alarm 이 자주 발생하거나 어떻게 조치를 취해야하는지에 대해 명확하게 알고 있다면, 아래의 스크린샷과 같이 자동화하여 더 이상 중요하지 않은 이유로 Alarm 이 오지 않도록 개선하는 것도 중요합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":3005,"width":858,"height":694,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large is-resized"><a href="https://blog.dramancompany.com/wp-content/uploads/2022/06/image-4.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2022/06/image-4-1024x829.png" alt="" class="wp-image-3005" width="858" height="694"/></a><figcaption>Alarm 을 확인 하고 더 이상 같은 Alarm 이 오지 않도록 개선 및 자동화 예시</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>이러한 것들 외에도 Distributed traces, Service Map 등 다양한 관점에서 저희 서비스가 안정적으로 운영이 되고 있는지, 새로운 병목 구간이 생기지는 않았는지 등을 끊임없이 모니터링하고 있습니다. :D</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>다음으로는 이렇게 갖춰놓은 모니터링 시스템을 활용한 예시 몇가지를 소개드리겠습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4,"fontSize":"medium"} -->
<h4 class="has-medium-font-size">모니터링 시스템 활용 사례</h4>
<!-- /wp:heading -->

<!-- wp:heading {"level":5} -->
<h5>리멤버에서 이상 징후를 발견하는 방법</h5>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>주로 문제가 생겼을 때 Slack 의 특정 채널(장애 알림 전용 채널)에 메시지가 게시되는 것으로부터 가장 빠르게 인지를 합니다. Slack 에 장애가 발생하면 리멤버 서비스에 발생하는 장애를 인지하기 어려워지기 때문에 극소수이긴 하지만 일부 구성원들, 일부 지표에 한해서는 이메일로도 받도록 돼있는 부분도 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Slack 으로 인지하게 되는 것과 별개로 위 문단에 적어놓은 것과 같이 모니터링을 하다가 발견하는 경우도 있습니다. 모니터링 중 특별히 튀는 지표가 눈에 띄면 Alert 와 무관하게 원인 파악을 하며 문제인지 아닌지 판단을 하고 문제 상황이라면 triage(심각도 정도에 따른 우선 순위 분류)부터 시작하여 Troubleshooting 을 시작하기도 합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>New Relic 에서 제공하는 terraform 모듈을 이용하여 각 애플리케이션 마다 Slack 으로 알람 메시지가 오도록 하는 Alert 를 생성/관리하고 있습니다.<ul><li>New Relic 은 글로벌 서비스인만큼 사용자도 많고, 이를 활용한 오픈 소스도 많은데요. 저도 <a href="https://developer.newrelic.com/automate-workflows/get-started-terraform/">New Relic 에서 제공해주는 매뉴얼</a>을 참고하는 것은 물론, github 에서 오픈 소스를 검색해 참고하여 저희만의 terraform 코드를 만들어 IaC 로 New Relic Alert 를 관리하고 있습니다.</li></ul></li></ul>
<!-- /wp:list -->

<!-- wp:image {"align":"center","id":3036,"width":667,"height":371,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large is-resized"><a href="https://blog.dramancompany.com/wp-content/uploads/2022/06/image-9.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2022/06/image-9-1024x570.png" alt="" class="wp-image-3036" width="667" height="371"/></a><figcaption>실제로 리멤버에서 사용하고 있는 newrelic terraform module 코드 조각</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:list -->
<ul><li>이렇게 설정해놓은 New Relic Alert 의 조건이 발동되면 아래와 같이 Slack 에서 어떤 문제가 있는지 확인할 수 있습니다.<ul><li>Slack 으로 Alert 가 오는 것을 확인하면 즉시 확인하여 원인이 무엇인지 파악하고 해결을 하면서 그 과정을 thread 로 기록하고 있습니다. thread 로 기록하는 이유는 재발 방지를 도모하고, 이런 문제가 있었다는 것을 다른 분들도 다 확인하실 수 있도록 하고 있습니다. 다른 사람들이 thread 로 기록해놓은 해결 과정을 따라가보면 새로운 인사이트를 얻게 되는 경우도 많답니다. 😂</li></ul></li></ul>
<!-- /wp:list -->

<!-- wp:image {"align":"center","id":3038,"width":429,"height":541,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large is-resized"><a href="https://blog.dramancompany.com/wp-content/uploads/2022/06/image-10.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2022/06/image-10-812x1024.png" alt="" class="wp-image-3038" width="429" height="541"/></a><figcaption>New Relic Alert 가 Slack 으로 게시된 모습</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>또한 AWS CloudWatch + SNS 를 이용하여 Slack 으로 알람 메시지가 오도록 연동하여 사용하고 있는 것도 많이 있습니다.<ul><li>이 글을 작성하고 있는 시간 기준으로 AWS CloudWatch 에는 411개의 Alarm 이 있습니다. 이 중에는 더 이상 무의미하여 삭제해도 되는데 삭제하지 못하고 있는 Alarm 도 다수 포함이 돼있습니다.</li><li>Alarm 이 슬랙으로 전송되면 아래와 같은 형태로 확인할 수 있습니다.</li></ul></li></ul>
<!-- /wp:list -->

<!-- wp:image {"align":"center","id":3039,"width":664,"height":393,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large is-resized"><a href="https://blog.dramancompany.com/wp-content/uploads/2022/06/image-11.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2022/06/image-11-1024x606.png" alt="" class="wp-image-3039" width="664" height="393"/></a><figcaption>DLQ(Dead Letter Queue) 로 설정해놓은 특정 SQS queue 에 메시지가 전송됐을 때 Alarm 이 Slack 으로 게시된 모습</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:heading {"level":4} -->
<h4>모니터링 시스템 활용 troubleshooting 사례</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>여기서 말하는 troubleshooting 이라 함은 크게 특정 사용자에게 어떤 문제가 생겨 문의를 주신 경우에 대응하여 처리하는 것과 서비스의 지표에 이상징후가 생겨 대응하는 것으로 나눌 수 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>어떤 문제가 생겨 유저께서 문의를 하신 경우에는 가장 먼저 Logs 에서 해당 유저가 요청한 API 목록을 가장 먼저 확인하여, 어떤 일들이 있었는지 파악하고 해결해드리고 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":3007,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2022/06/image-6.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2022/06/image-6-1024x561.png" alt="" class="wp-image-3007"/></a><figcaption>New Relic 에서 본 Logs</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>서비스의 지표에 이상징후가 생겨 대응할 때에는 그 종류에 따라 달라지겠지만, CloudWatch, NewRelic 등 수단과 방법을 가리지 않고 원인 파악을 위해 적절한 지표와 로그를 찾고 Troubleshooting 을 하고 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>아래는 특정 서비스에서 Errors 가 동시 다발적으로 발생하여, 모니터링 시스템을 이용하여 원인을 파악하고 개선하기 위해 커뮤니케이션 했던 흔적입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":3008,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2022/06/image-7.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2022/06/image-7-1024x930.png" alt="" class="wp-image-3008"/></a><figcaption>Error rate 지표를 확인하고 개선하고 있는 예시</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>부록 - 리멤버에서는 왜 이렇게 모니터링을 하고 있을까</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>위 본문에서 소개드린 것 외에도 모니터링은 곳곳에서 다양한 도구와 방법을 통해서 하고 있습니다. 예를 들어, Monyog 을 이용하여 데이터베이스를 모니터링하고 있기도 하고요. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>결국 모니터링 하는 이유는 사용자에게 안정적인 서비스를 제공하기 위함이기 때문에 저희가 현재 모니터링을 하고 있지 않은 영역을 찾아서 모니터링 범위에 포함시키고 지속적으로 개선하기 위해 노력하고 있습니다. 특정 모니터링 시스템/플랫폼에 종속되거나 스스로 locked-in 될 필요는 없지만, 모니터링을 잘 하려면(=안정적인 서비스를 제공하려면) 사내에서 사용하고 있는 모니터링 시스템/플랫폼에 대해 익숙해지고 잘 사용할 줄 아는 것도 중요합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>그렇기 때문에 우리 회사에서의 모니터링 시스템은 왜 이런 모습이 됐을까를 이해하는 것도 모니터링 시스템/플랫폼에 익숙해지는 데 큰 도움이 될 것이란 생각이 들었기 때문에 부록으로 "리멤버에서는 왜 이렇게 모니터링을 하고 있을까"라는 질문에 대해 일부 답변이 될 만한 내용들을 정리해보려 합니다. :)</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>입사 당시의 상황</h4>
<!-- /wp:heading -->

<!-- wp:paragraph {"style":{"typography":{"fontSize":"16px"}}} -->
<p style="font-size:16px">2019년 12월, 제가 리멤버에 합류할 때 당시를 떠올려보면 그 때도 안정적인 서비스를 위해 모니터링을 잘 하고 있었습니다. 하지만 직접 개발, 운영하면서 느꼈던 부족한점, 아쉬운 점들이 있기도 했습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":6,"style":{"typography":{"fontSize":"16px"}}} -->
<h6 style="font-size:16px">다원화된 로그(logs)와 지표(metrics) 데이터</h6>
<!-- /wp:heading -->

<!-- wp:list {"style":{"typography":{"fontSize":"16px"}}} -->
<ul style="font-size:16px"><li>ElasticSearch 로 전송하고 ElasticSearch 에서 로그를 저장/인덱싱을 하면 Kibana 에서 로그를 조회하는 일반적인 구성이었습니다. 이 시스템 자체는 문제가 없었지만, 일부 서비스는 ELK 연동이 안 돼있어서 AWS 의 CloudWatch 에서 로그를 보거나 EC2 에 직접 SSH 접속을 해서 봐야 하는 경우도 있었습니다. 또한 직접 EC2 에 구성하고 운영하고 있던 ElasticSearch 는 가끔씩이지만 인덱싱 문제를 일으켰고, 그 때마다 일부 로그 유실이 발생했고 자주 발생하는 일이 아니었기 때문에 노하우가 없어 문제가 생기면 복구를 위한 시간이 상당히 많이 소요됐습니다.</li><li>로그는 ELK 에서 보면 되는데, 로그와 연관된 서버의 상태(CPU, memory 사용율 등)는 AWS console 에서 보거나 당시에도 연동돼 있던 NewRelic 에서 확인해야만 했습니다. 이렇게 이원화가 돼있다 보니 개발자가 무언가를 파악해야할 때마다 확인해봐야 하는 데이터들이 흩어져있어 신경쓰고 있어야 하는 컨텍스트가 많아져 비효율이 있었습니다. 특히 새로 합류하는 개발자 입장에서는 어떤 것은 여기서 보고, 어떤 것은 저기서 봐야하는 암묵지처럼 돼버린 것을 이해하고 활용하기까지는 시간이 적지 않게 걸렸습니다.</li></ul>
<!-- /wp:list -->

<!-- wp:heading {"level":5,"style":{"typography":{"fontSize":"16px"}}} -->
<h5 style="font-size:16px">이상 징후에 대한 alert/alarm 이 구성돼있지만, 뭘 해야할 지 판단하기 어려움</h5>
<!-- /wp:heading -->

<!-- wp:list {"style":{"typography":{"fontSize":"16px"}}} -->
<ul style="font-size:16px"><li>오래전 AWS Cloudwatch 및 NewRelic 에서 설정해놓은 Alert 가 있어서 서비스에 문제가 생기거나 생길 것으로 예상될 때마다 슬랙으로 Alarm 이 오긴 왔지만, 해당 Alarm 을 본 개발자가 어떤 문제가 있는 것인지, 어떤 조치를 해야하는지에 대한 파악이 쉽지 않았습니다. 문제가 생기면 그때 그때 특별한 컨벤션, 규칙, 기준없이 alert 를 만들어왔던 것들이 꽤 많았었고, alert 가 있었기 때문에 문제가 발생했다는 사실은 쉽게 인지할 수 있었는데, 그 alert 를 보고 원인 분석을 위해서 어떻게 시작해야하는 지에 대해서는 회사에서 일정 기간 이상 근무를 한 개발자가 아닌 이상 파악하기가 쉽지 않았습니다.</li></ul>
<!-- /wp:list -->

<!-- wp:heading {"level":5,"style":{"typography":{"fontSize":"16px"}}} -->
<h5 style="font-size:16px">service map 파악의 어려움</h5>
<!-- /wp:heading -->

<!-- wp:list {"style":{"typography":{"fontSize":"16px"}}} -->
<ul style="font-size:16px"><li>기존에 monolithic 한 하나의 서비스에서 벗어나, 여러 신규 서비스들은 소스코드부터 인프라까지 별도로 구축하고 있었습니다. 이 때, 서비스들 간의 통신이 어떻게 되고 있는지 등을 파악하려면 지속적으로 업데이트되는 Service Map 을 쉽게 볼 수 있는 것이 중요한데, 이때까지는 사람이 수작업으로 위키(컨플루언스) 문서로 관리하고 있었습니다. 결국 사람이 하는 문서 관리이다 보니, 현행화가 잘 이뤄지지 않게 되거나 문서의 존재조차 모르고 우리 서비스들의 Service Map 을 그려달라고 하는 개발자분들이 생길 수 밖에 없었습니다.</li></ul>
<!-- /wp:list -->

<!-- wp:heading {"level":5,"style":{"typography":{"fontSize":"16px"}}} -->
<h5 style="font-size:16px">웹, 모바일 애플리케이션에서 일어나는 이벤트(에러, 버그 등)들에 대한 파악의 어려움</h5>
<!-- /wp:heading -->

<!-- wp:list -->
<ul><li>이건 이 글을 쓰고 있는 현재 시점 기준으로도 아직 잘 하고 있지 못한 부분입니다. 😭😭</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>문제점 인식</h4>
<!-- /wp:heading -->

<!-- wp:paragraph {"style":{"typography":{"fontSize":"16px"}}} -->
<p style="font-size:16px">사내에 개발자가 늘어남에 따라 서버의 상태나 애플리케이션의 지표, 로그를 한 군데에서 보는 것이 더욱 중요해지고 있었습니다. 새로 합류하시는 개발자에게 모니터링 현황 및 배경에 대해 설명해드리는 것조차 각오하고 해야하는 큰 일이 되고 있었습니다. 문서로 커뮤니케이션 하는 것의 한계가 느껴지기 시작하기도 했습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"style":{"typography":{"fontSize":"16px"}}} -->
<p style="font-size:16px">"모든 로그를 하나의 시스템으로 모아서 보자. 로그와 여러 지표도 하나의 시스템에서 확인할 수 있게 하자." 를 달성하기 위해 이미 많은 비용을 지불하고 있던 NewRelic 을 잘 활용해보자고 의사 결정이 2021년 6월쯤 이뤄졌습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"style":{"typography":{"fontSize":"16px"}}} -->
<p style="font-size:16px"></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>New Relic 을 사용하는 이유</h4>
<!-- /wp:heading -->

<!-- wp:heading {"level":5} -->
<h5>비용</h5>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>기존에도 비용을 지불하며 New Relic 의 APM 기능을 연동하여 사용하고 있었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>기존에 로그를 쌓고 조회하기 위해 자체적으로 ELK 를 운영하던 것에도 적지 않은 비용이 발생하고 있었습니다. 데이터의 다원화 등으로 인해 발생하는 눈에 보이지 않는 생산성 저하 등의 비용도 무시할 수 없었습니다. New Relic 이 아니더라도 기존에 ELK 에 통합하든, 새로운 모니터링 시스템을 자체적으로 구축하든 큰 비용이 필요했습니다. 이 중에서 New Relic 을 선택하는 것이 그 당시 가장 합리적인 것이었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><a href="https://blog.dramancompany.com/2015/12/%EC%95%88%EC%A0%95%EC%A0%81%EC%9D%B8-%EC%84%9C%EB%B9%84%EC%8A%A4-%EC%9A%B4%EC%98%81%EC%9D%84-%EC%9C%84%ED%95%9C-%EC%84%9C%EB%B2%84-%EB%AA%A8%EB%8B%88%ED%84%B0%EB%A7%81-2/" target="_blank" rel="noreferrer noopener">과거에 ELK 로 선택한 것과 관련한 블로그 포스트</a></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":5} -->
<h5>생산성</h5>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>애플리케이션과 연결된 Database layer 까지 포함한 여러 지표를 확인할 수 있습니다. 이를 통해 trace 의 여러 spans 중 어디가 병목인지 쉽게 분류할 수 있습니다. 또한, 별도의 시스템을 구축하지 않아도 APM 기능 안에서 N+1 쿼리 발생 여부, slow query 발생한 trace 등을 쉽게 파악할 수 있습니다. 이것들이 쉽게 파악이 되며, 계속 눈에 띈다면 개발자로서 조치를 취하지 않을 수 없게 됩니다. :D </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>그래프, 차트 등 데이터 시각화가 잘 돼있어, 개발자가 현황을 파악하거나 문제의 원인 분석 등을 빠르게 할 수 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":5} -->
<h5>분산 트레이싱 환경</h5>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Prometheus + Grafana, Sentry 같은 오픈소스 제품이나 New Relic, DataDog, Dynatrace 등 3rd party SaaS 를 사용하면 분산 트랜잭션 환경에서 유저 관점에서 하나의 trace 와 관련한 logs, traces, error 를 seamless 하게 확인할 수 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>여러 부분, 여러 관점에서 꼭 New Relic 이 아니더라도 같은 수준 혹은 더 높은 수준의 요구 사항을 만족시켜주는 좋은 제품들도 많이 있는 것으로 알고 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>하지만 현재 New Relic 을 사용하고 있는 리멤버의 개발자들과 앞으로 합류해주실 분들께 지금 New Relic 을 사용하는 이유에 대해 설명을 드리고 공감을 얻는 것이 중요하기 때문에 제가 알고 있는 배경에 대해 정리해봤습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>배경과 더불어 실제로 사용해보면서 개인적으로 느꼈던 장점과 단점에 대해서도 정리를 해보면, New Relic 또는 기타 제품들을 고민하고 있는 단계에 있는 분들께 도움이 될 것 같아서 아래에 간략하게 정리해보려고 합니다. 다시 한 번 말씀드리지만, 이 글을 쓰고 있는 제 개인적인 느낀점일 뿐인 점을 감안하고 봐주시길 부탁 드립니다.  😊</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4,"style":{"typography":{"fontSize":"16px"}}} -->
<h4 style="font-size:16px">New Relic 의 단점</h4>
<!-- /wp:heading -->

<!-- wp:list {"style":{"typography":{"fontSize":"16px"}}} -->
<ul style="font-size:16px"><li>애플리케이션에서 의존성으로 설치하는 APM agent 와는 별개로 infrastructure agent 를 설치해야했으며(소스 코드로 관리하기가 다소 번거로운 점), EC2 로 운용하는 경우 agent 버전 업데이트, 설정 변경 등 필요하면 AMI 를 새로 생성하는 작업 등 관리 포인트가 증가했습니다.<ul><li>애플리케이션 서버의 로그를 New Relic 으로 전송하기 위해 별도의 Log forwarder 도 설정을 해줘야만 했던 점도 불편한 점이었습니다.<ul><li>2022년 5월 이후 애플리케이션 서버 로그는 최신 버전의 APM agent 를 의존성으로 추가하는 것만으로 자동으로 수집이 되게 업데이트 된 것을 확인하긴 했습니다.</li></ul></li></ul></li><li>서버에 설치된 보안 프로그램(trend micro 사의 deep security) 또는 aws-ssm-agent 프로세스와의 충돌 이슈로 인해 트래픽이 적은데도 CPU 100% 이슈가 생기는 EC2 들이 가끔 발생했습니다. deep security 의 특정 rule 때문에 발생하는 것인지, New Relic 의 infrastructure agent 작동 방식 때문에 발생하는 것인지 정확한 진단이 어려웠습니다. 하지만 이런 일이 생길 때마다 적극적으로 지원해주시기 때문에 큰 걱정은 하지 않지만, 정확한 원인 진단은 잘 되지 않았기 때문에 아쉬움이 생기긴 했습니다.</li><li>NRQL(New Relic Query Language) 을 학습해야 활용도가 매우 커지는데, 학습 곡선의 초반부 기울기가 낮습니다.<ul><li>즉, NRQL 을 일정 수준 이상 학습하기 전까지는 잘 활용하기가 어렵습니다.</li><li>학습 곡선은 가로축이 시간/노력/누적 경험수이고, 세로축이 달성도, 성취, 습득 정도인 곡선입니다. 기울기가 낮다는 의미가 초반에는 들이는 노력에 비해 일정 수준 이상 학습(성취)되기 까지 시간이 오래 걸린다는 의미입니다.</li></ul></li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":5,"style":{"typography":{"fontSize":"16px"}}} -->
<h5 style="font-size:16px">New Relic 의 장점</h5>
<!-- /wp:heading -->

<!-- wp:paragraph {"style":{"typography":{"fontSize":"16px"}}} -->
<p style="font-size:16px">여기 나열한 것들은 New Relic 만의 장점은 아닐 것입니다. 그렇지만, 연동부터 운영까지 해보며 장점으로 느껴진 부분들을 정리해보았습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:list {"style":{"typography":{"fontSize":"16px"}}} -->
<ul style="font-size:16px"><li>애플리케이션의 의존성으로 APM agent 를 추가하기만 하면 각종 지표를 손쉽게 확인할 수 있습니다.</li><li>New Relic 의 여러 리소스들(eg. Alert)을 생성/수정/관리를 API, terraform 모듈로 제공해주고 있어 한 번 구성해놓으면 편리합니다.</li><li>원하는 데이터를 보기 위한 dashboard 를 자유자재로 만들 수 있습니다.</li><li>Service Map 을 쉽게 확인할 수 있습니다.</li><li>SRE 를 위한 SLI/SLO 정의가 쉽고 한 눈에 보기 쉬운 페이지를 제공합니다.<ul><li>이 기능은 최근에 업데이트 된 것으로 알고 있는데, 하나씩 추가해보고 있습니다. SLI/SLO 설정 및 대시보드를 만들기 위해 자체적으로 개발을 해야하나 고민을 하던 찰나에 이 기능을 발견해서 써보고 있는데, 아직까지는 만족스럽습니다.</li></ul></li><li>제품 업데이트가 빠르고 많습니다.<ul><li>실제로 작년에 처음 사용을 본격적으로 시작할 때를 떠올려보면 지금은 정말 많은 기능 추가/개선이 생겼음을 느낍니다.</li></ul></li><li>브라우저 및 모바일 애플리케이션에 대해서도 모니터링이 가능합니다.<ul><li>하지만 리멤버에서는 아직 이 장점을 잘 활용하고 있지는 않습니다.</li></ul></li><li>Synthetics 를 활용하여 실제 사용자가 사용하는 시나리오대로 테스트를 구성하고 원할 때 테스트가 실행되도록 하여 사용자가 실제 문제를 겪기 전에 사전에 개발자들이 문제를 파악할 수 있습니다. 이 또한 아직 리멤버에서는 잘 활용하고 있지 않습니다.</li></ul>
<!-- /wp:list -->

<!-- wp:image {"align":"center","id":3011,"width":678,"height":409,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large is-resized"><a href="https://blog.dramancompany.com/wp-content/uploads/2022/06/image-8.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2022/06/image-8-1024x617.png" alt="" class="wp-image-3011" width="678" height="409"/></a><figcaption>New Relic 에서 자동으로 만들어 준 Service Map 중 하나</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>이것으로 리멤버에서는 어떻게 모니터링을 하고 있는지에 대해 소개드리는 글을 마치겠습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>개인적으로 아직도 모니터링이 필요한데 하지 않고 있는 영역도 존재하고, 현재 모니터링 시스템을 더 잘 활용할 수 있는 여지가 한참 남아있다고 생각합니다. 그러나 이 일은 혼자 또는 일부 구성원들의 의지만으로는 잘 되기 어려울 것이라고 생각하기 때문에, 같은 뜻을 가지고 함께 해주실 동료분이 매우 중요합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>여느 대다수 회사 기술 블로그 포스트들의 결론이 그러하듯 저 또한 채용 홍보를 함으로써 마무리 지으려고 합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>현재 저희 상황을 최대한 자세하게 공유드림으로써 "이거 이렇게 하는 거 아닌데.." 라고 생각하시거나 🤣  "내 경험을 기반으로 기여할 수 있는 것이 많겠다" 😮  와 같은 생각을 가지신 분들께서 저희 리멤버에 합류해주시기를 간절히 기원합니다! 🙏🙏🙏</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><a href="https://hello.remember.co.kr/" target="_blank" rel="noreferrer noopener">리멤버팀에 합류하세요!!!</a></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>긴 글 끝까지 읽어주셔서 감사합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2967</wp:post_id>
		<wp:post_date><![CDATA[2022-06-21 16:47:32]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-06-21 07:47:32]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-06-21 17:27:14]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-06-21 08:27:14]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[how-remember-monitors]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="aws"><![CDATA[AWS]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[Rails]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="post_tag" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
		<category domain="category" nicename="develop"><![CDATA[Tech]]></category>
		<category domain="post_tag" nicename="%eb%a6%ac%eb%a9%a4%eb%b2%84"><![CDATA[리멤버]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle_flag]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729538008;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:2174;}i:1;a:1:{s:2:"id";i:312;}i:2;a:1:{s:2:"id";i:1850;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[24]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_single_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:23:{s:8:"subtitle";s:0:"";s:6:"format";s:8:"standard";s:5:"video";s:0:"";s:7:"gallery";s:0:"";s:11:"source_name";s:0:"";s:10:"source_url";s:0:"";s:8:"via_name";s:0:"";s:7:"via_url";s:0:"";s:17:"override_template";s:1:"0";s:8:"override";a:1:{i:0;a:32:{s:8:"template";s:1:"1";s:18:"single_blog_custom";s:0:"";s:8:"parallax";s:1:"1";s:10:"fullscreen";s:1:"1";s:6:"layout";s:13:"right-sidebar";s:7:"sidebar";s:15:"default-sidebar";s:14:"second_sidebar";s:15:"default-sidebar";s:14:"sticky_sidebar";s:1:"1";s:14:"share_position";s:3:"top";s:17:"share_float_style";s:16:"share-monocrhome";s:18:"show_share_counter";s:1:"1";s:17:"show_view_counter";s:1:"1";s:13:"show_featured";s:1:"1";s:14:"show_post_meta";s:1:"1";s:16:"show_post_author";s:1:"1";s:22:"show_post_author_image";s:1:"1";s:14:"show_post_date";s:1:"1";s:16:"post_date_format";s:7:"default";s:23:"post_date_format_custom";s:5:"Y/m/d";s:18:"show_post_category";s:1:"1";s:22:"show_post_reading_time";s:1:"0";s:21:"post_reading_time_wpm";s:3:"300";s:16:"show_zoom_button";s:1:"0";s:20:"zoom_button_out_step";s:1:"2";s:19:"zoom_button_in_step";s:1:"3";s:13:"show_post_tag";s:1:"1";s:19:"show_prev_next_post";s:1:"1";s:15:"show_popup_post";s:1:"1";s:17:"number_popup_post";s:1:"1";s:15:"show_author_box";s:1:"0";s:17:"show_post_related";s:1:"0";s:24:"show_inline_post_related";s:1:"0";}}s:19:"override_image_size";s:1:"0";s:14:"image_override";a:1:{i:0;a:2:{s:26:"single_post_thumbnail_size";s:8:"crop-500";s:24:"single_post_gallery_size";s:8:"crop-500";}}s:13:"trending_post";s:1:"0";s:22:"trending_post_position";s:4:"meta";s:19:"trending_post_label";s:8:"Trending";s:14:"sponsored_post";s:1:"0";s:20:"sponsored_post_label";s:12:"Sponsored by";s:19:"sponsored_post_name";s:0:"";s:18:"sponsored_post_url";s:0:"";s:26:"sponsored_post_logo_enable";s:1:"0";s:19:"sponsored_post_logo";s:0:"";s:19:"sponsored_post_desc";s:0:"";s:10:"disable_ad";s:1:"0";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:2:"id";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[30]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_estimated-reading-time-minutes]]></wp:meta_key>
		<wp:meta_value><![CDATA[16]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[리멤버]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
		<wp:meta_value><![CDATA[리멤버는 서비스 모니터링을 어떻게 하고 있는지에 대해서 소개하려고 합니다.]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[63]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[2975]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[8]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_37c3cb98f376bf4ed7db31bcd50dd039]]></wp:meta_key>
		<wp:meta_value><![CDATA[<blockquote class="wp-embedded-content" data-secret="OFgYErXEBz"><a href="https://blog.dramancompany.com/2015/12/%ec%95%88%ec%a0%95%ec%a0%81%ec%9d%b8-%ec%84%9c%eb%b9%84%ec%8a%a4-%ec%9a%b4%ec%98%81%ec%9d%84-%ec%9c%84%ed%95%9c-%ec%84%9c%eb%b2%84-%eb%aa%a8%eb%8b%88%ed%84%b0%eb%a7%81-1/">안정적인 서비스 운영을 위한 서버 모니터링 #1</a></blockquote><iframe class="wp-embedded-content" sandbox="allow-scripts" security="restricted" style="position: absolute; clip: rect(1px, 1px, 1px, 1px);" title="&#8220;안정적인 서비스 운영을 위한 서버 모니터링 #1&#8221; &#8212; DRAMA&amp;COMPANY" src="https://blog.dramancompany.com/2015/12/%ec%95%88%ec%a0%95%ec%a0%81%ec%9d%b8-%ec%84%9c%eb%b9%84%ec%8a%a4-%ec%9a%b4%ec%98%81%ec%9d%84-%ec%9c%84%ed%95%9c-%ec%84%9c%eb%b2%84-%eb%aa%a8%eb%8b%88%ed%84%b0%eb%a7%81-1/embed/#?secret=ApEKP75wZS#?secret=OFgYErXEBz" data-secret="OFgYErXEBz" width="500" height="282" frameborder="0" marginwidth="0" marginheight="0" scrolling="no"></iframe>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_time_37c3cb98f376bf4ed7db31bcd50dd039]]></wp:meta_key>
		<wp:meta_value><![CDATA[1655800037]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_8648e5b5ead921231f5abf783c04a5d9]]></wp:meta_key>
		<wp:meta_value><![CDATA[<blockquote class="wp-embedded-content" data-secret="deNKlaTmFA"><a href="https://blog.dramancompany.com/2015/12/%ec%95%88%ec%a0%95%ec%a0%81%ec%9d%b8-%ec%84%9c%eb%b9%84%ec%8a%a4-%ec%9a%b4%ec%98%81%ec%9d%84-%ec%9c%84%ed%95%9c-%ec%84%9c%eb%b2%84-%eb%aa%a8%eb%8b%88%ed%84%b0%eb%a7%81-2/">안정적인 서비스 운영을 위한 서버 모니터링 #2</a></blockquote><iframe class="wp-embedded-content" sandbox="allow-scripts" security="restricted" style="position: absolute; clip: rect(1px, 1px, 1px, 1px);" title="&#8220;안정적인 서비스 운영을 위한 서버 모니터링 #2&#8221; &#8212; DRAMA&amp;COMPANY" src="https://blog.dramancompany.com/2015/12/%ec%95%88%ec%a0%95%ec%a0%81%ec%9d%b8-%ec%84%9c%eb%b9%84%ec%8a%a4-%ec%9a%b4%ec%98%81%ec%9d%84-%ec%9c%84%ed%95%9c-%ec%84%9c%eb%b2%84-%eb%aa%a8%eb%8b%88%ed%84%b0%eb%a7%81-2/embed/#?secret=gmM1xARbqM#?secret=deNKlaTmFA" data-secret="deNKlaTmFA" width="500" height="282" frameborder="0" marginwidth="0" marginheight="0" scrolling="no"></iframe>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_time_8648e5b5ead921231f5abf783c04a5d9]]></wp:meta_key>
		<wp:meta_value><![CDATA[1655800037]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>12602</wp:comment_id>
			<wp:comment_author><![CDATA[tom]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[ekagud@naver.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.20.192]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2022-06-21 22:27:40]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2022-06-21 13:27:40]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[멋져요!!
다른 회사는 어떻게 하나 궁금했는데 자세하게 적어주셔서 이해가 잘 됐습니다]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1655818060.153068;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1655892716.197091;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"hb.lee";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>12603</wp:comment_id>
			<wp:comment_author><![CDATA[이 한별]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[hanbyul.lee@dramancompany.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.9.26]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2022-06-22 19:15:46]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2022-06-22 10:15:46]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[tom님, 댓글 감사합니다! :D]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>12602</wp:comment_parent>
			<wp:comment_user_id>24</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1655892946.990121;s:5:"event";s:9:"check-ham";s:4:"user";s:6:"hb.lee";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>12735</wp:comment_id>
			<wp:comment_author><![CDATA[노상래]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[nsr@smartscore.kr]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.5.137]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-02-01 13:09:04]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-02-01 04:09:04]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[친절한 설명 감사합니다!!!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1675224544.954925;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1675250159.376527;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"hb.lee";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>12737</wp:comment_id>
			<wp:comment_author><![CDATA[이 한별]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[hanbyul.lee@dramancompany.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.24.209]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-02-01 20:21:15]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-02-01 11:21:15]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[상냥한 답글 남겨주셔서 감사합니다!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>12735</wp:comment_parent>
			<wp:comment_user_id>24</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1675250475.464635;s:5:"event";s:9:"check-ham";s:4:"user";s:6:"hb.lee";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>12806</wp:comment_id>
			<wp:comment_author><![CDATA[이금춘]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[keumchoon.lee@hanatour.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.22.106]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-06-13 10:09:12]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-06-13 01:09:12]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[예전에 데이터독 PoC 진행할 때 참고했던 문서인데 최근에 NewRelic PoC 도 진행준비하면서 또 참고하게 되는 문서네요..
정리 잘 된 문서 공유 감사합니다.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1686618552.132619;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1686896749.471985;s:5:"event";s:15:"status-approved";s:4:"user";s:11:"jongtaek.oh";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>12807</wp:comment_id>
			<wp:comment_author><![CDATA[이금춘]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[keumchoon.lee@hanatour.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.22.106]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-06-13 10:12:53]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-06-13 01:12:53]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[또 한번 참고하게 되네요..감사합니다.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1686618773.290945;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1687341011.140931;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"hb.lee";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[지식 그래프를 이용한 인재 추천 시스템]]></title>
		<link>https://blog.dramancompany.com/2022/06/kgat%ec%9d%84-%ec%9d%b4%ec%9a%a9%ed%95%9c-%ec%9d%b8%ec%9e%ac-%ec%b6%94%ec%b2%9c-%ec%8b%9c%ec%8a%a4%ed%85%9c/</link>
		<pubDate>Wed, 15 Jun 2022 05:01:51 +0000</pubDate>
		<dc:creator><![CDATA[horimpark]]></dc:creator>
		<guid isPermaLink="false">https://blog.dramancompany.com/?p=2978</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>안녕하세요. 빅데이터센터 AI Lab 박호림입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>저희 AI Lab에서는 리멤버 유저들에게 WoW한 경험을 주기 위해 Recommendation System, Ranking Model, Document Understanding, NLP, GNN 등 다양한 연구를 진행하고 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>오늘은 지식그래프 기반의 모델인 KGAT(Knowledge graph attention network)을 이용한 인재 추천 시스템 연구에 대한 경험을 공유드리고자 합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>1장과 2장에서는 추천시스템과 지식그래프의 배경지식에 대해 설명드리고, 3장과 4장에서는 저희 데이터를 이용해 user-item, knowledge graph 생성한 경험과 이를 이용한 KGAT 학습 결과를 공유드리도록 하겠습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":1} -->
<h1>1. Introduction</h1>
<!-- /wp:heading -->

<!-- wp:heading -->
<h2>1.1 추천시스템이란?</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>  유저의 행동, 선호 등 다양한 이력을 기반으로, user-item 간의 관계를 찾아 선호 아이템을 예측하는 것을 말합니다. 저희 드라마앤컴퍼니에서도 리멤버를 사용하는 유저의 행동과 로그 기반으로한 광고 추천시스템, 리쿠르터가 찾는 적합한 인재을 추천하는 시스템을 연구하고 개발하고 있습니다. 다음 두 가지 방법은 전통적인 추천시스템 알고리즘입니다. 일반적으로 각각 사용 가능한 데이터의 형태나 사용 목적에 따라 적합한 방법론을 선택하여 추천시스템을 만듭니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>1.2 Collaborative Filtering</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>  Collaborative Filtering(CF, 협업 필터링)[1] 은 많은 유저들로부터 모은 선호 정보들을 기반으로 다른 사람의 선호를 예측하는 방법으로, 유저 A가 유저 B와 어떠한 이슈에 대해 비슷한 의견을 갖는다면, 다른 이슈에 대해서도 비슷한 의견을 가질 확률이 높을 것이라는 가정에 기반을 둡니다. 집단 지성을 기반으로 예측하는 것으로 볼 수 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-2989" style="width: 1000px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/06/그림1-1.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center","fontSize":"small"} -->
<p class="has-text-align-center has-small-font-size"><strong>그림1. Example of Collaborative Filtering[2]  </strong></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>  CF의 가장 기본적인 개념을 그림 1을 보며 간략히 설명드리겠습니다. 왼쪽 그림의 유저 기반 CF의 경우 user 1이 item 1, 3, 4를 선호하고 user 3이 item 3, 4를 선호한다면, user 3은 item 1도 선호할 것이다라는 가정으로 추천이 이루어집니다. 오른쪽 그림의 아이템 기반 CF의 경우 item 3을 user 1, 3이 선호한다면, user 3 기준으로 동일한 아이템을 선호한 사용자인 user 1은 item 1도 선호하므로, user 3 또한 item 1도 선호할 것이다라는 가정으로 추천이 이루어집니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>1.3 Content-based Filtering</h2>
<!-- /wp:heading -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-2982" style="width: 800px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/06/그림2.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center","fontSize":"small"} -->
<p class="has-text-align-center has-small-font-size"><strong>그림2. Example of Content-based Filtering  </strong></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>  유저가 특정 아이템을 선호할 경우 그 아이템과 비슷한 컨텐츠를 가지는 다른 아이템을 추천해주는 방법입니다. 유저의 다른 정보, 특징을 제외하고 오로지 아이템의 특징만으로 추천하는 방법입니다. 그림 2를 보며 설명드리자면, user A는 Movie A를, user B와 C는 Movie B를 선호합니다. user A는 Movie A를 선호하기에 같은 장르인 Movie C를 선호할 것이다라는 가정으로 추천이 이루어집니다. Content-Based Filtering을 위해서는 필수적으로 Item에 대한 특징, 정보 등의 데이터가 필요합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":1} -->
<h1>2. Recommendation based Knowledge graph</h1>
<!-- /wp:heading -->

<!-- wp:heading -->
<h2>2.1 GNN</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>  GPU 및 하드웨어의 성능 향상으로 인한 머신러닝, 딥러닝의 발전이 추천시스템에도 적용되기 시작하였고 위 방법론 이후 하이브리드, 머신러닝, 딥러닝 등을 활용한 방법론들이 제안되고 있습니다. 그 중 최근 들어 Graph Neural Network (GNN)[3] 을 통한 추천시스템이 주목받고 발전하고 있으며, 많은 벤치마크 데이터셋을 기준으로 새로운 SOTA 성능을 보여주고 있습니다. GNN은 대표적인 귀납식 임베딩으로 연결 관계와 neighborhood node들의 상태를 이용해 각 node의 상태를 업데이트하는, node들을 벡터로 표현하는 Node Embedding입니다[4]. 즉 그래프를 표현하는 node들을 임베딩하기 위해 한 node에 대한 neighborhood node들의 정보, 상태를 aggregation하는 과정을 거치고 이를 모델에 적용하는 방식입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>  graph는 node와 edge로 연결되있는 구조로 edge를 통해 node 간의 관계를 파악할 수 있습니다. 이러한 특징으로 인해 소셜 네트워크, 분자구조, user-item 간 관계 등의 구조를 표현하는데 용이한 구조로 볼 수 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>2.2 Knowledge graph</h2>
<!-- /wp:heading -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-2995" style="width: 800px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/06/스크린샷-2022-06-15-오전-11.24.36.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center","fontSize":"small"} -->
<p class="has-text-align-center has-small-font-size"><strong>그림3. Example of Knowledge graph  </strong></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>  서로 관계가 있는 대상(entity)들 사이의 관계(relation)를 모아 놓으면 이것이 지식(knowledge)이 되는데, 이를 컴퓨터 과학에서 말하는 graph구조로 표현한 것이 knowledge graph라고 할 수 있을 것입니다. 기존 그래프와 비교를 해보면 node와 edge가 각각 entity, relation으로 바꾸어 생각하시면 됩니다. 따라서 각 relation이 triple 구조 (head entity, relation, tail entity)의 형태로 표현되어 head와 tail간의 특정 관계를 암시 합니다. 위 그림3으로 예시를 들면 '소크라테스는  플라톤에게 영향을 주었다는 관계를 (socrates, influenced, plato) 구조로 표현할 수 있습니다. 그래프로 표현함으로써 대상 간의 관계와 의미를 구조적으로 표현할 수 있습니다. 지식그래프를 임베딩화하고 추천시스템에 적용하면, user나 item에 대한 side information을 포함할 수 있고, 각 entity별로 많은 표현력을 가질 수 있어 추천 시스템의 성능 향상에 도움이 된다고 알려져 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>2.3 Recommendation and Knowledge graph</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>  지식 그래프라는 개념을 추천시스템에 도입하게 되면 기존의 Collaborative Filtering, Content based Filtering의 단점들을 보완한 추천시스템을 탄생시킬 수 있습니다. CF는 user-item 관계를 사용하고, Content based Filtering은 item-attribute 관계만을 사용하여 추천을 합니다. 지식 그래프는 이 두가지 관계를 모두 표현이 가능하기에 지식그래프 임베딩을 활용한 추천시스템으로 두가지 단점을 모두 보완한 추천시스템 개발이 가능합니다. 지식그래프를 활용한 딥러닝 추천 모델 중 대표적인 모델로는 KGCN(Knowledge graph Convolutional Networks)[6], KGAT(Knowledge Graph Attention Netowrk)[7], RippleNet[8] 등이 존재합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>  다음 챕터에서는 저희가 실험한 지식그래프 기반 추천 모델 중 하나인 KGAT(Knowledge Graph Attention Netowrk)을 소개하고자 합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":1} -->
<h1>3. KGAT</h1>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>KGAT(Knowledge Graph Attention Network)은 graph기반 추천시스템에서 Knowledge graph와 Attention 메커니즘을 적용시킨 모델입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-2985" style="width: 800px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/06/그림4.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center","fontSize":"small"} -->
<p class="has-text-align-center has-small-font-size"><strong>그림4. Example of Knowledge graph  </strong></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>  Collaborative Filtering 은 현재 많은 산업에서 효율적이고 강력한 추천 성능을 제공하지만 user’s feature, context 등의 부가적인 정보를 모델링할 수 없는 단점이 존재합니다. 그래서 KGAT에서는 CF에 KG를 적용하여 이를 해결하고자 하였습니다. 위 그림4은 CKG에 대한 예시 그림이며, user-item 간의 edge가 존재하며, item에 대한 entity들이 KG로 표현되고 있습니다. 즉 KG와 user-item graph와의 하이브리드 구조를 갖으며 이를 CKG(Collaborative Knowledge graph)라고 합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>3.1 Methodology</h2>
<!-- /wp:heading -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-2986" style="width: 1000px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/06/그림5.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center","fontSize":"small"} -->
<p class="has-text-align-center has-small-font-size"><strong>그림5. KGAT 모델 전체 구조</strong></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>  위 그림5와 같이, KGAT의 모델 학습은 1) Embedding, 2) Attention, 3) Prediction 세 단계로 구성됩니다. 1) Embedding layer에서 TranR 방법론을 사용하여 entity와 relation을 백터로 표현하는 pre-train이 이루어집니다. 2) 다음 Attention Embedding Propagation layer에서는 자신과 주변 neighborhood node를 기반으로 각 node의 임베딩을 새로 학습하며, 이 과정에서 Attention 메커니즘을 통해 각 이웃들을 정보를 어느정도의 가중치로 가져올지 정합니다. 모든 neighborhood node를 대상으로 attention score를 계산하고 neighborhood node로부터 information propagation을 진행합니다. 그리고 high-order propagation을 위해 aggregation을 반복해서 진행합니다. 3) 최종적으로 high-order를 통해 나온 여러 개의 벡터들을 concat 후 user vector, item vector의 내적으로 user와 item의 유사도를 구할 수 있게 됩니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":1} -->
<h1>4. Experiment</h1>
<!-- /wp:heading -->

<!-- wp:heading -->
<h2>4.1 Knowledge graph, user-item graph Generation</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>  저희의 인재 추천 방식 중 하나는 리쿠르터가 관심을 보인 인재와 유사한 인재를 추천해주는 방식입니다. 이를 위해 인재와 인재가 재직한 회사의 관계를 기존의 CF 모델에서 사용하는 user-item graph로 표현했습니다. 그런데 유저와 회사는 부가적인 정보, 특징을 가지고 있기 때문에 이러한 정보를 활용한다면 더 좋은 추천이 될 것이라 가정하였고, 이를 추천에 활용하기에 KGAT이 적절할 것으로 판단하였습니다. 따라서 인재를 유저 node로, 회사를 아이템 node로 구성하였으며, 인재의 경력에 해당하는 회사를 user-item graph로 구성하었습니다. 인재의 속성인 전공, 업무 스킬, 학력 등을 해당 유저의 relation으로 연결하였고, 회사의 속성인 기업 구분, 산업 분야, 티어 등을 해당 회사의 relation으로 연결하여 knowledge graph를 생성하였습니다. 이러한 구조로 생성하여 리쿠르터가 원하는 인재와 비슷한 경력을 가진 인재를 리크루터에게 추천해주기 위함입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-2987" style="width: 800px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/06/그림6.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center","fontSize":"small"} -->
<p class="has-text-align-center has-small-font-size"><strong>그림6. 인재 추천을 위한 지식그래프, user-item 설계</strong></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>4.2 Result</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>  학습데이터와 테스트데이터를 나누는 방법으로는 user-Item graph에서 랜덤하게 임의의 edge를 삭제하여 테스트 데이터를 준비하였습니다. 이에 대한 metric으로 Recall을 사용하였으며, 모델이 특정 유저의 경력인 회사를 예측하는 것에 대한 Recall metric을 측정하였습니다. Recall을 사용한 이유는 리쿠르터에게 추천하는 인재가 잘못된 인재를 추천해주면 리쿠르터에게 모델의 신뢰도는 크게 하락할 것이기에 해당 metric으로 평가를 진행하였습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>  밑의 그림 7을 보시면 첫번째 시도한 학습 결과입니다. Recall의 최대 값이 0.01 정도에 못미치는 값이며, 학습이 제대로 진행되지 않는 모습을 볼 수 있습니다. 이러한 결과를 분석한 결과, 두가지 주요 문제점이 존재했습니다. 첫째는 user-item graph와 knowledge graph의 imbalance입니다. 저희가 추천을 적용하는 직무 카테고리가 19개 이상 존재하는데, 직무에 따른 스킬, 전공 등 너무 많은 entity들이 존재하며, user-item 그래프에 비해 불균형한 CKG를 형성되어 있습니다. 두번째로는 user-item graph 데이터 자체가 작아 sparsity한 문제를 피해갈 수 없었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-2988" style="width: 700px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/06/그림7.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center","fontSize":"small"} -->
<p class="has-text-align-center has-small-font-size"><strong>그림7. 1차 학습 결과 Recall</strong></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p> 그림 8은 직무 카테고리별로 모델을 나누어 학습한 결과입니다. 여러 논문에서 벤치마크로 사용되는 movielens나 yelp 등 public dataset과 다르게, CKG로 표현 시 저희 데이터는 user-item에 대한 interaction은 더 적고, item-attribute에 대한 interaction은 더 많은 부분에 대한 불균형한 문제가 존재했습니다 . 이러한 문제로 인한 영향을 완화하기 위해, 직무 칵테고리별로 모델을 나누어 학습을 진행하였습니다. 보유하고 있는 프로필들의 직무별 데이터 크기에 따라 모델의 성능이 각기 다르지만 주요 직무들에 대한 모델의 성능들은 Recall 값으로 0.8 이상 결과를 얻었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-2990" style="width: 1000px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/06/그림8.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center","fontSize":"small"} -->
<p class="has-text-align-center has-small-font-size"><strong>그림8. 2차 학습 결과 Recall</strong>, <strong>nDCG</strong></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":1} -->
<h1>5. Conclusion</h1>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>이번 포스팅을 통해 간략하게 전반적인 추천시스템 방법론과, GNN, 지식그래프 기반 추천 모델을 살펴보았습니다. 그리고 KGAT 모델을 학습해보고 결과를 확인해보았습니다. 저희 데이터가 KG로 표현될 수 있고, 이 KG를 인재 추천 문제 해결에 적용하기에 KGAT이 이론적으로 적합한 것 같습니다. 다만 graph로 표현할 시 data imbalance, sparsity 문제가 존재하며, 추가적으로 꽤나 많은 GPU resource를 필요로 합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>추가적으로 드라마앤컴퍼니는 꾸준히 최신연구를 활용하여 인재 추천 서비스, 광고 추천 서비스, 명함 인식 등 다양한 연구를 수행하고 있습니다. 차후 AI Lab 에서 연구하는 다른 분야를 소개하고 공유하며 찾아뵙도록 하겠습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>궁금하신 사항은 댓글을 통해 문의해주시면 감사합니다. 긴 글 읽어주셔서 감사합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":1} -->
<h1>Reference</h1>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>[1] Schafer, J. Ben, et al. "Collaborative filtering recommender systems."&nbsp;<em>The adaptive web</em> . Springer, Berlin, Heidelberg, 2007. 291-324.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>[2]&nbsp;<a href="https://medium.com/@toprak.mhmt/collaborative-filtering-3ceb89080ade"></a><a href="https://www.themarketingtechnologist.co/building-a-recommendation-engine-for-geek-setting-up-the-prerequisites-13/">https://www.themarketingtechnologist.co/building-a-recommendation-engine-for-geek-setting-up-the-prerequisites-13/</a></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>[3] Scarselli, Franco, et al. "The graph neural network model."&nbsp;<em>IEEE transactions on neural networks</em> 20.1 (2008): 61-80.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>[4] <a href="https://towardsdatascience.com/an-introduction-to-graph-neural-network-gnn-for-analysing-structured-data-afce79f4cfdc"></a><a href="https://towardsdatascience.com/an-introduction-to-graph-neural-network-gnn-for-analysing-structured-data-afce79f4cfdc">https://towardsdatascience.com/an-introduction-to-graph-neural-network-gnn-for-analysing-structured-data-afce79f4cfdc</a></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>[5] Ehrlinger, Lisa, and Wolfram Wöß. "Towards a definition of knowledge graphs."&nbsp;<em>SEMANTiCS (Posters, Demos, SuCCESS)</em>&nbsp;48.1-4 (2016): 2.APA</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>[6] Wang, Hongwei, et al. "Knowledge graph convolutional networks for recommender systems."&nbsp;<em>The world wide web conference</em>. 2019.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>[7] Wang, Xiang, et al. "Kgat: Knowledge graph attention network for recommendation."&nbsp;<em>Proceedings of the 25th ACM SIGKDD international conference on knowledge discovery &amp; data mining</em>. 2019.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>[8] Wang, Hongwei, et al. "Ripplenet: Propagating user preferences on the knowledge graph for recommender systems."&nbsp;<em>Proceedings of the 27th ACM international conference on information and knowledge management</em>. 2018.</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2978</wp:post_id>
		<wp:post_date><![CDATA[2022-06-15 14:01:51]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-06-15 05:01:51]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-06-15 14:49:10]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-06-15 05:49:10]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[kgat%ec%9d%84-%ec%9d%b4%ec%9a%a9%ed%95%9c-%ec%9d%b8%ec%9e%ac-%ec%b6%94%ec%b2%9c-%ec%8b%9c%ec%8a%a4%ed%85%9c]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="ailab"><![CDATA[AI Lab.]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle_flag]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729521962;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:2847;}i:1;a:1:{s:2:"id";i:3343;}i:2;a:1:{s:2:"id";i:2722;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[57]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_single_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:23:{s:8:"subtitle";s:0:"";s:6:"format";s:8:"standard";s:5:"video";s:0:"";s:7:"gallery";s:0:"";s:11:"source_name";s:0:"";s:10:"source_url";s:0:"";s:8:"via_name";s:0:"";s:7:"via_url";s:0:"";s:17:"override_template";s:1:"0";s:8:"override";a:1:{i:0;a:32:{s:8:"template";s:1:"1";s:18:"single_blog_custom";s:0:"";s:8:"parallax";s:1:"1";s:10:"fullscreen";s:1:"1";s:6:"layout";s:13:"right-sidebar";s:7:"sidebar";s:15:"default-sidebar";s:14:"second_sidebar";s:15:"default-sidebar";s:14:"sticky_sidebar";s:1:"1";s:14:"share_position";s:3:"top";s:17:"share_float_style";s:16:"share-monocrhome";s:18:"show_share_counter";s:1:"1";s:17:"show_view_counter";s:1:"1";s:13:"show_featured";s:1:"1";s:14:"show_post_meta";s:1:"1";s:16:"show_post_author";s:1:"1";s:22:"show_post_author_image";s:1:"1";s:14:"show_post_date";s:1:"1";s:16:"post_date_format";s:7:"default";s:23:"post_date_format_custom";s:5:"Y/m/d";s:18:"show_post_category";s:1:"1";s:22:"show_post_reading_time";s:1:"0";s:21:"post_reading_time_wpm";s:3:"300";s:16:"show_zoom_button";s:1:"0";s:20:"zoom_button_out_step";s:1:"2";s:19:"zoom_button_in_step";s:1:"3";s:13:"show_post_tag";s:1:"1";s:19:"show_prev_next_post";s:1:"1";s:15:"show_popup_post";s:1:"1";s:17:"number_popup_post";s:1:"1";s:15:"show_author_box";s:1:"0";s:17:"show_post_related";s:1:"0";s:24:"show_inline_post_related";s:1:"0";}}s:19:"override_image_size";s:1:"0";s:14:"image_override";a:1:{i:0;a:2:{s:26:"single_post_thumbnail_size";s:8:"crop-500";s:24:"single_post_gallery_size";s:8:"crop-500";}}s:13:"trending_post";s:1:"0";s:22:"trending_post_position";s:4:"meta";s:19:"trending_post_label";s:8:"Trending";s:14:"sponsored_post";s:1:"0";s:20:"sponsored_post_label";s:12:"Sponsored by";s:19:"sponsored_post_name";s:0:"";s:18:"sponsored_post_url";s:0:"";s:26:"sponsored_post_logo_enable";s:1:"0";s:19:"sponsored_post_logo";s:0:"";s:19:"sponsored_post_desc";s:0:"";s:10:"disable_ad";s:1:"0";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:2:"id";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_estimated-reading-time-minutes]]></wp:meta_key>
		<wp:meta_value><![CDATA[10]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[114]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_template_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[wp-post]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_version]]></wp:meta_key>
		<wp:meta_value><![CDATA[3.6.1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[2985]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>12859</wp:comment_id>
			<wp:comment_author><![CDATA[박수현]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[porori0110@naver.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.17.138]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-09-04 13:27:38]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-09-04 04:27:38]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[안녕하세요 남겨주신 글 잘 보았습니다. Knowledge graph, user-item graph Generation 부분을 진행하실 때 혹시 참고하신 코드가 있으실까요?
https://github.com/xiangwang1223/knowledge_graph_attention_network 코드를 참고하고 있는데, 데이터를 amazon-book 데이터가 아닌 다른 데이터로 실험을 하려다 보니,
아래 데이터 셋들을 구성하는데 어려움이 있어서 문의드리고자 합니다^^

entity_list.txt
item_list.txt
kg_final.txt.zip
relation_list.txt
test.txt
train.txt
user_list.txt]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1693801658.374865;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>13309</wp:comment_id>
			<wp:comment_author><![CDATA[김수연]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[ksooyeon3@snu.ac.kr]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.31.148]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-01-27 08:13:10]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-01-26 23:13:10]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[혹시 인재 개발 추천 시스템 구현 코드가 어떻게 되는지 그 프레임이라도 공유해주실 수 있나요?
 인스타 셀러들한테서 상품을 구매한 구매 로그 데이터를 이용해서 셀러에게 적합한 상품을 추천하는 모델을 구현해야하는데, knowlegdge graph를 활용하는 방법에 대한 감이 잘 잡히지 않네요.
사의 속성인 기업 구분, 산업 분야, 티어 등을 해당 회사의 relation으로 잡으셨다 했는데, 논문에서 주어진 이미지에서는 유저에 관련된 entity노드에 연결된 relation은 나타나있지 않고, item 간의 관계를 나타낼 때만 entity노드에 연결되어있는데, 혹시 유저 관련 entity도 따로 적용하여 모델에 적용한 것인지 궁금합니다!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1706310790.444316;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>15403</wp:comment_id>
			<wp:comment_author><![CDATA[임윤정]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[yjim.do@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.21.212]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-07-26 00:43:33]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-07-25 15:43:33]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[안녕하세요.
혹시 해당 연구에 대한 논문이나 깃허브 소스가 공개되어 있을까요?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1721922214.031342;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[아름다운 코드를 향한 함께하는 여정 - Part 1]]></title>
		<link>https://blog.dramancompany.com/2022/08/%ec%95%84%eb%a6%84%eb%8b%a4%ec%9a%b4-%ec%bd%94%eb%93%9c%eb%a5%bc-%ed%96%a5%ed%95%9c-%ed%95%a8%ea%bb%98%ed%95%98%eb%8a%94-%ec%97%ac%ec%a0%95-part-1/</link>
		<pubDate>Thu, 25 Aug 2022 07:05:52 +0000</pubDate>
		<dc:creator><![CDATA[pyeongho]]></dc:creator>
		<guid isPermaLink="false">https://blog.dramancompany.com/?p=3073</guid>
		<description></description>
		<content:encoded><![CDATA[<p><img width="1024" height="682" src="https://blog.dramancompany.com/wp-content/uploads/2022/08/together-9-1024x682.jpg" alt="" loading="lazy" srcset="https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2022/08/together-9-scaled.jpg?resize=1024%2C682&amp;ssl=1 1024w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2022/08/together-9-scaled.jpg?resize=300%2C200&amp;ssl=1 300w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2022/08/together-9-scaled.jpg?resize=768%2C511&amp;ssl=1 768w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2022/08/together-9-scaled.jpg?resize=1536%2C1022&amp;ssl=1 1536w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2022/08/together-9-scaled.jpg?resize=2048%2C1363&amp;ssl=1 2048w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2022/08/together-9-scaled.jpg?resize=750%2C499&amp;ssl=1 750w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2022/08/together-9-scaled.jpg?resize=1140%2C759&amp;ssl=1 1140w" sizes="(max-width: 1024px) 100vw, 1024px">														</p>
<p></p>

<!-- wp:image -->
</p>
<figure><img alt="" /></figure>
<p>
<!-- /wp:image -->

<p></p>
<p></p>

<!-- wp:paragraph -->
</p>
<p>안녕하세요. 리멤버 안드로이드 개발자 김평호 입니다.</p>
<p>
<!-- /wp:paragraph -->

<p></p>
<p></p>

<!-- wp:paragraph -->
</p>
<p>리멤버 안드로이드 코드는 클린아키텍처 + MVP 로 되어 있습니다. 하지만 2016년도의 부터 이어진 코드이다 보니 이전에 작성된 코드와 현재에 작성된 코드가 다른 형태를 보이고 있는 경우가 발생 하고 있었습니다. 새롭게 작성 되는 코드는 PR 을 통해서 점점 비슷한 구조로 작성 되고 있지만 더 명확하게 가는게 좋겠다고 생각하여 구조 개선 여정을 시작 했습니다. 구조개선을 위해서 당시 고민 했던 내용을 공유과 어떤 방법으로 진행 한지를 공유하기 하기 위한 내용의 게시글 입니다. 해당 게시글은 아래의 내용들이 있습니다.</p>
<p>
<!-- /wp:paragraph -->

<p></p>
<p></p>

<!-- wp:list -->
</p>
<ul>
<li>왜 구조 개선을 생각 하게 되었는지에 대한 고민</li>
<li>구조 개선은 어떻게 진행 했는지에 대한 내용</li>
</ul>
<p>
<!-- /wp:list -->

<p></p>
<p></p>

<!-- wp:paragraph -->
</p>
<p>
<!-- /wp:paragraph -->

<p></p>
<p></p>

<!-- wp:heading -->
</p>
<h2>왜 우리는 매주 2시간을 함께 연구 하게 되었는가?</h2>
<p>
<!-- /wp:heading -->

<p></p>
<p></p>

<!-- wp:paragraph -->
</p>
<p><strong>인내하며 타협하며 개발</strong></p>
<p>
<!-- /wp:paragraph -->

<p></p>
<p></p>

<!-- wp:paragraph -->
</p>
<p>타협 :</p>
<p>
<!-- /wp:paragraph -->

<p></p>
<p></p>

<!-- wp:list -->
</p>
<ul>
<li>코드는 클린아키텍처 + MVP 로 개발 되어 있었습니다. 구조 와 패턴이 잘 구현 되고 있고 온보딩 기간의 학습으로 코드에 적응하고 개발하는데는 <strong>큰 </strong>불편함은 없습니다. 코드 리뷰도 기존의 구조 단단하게 하고 유지하는 방향을 가지고 진행 하였습니다. 코드에 적응이 된거라 생각하게 되었고 그 적응 잘못되었다고 생각 하진 않고 있었습니다. 유지보수가 어렵지 않고 새로운 기능 개발하는 속도도 문제 없었습니다.</li>
</ul>
<p>
<!-- /wp:list -->

<p></p>
<p></p>

<!-- wp:paragraph -->
</p>
<p>
<!-- /wp:paragraph -->

<p></p>
<p></p>

<!-- wp:paragraph -->
</p>
<p>인내:</p>
<p>
<!-- /wp:paragraph -->

<p></p>
<p></p>

<!-- wp:list -->
</p>
<ul>
<li>학습에 필요한 샘플을 보면 거의 대부분이 MVVM 으로 작성 되어 있어 과거(MVP)와 현재(MVVM) 라고 생각 될때가 많았습니다. 파트원 모두 MVVM 으로 과제를 진행 해 주셔서 개념과 사용에 대해서 알고 있지만 장시간 MVP 코드를 보다 보니 MVVM 을 유니콘 처럼 생각 하는 느낌을 많이 받게 되었습니다.</li>
<li>파트시간에 안드로이드 기술에 대한 다양한 학습 시간을 만들면서 문제가 있다고 생각을 전환 하였습니다. 파트에서는 매주 2시간정도의 시간을 이용해서 새로운 기술 또는 기존에 사용하는 기술을 깊게 학습하고 있습니다. 새로운 기술은 이론 학습, 샘플 생성, 리멤버 코드에 적용후 장단점 파악 하는 형태로 진행 하고 있습니다. 리멤버 코드에 학습한 기술이 적용되지 않고 학습으로 끝나는 경우가 발생하기 시작 했습니다.</li>
<li>Dagger 사용 에 대한 어색함은 처음 부터 있었지만 사용 하다 보면 편하다는 이유로 같은 방식으로 사용하고 있습니다. Dagger 처음 학습 할때와 실제 리멤버 코드에서 사용은 다르게 보입니다.</li>
<li>요구 조건 변화에 유연하게 대응하고 재 사용을 늘리기 위해서 클린 아키텍처와 MVP 는 발전 시키며 개발을 진행 하고 있습니다.</li>
</ul>
<p>
<!-- /wp:list -->

<p></p>
<p></p>

<!-- wp:paragraph -->
</p>
<p>
<!-- /wp:paragraph -->

<p></p>
<p></p>

<!-- wp:paragraph -->
</p>
<p>결론</p>
<p>
<!-- /wp:paragraph -->

<p></p>
<p></p>

<!-- wp:list -->
</p>
<ul>
<li>우리는 모두 클린아키텍처 + MVVM + Hilt 를 사용하고 싶다. 기술 부채를 계속 쌓아가지 않고 새롭게 추가되는 화면이라도 원하는 방향으로 개발하고 싶다 였습니다.</li>
</ul>
<p>
<!-- /wp:list -->

<p></p>
<p></p>

<!-- wp:heading {"level":6} -->
</p>
<h6><strong>그래서 구조 개선을 결정</strong></h6>
<p>
<!-- /wp:heading -->

<p></p>
<p></p>

<!-- wp:list -->
</p>
<ul>
<li>구조 개선을 결정하고 많은 고민이 시작 되었습니다. 파트원은 모두 각각의 목적 조직에서 업무를 진행하고 있어서 해당 일을 전담 할 수 있는 인력이 없었습니다. 만약 전담할 인력이 있다고 하더라도 혼자서는 너무 힘든 일이라는 생각이 들었습니다. 여러사람의 의견을 모아서 작업을 해야 할거고 많은 의견 충돌이 있을거라 예상하고 있었기 때문입니다.게다가 우리가 생각 하는 클린아키텍처+ MVVM 은 동일한 내용이 맞을까도 생각 하게 되었습니다. 수많은 생각을 하다가 문득 같은 "팀" 이라는게 떠 올랐습니다. 한개의 repository 에서 함께 개발하는 구성원들이라는 생각이 들었고 <strong>"함께"</strong> 라는 용어가 생각 이 났습니다. 단순한 단어가 많은 생각을 정리 할 수 있게 도와 주었습니다.</li>
</ul>
<p>
<!-- /wp:list -->

<p></p>
<p></p>

<!-- wp:paragraph -->
</p>
<p>
<!-- /wp:paragraph -->

<p></p>
<p></p>

<!-- wp:heading -->
</p>
<h2>"함께 하는 여정"</h2>
<p>
<!-- /wp:heading -->

<p></p>
<p></p>

<!-- wp:list -->
</p>
<ul>
<li>우리는 같은 파트에서 함께 개발하는 동료라고 생각하고 모두가 만족하는 코드를 향해 간다고 생각하니 결론에 쉽게 도달 할 수 있었습니다.</li>
<li>파트원 모두는 아름다운 코드를 만들기 위해 노력 하고 있지만 각자의 생각이 다르기 때문에 파편 화가 되어 간다. 그러면 최종적으로 생각하는 코드를 협의해서 함께 만들어 가면 되겠다는 결론을 내렸습니다.</li>
<li>협의하는 시간을 강제적으로 매주 만들어서 이야기하면 해결이 될거 같았습니다.</li>
<li>레거시 처리는 앞으로 작성하는 코드에 대한 대비, 그리고 정말 레거시 코드에 대한 리팩토링이 있다고 생각합니다. 저는 구 버전에 있는 레거시 코드보다 현재 작성하고 있는 코드에 대한 내용을 만들어 가는게 중요하다고 생각해서 우리 모두가 만족 하는 구조를 함께 만들어 보기로 했습니다.</li>
<li>회의 시간도 딱딱 하지 않게 아름다운 코드를 위한 대화의 시간으로 “<strong>뷰티톡</strong>“ 으로 시간을 정하고 2021년12월 부터 일정을 시작 했습니다.</li>
</ul>
<p>
<!-- /wp:list -->

<p></p>
<p></p>

<!-- wp:paragraph -->
</p>
<p>중요: 함께 발전 시킬 수 있습니다. 안드로이드 개발자 채용 중입니다. <a href="https://hello.remember.co.kr/recruit/android">Android 개발자</a></p>
<p>
<!-- /wp:paragraph -->

<p></p>
<p></p>

<!-- wp:paragraph -->
</p>
<p>
<!-- /wp:paragraph -->

<p></p>
<p></p>

<!-- wp:heading {"level":4} -->
</p>
<h4><strong>"함께 시작 된 뷰티톡 6개월의 시간"</strong></h4>
<p>
<!-- /wp:heading -->

<p></p>
<p></p>

<!-- wp:list -->
</p>
<ul>
<li>시작
<ul>
<li>어떻게 시작 할지 고민이 많았습니다. 시작을 잘 풀어야 앞으로 회의 시간이 일방 적이지 않고 다양한 의견을 함께 나누는 시간이 될거라 예상 했습니다.</li>
<li>처음은 역시 서로의 생각을이야기 할 수 있게 각자가 생각 하는 “클린아키텍처“의 구조를 발표 하는 시간으로 정했습니다. 파트원 4명 모두가 자신이 생각하는 구조를 그려오고 간단하게 설명하고 질문을 받는 시간으로 가졌습니다. 4명 모두가 발표가 끝나고 “클린아키텍처“에 대해 논의를 하면서 다른 부분을 이야기 하며 다른 부분을 이해하고 통일화 하는 시간으로 일정을 시작 했습니다.</li>
</ul>
</li>
<li>진행
<ul>
<li>통일된 “클린아키텍처” 개념을 모두가 동일한 내용으로 맞추니 다음으로 할일은 실제 패키지, 모듈 등을 어떻게 할지에 대한 내용을 찾아서 하나씩 진행하게 되었습니다.</li>
<li>이상적인 내용으로 dummy 코드를 생성하는것 보다 현재 동작 하고 있는 화면을 우리가 생각하는 구조로 만들기로 결정 했습니다.</li>
</ul>
</li>
<li>내용 :
<ul>
<li>모듈 분리</li>
<li>DataBinding 추가 및 MVVM 사용</li>
<li>UseCase 사용</li>
<li>Dagger -&gt; Hilt 로 변경</li>
<li>Rx 버전 업데이트 및 사용 방법</li>
<li>응답 객체와 Entity 객체 분리</li>
<li>신규 화면 생성시 해당 구조 사용을 권장</li>
</ul>
</li>
<li>결과 :
<ul>
<li>구조와 샘플 까지 작성하는데 6개월 이라는 시간이 걸렸지만 행복한 시간이었습니다. 서로의 의견을 조율하고 이야기 하는 시간 모두가 좋았습니다. 운용 되고 있는 코드에서 통합된 구조를 만들다 보니 다양한 상황에 직면 하게 되었지만 함께 해결해 나가고 최종 화면 보일때 파트의 승리라 생각 했습니다.</li>
<li>현재 우리가 만족 하는 클린아키텍처 의 MVVM 코드를 사용 할 것이고 이어 나갈 것이다. 함께 하는 시간의 힘이고 노력이다. 다같이 협의한 내용이고 만족 있습니다. 설계는 정답이 없다고 생각하기에 기본적인 구조에 맞게, 회사 상황에 맞게, 변형하고 재 조립 이라고 생각합니다. 그래서 우리만의 설계를 만들어 가고 있고 앞으로도 계속 발전 시킬 예정입니다.<br /><br />우리와 함께할 파트원을 채용 중입니다. <a href="https://hello.remember.co.kr/recruit/android">Android 개발자</a></li>
</ul>
</li>
</ul>
<p>
<!-- /wp:list -->

<p></p>
<p></p>

<!-- wp:paragraph -->
</p>
<p><br />다음편: 안드로이드 파트에서 진행한 구조를 적용하기</p>
<p>
<!-- /wp:paragraph -->

<p></p>
<p></p>

<!-- wp:heading {"level":3} -->
</p>
<h3><br />여기서 잠깐</h3>
<p>
<!-- /wp:heading -->

<p></p>
<p></p>

<!-- wp:paragraph -->
</p>
<p>잠시 가장 적용 하고 싶었던 것중 하나인 MVVM 도입을 결정하게 된 내용을 조금 이야기하고 넘어가 보겠습니다. 레거시 리멤버의 코드의 구조에 대한 내용을 포함 하고 싶어서 입니다.</p>
<p>
<!-- /wp:paragraph -->

<p></p>
<p></p>

<!-- wp:paragraph -->
</p>
<p><strong>패턴 사용의 파편 화 </strong></p>
<p>
<!-- /wp:paragraph -->

<p></p>
<p></p>

<!-- wp:list -->
</p>
<ul>
<li>같은 구조를 목표로 개발 하고 있지만 각각의 이해도가 다르고 사용하면서 조금 씩 발전하고 있어서 파편 화가 진행이 되고 있습니다. 구조에 대한 파편 화는 초기 MVP, 향상 된 MVP, UseCase 사용의 추가등 조금씩 진행 되었고 시간이 지남에 따라 차이가 커지고 있습니다. 아래 내용은 점차 파편화 되어가는 코드를 개략적으로 보여주는 내용입니다.</li>
</ul>
<p>
<!-- /wp:list -->

<p></p>
<p></p>

<!-- wp:paragraph -->
</p>
<p>
<!-- /wp:paragraph -->

<p></p>
<p></p>

<!-- wp:list -->
</p>
<ul>
<li>초기 MVP:
<ul>
<li>코드중 일부가 아래 처럼 사용자가 동작을 하면 presenter.updateName 호출하고 presenter 에서는 API 사용을 위한 비동기 처리와 간단한 예외만 처리 하고 있었습니다. (2016년도 정도의 코드 형태이고 이해를 돕기 위해 작성된 내용입니다.</li>
</ul>
</li>
</ul>
<p>
<!-- /wp:list -->

<p></p>
<p></p>

<!-- wp:code -->
</p>
<pre><code>// activity 코드
override fun onCreate(savedInstanceState: Bundle?) {
   super.onCreate(savedInstanceState)
    binding = ActivityCommunityBinding.inflate(layoutInflater)
    setContentView(binding.root)
    initCommunity()
    presenter.loadCommunityList(argument.communityId)
}
private fun initCommunity() {
    this.communityId = communityId
    binding.appBar.title = R.string.community_title
    binding.communityName.setOnClickListener {
        ...
    }
}
// presenter 코드
fun loadCommunityList(  communityId: Long) {
    //api call
}</code></pre>
<p>
<!-- /wp:code -->

<p></p>
<p></p>

<!-- wp:list -->
</p>
<ul>
<li>향상된 MVP
<ul>
<li>kotlin 으로 작성하는 시기의 MVP 코드의 형태가 변화 하였습니다.</li>
</ul>
<ul>
<li>activity, fragment 에서 발생하는 모든 이벤트(사용자 액션 포함 )는 presenter 로 전달하고 모든 비즈니스 로직은 presenter 에서 처리 하는 개념으로 처리하고 있습니다. presenter 에서는 ‘view.setCommunityName("커뮤니티 이름")’ 처럼 각각의 view 하나 하나를 설정 하도록 개발 하고 있습니다.</li>
</ul>
</li>
</ul>
<p>
<!-- /wp:list -->

<p></p>
<p></p>

<!-- wp:code -->
</p>
<pre><code>// activity 코드
override fun onCreate(savedInstanceState: Bundle?) {
  super.onCreate(savedInstanceState)
  binding = ActivityCommunityBinding.inflate(layoutInflater)
  setContentView(binding.root)
  val argument: Argument = intent.getParcelableExtra(COMMUNITY_ACTIVITY_INTENT_KEY) ?: let {
    finish()
    return
  }
  presenter.onCreate(
    argument.communityId,
    argument.community,
    argument.boardId
  )
}
// presenter 코드
fun onCreate(
  communityId: Long,
  community: Community?,
  boardId: Long?
) {
    this.communityId = communityId
    view.setAppbarTitle(R.string.community_title)
    view.setCommunityNameClickListener {
        view.goToCommunity(communityId)
    }
    view.setCommunityName("커뮤니티 이름")
    loadCommunityList(communityId)
    ...
}
fun onClickFromCommunityName() {
   view.goToCommunity()
}</code></pre>
<p>
<!-- /wp:code -->

<p></p>
<p></p>

<!-- wp:list -->
</p>
<ul>
<li>클린아키텍처의 UseCase 사용
<ul>
<li>repository 의 helper 를 만들어서 useCase 처럼 사용 했지만 새롭게 입사하신 분들은 생소하게 보일 수 있습니다.</li>
</ul>
<ul>
<li>useCase 도입을 하기로 결정 했지만 파트에서 생각하는 useCase 내용이 다르고 구현하는 방법도 다양하게 되었습니다.</li>
</ul>
</li>
<li>결국 맞춰 가는 시간의 부족
<ul>
<li>PR을 통해서 코딩컨벤션을 맞추고 이야기를 했지만 아쉬운 느낌이 많았습니다. PR 전에 구조가 잡혀 있었다면, 컨벤션이 잘 정의 되어 있었다면 이런 생각이 많이 졌습니다.</li>
<li>드라마앤컴퍼니 조직 구조가 미션 조직 형태의 “Crew” 로 분리 되어 있다 보니 파트가 함께 하는 시간이 부족하여 구조 개선이라는 큰 방향에 대한 처리는 어떻게 해야 할 지 방법을 찾지 못 했습니다.</li>
<li>그래서 찾은 결론이 일주일에 최소 2시간 씩이라도 함게 하는시간을 만들어 발전 시키는 방향을 생각 하게 되었습니다.</li>
</ul>
</li>
</ul>
<p>
<!-- /wp:list -->

<p></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[리멤버 안드로이드 코드는 클린아키텍처 + MVP 로 되어 있습니다. 하지만 2016년도의 부터 이어진 코드이다 보니 이전에 작성된 코드와 현재에 작성된 코드가 다른 형태를 보이고 있는 경우가 발생 하고 있었습니다. 새롭게 작성 되는 코드는 PR 을 통해서 점점 비슷한 구조로 작성 되고 있지만 더 명확하게 가는게 좋겠다고 생각하여 구조 개선 여정을 시작 했습니다. 구조개선을 위해서 당시 고민 했던 내용을 공유과 어떤 방법으로 진행 한지를 공유하기 하기 위한 내용의 게시글 입니다. 해당 게시글은 아래의 내용들이 있습니다.]]></excerpt:encoded>
		<wp:post_id>3073</wp:post_id>
		<wp:post_date><![CDATA[2022-08-25 16:05:52]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-08-25 07:05:52]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-08-25 16:30:55]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-08-25 07:30:55]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%ec%95%84%eb%a6%84%eb%8b%a4%ec%9a%b4-%ec%bd%94%eb%93%9c%eb%a5%bc-%ed%96%a5%ed%95%9c-%ed%95%a8%ea%bb%98%ed%95%98%eb%8a%94-%ec%97%ac%ec%a0%95-part-1]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="android"><![CDATA[Android]]></category>
		<category domain="category" nicename="develop"><![CDATA[Tech]]></category>
		<category domain="post_tag" nicename="%ea%b5%ac%ec%a1%b0%ea%b0%9c%ec%84%a0"><![CDATA[구조개선]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle_flag]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729518488;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:966;}i:1;a:1:{s:2:"id";i:1850;}i:2;a:1:{s:2:"id";i:199;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_single_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:23:{s:8:"subtitle";s:0:"";s:6:"format";s:8:"standard";s:5:"video";s:0:"";s:7:"gallery";s:0:"";s:11:"source_name";s:0:"";s:10:"source_url";s:0:"";s:8:"via_name";s:0:"";s:7:"via_url";s:0:"";s:17:"override_template";s:1:"0";s:8:"override";a:1:{i:0;a:32:{s:8:"template";s:1:"1";s:18:"single_blog_custom";s:0:"";s:8:"parallax";s:1:"1";s:10:"fullscreen";s:1:"1";s:6:"layout";s:13:"right-sidebar";s:7:"sidebar";s:15:"default-sidebar";s:14:"second_sidebar";s:15:"default-sidebar";s:14:"sticky_sidebar";s:1:"1";s:14:"share_position";s:3:"top";s:17:"share_float_style";s:16:"share-monocrhome";s:18:"show_share_counter";s:1:"1";s:17:"show_view_counter";s:1:"1";s:13:"show_featured";s:1:"1";s:14:"show_post_meta";s:1:"1";s:16:"show_post_author";s:1:"1";s:22:"show_post_author_image";s:1:"1";s:14:"show_post_date";s:1:"1";s:16:"post_date_format";s:7:"default";s:23:"post_date_format_custom";s:5:"Y/m/d";s:18:"show_post_category";s:1:"1";s:22:"show_post_reading_time";s:1:"0";s:21:"post_reading_time_wpm";s:3:"300";s:16:"show_zoom_button";s:1:"0";s:20:"zoom_button_out_step";s:1:"2";s:19:"zoom_button_in_step";s:1:"3";s:13:"show_post_tag";s:1:"1";s:19:"show_prev_next_post";s:1:"1";s:15:"show_popup_post";s:1:"1";s:17:"number_popup_post";s:1:"1";s:15:"show_author_box";s:1:"0";s:17:"show_post_related";s:1:"0";s:24:"show_inline_post_related";s:1:"0";}}s:19:"override_image_size";s:1:"0";s:14:"image_override";a:1:{i:0;a:2:{s:26:"single_post_thumbnail_size";s:8:"crop-500";s:24:"single_post_gallery_size";s:8:"crop-500";}}s:13:"trending_post";s:1:"0";s:22:"trending_post_position";s:4:"meta";s:19:"trending_post_label";s:8:"Trending";s:14:"sponsored_post";s:1:"0";s:20:"sponsored_post_label";s:12:"Sponsored by";s:19:"sponsored_post_name";s:0:"";s:18:"sponsored_post_url";s:0:"";s:26:"sponsored_post_logo_enable";s:1:"0";s:19:"sponsored_post_logo";s:0:"";s:19:"sponsored_post_desc";s:0:"";s:10:"disable_ad";s:1:"0";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[41]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:2:"id";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_estimated-reading-time-minutes]]></wp:meta_key>
		<wp:meta_value><![CDATA[7]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[8]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_template_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[wp-post]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_version]]></wp:meta_key>
		<wp:meta_value><![CDATA[3.6.1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_data]]></wp:meta_key>
		<wp:meta_value><![CDATA[[{"id":"0922f8b","elType":"section","settings":[],"elements":[{"id":"ef081ce","elType":"column","settings":{"_column_size":100,"_inline_size":null},"elements":[{"id":"590df2c","elType":"widget","settings":{"image":{"url":"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2022\/08\/together-9-scaled.jpg","id":3101,"alt":"","source":"library"}},"elements":[],"widgetType":"image"}],"isInner":false}],"isInner":false},{"id":"1ab75c1b","elType":"section","settings":[],"elements":[{"id":"478ffc6a","elType":"column","settings":{"_column_size":100},"elements":[{"id":"7333bbea","elType":"widget","settings":{"editor":"<p><!-- wp:image --><\/p>\n<figure class=\"wp-block-image\"><img alt=\"\" \/><\/figure>\n<p><!-- \/wp:image --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\uc548\ub155\ud558\uc138\uc694. \ub9ac\uba64\ubc84 \uc548\ub4dc\ub85c\uc774\ub4dc \uac1c\ubc1c\uc790 \uae40\ud3c9\ud638 \uc785\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\ub9ac\uba64\ubc84 \uc548\ub4dc\ub85c\uc774\ub4dc \ucf54\ub4dc\ub294 \ud074\ub9b0\uc544\ud0a4\ud14d\ucc98 + MVP \ub85c \ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \ud558\uc9c0\ub9cc 2016\ub144\ub3c4\uc758 \ubd80\ud130 \uc774\uc5b4\uc9c4 \ucf54\ub4dc\uc774\ub2e4 \ubcf4\ub2c8 \uc774\uc804\uc5d0 \uc791\uc131\ub41c \ucf54\ub4dc\uc640 \ud604\uc7ac\uc5d0 \uc791\uc131\ub41c \ucf54\ub4dc\uac00 \ub2e4\ub978 \ud615\ud0dc\ub97c \ubcf4\uc774\uace0 \uc788\ub294 \uacbd\uc6b0\uac00 \ubc1c\uc0dd \ud558\uace0 \uc788\uc5c8\uc2b5\ub2c8\ub2e4. \uc0c8\ub86d\uac8c \uc791\uc131 \ub418\ub294 \ucf54\ub4dc\ub294 PR \uc744 \ud1b5\ud574\uc11c \uc810\uc810 \ube44\uc2b7\ud55c \uad6c\uc870\ub85c \uc791\uc131 \ub418\uace0 \uc788\uc9c0\ub9cc \ub354 \uba85\ud655\ud558\uac8c \uac00\ub294\uac8c \uc88b\uaca0\ub2e4\uace0 \uc0dd\uac01\ud558\uc5ec \uad6c\uc870 \uac1c\uc120 \uc5ec\uc815\uc744 \uc2dc\uc791 \ud588\uc2b5\ub2c8\ub2e4. \uad6c\uc870\uac1c\uc120\uc744 \uc704\ud574\uc11c \ub2f9\uc2dc \uace0\ubbfc \ud588\ub358 \ub0b4\uc6a9\uc744 \uacf5\uc720\uacfc \uc5b4\ub5a4 \ubc29\ubc95\uc73c\ub85c \uc9c4\ud589 \ud55c\uc9c0\ub97c \uacf5\uc720\ud558\uae30 \ud558\uae30 \uc704\ud55c \ub0b4\uc6a9\uc758 \uac8c\uc2dc\uae00 \uc785\ub2c8\ub2e4. \ud574\ub2f9 \uac8c\uc2dc\uae00\uc740 \uc544\ub798\uc758 \ub0b4\uc6a9\ub4e4\uc774 \uc788\uc2b5\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:list --><\/p>\n<ul>\n<li>\uc65c \uad6c\uc870 \uac1c\uc120\uc744 \uc0dd\uac01 \ud558\uac8c \ub418\uc5c8\ub294\uc9c0\uc5d0 \ub300\ud55c \uace0\ubbfc<\/li>\n<li>\uad6c\uc870 \uac1c\uc120\uc740 \uc5b4\ub5bb\uac8c \uc9c4\ud589 \ud588\ub294\uc9c0\uc5d0 \ub300\ud55c \ub0b4\uc6a9<\/li>\n<\/ul>\n<p><!-- \/wp:list --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:heading --><\/p>\n<h2>\uc65c \uc6b0\ub9ac\ub294 \ub9e4\uc8fc 2\uc2dc\uac04\uc744 \ud568\uaed8 \uc5f0\uad6c \ud558\uac8c \ub418\uc5c8\ub294\uac00?<\/h2>\n<p><!-- \/wp:heading --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p><strong>\uc778\ub0b4\ud558\uba70 \ud0c0\ud611\ud558\uba70 \uac1c\ubc1c<\/strong><\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\ud0c0\ud611 :<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:list --><\/p>\n<ul>\n<li>\ucf54\ub4dc\ub294 \ud074\ub9b0\uc544\ud0a4\ud14d\ucc98 + MVP \ub85c \uac1c\ubc1c \ub418\uc5b4 \uc788\uc5c8\uc2b5\ub2c8\ub2e4. \uad6c\uc870 \uc640 \ud328\ud134\uc774 \uc798 \uad6c\ud604 \ub418\uace0 \uc788\uace0 \uc628\ubcf4\ub529 \uae30\uac04\uc758 \ud559\uc2b5\uc73c\ub85c \ucf54\ub4dc\uc5d0 \uc801\uc751\ud558\uace0 \uac1c\ubc1c\ud558\ub294\ub370\ub294 <strong>\ud070 <\/strong>\ubd88\ud3b8\ud568\uc740 \uc5c6\uc2b5\ub2c8\ub2e4. \ucf54\ub4dc \ub9ac\ubdf0\ub3c4 \uae30\uc874\uc758 \uad6c\uc870 \ub2e8\ub2e8\ud558\uac8c \ud558\uace0 \uc720\uc9c0\ud558\ub294 \ubc29\ud5a5\uc744 \uac00\uc9c0\uace0 \uc9c4\ud589 \ud558\uc600\uc2b5\ub2c8\ub2e4. \ucf54\ub4dc\uc5d0 \uc801\uc751\uc774 \ub41c\uac70\ub77c \uc0dd\uac01\ud558\uac8c \ub418\uc5c8\uace0 \uadf8 \uc801\uc751 \uc798\ubabb\ub418\uc5c8\ub2e4\uace0 \uc0dd\uac01 \ud558\uc9c4 \uc54a\uace0 \uc788\uc5c8\uc2b5\ub2c8\ub2e4. \uc720\uc9c0\ubcf4\uc218\uac00 \uc5b4\ub835\uc9c0 \uc54a\uace0 \uc0c8\ub85c\uc6b4 \uae30\ub2a5 \uac1c\ubc1c\ud558\ub294 \uc18d\ub3c4\ub3c4 \ubb38\uc81c \uc5c6\uc5c8\uc2b5\ub2c8\ub2e4.<\/li>\n<\/ul>\n<p><!-- \/wp:list --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\uc778\ub0b4:<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:list --><\/p>\n<ul>\n<li>\ud559\uc2b5\uc5d0 \ud544\uc694\ud55c \uc0d8\ud50c\uc744 \ubcf4\uba74 \uac70\uc758 \ub300\ubd80\ubd84\uc774 MVVM \uc73c\ub85c \uc791\uc131 \ub418\uc5b4 \uc788\uc5b4 \uacfc\uac70(MVP)\uc640 \ud604\uc7ac(MVVM) \ub77c\uace0 \uc0dd\uac01 \ub420\ub54c\uac00 \ub9ce\uc558\uc2b5\ub2c8\ub2e4. \ud30c\ud2b8\uc6d0 \ubaa8\ub450 MVVM \uc73c\ub85c \uacfc\uc81c\ub97c \uc9c4\ud589 \ud574 \uc8fc\uc154\uc11c \uac1c\ub150\uacfc \uc0ac\uc6a9\uc5d0 \ub300\ud574\uc11c \uc54c\uace0 \uc788\uc9c0\ub9cc \uc7a5\uc2dc\uac04 MVP \ucf54\ub4dc\ub97c \ubcf4\ub2e4 \ubcf4\ub2c8 MVVM \uc744 \uc720\ub2c8\ucf58 \ucc98\ub7fc \uc0dd\uac01 \ud558\ub294 \ub290\ub08c\uc744 \ub9ce\uc774 \ubc1b\uac8c \ub418\uc5c8\uc2b5\ub2c8\ub2e4.<\/li>\n<li>\ud30c\ud2b8\uc2dc\uac04\uc5d0 \uc548\ub4dc\ub85c\uc774\ub4dc \uae30\uc220\uc5d0 \ub300\ud55c \ub2e4\uc591\ud55c \ud559\uc2b5 \uc2dc\uac04\uc744 \ub9cc\ub4e4\uba74\uc11c \ubb38\uc81c\uac00 \uc788\ub2e4\uace0 \uc0dd\uac01\uc744 \uc804\ud658 \ud558\uc600\uc2b5\ub2c8\ub2e4. \ud30c\ud2b8\uc5d0\uc11c\ub294 \ub9e4\uc8fc 2\uc2dc\uac04\uc815\ub3c4\uc758 \uc2dc\uac04\uc744 \uc774\uc6a9\ud574\uc11c \uc0c8\ub85c\uc6b4 \uae30\uc220 \ub610\ub294 \uae30\uc874\uc5d0 \uc0ac\uc6a9\ud558\ub294 \uae30\uc220\uc744 \uae4a\uac8c \ud559\uc2b5\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc0c8\ub85c\uc6b4 \uae30\uc220\uc740 \uc774\ub860 \ud559\uc2b5, \uc0d8\ud50c \uc0dd\uc131, \ub9ac\uba64\ubc84 \ucf54\ub4dc\uc5d0 \uc801\uc6a9\ud6c4 \uc7a5\ub2e8\uc810 \ud30c\uc545 \ud558\ub294 \ud615\ud0dc\ub85c \uc9c4\ud589 \ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \ub9ac\uba64\ubc84 \ucf54\ub4dc\uc5d0 \ud559\uc2b5\ud55c \uae30\uc220\uc774 \uc801\uc6a9\ub418\uc9c0 \uc54a\uace0 \ud559\uc2b5\uc73c\ub85c \ub05d\ub098\ub294 \uacbd\uc6b0\uac00 \ubc1c\uc0dd\ud558\uae30 \uc2dc\uc791 \ud588\uc2b5\ub2c8\ub2e4.<\/li>\n<li>Dagger \uc0ac\uc6a9 \uc5d0 \ub300\ud55c \uc5b4\uc0c9\ud568\uc740 \ucc98\uc74c \ubd80\ud130 \uc788\uc5c8\uc9c0\ub9cc \uc0ac\uc6a9 \ud558\ub2e4 \ubcf4\uba74 \ud3b8\ud558\ub2e4\ub294 \uc774\uc720\ub85c \uac19\uc740 \ubc29\uc2dd\uc73c\ub85c \uc0ac\uc6a9\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. Dagger \ucc98\uc74c \ud559\uc2b5 \ud560\ub54c\uc640 \uc2e4\uc81c \ub9ac\uba64\ubc84 \ucf54\ub4dc\uc5d0\uc11c \uc0ac\uc6a9\uc740 \ub2e4\ub974\uac8c \ubcf4\uc785\ub2c8\ub2e4.<\/li>\n<li>\uc694\uad6c \uc870\uac74 \ubcc0\ud654\uc5d0 \uc720\uc5f0\ud558\uac8c \ub300\uc751\ud558\uace0 \uc7ac \uc0ac\uc6a9\uc744 \ub298\ub9ac\uae30 \uc704\ud574\uc11c \ud074\ub9b0 \uc544\ud0a4\ud14d\ucc98\uc640 MVP \ub294 \ubc1c\uc804 \uc2dc\ud0a4\uba70 \uac1c\ubc1c\uc744 \uc9c4\ud589 \ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4.<\/li>\n<\/ul>\n<p><!-- \/wp:list --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\uacb0\ub860<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:list --><\/p>\n<ul>\n<li>\uc6b0\ub9ac\ub294 \ubaa8\ub450 \ud074\ub9b0\uc544\ud0a4\ud14d\ucc98 + MVVM + Hilt \ub97c \uc0ac\uc6a9\ud558\uace0 \uc2f6\ub2e4. \uae30\uc220 \ubd80\ucc44\ub97c \uacc4\uc18d \uc313\uc544\uac00\uc9c0 \uc54a\uace0 \uc0c8\ub86d\uac8c \ucd94\uac00\ub418\ub294 \ud654\uba74\uc774\ub77c\ub3c4 \uc6d0\ud558\ub294 \ubc29\ud5a5\uc73c\ub85c \uac1c\ubc1c\ud558\uace0 \uc2f6\ub2e4 \uc600\uc2b5\ub2c8\ub2e4.<\/li>\n<\/ul>\n<p><!-- \/wp:list --><\/p>\n<p><!-- wp:heading {\"level\":6} --><\/p>\n<h6><strong>\uadf8\ub798\uc11c \uad6c\uc870 \uac1c\uc120\uc744 \uacb0\uc815<\/strong><\/h6>\n<p><!-- \/wp:heading --><\/p>\n<p><!-- wp:list --><\/p>\n<ul>\n<li>\uad6c\uc870 \uac1c\uc120\uc744 \uacb0\uc815\ud558\uace0 \ub9ce\uc740 \uace0\ubbfc\uc774 \uc2dc\uc791 \ub418\uc5c8\uc2b5\ub2c8\ub2e4. \ud30c\ud2b8\uc6d0\uc740 \ubaa8\ub450 \uac01\uac01\uc758 \ubaa9\uc801 \uc870\uc9c1\uc5d0\uc11c \uc5c5\ubb34\ub97c \uc9c4\ud589\ud558\uace0 \uc788\uc5b4\uc11c \ud574\ub2f9 \uc77c\uc744 \uc804\ub2f4 \ud560 \uc218 \uc788\ub294 \uc778\ub825\uc774 \uc5c6\uc5c8\uc2b5\ub2c8\ub2e4. \ub9cc\uc57d \uc804\ub2f4\ud560 \uc778\ub825\uc774 \uc788\ub2e4\uace0 \ud558\ub354\ub77c\ub3c4 \ud63c\uc790\uc11c\ub294 \ub108\ubb34 \ud798\ub4e0 \uc77c\uc774\ub77c\ub294 \uc0dd\uac01\uc774 \ub4e4\uc5c8\uc2b5\ub2c8\ub2e4. \uc5ec\ub7ec\uc0ac\ub78c\uc758 \uc758\uacac\uc744 \ubaa8\uc544\uc11c \uc791\uc5c5\uc744 \ud574\uc57c \ud560\uac70\uace0 \ub9ce\uc740 \uc758\uacac \ucda9\ub3cc\uc774 \uc788\uc744\uac70\ub77c \uc608\uc0c1\ud558\uace0 \uc788\uc5c8\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4.\uac8c\ub2e4\uac00 \uc6b0\ub9ac\uac00 \uc0dd\uac01 \ud558\ub294 \ud074\ub9b0\uc544\ud0a4\ud14d\ucc98+ MVVM \uc740 \ub3d9\uc77c\ud55c \ub0b4\uc6a9\uc774 \ub9de\uc744\uae4c\ub3c4 \uc0dd\uac01 \ud558\uac8c \ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uc218\ub9ce\uc740 \uc0dd\uac01\uc744 \ud558\ub2e4\uac00 \ubb38\ub4dd \uac19\uc740 \"\ud300\" \uc774\ub77c\ub294\uac8c \ub5a0 \uc62c\ub790\uc2b5\ub2c8\ub2e4. \ud55c\uac1c\uc758 repository \uc5d0\uc11c \ud568\uaed8 \uac1c\ubc1c\ud558\ub294 \uad6c\uc131\uc6d0\ub4e4\uc774\ub77c\ub294 \uc0dd\uac01\uc774 \ub4e4\uc5c8\uace0 <strong>\"\ud568\uaed8\"<\/strong> \ub77c\ub294 \uc6a9\uc5b4\uac00 \uc0dd\uac01 \uc774 \ub0ac\uc2b5\ub2c8\ub2e4. \ub2e8\uc21c\ud55c \ub2e8\uc5b4\uac00 \ub9ce\uc740 \uc0dd\uac01\uc744 \uc815\ub9ac \ud560 \uc218 \uc788\uac8c \ub3c4\uc640 \uc8fc\uc5c8\uc2b5\ub2c8\ub2e4.<\/li>\n<\/ul>\n<p><!-- \/wp:list --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:heading --><\/p>\n<h2>\"\ud568\uaed8 \ud558\ub294 \uc5ec\uc815\"<\/h2>\n<p><!-- \/wp:heading --><\/p>\n<p><!-- wp:list --><\/p>\n<ul>\n<li>\uc6b0\ub9ac\ub294 \uac19\uc740 \ud30c\ud2b8\uc5d0\uc11c \ud568\uaed8 \uac1c\ubc1c\ud558\ub294 \ub3d9\ub8cc\ub77c\uace0 \uc0dd\uac01\ud558\uace0 \ubaa8\ub450\uac00 \ub9cc\uc871\ud558\ub294 \ucf54\ub4dc\ub97c \ud5a5\ud574 \uac04\ub2e4\uace0 \uc0dd\uac01\ud558\ub2c8 \uacb0\ub860\uc5d0 \uc27d\uac8c \ub3c4\ub2ec \ud560 \uc218 \uc788\uc5c8\uc2b5\ub2c8\ub2e4.<\/li>\n<li>\ud30c\ud2b8\uc6d0 \ubaa8\ub450\ub294 \uc544\ub984\ub2e4\uc6b4 \ucf54\ub4dc\ub97c \ub9cc\ub4e4\uae30 \uc704\ud574 \ub178\ub825 \ud558\uace0 \uc788\uc9c0\ub9cc \uac01\uc790\uc758 \uc0dd\uac01\uc774 \ub2e4\ub974\uae30 \ub54c\ubb38\uc5d0 \ud30c\ud3b8 \ud654\uac00 \ub418\uc5b4 \uac04\ub2e4. \uadf8\ub7ec\uba74 \ucd5c\uc885\uc801\uc73c\ub85c \uc0dd\uac01\ud558\ub294 \ucf54\ub4dc\ub97c \ud611\uc758\ud574\uc11c \ud568\uaed8 \ub9cc\ub4e4\uc5b4 \uac00\uba74 \ub418\uaca0\ub2e4\ub294 \uacb0\ub860\uc744 \ub0b4\ub838\uc2b5\ub2c8\ub2e4.<\/li>\n<li>\ud611\uc758\ud558\ub294 \uc2dc\uac04\uc744 \uac15\uc81c\uc801\uc73c\ub85c \ub9e4\uc8fc \ub9cc\ub4e4\uc5b4\uc11c \uc774\uc57c\uae30\ud558\uba74 \ud574\uacb0\uc774 \ub420\uac70 \uac19\uc558\uc2b5\ub2c8\ub2e4.<\/li>\n<li>\ub808\uac70\uc2dc \ucc98\ub9ac\ub294 \uc55e\uc73c\ub85c \uc791\uc131\ud558\ub294 \ucf54\ub4dc\uc5d0 \ub300\ud55c \ub300\ube44, \uadf8\ub9ac\uace0 \uc815\ub9d0 \ub808\uac70\uc2dc \ucf54\ub4dc\uc5d0 \ub300\ud55c \ub9ac\ud329\ud1a0\ub9c1\uc774 \uc788\ub2e4\uace0 \uc0dd\uac01\ud569\ub2c8\ub2e4. \uc800\ub294 \uad6c \ubc84\uc804\uc5d0 \uc788\ub294 \ub808\uac70\uc2dc \ucf54\ub4dc\ubcf4\ub2e4 \ud604\uc7ac \uc791\uc131\ud558\uace0 \uc788\ub294 \ucf54\ub4dc\uc5d0 \ub300\ud55c \ub0b4\uc6a9\uc744 \ub9cc\ub4e4\uc5b4 \uac00\ub294\uac8c \uc911\uc694\ud558\ub2e4\uace0 \uc0dd\uac01\ud574\uc11c \uc6b0\ub9ac \ubaa8\ub450\uac00 \ub9cc\uc871 \ud558\ub294 \uad6c\uc870\ub97c \ud568\uaed8 \ub9cc\ub4e4\uc5b4 \ubcf4\uae30\ub85c \ud588\uc2b5\ub2c8\ub2e4.<\/li>\n<li>\ud68c\uc758 \uc2dc\uac04\ub3c4 \ub531\ub531 \ud558\uc9c0 \uc54a\uac8c \uc544\ub984\ub2e4\uc6b4 \ucf54\ub4dc\ub97c \uc704\ud55c \ub300\ud654\uc758 \uc2dc\uac04\uc73c\ub85c \u201c<strong>\ubdf0\ud2f0\ud1a1<\/strong>\u201c \uc73c\ub85c \uc2dc\uac04\uc744 \uc815\ud558\uace0 2021\ub14412\uc6d4 \ubd80\ud130 \uc77c\uc815\uc744 \uc2dc\uc791 \ud588\uc2b5\ub2c8\ub2e4.<\/li>\n<\/ul>\n<p><!-- \/wp:list --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\uc911\uc694: \ud568\uaed8 \ubc1c\uc804 \uc2dc\ud0ac \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc548\ub4dc\ub85c\uc774\ub4dc \uac1c\ubc1c\uc790 \ucc44\uc6a9 \uc911\uc785\ub2c8\ub2e4. <a href=\"https:\/\/hello.remember.co.kr\/recruit\/android\">Android \uac1c\ubc1c\uc790<\/a><\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:heading {\"level\":4} --><\/p>\n<h4><strong>\"\ud568\uaed8 \uc2dc\uc791 \ub41c \ubdf0\ud2f0\ud1a1 6\uac1c\uc6d4\uc758 \uc2dc\uac04\"<\/strong><\/h4>\n<p><!-- \/wp:heading --><\/p>\n<p><!-- wp:list --><\/p>\n<ul>\n<li>\uc2dc\uc791\n<ul>\n<li>\uc5b4\ub5bb\uac8c \uc2dc\uc791 \ud560\uc9c0 \uace0\ubbfc\uc774 \ub9ce\uc558\uc2b5\ub2c8\ub2e4. \uc2dc\uc791\uc744 \uc798 \ud480\uc5b4\uc57c \uc55e\uc73c\ub85c \ud68c\uc758 \uc2dc\uac04\uc774 \uc77c\ubc29 \uc801\uc774\uc9c0 \uc54a\uace0 \ub2e4\uc591\ud55c \uc758\uacac\uc744 \ud568\uaed8 \ub098\ub204\ub294 \uc2dc\uac04\uc774 \ub420\uac70\ub77c \uc608\uc0c1 \ud588\uc2b5\ub2c8\ub2e4.<\/li>\n<li>\ucc98\uc74c\uc740 \uc5ed\uc2dc \uc11c\ub85c\uc758 \uc0dd\uac01\uc744\uc774\uc57c\uae30 \ud560 \uc218 \uc788\uac8c \uac01\uc790\uac00 \uc0dd\uac01 \ud558\ub294 \u201c\ud074\ub9b0\uc544\ud0a4\ud14d\ucc98\u201c\uc758 \uad6c\uc870\ub97c \ubc1c\ud45c \ud558\ub294 \uc2dc\uac04\uc73c\ub85c \uc815\ud588\uc2b5\ub2c8\ub2e4. \ud30c\ud2b8\uc6d0 4\uba85 \ubaa8\ub450\uac00 \uc790\uc2e0\uc774 \uc0dd\uac01\ud558\ub294 \uad6c\uc870\ub97c \uadf8\ub824\uc624\uace0 \uac04\ub2e8\ud558\uac8c \uc124\uba85\ud558\uace0 \uc9c8\ubb38\uc744 \ubc1b\ub294 \uc2dc\uac04\uc73c\ub85c \uac00\uc84c\uc2b5\ub2c8\ub2e4. 4\uba85 \ubaa8\ub450\uac00 \ubc1c\ud45c\uac00 \ub05d\ub098\uace0 \u201c\ud074\ub9b0\uc544\ud0a4\ud14d\ucc98\u201c\uc5d0 \ub300\ud574 \ub17c\uc758\ub97c \ud558\uba74\uc11c \ub2e4\ub978 \ubd80\ubd84\uc744 \uc774\uc57c\uae30 \ud558\uba70 \ub2e4\ub978 \ubd80\ubd84\uc744 \uc774\ud574\ud558\uace0 \ud1b5\uc77c\ud654 \ud558\ub294 \uc2dc\uac04\uc73c\ub85c \uc77c\uc815\uc744 \uc2dc\uc791 \ud588\uc2b5\ub2c8\ub2e4.<\/li>\n<\/ul>\n<\/li>\n<li>\uc9c4\ud589\n<ul>\n<li>\ud1b5\uc77c\ub41c \u201c\ud074\ub9b0\uc544\ud0a4\ud14d\ucc98\u201d \uac1c\ub150\uc744 \ubaa8\ub450\uac00 \ub3d9\uc77c\ud55c \ub0b4\uc6a9\uc73c\ub85c \ub9de\ucd94\ub2c8 \ub2e4\uc74c\uc73c\ub85c \ud560\uc77c\uc740 \uc2e4\uc81c \ud328\ud0a4\uc9c0, \ubaa8\ub4c8 \ub4f1\uc744 \uc5b4\ub5bb\uac8c \ud560\uc9c0\uc5d0 \ub300\ud55c \ub0b4\uc6a9\uc744 \ucc3e\uc544\uc11c \ud558\ub098\uc529 \uc9c4\ud589\ud558\uac8c \ub418\uc5c8\uc2b5\ub2c8\ub2e4.<\/li>\n<li>\uc774\uc0c1\uc801\uc778 \ub0b4\uc6a9\uc73c\ub85c dummy \ucf54\ub4dc\ub97c \uc0dd\uc131\ud558\ub294\uac83 \ubcf4\ub2e4 \ud604\uc7ac \ub3d9\uc791 \ud558\uace0 \uc788\ub294 \ud654\uba74\uc744 \uc6b0\ub9ac\uac00 \uc0dd\uac01\ud558\ub294 \uad6c\uc870\ub85c \ub9cc\ub4e4\uae30\ub85c \uacb0\uc815 \ud588\uc2b5\ub2c8\ub2e4.<\/li>\n<\/ul>\n<\/li>\n<li>\ub0b4\uc6a9 :\n<ul>\n<li>\ubaa8\ub4c8 \ubd84\ub9ac<\/li>\n<li>DataBinding \ucd94\uac00 \ubc0f MVVM \uc0ac\uc6a9<\/li>\n<li>UseCase \uc0ac\uc6a9<\/li>\n<li>Dagger -&gt; Hilt \ub85c \ubcc0\uacbd<\/li>\n<li>Rx \ubc84\uc804 \uc5c5\ub370\uc774\ud2b8 \ubc0f \uc0ac\uc6a9 \ubc29\ubc95<\/li>\n<li>\uc751\ub2f5 \uac1d\uccb4\uc640 Entity \uac1d\uccb4 \ubd84\ub9ac<\/li>\n<li>\uc2e0\uaddc \ud654\uba74 \uc0dd\uc131\uc2dc \ud574\ub2f9 \uad6c\uc870 \uc0ac\uc6a9\uc744 \uad8c\uc7a5<\/li>\n<\/ul>\n<\/li>\n<li>\uacb0\uacfc :\n<ul>\n<li>\uad6c\uc870\uc640 \uc0d8\ud50c \uae4c\uc9c0 \uc791\uc131\ud558\ub294\ub370 6\uac1c\uc6d4 \uc774\ub77c\ub294 \uc2dc\uac04\uc774 \uac78\ub838\uc9c0\ub9cc \ud589\ubcf5\ud55c \uc2dc\uac04\uc774\uc5c8\uc2b5\ub2c8\ub2e4. \uc11c\ub85c\uc758 \uc758\uacac\uc744 \uc870\uc728\ud558\uace0 \uc774\uc57c\uae30 \ud558\ub294 \uc2dc\uac04 \ubaa8\ub450\uac00 \uc88b\uc558\uc2b5\ub2c8\ub2e4. \uc6b4\uc6a9 \ub418\uace0 \uc788\ub294 \ucf54\ub4dc\uc5d0\uc11c \ud1b5\ud569\ub41c \uad6c\uc870\ub97c \ub9cc\ub4e4\ub2e4 \ubcf4\ub2c8 \ub2e4\uc591\ud55c \uc0c1\ud669\uc5d0 \uc9c1\uba74 \ud558\uac8c \ub418\uc5c8\uc9c0\ub9cc \ud568\uaed8 \ud574\uacb0\ud574 \ub098\uac00\uace0 \ucd5c\uc885 \ud654\uba74 \ubcf4\uc77c\ub54c \ud30c\ud2b8\uc758 \uc2b9\ub9ac\ub77c \uc0dd\uac01 \ud588\uc2b5\ub2c8\ub2e4.<\/li>\n<li>\ud604\uc7ac \uc6b0\ub9ac\uac00 \ub9cc\uc871 \ud558\ub294 \ud074\ub9b0\uc544\ud0a4\ud14d\ucc98 \uc758 MVVM \ucf54\ub4dc\ub97c \uc0ac\uc6a9 \ud560 \uac83\uc774\uace0 \uc774\uc5b4 \ub098\uac08 \uac83\uc774\ub2e4. \ud568\uaed8 \ud558\ub294 \uc2dc\uac04\uc758 \ud798\uc774\uace0 \ub178\ub825\uc774\ub2e4. \ub2e4\uac19\uc774 \ud611\uc758\ud55c \ub0b4\uc6a9\uc774\uace0 \ub9cc\uc871 \uc788\uc2b5\ub2c8\ub2e4. \uc124\uacc4\ub294 \uc815\ub2f5\uc774 \uc5c6\ub2e4\uace0 \uc0dd\uac01\ud558\uae30\uc5d0 \uae30\ubcf8\uc801\uc778 \uad6c\uc870\uc5d0 \ub9de\uac8c, \ud68c\uc0ac \uc0c1\ud669\uc5d0 \ub9de\uac8c, \ubcc0\ud615\ud558\uace0 \uc7ac \uc870\ub9bd \uc774\ub77c\uace0 \uc0dd\uac01\ud569\ub2c8\ub2e4. \uadf8\ub798\uc11c \uc6b0\ub9ac\ub9cc\uc758 \uc124\uacc4\ub97c \ub9cc\ub4e4\uc5b4 \uac00\uace0 \uc788\uace0 \uc55e\uc73c\ub85c\ub3c4 \uacc4\uc18d \ubc1c\uc804 \uc2dc\ud0ac \uc608\uc815\uc785\ub2c8\ub2e4.<br \/><br \/>\uc6b0\ub9ac\uc640 \ud568\uaed8\ud560 \ud30c\ud2b8\uc6d0\uc744 \ucc44\uc6a9 \uc911\uc785\ub2c8\ub2e4. <a href=\"https:\/\/hello.remember.co.kr\/recruit\/android\">Android \uac1c\ubc1c\uc790<\/a><\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<p><!-- \/wp:list --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p><br \/>\ub2e4\uc74c\ud3b8: \uc548\ub4dc\ub85c\uc774\ub4dc \ud30c\ud2b8\uc5d0\uc11c \uc9c4\ud589\ud55c \uad6c\uc870\ub97c \uc801\uc6a9\ud558\uae30<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:heading {\"level\":3} --><\/p>\n<h3><br \/>\uc5ec\uae30\uc11c \uc7a0\uae50<\/h3>\n<p><!-- \/wp:heading --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p>\uc7a0\uc2dc \uac00\uc7a5 \uc801\uc6a9 \ud558\uace0 \uc2f6\uc5c8\ub358 \uac83\uc911 \ud558\ub098\uc778 MVVM \ub3c4\uc785\uc744 \uacb0\uc815\ud558\uac8c \ub41c \ub0b4\uc6a9\uc744 \uc870\uae08 \uc774\uc57c\uae30\ud558\uace0 \ub118\uc5b4\uac00 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4. \ub808\uac70\uc2dc \ub9ac\uba64\ubc84\uc758 \ucf54\ub4dc\uc758 \uad6c\uc870\uc5d0 \ub300\ud55c \ub0b4\uc6a9\uc744 \ud3ec\ud568 \ud558\uace0 \uc2f6\uc5b4\uc11c \uc785\ub2c8\ub2e4.<\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p><strong>\ud328\ud134 \uc0ac\uc6a9\uc758 \ud30c\ud3b8 \ud654 <\/strong><\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:list --><\/p>\n<ul>\n<li>\uac19\uc740 \uad6c\uc870\ub97c \ubaa9\ud45c\ub85c \uac1c\ubc1c \ud558\uace0 \uc788\uc9c0\ub9cc \uac01\uac01\uc758 \uc774\ud574\ub3c4\uac00 \ub2e4\ub974\uace0 \uc0ac\uc6a9\ud558\uba74\uc11c \uc870\uae08 \uc529 \ubc1c\uc804\ud558\uace0 \uc788\uc5b4\uc11c \ud30c\ud3b8 \ud654\uac00 \uc9c4\ud589\uc774 \ub418\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uad6c\uc870\uc5d0 \ub300\ud55c \ud30c\ud3b8 \ud654\ub294 \ucd08\uae30 MVP, \ud5a5\uc0c1 \ub41c MVP, UseCase \uc0ac\uc6a9\uc758 \ucd94\uac00\ub4f1 \uc870\uae08\uc529 \uc9c4\ud589 \ub418\uc5c8\uace0 \uc2dc\uac04\uc774 \uc9c0\ub0a8\uc5d0 \ub530\ub77c \ucc28\uc774\uac00 \ucee4\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc544\ub798 \ub0b4\uc6a9\uc740 \uc810\ucc28 \ud30c\ud3b8\ud654 \ub418\uc5b4\uac00\ub294 \ucf54\ub4dc\ub97c \uac1c\ub7b5\uc801\uc73c\ub85c \ubcf4\uc5ec\uc8fc\ub294 \ub0b4\uc6a9\uc785\ub2c8\ub2e4.<\/li>\n<\/ul>\n<p><!-- \/wp:list --><\/p>\n<p><!-- wp:paragraph --><\/p>\n<p><!-- \/wp:paragraph --><\/p>\n<p><!-- wp:list --><\/p>\n<ul>\n<li>\ucd08\uae30 MVP:\n<ul>\n<li>\ucf54\ub4dc\uc911 \uc77c\ubd80\uac00 \uc544\ub798 \ucc98\ub7fc \uc0ac\uc6a9\uc790\uac00 \ub3d9\uc791\uc744 \ud558\uba74 presenter.updateName \ud638\ucd9c\ud558\uace0 presenter \uc5d0\uc11c\ub294 API \uc0ac\uc6a9\uc744 \uc704\ud55c \ube44\ub3d9\uae30 \ucc98\ub9ac\uc640 \uac04\ub2e8\ud55c \uc608\uc678\ub9cc \ucc98\ub9ac \ud558\uace0 \uc788\uc5c8\uc2b5\ub2c8\ub2e4. (2016\ub144\ub3c4 \uc815\ub3c4\uc758 \ucf54\ub4dc \ud615\ud0dc\uc774\uace0 \uc774\ud574\ub97c \ub3d5\uae30 \uc704\ud574 \uc791\uc131\ub41c \ub0b4\uc6a9\uc785\ub2c8\ub2e4.<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<p><!-- \/wp:list --><\/p>\n<p><!-- wp:code --><\/p>\n<pre class=\"wp-block-code\"><code>\/\/ activity \ucf54\ub4dc \noverride fun onCreate(savedInstanceState: Bundle?) {\n   super.onCreate(savedInstanceState)\n    binding = ActivityCommunityBinding.inflate(layoutInflater)\n    setContentView(binding.root)\n\n    initCommunity()\n    presenter.loadCommunityList(argument.communityId)        \n}\n  \nprivate fun initCommunity() {\n    this.communityId = communityId\n    binding.appBar.title = R.string.community_title\n    binding.communityName.setOnClickListener {\n        ...\n    }\n}\n\n\/\/ presenter \ucf54\ub4dc\nfun loadCommunityList(  communityId: Long) {\n    \/\/api call\n}<\/code><\/pre>\n<p><!-- \/wp:code --><\/p>\n<p><!-- wp:list --><\/p>\n<ul>\n<li>\ud5a5\uc0c1\ub41c MVP\n<ul>\n<li>kotlin \uc73c\ub85c \uc791\uc131\ud558\ub294 \uc2dc\uae30\uc758 MVP \ucf54\ub4dc\uc758 \ud615\ud0dc\uac00 \ubcc0\ud654 \ud558\uc600\uc2b5\ub2c8\ub2e4.<\/li>\n<\/ul>\n<ul>\n<li>activity, fragment \uc5d0\uc11c \ubc1c\uc0dd\ud558\ub294 \ubaa8\ub4e0 \uc774\ubca4\ud2b8(\uc0ac\uc6a9\uc790 \uc561\uc158 \ud3ec\ud568 )\ub294 presenter \ub85c \uc804\ub2ec\ud558\uace0 \ubaa8\ub4e0 \ube44\uc988\ub2c8\uc2a4 \ub85c\uc9c1\uc740 presenter \uc5d0\uc11c \ucc98\ub9ac \ud558\ub294 \uac1c\ub150\uc73c\ub85c \ucc98\ub9ac\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. presenter \uc5d0\uc11c\ub294 \u2018view.setCommunityName(\"\ucee4\ubba4\ub2c8\ud2f0 \uc774\ub984\")\u2019 \ucc98\ub7fc \uac01\uac01\uc758 view \ud558\ub098 \ud558\ub098\ub97c \uc124\uc815 \ud558\ub3c4\ub85d \uac1c\ubc1c \ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4.<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<p><!-- \/wp:list --><\/p>\n<p><!-- wp:code --><\/p>\n<pre class=\"wp-block-code\"><code>\/\/ activity \ucf54\ub4dc \noverride fun onCreate(savedInstanceState: Bundle?) {\n  super.onCreate(savedInstanceState)\n  binding = ActivityCommunityBinding.inflate(layoutInflater)\n  setContentView(binding.root)\n\n  val argument: Argument = intent.getParcelableExtra(COMMUNITY_ACTIVITY_INTENT_KEY) ?: let {\n    finish()\n    return\n  }\n\n  presenter.onCreate(\n    argument.communityId,\n    argument.community,\n    argument.boardId\n  )        \n}\n\n\/\/ presenter \ucf54\ub4dc\nfun onCreate(\n  communityId: Long,\n  community: Community?,\n  boardId: Long?\n) {\n    this.communityId = communityId\n    view.setAppbarTitle(R.string.community_title)\n    view.setCommunityNameClickListener {\n        view.goToCommunity(communityId)\n    }\n    view.setCommunityName(\"\ucee4\ubba4\ub2c8\ud2f0 \uc774\ub984\")\n    loadCommunityList(communityId) \n    ...\n}\n\nfun onClickFromCommunityName() {\n   view.goToCommunity()\n}<\/code><\/pre>\n<p><!-- \/wp:code --><\/p>\n<p><!-- wp:list --><\/p>\n<ul>\n<li>\ud074\ub9b0\uc544\ud0a4\ud14d\ucc98\uc758 UseCase \uc0ac\uc6a9\n<ul>\n<li>repository \uc758 helper \ub97c \ub9cc\ub4e4\uc5b4\uc11c useCase \ucc98\ub7fc \uc0ac\uc6a9 \ud588\uc9c0\ub9cc \uc0c8\ub86d\uac8c \uc785\uc0ac\ud558\uc2e0 \ubd84\ub4e4\uc740 \uc0dd\uc18c\ud558\uac8c \ubcf4\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4.<\/li>\n<\/ul>\n<ul>\n<li>useCase \ub3c4\uc785\uc744 \ud558\uae30\ub85c \uacb0\uc815 \ud588\uc9c0\ub9cc \ud30c\ud2b8\uc5d0\uc11c \uc0dd\uac01\ud558\ub294 useCase \ub0b4\uc6a9\uc774 \ub2e4\ub974\uace0 \uad6c\ud604\ud558\ub294 \ubc29\ubc95\ub3c4 \ub2e4\uc591\ud558\uac8c \ub418\uc5c8\uc2b5\ub2c8\ub2e4.<\/li>\n<\/ul>\n<\/li>\n<li>\uacb0\uad6d \ub9de\ucdb0 \uac00\ub294 \uc2dc\uac04\uc758 \ubd80\uc871\n<ul>\n<li>PR\uc744 \ud1b5\ud574\uc11c \ucf54\ub529\ucee8\ubca4\uc158\uc744 \ub9de\ucd94\uace0 \uc774\uc57c\uae30\ub97c \ud588\uc9c0\ub9cc \uc544\uc26c\uc6b4 \ub290\ub08c\uc774 \ub9ce\uc558\uc2b5\ub2c8\ub2e4. PR \uc804\uc5d0 \uad6c\uc870\uac00 \uc7a1\ud600 \uc788\uc5c8\ub2e4\uba74, \ucee8\ubca4\uc158\uc774 \uc798 \uc815\uc758 \ub418\uc5b4 \uc788\uc5c8\ub2e4\uba74 \uc774\ub7f0 \uc0dd\uac01\uc774 \ub9ce\uc774 \uc84c\uc2b5\ub2c8\ub2e4.<\/li>\n<li>\ub4dc\ub77c\ub9c8\uc564\ucef4\ud37c\ub2c8 \uc870\uc9c1 \uad6c\uc870\uac00 \ubbf8\uc158 \uc870\uc9c1 \ud615\ud0dc\uc758 \u201cCrew\u201d \ub85c \ubd84\ub9ac \ub418\uc5b4 \uc788\ub2e4 \ubcf4\ub2c8 \ud30c\ud2b8\uac00 \ud568\uaed8 \ud558\ub294 \uc2dc\uac04\uc774 \ubd80\uc871\ud558\uc5ec \uad6c\uc870 \uac1c\uc120\uc774\ub77c\ub294 \ud070 \ubc29\ud5a5\uc5d0 \ub300\ud55c \ucc98\ub9ac\ub294 \uc5b4\ub5bb\uac8c \ud574\uc57c \ud560 \uc9c0 \ubc29\ubc95\uc744 \ucc3e\uc9c0 \ubabb \ud588\uc2b5\ub2c8\ub2e4.<\/li>\n<li>\uadf8\ub798\uc11c \ucc3e\uc740 \uacb0\ub860\uc774 \uc77c\uc8fc\uc77c\uc5d0 \ucd5c\uc18c 2\uc2dc\uac04 \uc529\uc774\ub77c\ub3c4 \ud568\uac8c \ud558\ub294\uc2dc\uac04\uc744 \ub9cc\ub4e4\uc5b4 \ubc1c\uc804 \uc2dc\ud0a4\ub294 \ubc29\ud5a5\uc744 \uc0dd\uac01 \ud558\uac8c \ub418\uc5c8\uc2b5\ub2c8\ub2e4.<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<p><!-- \/wp:list --><\/p>"},"elements":[],"widgetType":"text-editor"}],"isInner":false}],"isInner":false}]]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_page_assets]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[3101]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_edit_mode]]></wp:meta_key>
		<wp:meta_value><![CDATA[builder]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[유저 목록을 Redis Bitmap 구조로 저장하여 메모리 절약하기]]></title>
		<link>https://blog.dramancompany.com/2022/10/%ec%9c%a0%ec%a0%80-%eb%aa%a9%eb%a1%9d%ec%9d%84-redis-bitmap-%ea%b5%ac%ec%a1%b0%eb%a1%9c-%ec%a0%80%ec%9e%a5%ed%95%98%ec%97%ac-%eb%a9%94%eb%aa%a8%eb%a6%ac-%ec%a0%88%ec%95%bd%ed%95%98%ea%b8%b0/</link>
		<pubDate>Fri, 07 Oct 2022 06:42:32 +0000</pubDate>
		<dc:creator><![CDATA[aaronroh]]></dc:creator>
		<guid isPermaLink="false">https://blog.dramancompany.com/?p=3201</guid>
		<description></description>
		<content:encoded><![CDATA[<p><!-- wp:jetpack/markdown {"source":"안녕하세요, 리멤버 플랫폼 서버 파트의 노아론입니다. n이번 글에서는 특정 유저군을 타겟팅하는 과정에서 Redis의 SET 구조 대신 Bitmap 구조를 이용하여 어떻게 메모리를 절약할 수 있었는지에 대해 이야기하려고 합니다.nn[리멤버 리서치](https://survey.rememberapp.co.kr/)에선 설문 조건에 맞는 유저를 타겟팅하여 응답을 수집하고, 참여한 유저에겐 소정의 리워드를 지급하고 있습니다. n특정 유저에게 맞는 설문만을 제공하기 위하여 내부의 타겟 시스템을 이용해 설문마다 참여할 수 있는 유저의 고유 ID를 보관하고 있습니다. nn이 과정에서 Redis에는 설문에 참여할 수 있는 유저 ID 목록을 SET 구조로 저장하였는데요, n 보관해야 하는 유저의 수에 비해서 Redis에서 차지하는 메모리 크기가 지나치게 비대한 문제가 있었습니다.nnn## 리멤버 리서치에서는 Redis를 이렇게 사용합니다.nn리서치 운영을 위한 사내 어드민 페이지에서 설문 생성을 마치면 지정된 조건에 맞는 유저의 고유 ID를 가져오고,n설문 대상이 되는 유저 목록은 리멤버 내의 광고 서버에 요청하여 가져오고 있습니다nn![리멤버 리서치 서버의 구조] nn리서치 서버는 원하는 세부 조건에 맞게 타겟팅 된 유저 고유 ID 목록을 광고서버에 요청하여 데이터를 가져옵니다.n이렇게 가져온 설문 대상 유저 목록은 Redis에 저장되고 특정 유저가 설문의 대상인지 판별하는 용도로 데이터를 이용하게 됩니다.nnRedis에 대상 유저를 저장하는 용도로 채택한 이유로는 아래와 같습니다.n- 대상 유저 ID 목록의 크기는 적게는 수십명에서 많게는 수십만, 수백만의 단위로 구성됩니다. 유저 목록에 대한 데이터는 광고 서버에서 보존하고 있으므로, 대량의 크기를 가지는 정보를 다른 서비스의 DB에 다시 저장하는 작업은 피하였습니다.nn- 대상 유저 ID 목록은 설문이 종료된 뒤에 다시 사용하지 않는 정보입니다. Time-to-live를 어플리케이션 레이어에서 구현하지 않고, Redis 내에서 처리할 수 있습니다.nnnn## 마주한 상황nn유저 ID 목록을 Redis에 저장하는 과정에서 우려되는 지점을 발견하였습니다.n개발 당시 유저 ID를 Redis에 저장하는 방식으로는 다음 그림과 같이 SET 구조를 사용하였습니다.nn![survey:설문ID:target-user-ids 키가 SET 자료구조를 가지고 저장된다](https://blog.dramancompany.com/wp-content/uploads/2022/10/diagram_redis-survey-survey_id-target-user-ids.png)nn처음 설문을 생성하고 유저 5천명에게 타겟팅하였습니다. 이때 아래의 과정으로 유저 ID 5천개를 가지고 있는 SET이 추가됩니다.n![](https://blog.dramancompany.com/wp-content/uploads/2022/10/redis-sadd-survey1target-user-ids.png)nnn이 설문에서 어떤 유저가 참여 대상인지 알기 위해 총 298,456 Byte 크기의 메모리를 소모하였습니다.n![](https://blog.dramancompany.com/wp-content/uploads/2022/10/redis-survey1targetuser_ids-2.png)nn유저의 수가 상대적으로 적거나 동시 진행 중인 설문이 몇가지 되지 않는 상황에서는 천 단위의 유저 ID를 저장하는 상황은 당장 문제가 없어보입니다.n하지만 수십만명에 달하는 유저의 참여 가능 여부를 보관해야하는 상황이라면 이야기가 달라집니다.nnnn두번째 설문에서는 유저 19만명에게 타겟팅하고, 얼만큼의 메모리가 소모되었는지 확인해보겠습니다.n동일하게 타겟팅한 유저의 양만큼 SET이 추가됩니다n![](https://blog.dramancompany.com/wp-content/uploads/2022/10/redis-sadd-survey2target-user-ids.png)nnn이때 약 10439.65 KB (10.6902 MB)의 메모리가 소모됩니다.n![19만명일때 SCARD로 188608을, MEMORY USAGE로 10690200을 결과로 받은 이미지](https://blog.dramancompany.com/wp-content/uploads/2022/10/redis-memory_usage-survey2target-user-ids.png)nn19만명의 유저의 참여 정보를 저장하기 위해서 약 10MB에 달하는 메모리를 사용한다는 것은 문제가 될 것으로 우려하였습니다.n수 백만명을 대상으로 하는 설문 10개가 동시에 진행된다면 오로지 유저 목록을 담기 위해 사용하는 Redis의 메모리 크기만해도 기가바이트 단위가 될 것을 짐작할 수 있습니다.nn이러한 상황을 초래하게 만들지 않고자, 메모리 크기를 줄이기 위해 Redis의 Bitmap 구조를 고려하였습니다nRedis Bitmap은 이진 벡터와 같이 사용할 수 있는 String 자료형에서 확장된 것으로, 정수 0부터 N으로 구성된 형태의 SET을 효율적으로 표현할 수 있습니다.nnn## Redis Bitmap 구조를 이용해 개선 시도하기nnn특정 유저가 설문에 참여 가능한지 정보를 알 수 있어야 하므로, 아래 명령어처럼 Bit 오프셋을 유저의 ID로 사용하였고, Redis의 `GETBIT` 커맨드를 통해 오프셋 위치에 저장되는 Bit 값을 설문 참여 가능 대상 유저 여부로 사용하였습니다.nn![](https://blog.dramancompany.com/wp-content/uploads/2022/10/redis-bitmap-survey3target-user-ids.png)nn성능 면에선 SET 구조에서 사용할 수 있는 커맨드인 SISMEMBER의 시간복잡도는 O(1),nBitmap 구조의 String 값에서 가능한 커맨드인 GETBIT의 시간복잡도 또한 O(1) 으로n두 명령 모두 저장된 크기에 따른 성능 차이는 발생하지 않는 것으로 확인하였습니다.nnBitmap 구조로 변경하였을 때 메모리 크기는 어느정도 개선할 수 있었는지 보겠습니다.n![](https://blog.dramancompany.com/wp-content/uploads/2022/10/redis_memory_usage_chart.png)nn가장 큰 유저 ID가 50만이면서 50만명에 대한 참여 정보를 담는다면nSET 구조에선 20,194,504 Byte가, Bitmap 구조에선 114,768 Byte가 필요합니다.n만일 큰 유저 ID가 75만이고, 이들 75만명에 대한 참여 정보를 담는 경우엔nSET 구조에선 36,583,112 Byte가, Bitmap 구조에선 114,768 Byte가 필요하게 됩니다.nn우려되었던 메모리 크기의 문제를 SET 구조에서 Bitmap 구조로 변경하여 크게 절감할 수 있었습니다. nnnnnn## 마무리nn리멤버 리서치의 유저 타겟팅 과정에서 Redis Bitmap 구조를 이용한 것은 상수 시간의 시간 복잡도를 가지면서 차지하는 메모리는 절약하는데 이점을 얻었습니다. 그렇지만, Bitmap 구조가 모든 상황에서 좋은 것이 아니라는 점은 주의해야합니다.nn상대적으로 큰 오프셋을 가지며 적은 갯수의 데이터를 보관한다면 Bitmap보다 SET에 저장할 때에 차지하는 메모리 크기가 더 작습니다.n최대 유저 ID가 1백만이면서 유저 10명의 대상 여부를 저장하는 경우가 이러한 경우입니다.n수십 혹은 수백 단위의 상대적으로 적은 수의 유저가 포함되는 경우엔 SET구조를 함께 사용하도록 고려하는 것이 좋아보입니다.nnn또한, Bitmap 자료 내에서 Bit가 1인 모든 유저의 ID를 구하는 것은 레디스 명령어로서 지원하지 않습니다.n따라서 이는 Redis의 Lua Scripting을 이용해 해결해야 합니다.nn리멤버의 내부 어드민 페이지에서는 설문 참여 대상 유저 목록 조회를 위한 목적으로, Bit 값이 1인 유저 ID 목록에 대해서 Integer 배열을 반환하는 Lua Script를 구현하여 사용하고 있습니다.n리멤버 리서치에선 특정 유저의 설문 대상 여부를 판별하기 위한 용도로 쓰여 Bitmap 구조가 적합하였고, 속도를 상수 시간 내에 처리하도록 보장하면서 메모리 크기에서도 많은 이점을 가질 수 있었습니다.nnn글의 마무리는 채용 공고로 맺겠습니다.n리멤버에선 고난도 애플리케이션 개발에서 나오는 어려운 문제의 해결을 즐기는 동료 분을 모시고 있습니다. n[리멤버 서버 개발자 채용공고](https://hello.remember.co.kr/recruit/server)nnn감사합니다. n"} --></p>
<p style="text-align: left;">안녕하세요, 리멤버 플랫폼 서버 파트의 노아론입니다.<br />이번 글에서는 특정 유저군을 타겟팅하는 과정에서 Redis의 SET 구조 대신 Bitmap 구조를 이용하여 어떻게 메모리를 절약할 수 있었는지에 대해 이야기하려고 합니다.</p>
<p><a href="https://survey.rememberapp.co.kr/">리멤버 리서치</a>에선 설문 조건에 맞는 유저를 타겟팅하여 응답을 수집하고, 참여한 유저에겐 소정의 리워드를 지급하고 있습니다.<br />특정 유저에게 맞는 설문만을 제공하기 위하여 내부의 타겟 시스템을 이용해 설문마다 참여할 수 있는 유저의 고유 ID를 보관하고 있습니다.</p>
<p>이 과정에서 Redis에는 설문에 참여할 수 있는 유저 ID 목록을 SET 구조로 저장하였는데요,<br />보관해야 하는 유저의 수에 비해서 Redis에서 차지하는 메모리 크기가 지나치게 비대한 문제가 있었습니다.</p>
<p> </p>
<h2>리멤버 리서치에서는 Redis를 이렇게 사용합니다.</h2>
<p>리서치 운영을 위한 사내 어드민 페이지에서 설문 생성을 마치면 지정된 조건에 맞는 유저의 고유 ID를 가져오고,<br />설문 대상이 되는 유저 목록은 리멤버 내의 광고 서버에 요청하여 가져오고 있습니다</p>
<p><img src="https://blog.dramancompany.com/wp-content/uploads/2022/10/diagram_survey-api-service-map-2-e1665124468487.png" width="269" height="359" /></p>
<p> </p>
<p>리서치 서버는 원하는 세부 조건에 맞게 타겟팅 된 유저 고유 ID 목록을 광고서버에 요청하여 데이터를 가져옵니다.<br />이렇게 가져온 설문 대상 유저 목록은 Redis에 저장되고 특정 유저가 설문의 대상인지 판별하는 용도로 데이터를 이용하게 됩니다.</p>
<p>Redis에 대상 유저를 저장하는 용도로 채택한 이유로는 아래와 같습니다.</p>
<ul>
<li>
<p>대상 유저 ID 목록의 크기는 적게는 수십명에서 많게는 수십만, 수백만의 단위로 구성됩니다.<br />유저 목록에 대한 데이터는 광고 서버에서 보존하고 있으므로, 대량의 크기를 가지는 정보를 다른 서비스의 DB에 다시 저장하는 작업은 피하였습니다.</p>
</li>
<li>
<p>대상 유저 ID 목록은 설문이 종료된 뒤에 다시 사용하지 않는 정보입니다. Time-to-live를 어플리케이션 레이어에서 구현하지 않고, Redis 내에서 처리할 수 있습니다.</p>
</li>
</ul>
<h2> </h2>
<h2>마주한 상황</h2>
<p>유저 ID 목록을 Redis에 저장하는 과정에서 우려되는 지점을 발견하였습니다.<br />개발 당시 유저 ID를 Redis에 저장하는 방식으로는 다음 그림과 같이 SET 구조를 사용하였습니다.</p>
<p><img src="https://blog.dramancompany.com/wp-content/uploads/2022/10/diagram_redis-survey-survey_id-target-user-ids-1.png" /></p>
<p> </p>
<p> 설문을 생성하고 유저 5천명에게 타겟팅하였습니다. 이때 아래의 과정으로 유저 ID 5천개를 가지고 있는 SET이 추가됩니다. <img src="https://blog.dramancompany.com/wp-content/uploads/2022/10/redis-sadd-survey1target-user-ids.png" alt="" width="550" height="186" /></p>
<p> </p>
<p>이 설문에서 어떤 유저가 참여 대상인지 알기 위해 총 298,456 Byte 크기의 메모리를 소모하였습니다. <img src="https://blog.dramancompany.com/wp-content/uploads/2022/10/redis-survey1targetuser_ids-2.png" alt="" width="550" height="186" /></p>
<p> </p>
<p>유저의 수가 상대적으로 적거나 동시 진행 중인 설문이 몇가지 되지 않는 상황에서는 천 단위의 유저 ID를 저장하는 상황은 당장 문제가 없어보입니다.<br />하지만 수십만명에 달하는 유저의 참여 가능 여부를 보관해야하는 상황이라면 이야기가 달라집니다.</p>
<p>두번째 설문에서는 유저 19만명에게 타겟팅하고, 얼만큼의 메모리가 소모되었는지 확인해보겠습니다.<br />동일하게 타겟팅한 유저의 양만큼 SET이 추가됩니다 <img src="https://blog.dramancompany.com/wp-content/uploads/2022/10/redis-sadd-survey2target-user-ids.png" alt="" width="550" height="186" /></p>
<p> </p>
<p>이때 약 10439.65 KB (10.6902 MB)의 메모리가 소모됩니다. <img src="https://blog.dramancompany.com/wp-content/uploads/2022/10/redis-memory_usage-survey2target-user-ids.png" alt="19만명일때 SCARD로 188608을, MEMORY USAGE로 10690200을 결과로 받은 이미지" width="550" height="186" /></p>
<p>19만명의 유저의 참여 정보를 저장하기 위해서 약 10MB에 달하는 메모리를 사용한다는 것은 문제가 될 것으로 우려하였습니다.<br />수 백만명을 대상으로 하는 설문 10개가 동시에 진행된다면 오로지 유저 목록을 담기 위해 사용하는 Redis의 메모리 크기만해도 기가바이트 단위가 될 것을 짐작할 수 있습니다.</p>
<p>이러한 상황을 초래하게 만들지 않고자, 메모리 크기를 줄이기 위해 Redis의 Bitmap 구조를 고려하였습니다.<br />Redis Bitmap은 이진 벡터와 같이 사용할 수 있는 String 자료형에서 확장된 것으로, 정수 0부터 N으로 구성된 형태의 SET을 효율적으로 표현할 수 있습니다.</p>
<p> </p>
<h2>Redis Bitmap 구조를 이용해 개선 시도하기</h2>
<p>특정 유저가 설문에 참여 가능한지 정보를 알 수 있어야 하므로, 아래 명령어처럼 Bit 오프셋을 유저의 ID로 사용하였고,<br />Redis의 <code>GETBIT</code> 커맨드를 통해 오프셋 위치에 저장되는 Bit 값을 설문 참여 가능 대상 유저 여부로 사용하였습니다.</p>
<p><img src="https://blog.dramancompany.com/wp-content/uploads/2022/10/redis-bitmap-survey3target-user-ids.png" alt="" width="550" height="167" /></p>
<p>성능 면에선 SET 구조에서 사용할 수 있는 커맨드인 SISMEMBER의 시간복잡도는 O(1), Bitmap 구조의 String 값에서 가능한 커맨드인 GETBIT의 시간복잡도 또한 O(1) 으로<br />두 명령 모두 저장된 크기에 따른 성능 차이는 발생하지 않는 것으로 확인하였습니다.</p>
<p>Bitmap 구조로 변경하였을 때 메모리 크기는 어느정도 개선할 수 있었는지 보겠습니다. <img src="https://blog.dramancompany.com/wp-content/uploads/2022/10/redis_memory_usage_chart.png" alt="" /></p>
<p>가장 큰 유저 ID가 50만이면서 50만명에 대한 참여 정보를 담는다면 SET 구조에선 20,194,504 Byte, Bitmap 구조에선 114,768 Byte가 필요합니다.<br />만일 가장 큰 유저 ID가 75만이고, 이들 75만명에 대한 참여 정보를 담는 경우엔 SET 구조에선 36,583,112 Byte가, Bitmap 구조에선 114,768 Byte가 필요하게 됩니다.</p>
<p>우려되었던 메모리 크기의 문제를 SET 구조에서 Bitmap 구조로 변경하여 크게 절감할 수 있었습니다.</p>
<p> </p>
<h2>마무리</h2>
<p>리멤버 리서치의 유저 타겟팅 과정에서 Redis Bitmap 구조를 이용한 것은 상수 시간의 시간 복잡도를 가지면서 차지하는 메모리는 절약하는데 이점을 얻었습니다. <br />그렇지만, Bitmap 구조가 모든 상황에서 좋은 것이 아니라는 점은 주의해야합니다.</p>
<p>상대적으로 큰 오프셋을 가지며 적은 갯수의 데이터를 보관한다면 Bitmap보다 SET에 저장할 때에 차지하는 메모리 크기가 더 작습니다. <br />최대 유저 ID가 1백만이면서 유저 10명의 대상 여부를 저장하는 경우가 이러한 경우입니다. <br />수십 혹은 수백 단위의 상대적으로 적은 수의 유저가 포함되는 경우엔 SET구조를 함께 사용하도록 고려하는 것이 좋아보입니다.</p>
<p>또한, Bitmap 자료 내에서 Bit가 1인 모든 유저의 ID를 구하는 것은 레디스 명령어로서 지원하지 않습니다. 따라서 이는 Redis의 Lua Scripting을 이용해 해결해야 합니다.</p>
<p>리멤버의 내부 어드민 페이지에서는 설문 참여 대상 유저 목록 조회를 위한 목적으로,<br />Bit 값이 1인 유저 ID 목록에 대해서 Integer 배열을 반환하는 Lua Script를 구현하여 사용하고 있습니다. <br />리멤버 리서치에선 특정 유저의 설문 대상 여부를 판별하기 위한 용도로 쓰여 Bitmap 구조가 적합하였고, 속도를 상수 시간 내에 처리하도록 보장하면서 메모리 크기에서도 많은 이점을 가질 수 있었습니다.</p>
<p>글의 마무리는 채용 공고로 맺겠습니다.<br />리멤버에선 고난도 애플리케이션 개발에서 나오는 어려운 문제의 해결을 즐기는 동료 분을 모시고 있습니다.<br /><strong><a href="https://hello.remember.co.kr/recruit/server">리멤버 서버 개발자 채용공고</a></strong></p>
<p>감사합니다.</p>
<p><!-- /wp:jetpack/markdown --></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3201</wp:post_id>
		<wp:post_date><![CDATA[2022-10-07 15:42:32]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-10-07 06:42:32]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-10-28 13:59:11]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-10-28 04:59:11]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%ec%9c%a0%ec%a0%80-%eb%aa%a9%eb%a1%9d%ec%9d%84-redis-bitmap-%ea%b5%ac%ec%a1%b0%eb%a1%9c-%ec%a0%80%ec%9e%a5%ed%95%98%ec%97%ac-%eb%a9%94%eb%aa%a8%eb%a6%ac-%ec%a0%88%ec%95%bd%ed%95%98%ea%b8%b0]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="redis"><![CDATA[Redis]]></category>
		<category domain="category" nicename="develop"><![CDATA[Tech]]></category>
		<category domain="post_tag" nicename="%ea%b5%ac%ec%a1%b0%ea%b0%9c%ec%84%a0"><![CDATA[구조개선]]></category>
		<category domain="post_tag" nicename="%eb%a6%ac%eb%a9%a4%eb%b2%84"><![CDATA[리멤버]]></category>
		<category domain="post_tag" nicename="%ec%84%9c%eb%b2%84"><![CDATA[서버]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle_flag]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729519590;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:2528;}i:1;a:1:{s:2:"id";i:2019;}i:2;a:1:{s:2:"id";i:312;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_single_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:23:{s:8:"subtitle";s:0:"";s:6:"format";s:8:"standard";s:5:"video";s:0:"";s:7:"gallery";s:0:"";s:11:"source_name";s:0:"";s:10:"source_url";s:0:"";s:8:"via_name";s:0:"";s:7:"via_url";s:0:"";s:17:"override_template";s:1:"0";s:8:"override";a:1:{i:0;a:32:{s:8:"template";s:1:"1";s:18:"single_blog_custom";s:0:"";s:8:"parallax";s:1:"1";s:10:"fullscreen";s:1:"1";s:6:"layout";s:13:"right-sidebar";s:7:"sidebar";s:15:"default-sidebar";s:14:"second_sidebar";s:15:"default-sidebar";s:14:"sticky_sidebar";s:1:"1";s:14:"share_position";s:3:"top";s:17:"share_float_style";s:16:"share-monocrhome";s:18:"show_share_counter";s:1:"1";s:17:"show_view_counter";s:1:"1";s:13:"show_featured";s:1:"1";s:14:"show_post_meta";s:1:"1";s:16:"show_post_author";s:1:"1";s:22:"show_post_author_image";s:1:"1";s:14:"show_post_date";s:1:"1";s:16:"post_date_format";s:7:"default";s:23:"post_date_format_custom";s:5:"Y/m/d";s:18:"show_post_category";s:1:"1";s:22:"show_post_reading_time";s:1:"0";s:21:"post_reading_time_wpm";s:3:"300";s:16:"show_zoom_button";s:1:"0";s:20:"zoom_button_out_step";s:1:"2";s:19:"zoom_button_in_step";s:1:"3";s:13:"show_post_tag";s:1:"1";s:19:"show_prev_next_post";s:1:"1";s:15:"show_popup_post";s:1:"1";s:17:"number_popup_post";s:1:"1";s:15:"show_author_box";s:1:"0";s:17:"show_post_related";s:1:"0";s:24:"show_inline_post_related";s:1:"0";}}s:19:"override_image_size";s:1:"0";s:14:"image_override";a:1:{i:0;a:2:{s:26:"single_post_thumbnail_size";s:8:"crop-500";s:24:"single_post_gallery_size";s:8:"crop-500";}}s:13:"trending_post";s:1:"0";s:22:"trending_post_position";s:4:"meta";s:19:"trending_post_label";s:8:"Trending";s:14:"sponsored_post";s:1:"0";s:20:"sponsored_post_label";s:12:"Sponsored by";s:19:"sponsored_post_name";s:0:"";s:18:"sponsored_post_url";s:0:"";s:26:"sponsored_post_logo_enable";s:1:"0";s:19:"sponsored_post_logo";s:0:"";s:19:"sponsored_post_desc";s:0:"";s:10:"disable_ad";s:1:"0";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:2:"id";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_estimated-reading-time-minutes]]></wp:meta_key>
		<wp:meta_value><![CDATA[6]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_edit_mode]]></wp:meta_key>
		<wp:meta_value><![CDATA[builder]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_template_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[wp-post]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_version]]></wp:meta_key>
		<wp:meta_value><![CDATA[3.6.1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_data]]></wp:meta_key>
		<wp:meta_value><![CDATA[[{"id":"36c5e97","elType":"section","settings":[],"elements":[{"id":"4514e6a","elType":"column","settings":{"_column_size":100,"_inline_size":null},"elements":[],"isInner":false}],"isInner":false},{"id":"37177034","elType":"section","settings":[],"elements":[{"id":"b53c9e0","elType":"column","settings":{"_column_size":100},"elements":[{"id":"5cfe99e9","elType":"widget","settings":{"editor":"<p><!-- wp:jetpack\/markdown {\"source\":\"\uc548\ub155\ud558\uc138\uc694, \ub9ac\uba64\ubc84 \ud50c\ub7ab\ud3fc \uc11c\ubc84 \ud30c\ud2b8\uc758 \ub178\uc544\ub860\uc785\ub2c8\ub2e4. \\n\uc774\ubc88 \uae00\uc5d0\uc11c\ub294 \ud2b9\uc815 \uc720\uc800\uad70\uc744 \ud0c0\uac9f\ud305\ud558\ub294 \uacfc\uc815\uc5d0\uc11c Redis\uc758 SET \uad6c\uc870 \ub300\uc2e0 Bitmap \uad6c\uc870\ub97c \uc774\uc6a9\ud558\uc5ec \uc5b4\ub5bb\uac8c \uba54\ubaa8\ub9ac\ub97c \uc808\uc57d\ud560 \uc218 \uc788\uc5c8\ub294\uc9c0\uc5d0 \ub300\ud574 \uc774\uc57c\uae30\ud558\ub824\uace0 \ud569\ub2c8\ub2e4.\\n\\n[\ub9ac\uba64\ubc84 \ub9ac\uc11c\uce58](https:\/\/survey.rememberapp.co.kr\/)\uc5d0\uc120 \uc124\ubb38 \uc870\uac74\uc5d0 \ub9de\ub294 \uc720\uc800\ub97c \ud0c0\uac9f\ud305\ud558\uc5ec \uc751\ub2f5\uc744 \uc218\uc9d1\ud558\uace0, \ucc38\uc5ec\ud55c \uc720\uc800\uc5d0\uac90 \uc18c\uc815\uc758 \ub9ac\uc6cc\ub4dc\ub97c \uc9c0\uae09\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \\n\ud2b9\uc815 \uc720\uc800\uc5d0\uac8c \ub9de\ub294 \uc124\ubb38\ub9cc\uc744 \uc81c\uacf5\ud558\uae30 \uc704\ud558\uc5ec \ub0b4\ubd80\uc758 \ud0c0\uac9f \uc2dc\uc2a4\ud15c\uc744 \uc774\uc6a9\ud574 \uc124\ubb38\ub9c8\ub2e4 \ucc38\uc5ec\ud560 \uc218 \uc788\ub294 \uc720\uc800\uc758 \uace0\uc720 ID\ub97c \ubcf4\uad00\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \\n\\n\uc774 \uacfc\uc815\uc5d0\uc11c Redis\uc5d0\ub294 \uc124\ubb38\uc5d0 \ucc38\uc5ec\ud560 \uc218 \uc788\ub294 \uc720\uc800 ID \ubaa9\ub85d\uc744 SET \uad6c\uc870\ub85c \uc800\uc7a5\ud558\uc600\ub294\ub370\uc694, \\n \ubcf4\uad00\ud574\uc57c \ud558\ub294 \uc720\uc800\uc758 \uc218\uc5d0 \ube44\ud574\uc11c Redis\uc5d0\uc11c \ucc28\uc9c0\ud558\ub294 \uba54\ubaa8\ub9ac \ud06c\uae30\uac00 \uc9c0\ub098\uce58\uac8c \ube44\ub300\ud55c \ubb38\uc81c\uac00 \uc788\uc5c8\uc2b5\ub2c8\ub2e4.\\n\\n\\n## \ub9ac\uba64\ubc84 \ub9ac\uc11c\uce58\uc5d0\uc11c\ub294 Redis\ub97c \uc774\ub807\uac8c \uc0ac\uc6a9\ud569\ub2c8\ub2e4.\\n\\n\ub9ac\uc11c\uce58 \uc6b4\uc601\uc744 \uc704\ud55c \uc0ac\ub0b4 \uc5b4\ub4dc\ubbfc \ud398\uc774\uc9c0\uc5d0\uc11c \uc124\ubb38 \uc0dd\uc131\uc744 \ub9c8\uce58\uba74 \uc9c0\uc815\ub41c \uc870\uac74\uc5d0 \ub9de\ub294 \uc720\uc800\uc758 \uace0\uc720 ID\ub97c \uac00\uc838\uc624\uace0,\\n\uc124\ubb38 \ub300\uc0c1\uc774 \ub418\ub294 \uc720\uc800 \ubaa9\ub85d\uc740 \ub9ac\uba64\ubc84 \ub0b4\uc758 \uad11\uace0 \uc11c\ubc84\uc5d0 \uc694\uccad\ud558\uc5ec \uac00\uc838\uc624\uace0 \uc788\uc2b5\ub2c8\ub2e4\\n\\n![\ub9ac\uba64\ubc84 \ub9ac\uc11c\uce58 \uc11c\ubc84\uc758 \uad6c\uc870] \\n\\n\ub9ac\uc11c\uce58 \uc11c\ubc84\ub294 \uc6d0\ud558\ub294 \uc138\ubd80 \uc870\uac74\uc5d0 \ub9de\uac8c \ud0c0\uac9f\ud305 \ub41c \uc720\uc800 \uace0\uc720 ID \ubaa9\ub85d\uc744 \uad11\uace0\uc11c\ubc84\uc5d0 \uc694\uccad\ud558\uc5ec \ub370\uc774\ud130\ub97c \uac00\uc838\uc635\ub2c8\ub2e4.\\n\uc774\ub807\uac8c \uac00\uc838\uc628 \uc124\ubb38 \ub300\uc0c1 \uc720\uc800 \ubaa9\ub85d\uc740 Redis\uc5d0 \uc800\uc7a5\ub418\uace0 \ud2b9\uc815 \uc720\uc800\uac00 \uc124\ubb38\uc758 \ub300\uc0c1\uc778\uc9c0 \ud310\ubcc4\ud558\ub294 \uc6a9\ub3c4\ub85c \ub370\uc774\ud130\ub97c \uc774\uc6a9\ud558\uac8c \ub429\ub2c8\ub2e4.\\n\\nRedis\uc5d0 \ub300\uc0c1 \uc720\uc800\ub97c \uc800\uc7a5\ud558\ub294 \uc6a9\ub3c4\ub85c \ucc44\ud0dd\ud55c \uc774\uc720\ub85c\ub294 \uc544\ub798\uc640 \uac19\uc2b5\ub2c8\ub2e4.\\n- \ub300\uc0c1 \uc720\uc800 ID \ubaa9\ub85d\uc758 \ud06c\uae30\ub294 \uc801\uac8c\ub294 \uc218\uc2ed\uba85\uc5d0\uc11c \ub9ce\uac8c\ub294 \uc218\uc2ed\ub9cc, \uc218\ubc31\ub9cc\uc758 \ub2e8\uc704\ub85c \uad6c\uc131\ub429\ub2c8\ub2e4. \uc720\uc800 \ubaa9\ub85d\uc5d0 \ub300\ud55c \ub370\uc774\ud130\ub294 \uad11\uace0 \uc11c\ubc84\uc5d0\uc11c \ubcf4\uc874\ud558\uace0 \uc788\uc73c\ubbc0\ub85c, \ub300\ub7c9\uc758 \ud06c\uae30\ub97c \uac00\uc9c0\ub294 \uc815\ubcf4\ub97c \ub2e4\ub978 \uc11c\ube44\uc2a4\uc758 DB\uc5d0 \ub2e4\uc2dc \uc800\uc7a5\ud558\ub294 \uc791\uc5c5\uc740 \ud53c\ud558\uc600\uc2b5\ub2c8\ub2e4.\\n\\n- \ub300\uc0c1 \uc720\uc800 ID \ubaa9\ub85d\uc740 \uc124\ubb38\uc774 \uc885\ub8cc\ub41c \ub4a4\uc5d0 \ub2e4\uc2dc \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub294 \uc815\ubcf4\uc785\ub2c8\ub2e4. Time-to-live\ub97c \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158 \ub808\uc774\uc5b4\uc5d0\uc11c \uad6c\ud604\ud558\uc9c0 \uc54a\uace0, Redis \ub0b4\uc5d0\uc11c \ucc98\ub9ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\\n\\n\\n\\n## \ub9c8\uc8fc\ud55c \uc0c1\ud669\\n\\n\uc720\uc800 ID \ubaa9\ub85d\uc744 Redis\uc5d0 \uc800\uc7a5\ud558\ub294 \uacfc\uc815\uc5d0\uc11c \uc6b0\ub824\ub418\ub294 \uc9c0\uc810\uc744 \ubc1c\uacac\ud558\uc600\uc2b5\ub2c8\ub2e4.\\n\uac1c\ubc1c \ub2f9\uc2dc \uc720\uc800 ID\ub97c Redis\uc5d0 \uc800\uc7a5\ud558\ub294 \ubc29\uc2dd\uc73c\ub85c\ub294 \ub2e4\uc74c \uadf8\ub9bc\uacfc \uac19\uc774 SET \uad6c\uc870\ub97c \uc0ac\uc6a9\ud558\uc600\uc2b5\ub2c8\ub2e4.\\n\\n![survey:\uc124\ubb38ID:target-user-ids \ud0a4\uac00 SET \uc790\ub8cc\uad6c\uc870\ub97c \uac00\uc9c0\uace0 \uc800\uc7a5\ub41c\ub2e4](https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2022\/10\/diagram_redis-survey-survey_id-target-user-ids.png)\\n\\n\ucc98\uc74c \uc124\ubb38\uc744 \uc0dd\uc131\ud558\uace0 \uc720\uc800 5\ucc9c\uba85\uc5d0\uac8c \ud0c0\uac9f\ud305\ud558\uc600\uc2b5\ub2c8\ub2e4. \uc774\ub54c \uc544\ub798\uc758 \uacfc\uc815\uc73c\ub85c \uc720\uc800 ID 5\ucc9c\uac1c\ub97c \uac00\uc9c0\uace0 \uc788\ub294 SET\uc774 \ucd94\uac00\ub429\ub2c8\ub2e4.\\n![](https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2022\/10\/redis-sadd-survey1target-user-ids.png)\\n\\n\\n\uc774 \uc124\ubb38\uc5d0\uc11c \uc5b4\ub5a4 \uc720\uc800\uac00 \ucc38\uc5ec \ub300\uc0c1\uc778\uc9c0 \uc54c\uae30 \uc704\ud574 \ucd1d 298,456 Byte \ud06c\uae30\uc758 \uba54\ubaa8\ub9ac\ub97c \uc18c\ubaa8\ud558\uc600\uc2b5\ub2c8\ub2e4.\\n![](https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2022\/10\/redis-survey1targetuser_ids-2.png)\\n\\n\uc720\uc800\uc758 \uc218\uac00 \uc0c1\ub300\uc801\uc73c\ub85c \uc801\uac70\ub098 \ub3d9\uc2dc \uc9c4\ud589 \uc911\uc778 \uc124\ubb38\uc774 \uba87\uac00\uc9c0 \ub418\uc9c0 \uc54a\ub294 \uc0c1\ud669\uc5d0\uc11c\ub294 \ucc9c \ub2e8\uc704\uc758 \uc720\uc800 ID\ub97c \uc800\uc7a5\ud558\ub294 \uc0c1\ud669\uc740 \ub2f9\uc7a5 \ubb38\uc81c\uac00 \uc5c6\uc5b4\ubcf4\uc785\ub2c8\ub2e4.\\n\ud558\uc9c0\ub9cc \uc218\uc2ed\ub9cc\uba85\uc5d0 \ub2ec\ud558\ub294 \uc720\uc800\uc758 \ucc38\uc5ec \uac00\ub2a5 \uc5ec\ubd80\ub97c \ubcf4\uad00\ud574\uc57c\ud558\ub294 \uc0c1\ud669\uc774\ub77c\uba74 \uc774\uc57c\uae30\uac00 \ub2ec\ub77c\uc9d1\ub2c8\ub2e4.\\n\\n\\n\\n\ub450\ubc88\uc9f8 \uc124\ubb38\uc5d0\uc11c\ub294 \uc720\uc800 19\ub9cc\uba85\uc5d0\uac8c \ud0c0\uac9f\ud305\ud558\uace0, \uc5bc\ub9cc\ud07c\uc758 \uba54\ubaa8\ub9ac\uac00 \uc18c\ubaa8\ub418\uc5c8\ub294\uc9c0 \ud655\uc778\ud574\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\\n\ub3d9\uc77c\ud558\uac8c \ud0c0\uac9f\ud305\ud55c \uc720\uc800\uc758 \uc591\ub9cc\ud07c SET\uc774 \ucd94\uac00\ub429\ub2c8\ub2e4\\n![](https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2022\/10\/redis-sadd-survey2target-user-ids.png)\\n\\n\\n\uc774\ub54c \uc57d 10439.65 KB (10.6902 MB)\uc758 \uba54\ubaa8\ub9ac\uac00 \uc18c\ubaa8\ub429\ub2c8\ub2e4.\\n![19\ub9cc\uba85\uc77c\ub54c SCARD\ub85c 188608\uc744, MEMORY USAGE\ub85c 10690200\uc744 \uacb0\uacfc\ub85c \ubc1b\uc740 \uc774\ubbf8\uc9c0](https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2022\/10\/redis-memory_usage-survey2target-user-ids.png)\\n\\n19\ub9cc\uba85\uc758 \uc720\uc800\uc758 \ucc38\uc5ec \uc815\ubcf4\ub97c \uc800\uc7a5\ud558\uae30 \uc704\ud574\uc11c \uc57d 10MB\uc5d0 \ub2ec\ud558\ub294 \uba54\ubaa8\ub9ac\ub97c \uc0ac\uc6a9\ud55c\ub2e4\ub294 \uac83\uc740 \ubb38\uc81c\uac00 \ub420 \uac83\uc73c\ub85c \uc6b0\ub824\ud558\uc600\uc2b5\ub2c8\ub2e4.\\n\uc218 \ubc31\ub9cc\uba85\uc744 \ub300\uc0c1\uc73c\ub85c \ud558\ub294 \uc124\ubb38 10\uac1c\uac00 \ub3d9\uc2dc\uc5d0 \uc9c4\ud589\ub41c\ub2e4\uba74 \uc624\ub85c\uc9c0 \uc720\uc800 \ubaa9\ub85d\uc744 \ub2f4\uae30 \uc704\ud574 \uc0ac\uc6a9\ud558\ub294 Redis\uc758 \uba54\ubaa8\ub9ac \ud06c\uae30\ub9cc\ud574\ub3c4 \uae30\uac00\ubc14\uc774\ud2b8 \ub2e8\uc704\uac00 \ub420 \uac83\uc744 \uc9d0\uc791\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\\n\\n\uc774\ub7ec\ud55c \uc0c1\ud669\uc744 \ucd08\ub798\ud558\uac8c \ub9cc\ub4e4\uc9c0 \uc54a\uace0\uc790, \uba54\ubaa8\ub9ac \ud06c\uae30\ub97c \uc904\uc774\uae30 \uc704\ud574 Redis\uc758 Bitmap \uad6c\uc870\ub97c \uace0\ub824\ud558\uc600\uc2b5\ub2c8\ub2e4\\nRedis Bitmap\uc740 \uc774\uc9c4 \ubca1\ud130\uc640 \uac19\uc774 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 String \uc790\ub8cc\ud615\uc5d0\uc11c \ud655\uc7a5\ub41c \uac83\uc73c\ub85c, \uc815\uc218 0\ubd80\ud130 N\uc73c\ub85c \uad6c\uc131\ub41c \ud615\ud0dc\uc758 SET\uc744 \ud6a8\uc728\uc801\uc73c\ub85c \ud45c\ud604\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\\n\\n\\n## Redis Bitmap \uad6c\uc870\ub97c \uc774\uc6a9\ud574 \uac1c\uc120 \uc2dc\ub3c4\ud558\uae30\\n\\n\\n\ud2b9\uc815 \uc720\uc800\uac00 \uc124\ubb38\uc5d0 \ucc38\uc5ec \uac00\ub2a5\ud55c\uc9c0 \uc815\ubcf4\ub97c \uc54c \uc218 \uc788\uc5b4\uc57c \ud558\ubbc0\ub85c, \uc544\ub798 \uba85\ub839\uc5b4\ucc98\ub7fc Bit \uc624\ud504\uc14b\uc744 \uc720\uc800\uc758 ID\ub85c \uc0ac\uc6a9\ud558\uc600\uace0, Redis\uc758 `GETBIT` \ucee4\ub9e8\ub4dc\ub97c \ud1b5\ud574 \uc624\ud504\uc14b \uc704\uce58\uc5d0 \uc800\uc7a5\ub418\ub294 Bit \uac12\uc744 \uc124\ubb38 \ucc38\uc5ec \uac00\ub2a5 \ub300\uc0c1 \uc720\uc800 \uc5ec\ubd80\ub85c \uc0ac\uc6a9\ud558\uc600\uc2b5\ub2c8\ub2e4.\\n\\n![](https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2022\/10\/redis-bitmap-survey3target-user-ids.png)\\n\\n\uc131\ub2a5 \uba74\uc5d0\uc120 SET \uad6c\uc870\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ucee4\ub9e8\ub4dc\uc778 SISMEMBER\uc758 \uc2dc\uac04\ubcf5\uc7a1\ub3c4\ub294 O(1),\\nBitmap \uad6c\uc870\uc758 String \uac12\uc5d0\uc11c \uac00\ub2a5\ud55c \ucee4\ub9e8\ub4dc\uc778 GETBIT\uc758 \uc2dc\uac04\ubcf5\uc7a1\ub3c4 \ub610\ud55c O(1) \uc73c\ub85c\\n\ub450 \uba85\ub839 \ubaa8\ub450 \uc800\uc7a5\ub41c \ud06c\uae30\uc5d0 \ub530\ub978 \uc131\ub2a5 \ucc28\uc774\ub294 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\ub294 \uac83\uc73c\ub85c \ud655\uc778\ud558\uc600\uc2b5\ub2c8\ub2e4.\\n\\nBitmap \uad6c\uc870\ub85c \ubcc0\uacbd\ud558\uc600\uc744 \ub54c \uba54\ubaa8\ub9ac \ud06c\uae30\ub294 \uc5b4\ub290\uc815\ub3c4 \uac1c\uc120\ud560 \uc218 \uc788\uc5c8\ub294\uc9c0 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\\n![](https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2022\/10\/redis_memory_usage_chart.png)\\n\\n\uac00\uc7a5 \ud070 \uc720\uc800 ID\uac00 50\ub9cc\uc774\uba74\uc11c 50\ub9cc\uba85\uc5d0 \ub300\ud55c \ucc38\uc5ec \uc815\ubcf4\ub97c \ub2f4\ub294\ub2e4\uba74\\nSET \uad6c\uc870\uc5d0\uc120 20,194,504 Byte\uac00, Bitmap \uad6c\uc870\uc5d0\uc120 114,768 Byte\uac00 \ud544\uc694\ud569\ub2c8\ub2e4.\\n\ub9cc\uc77c \ud070 \uc720\uc800 ID\uac00 75\ub9cc\uc774\uace0, \uc774\ub4e4 75\ub9cc\uba85\uc5d0 \ub300\ud55c \ucc38\uc5ec \uc815\ubcf4\ub97c \ub2f4\ub294 \uacbd\uc6b0\uc5d4\\nSET \uad6c\uc870\uc5d0\uc120 36,583,112 Byte\uac00, Bitmap \uad6c\uc870\uc5d0\uc120 114,768 Byte\uac00 \ud544\uc694\ud558\uac8c \ub429\ub2c8\ub2e4.\\n\\n\uc6b0\ub824\ub418\uc5c8\ub358 \uba54\ubaa8\ub9ac \ud06c\uae30\uc758 \ubb38\uc81c\ub97c SET \uad6c\uc870\uc5d0\uc11c Bitmap \uad6c\uc870\ub85c \ubcc0\uacbd\ud558\uc5ec \ud06c\uac8c \uc808\uac10\ud560 \uc218 \uc788\uc5c8\uc2b5\ub2c8\ub2e4. \\n\\n\\n\\n\\n\\n## \ub9c8\ubb34\ub9ac\\n\\n\ub9ac\uba64\ubc84 \ub9ac\uc11c\uce58\uc758 \uc720\uc800 \ud0c0\uac9f\ud305 \uacfc\uc815\uc5d0\uc11c Redis Bitmap \uad6c\uc870\ub97c \uc774\uc6a9\ud55c \uac83\uc740 \uc0c1\uc218 \uc2dc\uac04\uc758 \uc2dc\uac04 \ubcf5\uc7a1\ub3c4\ub97c \uac00\uc9c0\uba74\uc11c \ucc28\uc9c0\ud558\ub294 \uba54\ubaa8\ub9ac\ub294 \uc808\uc57d\ud558\ub294\ub370 \uc774\uc810\uc744 \uc5bb\uc5c8\uc2b5\ub2c8\ub2e4. \uadf8\ub807\uc9c0\ub9cc, Bitmap \uad6c\uc870\uac00 \ubaa8\ub4e0 \uc0c1\ud669\uc5d0\uc11c \uc88b\uc740 \uac83\uc774 \uc544\ub2c8\ub77c\ub294 \uc810\uc740 \uc8fc\uc758\ud574\uc57c\ud569\ub2c8\ub2e4.\\n\\n\uc0c1\ub300\uc801\uc73c\ub85c \ud070 \uc624\ud504\uc14b\uc744 \uac00\uc9c0\uba70 \uc801\uc740 \uac2f\uc218\uc758 \ub370\uc774\ud130\ub97c \ubcf4\uad00\ud55c\ub2e4\uba74 Bitmap\ubcf4\ub2e4 SET\uc5d0 \uc800\uc7a5\ud560 \ub54c\uc5d0 \ucc28\uc9c0\ud558\ub294 \uba54\ubaa8\ub9ac \ud06c\uae30\uac00 \ub354 \uc791\uc2b5\ub2c8\ub2e4.\\n\ucd5c\ub300 \uc720\uc800 ID\uac00 1\ubc31\ub9cc\uc774\uba74\uc11c \uc720\uc800 10\uba85\uc758 \ub300\uc0c1 \uc5ec\ubd80\ub97c \uc800\uc7a5\ud558\ub294 \uacbd\uc6b0\uac00 \uc774\ub7ec\ud55c \uacbd\uc6b0\uc785\ub2c8\ub2e4.\\n\uc218\uc2ed \ud639\uc740 \uc218\ubc31 \ub2e8\uc704\uc758 \uc0c1\ub300\uc801\uc73c\ub85c \uc801\uc740 \uc218\uc758 \uc720\uc800\uac00 \ud3ec\ud568\ub418\ub294 \uacbd\uc6b0\uc5d4 SET\uad6c\uc870\ub97c \ud568\uaed8 \uc0ac\uc6a9\ud558\ub3c4\ub85d \uace0\ub824\ud558\ub294 \uac83\uc774 \uc88b\uc544\ubcf4\uc785\ub2c8\ub2e4.\\n\\n\\n\ub610\ud55c, Bitmap \uc790\ub8cc \ub0b4\uc5d0\uc11c Bit\uac00 1\uc778 \ubaa8\ub4e0 \uc720\uc800\uc758 ID\ub97c \uad6c\ud558\ub294 \uac83\uc740 \ub808\ub514\uc2a4 \uba85\ub839\uc5b4\ub85c\uc11c \uc9c0\uc6d0\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.\\n\ub530\ub77c\uc11c \uc774\ub294 Redis\uc758 Lua Scripting\uc744 \uc774\uc6a9\ud574 \ud574\uacb0\ud574\uc57c \ud569\ub2c8\ub2e4.\\n\\n\ub9ac\uba64\ubc84\uc758 \ub0b4\ubd80 \uc5b4\ub4dc\ubbfc \ud398\uc774\uc9c0\uc5d0\uc11c\ub294 \uc124\ubb38 \ucc38\uc5ec \ub300\uc0c1 \uc720\uc800 \ubaa9\ub85d \uc870\ud68c\ub97c \uc704\ud55c \ubaa9\uc801\uc73c\ub85c, Bit \uac12\uc774 1\uc778 \uc720\uc800 ID \ubaa9\ub85d\uc5d0 \ub300\ud574\uc11c Integer \ubc30\uc5f4\uc744 \ubc18\ud658\ud558\ub294 Lua Script\ub97c \uad6c\ud604\ud558\uc5ec \uc0ac\uc6a9\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4.\\n\ub9ac\uba64\ubc84 \ub9ac\uc11c\uce58\uc5d0\uc120 \ud2b9\uc815 \uc720\uc800\uc758 \uc124\ubb38 \ub300\uc0c1 \uc5ec\ubd80\ub97c \ud310\ubcc4\ud558\uae30 \uc704\ud55c \uc6a9\ub3c4\ub85c \uc4f0\uc5ec Bitmap \uad6c\uc870\uac00 \uc801\ud569\ud558\uc600\uace0, \uc18d\ub3c4\ub97c \uc0c1\uc218 \uc2dc\uac04 \ub0b4\uc5d0 \ucc98\ub9ac\ud558\ub3c4\ub85d \ubcf4\uc7a5\ud558\uba74\uc11c \uba54\ubaa8\ub9ac \ud06c\uae30\uc5d0\uc11c\ub3c4 \ub9ce\uc740 \uc774\uc810\uc744 \uac00\uc9c8 \uc218 \uc788\uc5c8\uc2b5\ub2c8\ub2e4.\\n\\n\\n\uae00\uc758 \ub9c8\ubb34\ub9ac\ub294 \ucc44\uc6a9 \uacf5\uace0\ub85c \ub9fa\uaca0\uc2b5\ub2c8\ub2e4.\\n\ub9ac\uba64\ubc84\uc5d0\uc120 \uace0\ub09c\ub3c4 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uac1c\ubc1c\uc5d0\uc11c \ub098\uc624\ub294 \uc5b4\ub824\uc6b4 \ubb38\uc81c\uc758 \ud574\uacb0\uc744 \uc990\uae30\ub294 \ub3d9\ub8cc \ubd84\uc744 \ubaa8\uc2dc\uace0 \uc788\uc2b5\ub2c8\ub2e4. \\n[\ub9ac\uba64\ubc84 \uc11c\ubc84 \uac1c\ubc1c\uc790 \ucc44\uc6a9\uacf5\uace0](https:\/\/hello.remember.co.kr\/recruit\/server)\\n\\n\\n\uac10\uc0ac\ud569\ub2c8\ub2e4. \\n\"} --><\/p>\n<div class=\"wp-block-jetpack-markdown\">\n<p style=\"text-align: left;\">\uc548\ub155\ud558\uc138\uc694, \ub9ac\uba64\ubc84 \ud50c\ub7ab\ud3fc \uc11c\ubc84 \ud30c\ud2b8\uc758 \ub178\uc544\ub860\uc785\ub2c8\ub2e4.<br \/>\uc774\ubc88 \uae00\uc5d0\uc11c\ub294 \ud2b9\uc815 \uc720\uc800\uad70\uc744 \ud0c0\uac9f\ud305\ud558\ub294 \uacfc\uc815\uc5d0\uc11c Redis\uc758 SET \uad6c\uc870 \ub300\uc2e0 Bitmap \uad6c\uc870\ub97c \uc774\uc6a9\ud558\uc5ec \uc5b4\ub5bb\uac8c \uba54\ubaa8\ub9ac\ub97c \uc808\uc57d\ud560 \uc218 \uc788\uc5c8\ub294\uc9c0\uc5d0 \ub300\ud574 \uc774\uc57c\uae30\ud558\ub824\uace0 \ud569\ub2c8\ub2e4.<\/p>\n<p><a href=\"https:\/\/survey.rememberapp.co.kr\/\">\ub9ac\uba64\ubc84 \ub9ac\uc11c\uce58<\/a>\uc5d0\uc120 \uc124\ubb38 \uc870\uac74\uc5d0 \ub9de\ub294 \uc720\uc800\ub97c \ud0c0\uac9f\ud305\ud558\uc5ec \uc751\ub2f5\uc744 \uc218\uc9d1\ud558\uace0, \ucc38\uc5ec\ud55c \uc720\uc800\uc5d0\uac90 \uc18c\uc815\uc758 \ub9ac\uc6cc\ub4dc\ub97c \uc9c0\uae09\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4.<br \/>\ud2b9\uc815 \uc720\uc800\uc5d0\uac8c \ub9de\ub294 \uc124\ubb38\ub9cc\uc744 \uc81c\uacf5\ud558\uae30 \uc704\ud558\uc5ec \ub0b4\ubd80\uc758 \ud0c0\uac9f \uc2dc\uc2a4\ud15c\uc744 \uc774\uc6a9\ud574 \uc124\ubb38\ub9c8\ub2e4 \ucc38\uc5ec\ud560 \uc218 \uc788\ub294 \uc720\uc800\uc758 \uace0\uc720 ID\ub97c \ubcf4\uad00\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4.<\/p>\n<p>\uc774 \uacfc\uc815\uc5d0\uc11c Redis\uc5d0\ub294 \uc124\ubb38\uc5d0 \ucc38\uc5ec\ud560 \uc218 \uc788\ub294 \uc720\uc800 ID \ubaa9\ub85d\uc744 SET \uad6c\uc870\ub85c \uc800\uc7a5\ud558\uc600\ub294\ub370\uc694,<br \/>\ubcf4\uad00\ud574\uc57c \ud558\ub294 \uc720\uc800\uc758 \uc218\uc5d0 \ube44\ud574\uc11c Redis\uc5d0\uc11c \ucc28\uc9c0\ud558\ub294 \uba54\ubaa8\ub9ac \ud06c\uae30\uac00 \uc9c0\ub098\uce58\uac8c \ube44\ub300\ud55c \ubb38\uc81c\uac00 \uc788\uc5c8\uc2b5\ub2c8\ub2e4.<\/p>\n<p>\u00a0<\/p>\n<h2>\ub9ac\uba64\ubc84 \ub9ac\uc11c\uce58\uc5d0\uc11c\ub294 Redis\ub97c \uc774\ub807\uac8c \uc0ac\uc6a9\ud569\ub2c8\ub2e4.<\/h2>\n<p>\ub9ac\uc11c\uce58 \uc6b4\uc601\uc744 \uc704\ud55c \uc0ac\ub0b4 \uc5b4\ub4dc\ubbfc \ud398\uc774\uc9c0\uc5d0\uc11c \uc124\ubb38 \uc0dd\uc131\uc744 \ub9c8\uce58\uba74 \uc9c0\uc815\ub41c \uc870\uac74\uc5d0 \ub9de\ub294 \uc720\uc800\uc758 \uace0\uc720 ID\ub97c \uac00\uc838\uc624\uace0,<br \/>\uc124\ubb38 \ub300\uc0c1\uc774 \ub418\ub294 \uc720\uc800 \ubaa9\ub85d\uc740 \ub9ac\uba64\ubc84 \ub0b4\uc758 \uad11\uace0 \uc11c\ubc84\uc5d0 \uc694\uccad\ud558\uc5ec \uac00\uc838\uc624\uace0 \uc788\uc2b5\ub2c8\ub2e4<\/p>\n<p><img class=\"aligncenter\" src=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2022\/10\/diagram_survey-api-service-map-2-e1665124468487.png\" width=\"269\" height=\"359\" \/><\/p>\n<p>\u00a0<\/p>\n<p>\ub9ac\uc11c\uce58 \uc11c\ubc84\ub294 \uc6d0\ud558\ub294 \uc138\ubd80 \uc870\uac74\uc5d0 \ub9de\uac8c \ud0c0\uac9f\ud305 \ub41c \uc720\uc800 \uace0\uc720 ID \ubaa9\ub85d\uc744 \uad11\uace0\uc11c\ubc84\uc5d0 \uc694\uccad\ud558\uc5ec \ub370\uc774\ud130\ub97c \uac00\uc838\uc635\ub2c8\ub2e4.<br \/>\uc774\ub807\uac8c \uac00\uc838\uc628 \uc124\ubb38 \ub300\uc0c1 \uc720\uc800 \ubaa9\ub85d\uc740 Redis\uc5d0 \uc800\uc7a5\ub418\uace0 \ud2b9\uc815 \uc720\uc800\uac00 \uc124\ubb38\uc758 \ub300\uc0c1\uc778\uc9c0 \ud310\ubcc4\ud558\ub294 \uc6a9\ub3c4\ub85c \ub370\uc774\ud130\ub97c \uc774\uc6a9\ud558\uac8c \ub429\ub2c8\ub2e4.<\/p>\n<p>Redis\uc5d0 \ub300\uc0c1 \uc720\uc800\ub97c \uc800\uc7a5\ud558\ub294 \uc6a9\ub3c4\ub85c \ucc44\ud0dd\ud55c \uc774\uc720\ub85c\ub294 \uc544\ub798\uc640 \uac19\uc2b5\ub2c8\ub2e4.<\/p>\n<ul>\n<li>\n<p>\ub300\uc0c1 \uc720\uc800 ID \ubaa9\ub85d\uc758 \ud06c\uae30\ub294 \uc801\uac8c\ub294 \uc218\uc2ed\uba85\uc5d0\uc11c \ub9ce\uac8c\ub294 \uc218\uc2ed\ub9cc, \uc218\ubc31\ub9cc\uc758 \ub2e8\uc704\ub85c \uad6c\uc131\ub429\ub2c8\ub2e4.<br \/>\uc720\uc800 \ubaa9\ub85d\uc5d0 \ub300\ud55c \ub370\uc774\ud130\ub294 \uad11\uace0 \uc11c\ubc84\uc5d0\uc11c \ubcf4\uc874\ud558\uace0 \uc788\uc73c\ubbc0\ub85c, \ub300\ub7c9\uc758 \ud06c\uae30\ub97c \uac00\uc9c0\ub294 \uc815\ubcf4\ub97c \ub2e4\ub978 \uc11c\ube44\uc2a4\uc758 DB\uc5d0 \ub2e4\uc2dc \uc800\uc7a5\ud558\ub294 \uc791\uc5c5\uc740 \ud53c\ud558\uc600\uc2b5\ub2c8\ub2e4.<\/p>\n<\/li>\n<li>\n<p>\ub300\uc0c1 \uc720\uc800 ID \ubaa9\ub85d\uc740 \uc124\ubb38\uc774 \uc885\ub8cc\ub41c \ub4a4\uc5d0 \ub2e4\uc2dc \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub294 \uc815\ubcf4\uc785\ub2c8\ub2e4. Time-to-live\ub97c \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158 \ub808\uc774\uc5b4\uc5d0\uc11c \uad6c\ud604\ud558\uc9c0 \uc54a\uace0, Redis \ub0b4\uc5d0\uc11c \ucc98\ub9ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.<\/p>\n<\/li>\n<\/ul>\n<h2>\u00a0<\/h2>\n<h2>\ub9c8\uc8fc\ud55c \uc0c1\ud669<\/h2>\n<p>\uc720\uc800 ID \ubaa9\ub85d\uc744 Redis\uc5d0 \uc800\uc7a5\ud558\ub294 \uacfc\uc815\uc5d0\uc11c \uc6b0\ub824\ub418\ub294 \uc9c0\uc810\uc744 \ubc1c\uacac\ud558\uc600\uc2b5\ub2c8\ub2e4.<br \/>\uac1c\ubc1c \ub2f9\uc2dc \uc720\uc800 ID\ub97c Redis\uc5d0 \uc800\uc7a5\ud558\ub294 \ubc29\uc2dd\uc73c\ub85c\ub294 \ub2e4\uc74c \uadf8\ub9bc\uacfc \uac19\uc774 SET \uad6c\uc870\ub97c \uc0ac\uc6a9\ud558\uc600\uc2b5\ub2c8\ub2e4.<\/p>\n<p><img class=\"aligncenter\" src=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2022\/10\/diagram_redis-survey-survey_id-target-user-ids-1.png\" \/><\/p>\n<p>\u00a0<\/p>\n<p>\u00a0\uc124\ubb38\uc744 \uc0dd\uc131\ud558\uace0 \uc720\uc800 5\ucc9c\uba85\uc5d0\uac8c \ud0c0\uac9f\ud305\ud558\uc600\uc2b5\ub2c8\ub2e4. \uc774\ub54c \uc544\ub798\uc758 \uacfc\uc815\uc73c\ub85c \uc720\uc800 ID 5\ucc9c\uac1c\ub97c \uac00\uc9c0\uace0 \uc788\ub294 SET\uc774 \ucd94\uac00\ub429\ub2c8\ub2e4. <img class=\"aligncenter\" src=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2022\/10\/redis-sadd-survey1target-user-ids.png\" alt=\"\" width=\"550\" height=\"186\" \/><\/p>\n<p>\u00a0<\/p>\n<p>\uc774 \uc124\ubb38\uc5d0\uc11c \uc5b4\ub5a4 \uc720\uc800\uac00 \ucc38\uc5ec \ub300\uc0c1\uc778\uc9c0 \uc54c\uae30 \uc704\ud574 \ucd1d 298,456 Byte \ud06c\uae30\uc758 \uba54\ubaa8\ub9ac\ub97c \uc18c\ubaa8\ud558\uc600\uc2b5\ub2c8\ub2e4. <img class=\"aligncenter\" src=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2022\/10\/redis-survey1targetuser_ids-2.png\" alt=\"\" width=\"550\" height=\"186\" \/><\/p>\n<p>\u00a0<\/p>\n<p>\uc720\uc800\uc758 \uc218\uac00 \uc0c1\ub300\uc801\uc73c\ub85c \uc801\uac70\ub098 \ub3d9\uc2dc \uc9c4\ud589 \uc911\uc778 \uc124\ubb38\uc774 \uba87\uac00\uc9c0 \ub418\uc9c0 \uc54a\ub294 \uc0c1\ud669\uc5d0\uc11c\ub294 \ucc9c \ub2e8\uc704\uc758 \uc720\uc800 ID\ub97c \uc800\uc7a5\ud558\ub294 \uc0c1\ud669\uc740 \ub2f9\uc7a5 \ubb38\uc81c\uac00 \uc5c6\uc5b4\ubcf4\uc785\ub2c8\ub2e4.<br \/>\ud558\uc9c0\ub9cc \uc218\uc2ed\ub9cc\uba85\uc5d0 \ub2ec\ud558\ub294 \uc720\uc800\uc758 \ucc38\uc5ec \uac00\ub2a5 \uc5ec\ubd80\ub97c \ubcf4\uad00\ud574\uc57c\ud558\ub294 \uc0c1\ud669\uc774\ub77c\uba74 \uc774\uc57c\uae30\uac00 \ub2ec\ub77c\uc9d1\ub2c8\ub2e4.<\/p>\n<p>\ub450\ubc88\uc9f8 \uc124\ubb38\uc5d0\uc11c\ub294 \uc720\uc800 19\ub9cc\uba85\uc5d0\uac8c \ud0c0\uac9f\ud305\ud558\uace0, \uc5bc\ub9cc\ud07c\uc758 \uba54\ubaa8\ub9ac\uac00 \uc18c\ubaa8\ub418\uc5c8\ub294\uc9c0 \ud655\uc778\ud574\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.<br \/>\ub3d9\uc77c\ud558\uac8c \ud0c0\uac9f\ud305\ud55c \uc720\uc800\uc758 \uc591\ub9cc\ud07c SET\uc774 \ucd94\uac00\ub429\ub2c8\ub2e4 <img class=\"aligncenter\" src=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2022\/10\/redis-sadd-survey2target-user-ids.png\" alt=\"\" width=\"550\" height=\"186\" \/><\/p>\n<p>\u00a0<\/p>\n<p>\uc774\ub54c \uc57d 10439.65 KB (10.6902 MB)\uc758 \uba54\ubaa8\ub9ac\uac00 \uc18c\ubaa8\ub429\ub2c8\ub2e4. <img class=\"aligncenter\" src=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2022\/10\/redis-memory_usage-survey2target-user-ids.png\" alt=\"19\ub9cc\uba85\uc77c\ub54c SCARD\ub85c 188608\uc744, MEMORY USAGE\ub85c 10690200\uc744 \uacb0\uacfc\ub85c \ubc1b\uc740 \uc774\ubbf8\uc9c0\" width=\"550\" height=\"186\" \/><\/p>\n<p>19\ub9cc\uba85\uc758 \uc720\uc800\uc758 \ucc38\uc5ec \uc815\ubcf4\ub97c \uc800\uc7a5\ud558\uae30 \uc704\ud574\uc11c \uc57d 10MB\uc5d0 \ub2ec\ud558\ub294 \uba54\ubaa8\ub9ac\ub97c \uc0ac\uc6a9\ud55c\ub2e4\ub294 \uac83\uc740 \ubb38\uc81c\uac00 \ub420 \uac83\uc73c\ub85c \uc6b0\ub824\ud558\uc600\uc2b5\ub2c8\ub2e4.<br \/>\uc218 \ubc31\ub9cc\uba85\uc744 \ub300\uc0c1\uc73c\ub85c \ud558\ub294 \uc124\ubb38 10\uac1c\uac00 \ub3d9\uc2dc\uc5d0 \uc9c4\ud589\ub41c\ub2e4\uba74 \uc624\ub85c\uc9c0 \uc720\uc800 \ubaa9\ub85d\uc744 \ub2f4\uae30 \uc704\ud574 \uc0ac\uc6a9\ud558\ub294 Redis\uc758 \uba54\ubaa8\ub9ac \ud06c\uae30\ub9cc\ud574\ub3c4 \uae30\uac00\ubc14\uc774\ud2b8 \ub2e8\uc704\uac00 \ub420 \uac83\uc744 \uc9d0\uc791\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.<\/p>\n<p>\uc774\ub7ec\ud55c \uc0c1\ud669\uc744 \ucd08\ub798\ud558\uac8c \ub9cc\ub4e4\uc9c0 \uc54a\uace0\uc790, \uba54\ubaa8\ub9ac \ud06c\uae30\ub97c \uc904\uc774\uae30 \uc704\ud574 Redis\uc758 Bitmap \uad6c\uc870\ub97c \uace0\ub824\ud558\uc600\uc2b5\ub2c8\ub2e4.<br \/>Redis Bitmap\uc740 \uc774\uc9c4 \ubca1\ud130\uc640 \uac19\uc774 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 String \uc790\ub8cc\ud615\uc5d0\uc11c \ud655\uc7a5\ub41c \uac83\uc73c\ub85c, \uc815\uc218 0\ubd80\ud130 N\uc73c\ub85c \uad6c\uc131\ub41c \ud615\ud0dc\uc758 SET\uc744 \ud6a8\uc728\uc801\uc73c\ub85c \ud45c\ud604\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.<\/p>\n<p>\u00a0<\/p>\n<h2>Redis Bitmap \uad6c\uc870\ub97c \uc774\uc6a9\ud574 \uac1c\uc120 \uc2dc\ub3c4\ud558\uae30<\/h2>\n<p>\ud2b9\uc815 \uc720\uc800\uac00 \uc124\ubb38\uc5d0 \ucc38\uc5ec \uac00\ub2a5\ud55c\uc9c0 \uc815\ubcf4\ub97c \uc54c \uc218 \uc788\uc5b4\uc57c \ud558\ubbc0\ub85c, \uc544\ub798 \uba85\ub839\uc5b4\ucc98\ub7fc Bit \uc624\ud504\uc14b\uc744 \uc720\uc800\uc758 ID\ub85c \uc0ac\uc6a9\ud558\uc600\uace0,<br \/>Redis\uc758 <code>GETBIT<\/code> \ucee4\ub9e8\ub4dc\ub97c \ud1b5\ud574 \uc624\ud504\uc14b \uc704\uce58\uc5d0 \uc800\uc7a5\ub418\ub294 Bit \uac12\uc744 \uc124\ubb38 \ucc38\uc5ec \uac00\ub2a5 \ub300\uc0c1 \uc720\uc800 \uc5ec\ubd80\ub85c \uc0ac\uc6a9\ud558\uc600\uc2b5\ub2c8\ub2e4.<\/p>\n<p><img class=\"aligncenter\" src=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2022\/10\/redis-bitmap-survey3target-user-ids.png\" alt=\"\" width=\"550\" height=\"167\" \/><\/p>\n<p>\uc131\ub2a5 \uba74\uc5d0\uc120 SET \uad6c\uc870\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ucee4\ub9e8\ub4dc\uc778 SISMEMBER\uc758 \uc2dc\uac04\ubcf5\uc7a1\ub3c4\ub294 O(1), Bitmap \uad6c\uc870\uc758 String \uac12\uc5d0\uc11c \uac00\ub2a5\ud55c \ucee4\ub9e8\ub4dc\uc778 GETBIT\uc758 \uc2dc\uac04\ubcf5\uc7a1\ub3c4 \ub610\ud55c O(1) \uc73c\ub85c<br \/>\ub450 \uba85\ub839 \ubaa8\ub450 \uc800\uc7a5\ub41c \ud06c\uae30\uc5d0 \ub530\ub978 \uc131\ub2a5 \ucc28\uc774\ub294 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\ub294 \uac83\uc73c\ub85c \ud655\uc778\ud558\uc600\uc2b5\ub2c8\ub2e4.<\/p>\n<p>Bitmap \uad6c\uc870\ub85c \ubcc0\uacbd\ud558\uc600\uc744 \ub54c \uba54\ubaa8\ub9ac \ud06c\uae30\ub294 \uc5b4\ub290\uc815\ub3c4 \uac1c\uc120\ud560 \uc218 \uc788\uc5c8\ub294\uc9c0 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4. <img class=\"aligncenter\" src=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2022\/10\/redis_memory_usage_chart.png\" alt=\"\" \/><\/p>\n<p>\uac00\uc7a5 \ud070 \uc720\uc800 ID\uac00 50\ub9cc\uc774\uba74\uc11c 50\ub9cc\uba85\uc5d0 \ub300\ud55c \ucc38\uc5ec \uc815\ubcf4\ub97c \ub2f4\ub294\ub2e4\uba74 SET \uad6c\uc870\uc5d0\uc120 20,194,504 Byte, Bitmap \uad6c\uc870\uc5d0\uc120 114,768 Byte\uac00 \ud544\uc694\ud569\ub2c8\ub2e4.<br \/>\ub9cc\uc77c \uac00\uc7a5 \ud070 \uc720\uc800 ID\uac00 75\ub9cc\uc774\uace0, \uc774\ub4e4 75\ub9cc\uba85\uc5d0 \ub300\ud55c \ucc38\uc5ec \uc815\ubcf4\ub97c \ub2f4\ub294 \uacbd\uc6b0\uc5d4 SET \uad6c\uc870\uc5d0\uc120 36,583,112 Byte\uac00, Bitmap \uad6c\uc870\uc5d0\uc120 114,768 Byte\uac00 \ud544\uc694\ud558\uac8c \ub429\ub2c8\ub2e4.<\/p>\n<p>\uc6b0\ub824\ub418\uc5c8\ub358 \uba54\ubaa8\ub9ac \ud06c\uae30\uc758 \ubb38\uc81c\ub97c SET \uad6c\uc870\uc5d0\uc11c Bitmap \uad6c\uc870\ub85c \ubcc0\uacbd\ud558\uc5ec \ud06c\uac8c \uc808\uac10\ud560 \uc218 \uc788\uc5c8\uc2b5\ub2c8\ub2e4.<\/p>\n<p>\u00a0<\/p>\n<h2>\ub9c8\ubb34\ub9ac<\/h2>\n<p>\ub9ac\uba64\ubc84 \ub9ac\uc11c\uce58\uc758 \uc720\uc800 \ud0c0\uac9f\ud305 \uacfc\uc815\uc5d0\uc11c Redis Bitmap \uad6c\uc870\ub97c \uc774\uc6a9\ud55c \uac83\uc740 \uc0c1\uc218 \uc2dc\uac04\uc758 \uc2dc\uac04 \ubcf5\uc7a1\ub3c4\ub97c \uac00\uc9c0\uba74\uc11c \ucc28\uc9c0\ud558\ub294 \uba54\ubaa8\ub9ac\ub294 \uc808\uc57d\ud558\ub294\ub370 \uc774\uc810\uc744 \uc5bb\uc5c8\uc2b5\ub2c8\ub2e4. <br \/>\uadf8\ub807\uc9c0\ub9cc, Bitmap \uad6c\uc870\uac00 \ubaa8\ub4e0 \uc0c1\ud669\uc5d0\uc11c \uc88b\uc740 \uac83\uc774 \uc544\ub2c8\ub77c\ub294 \uc810\uc740 \uc8fc\uc758\ud574\uc57c\ud569\ub2c8\ub2e4.<\/p>\n<p>\uc0c1\ub300\uc801\uc73c\ub85c \ud070 \uc624\ud504\uc14b\uc744 \uac00\uc9c0\uba70 \uc801\uc740 \uac2f\uc218\uc758 \ub370\uc774\ud130\ub97c \ubcf4\uad00\ud55c\ub2e4\uba74 Bitmap\ubcf4\ub2e4 SET\uc5d0 \uc800\uc7a5\ud560 \ub54c\uc5d0 \ucc28\uc9c0\ud558\ub294 \uba54\ubaa8\ub9ac \ud06c\uae30\uac00 \ub354 \uc791\uc2b5\ub2c8\ub2e4. <br \/>\ucd5c\ub300 \uc720\uc800 ID\uac00 1\ubc31\ub9cc\uc774\uba74\uc11c \uc720\uc800 10\uba85\uc758 \ub300\uc0c1 \uc5ec\ubd80\ub97c \uc800\uc7a5\ud558\ub294 \uacbd\uc6b0\uac00 \uc774\ub7ec\ud55c \uacbd\uc6b0\uc785\ub2c8\ub2e4. <br \/>\uc218\uc2ed \ud639\uc740 \uc218\ubc31 \ub2e8\uc704\uc758 \uc0c1\ub300\uc801\uc73c\ub85c \uc801\uc740 \uc218\uc758 \uc720\uc800\uac00 \ud3ec\ud568\ub418\ub294 \uacbd\uc6b0\uc5d4 SET\uad6c\uc870\ub97c \ud568\uaed8 \uc0ac\uc6a9\ud558\ub3c4\ub85d \uace0\ub824\ud558\ub294 \uac83\uc774 \uc88b\uc544\ubcf4\uc785\ub2c8\ub2e4.<\/p>\n<p>\ub610\ud55c, Bitmap \uc790\ub8cc \ub0b4\uc5d0\uc11c Bit\uac00 1\uc778 \ubaa8\ub4e0 \uc720\uc800\uc758 ID\ub97c \uad6c\ud558\ub294 \uac83\uc740 \ub808\ub514\uc2a4 \uba85\ub839\uc5b4\ub85c\uc11c \uc9c0\uc6d0\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ub530\ub77c\uc11c \uc774\ub294 Redis\uc758 Lua Scripting\uc744 \uc774\uc6a9\ud574 \ud574\uacb0\ud574\uc57c \ud569\ub2c8\ub2e4.<\/p>\n<p>\ub9ac\uba64\ubc84\uc758 \ub0b4\ubd80 \uc5b4\ub4dc\ubbfc \ud398\uc774\uc9c0\uc5d0\uc11c\ub294 \uc124\ubb38 \ucc38\uc5ec \ub300\uc0c1 \uc720\uc800 \ubaa9\ub85d \uc870\ud68c\ub97c \uc704\ud55c \ubaa9\uc801\uc73c\ub85c,<br \/>Bit \uac12\uc774 1\uc778 \uc720\uc800 ID \ubaa9\ub85d\uc5d0 \ub300\ud574\uc11c Integer \ubc30\uc5f4\uc744 \ubc18\ud658\ud558\ub294 Lua Script\ub97c \uad6c\ud604\ud558\uc5ec \uc0ac\uc6a9\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. <br \/>\ub9ac\uba64\ubc84 \ub9ac\uc11c\uce58\uc5d0\uc120 \ud2b9\uc815 \uc720\uc800\uc758 \uc124\ubb38 \ub300\uc0c1 \uc5ec\ubd80\ub97c \ud310\ubcc4\ud558\uae30 \uc704\ud55c \uc6a9\ub3c4\ub85c \uc4f0\uc5ec Bitmap \uad6c\uc870\uac00 \uc801\ud569\ud558\uc600\uace0, \uc18d\ub3c4\ub97c \uc0c1\uc218 \uc2dc\uac04 \ub0b4\uc5d0 \ucc98\ub9ac\ud558\ub3c4\ub85d \ubcf4\uc7a5\ud558\uba74\uc11c \uba54\ubaa8\ub9ac \ud06c\uae30\uc5d0\uc11c\ub3c4 \ub9ce\uc740 \uc774\uc810\uc744 \uac00\uc9c8 \uc218 \uc788\uc5c8\uc2b5\ub2c8\ub2e4.<\/p>\n<p>\uae00\uc758 \ub9c8\ubb34\ub9ac\ub294 \ucc44\uc6a9 \uacf5\uace0\ub85c \ub9fa\uaca0\uc2b5\ub2c8\ub2e4.<br \/>\ub9ac\uba64\ubc84\uc5d0\uc120 \uace0\ub09c\ub3c4 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uac1c\ubc1c\uc5d0\uc11c \ub098\uc624\ub294 \uc5b4\ub824\uc6b4 \ubb38\uc81c\uc758 \ud574\uacb0\uc744 \uc990\uae30\ub294 \ub3d9\ub8cc \ubd84\uc744 \ubaa8\uc2dc\uace0 \uc788\uc2b5\ub2c8\ub2e4.<br \/><strong><a href=\"https:\/\/hello.remember.co.kr\/recruit\/server\">\ub9ac\uba64\ubc84 \uc11c\ubc84 \uac1c\ubc1c\uc790 \ucc44\uc6a9\uacf5\uace0<\/a><\/strong><\/p>\n<p>\uac10\uc0ac\ud569\ub2c8\ub2e4.<\/p>\n<\/div>\n<p><!-- \/wp:jetpack\/markdown --><\/p>"},"elements":[],"widgetType":"text-editor"}],"isInner":false}],"isInner":false}]]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_page_assets]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[3229]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[%ec%9c%a0%ec%a0%80-%eb%aa%a9%eb%a1%9d%ec%9d%84-redis-bitmap-%ea%b5%ac%ec%a1%b0%eb%a1%9c-%ec%a0%80%ec%9e%a5%ed%95%98%ec%97%ac-%ed%95%a0%eb%8b%b9%ed%95%98%eb%8a%94-%eb%a9%94%eb%aa%a8%eb%a6%ac-%ec%a0%88]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>12659</wp:comment_id>
			<wp:comment_author><![CDATA[ㅇㅇ]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[user@example.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.20.201]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2022-10-29 21:35:17]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2022-10-29 12:35:17]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[비트맵은 id가 꽤 작은 정수형인 경우엔 유용하게 쓸 수 있을 것 같네요. 어드민에서 설문지별 유저목록 뽑는건 엄청 오래 걸릴거같은데.. 뽑는동안 redis 락 걸리지 않나요? 그리고 뽑는 동시에 다른 곳에 저장해두지 않는 이유가 있을까요 궁금합니다. 더 확장성 있는 구현이 있을 것 같은데.. 주말이라 안떠오르네요.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1667046917.580592;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1667280717.503334;s:5:"event";s:15:"status-approved";s:4:"user";s:8:"aaronroh";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>12660</wp:comment_id>
			<wp:comment_author><![CDATA[노아론]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[aaronroh@dramancompany.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.9.93]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2022-11-01 14:31:58]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2022-11-01 05:31:58]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[안녕하세요. 남겨주신 내용과 같이 대량의 유저 목록을 Bitmap 데이터에서 한번에 추출한다면 병목 현상이 발생하게 됩니다.
Lua스크립트를 통해 Redis에서 evalsha 명령어의 긴 처리 시간으로 인해 전체적인 성능 저하가 나타나는 상황을 피하고자 오프셋 방식의 조회를 적용해 나누어 요청하는 방식을 적용해 사용하고 있습니다.
이렇게 추출한 참여 대상 유저 목록은 영구적으로 저장하지 않고 캐싱 방식으로 저장하고 있습니다.

글 읽어주셔서 감사합니다!ㅎㅎ]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>12659</wp:comment_parent>
			<wp:comment_user_id>60</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1667280718.305948;s:5:"event";s:9:"check-ham";s:4:"user";s:8:"aaronroh";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>12817</wp:comment_id>
			<wp:comment_author><![CDATA[dd]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[miinju.choi@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.26.137]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-06-28 17:29:03]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-06-28 08:29:03]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[user id가 숫자인 경우에만 사용이 가능할 것 같은데, user id에 알파벳이 포함되어 있다면 사용하기 어려운 방법이겠죠?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1687940943.227627;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1687967891.663942;s:5:"event";s:15:"status-approved";s:4:"user";s:8:"aaronroh";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>12818</wp:comment_id>
			<wp:comment_author><![CDATA[노아론]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[aaronroh@dramancompany.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.26.137]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-06-29 00:58:12]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-06-28 15:58:12]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Bitmap를 이용하는 경우엔 offset으로 정수를 넣을 수 있습니다. 따라서 알파벳이 포함된 user id라면 사용하기 어려울 것 같습니다.
Key에 유저 존재 여부, 전체 유저 수 조회를 구현하는 방법을 찾고 계신다면 아래 두가지 방법이 떠오릅니다.

Bitmap 구조에서 지원하는 BITCOUNT 와 비슷한 명령어를 사용해 유니크한 유저 수를 구하고 싶은 경우엔 HyperLogLog의 PFCOUNT 명령어가 있습니다.
그러나 HyperLogLog는 확률적 데이터 구조이므로 약 2%의 오차를 가지고 있습니다.
정확한 값을 내려주고 시간이 오래 걸리는 대신에, 오차를 범해 근삿값을 제공하는 대신 자원을 아주 적게 사용해도 되는 결과 값이라면 HyperLogLog를 고려해보면 좋을 것 같습니다.
https://redis.io/docs/data-types/hyperloglogs/

Bitmap의 GETBIT과 같이 해당 유저 ID가 이미 존재하는지 조회하는 명령어를 찾고 계신다면 Bloom Filter에서 BF.EXISTS 명령어가 있습니다.
다만 Bloom Filter는 Redis Stack에서 지원하므로 추가적인 설치가 필요합니다.
https://redis.io/docs/stack/about/]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>12817</wp:comment_parent>
			<wp:comment_user_id>60</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1687967892.436452;s:5:"event";s:9:"check-ham";s:4:"user";s:8:"aaronroh";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[추천 시스템 서비스 적용을 위한 Elastic Search 도입기]]></title>
		<link>https://blog.dramancompany.com/2022/11/%ec%b6%94%ec%b2%9c-%ec%8b%9c%ec%8a%a4%ed%85%9c-%ec%84%9c%eb%b9%84%ec%8a%a4-%ec%a0%81%ec%9a%a9%ec%9d%84-%ec%9c%84%ed%95%9c-elastic-search-%eb%8f%84%ec%9e%85%ea%b8%b0/</link>
		<pubDate>Tue, 08 Nov 2022 00:18:17 +0000</pubDate>
		<dc:creator><![CDATA[hh.hwang]]></dc:creator>
		<guid isPermaLink="false">https://blog.dramancompany.com/?p=3343</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>안녕하세요 빅데이터 센터 AI Lab 황호현 입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>저희 AI Lab에서는 리멤버 유저들에게 인공지능을 통해서 WoW한 경험을 주기 위해 Recommendation System, Ranking Model, Document Understanding, NLP등 다양한 연구를 진행하고 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>이번 포스트는 입사 후 맡은 첫 번째 프로젝트인 “리멤버 커뮤니티 새 글 피드 개인화 추천”를 진행하는 과정을 공유드리고자 합니다. 머신러닝 모델을 서비스에 활용하는데 모델 학습을 정확하게 하는 것도 중요하지만, 어떤 방법을 활용해서 서비스에 제공하도록 할 것인가도 굉장히 중요한 문제입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>추천 로직에 대한 서비스를 제공하는데 있어서 굉장히 많은 방법들이 존재합니다. 그 중에 저희는 Elastic Search를 기반으로 하여 추천 로직을 구축했고, 그 부분에 대해서 중점적으로 소개해 드리겠습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:separator -->
<hr class="wp-block-separator"/>
<!-- /wp:separator -->

<!-- wp:heading {"level":1} -->
<h1>1. Introduction</h1>
<!-- /wp:heading -->

<!-- wp:heading {"level":3} -->
<h3>1-1. 커뮤니티 피드 개인화 필요성</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>리멤버에서는 직장인을 위한 커뮤니티를 운영하고 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>리멤버 커뮤니티는 크게 인사이트 / 직무 커뮤니티 / 관심사 커뮤니티 의 카테고리로 나뉩니다. 각 카테고리는 직장생활에서 얻을 수 있는 인사이트를 제공하고, 직무별로 정보를 공유할 수 있으며, 회사생활이나 기타 관심사에 대한 정보도 교류할 수 있는 공간입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-3346" style="width: 300px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/11/그림_1_커뮤니티메인.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center","fontSize":"small"} -->
<p class="has-text-align-center has-small-font-size">리멤버 커뮤니티 메인화면 [1]</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>본 연구는 리멤버 커뮤니티에 존재하는 많은 정보 중 각 유저에게 가장 적합한 콘텐츠를 찾아 필요한 인사이트를 빠르게 얻도록 하는 것을 목적으로 했습니다. 그에 따라 유저가 가장 처음 접하는 새 글 피드의 개인화 추천 프로젝트를 진행했습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>1-2. 새 글 피드에 업데이트 주기는 어떻게 되어야 하는가</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>커뮤니티의 유형을 나눠보자면 카페 형 커뮤니티와, 플랫폼 형 커뮤니티로 나눌 수 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>카페 형 커뮤니티는 비교적 적은 수의 소속감이 강한 회원들 사이에 정보 교류를 목적으로 이루어진 곳이라고 볼 수 있습니다. 그 안에서 양질의 정보를 공유하면서 빠른 피드백을 주고 받을 수 있습니다. 그러나 새로운 회원의 유입이 적어 다양한 정보를 얻기는 힘듭니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>플랫폼 형 커뮤니티는 카페 형 커뮤니티와 장점과 단점이 반대라고 할 수 있습니다. 한 가지 주제에 국한되지 않는 다양한 정보가 공유되고 있지만, 정보에 대한 휘발성이 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>리멤버는 계속해서 새로운 회원의 유입이 이루어지고 있으며, 리멤버 커뮤니티는 큰 주제 안에서 다양한 정보들이 공유되고 있기에 리멤버 커뮤니티는 플랫폼 형 커뮤니티가 가깝다고 판단했습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>따라서 유저들에게 양질의 콘텐츠를 맞춤형으로 제공해주는 것 뿐만 아니라, 실시간으로 콘텐츠를 제공해주는 것을 목표로 프로젝트를 진행 했습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:separator -->
<hr class="wp-block-separator"/>
<!-- /wp:separator -->

<!-- wp:heading {"level":1} -->
<h1>2. Recommendation System</h1>
<!-- /wp:heading -->

<!-- wp:heading -->
<h2>2-1. Contents-based Recommendation</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>콘텐츠 기반 필터링 방식은 사용자가 특정 아이템을 선호하는 경우, 그 아이템과 비슷한 콘텐츠를 가진 다른 아이템을 추천해 주는 방식 입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-3347" style="width: 500px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/11/그림_2_콘텐츠기반추천예시.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>유저가 관심분야의 글을 많이 읽을 것이라는 가정하에 콘텐츠 기반 필터링 방식을 선택했습니다. 커뮤니티에서 글을 추천해주는 방식으로는 유저가 커뮤니티에서 읽은 글과 유사한 글들을 추천해주는 방식을 적용하고자 했습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>2-2. Unsupervised - SimCSE</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>유사한 콘텐츠를 추천해주기 위해서는 추천이 필요한 각 게시물(콘텐츠)들을 잘 표현해주는 것이 중요합니다. 저희는 각 게시물을 잘 표현하기 위한 모델로 Sentence Representation 모델인 SimCSE(Simple Contrastive Learning of Sentence Embeddings)를 채택했습니다. Input Sentence에 대해서 dropout을 noise로 사용해 contrastive object에서 스스로를 예측하는 비지도학습이 가능한 모델 입니다. 아래 그림과 같이 한 mini-batch에 있는 문장들 안에서, dropout이 적용된 같은 문장을 postive pair로서 활용, 다른 문장들을 negative pair로써 활용하여 contrastive learning을 학습하는 Sentence Representation 모델 입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-3348" style="width: 800px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/11/그림_3_SimCSE예시.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center","fontSize":"small"} -->
<p class="has-text-align-center has-small-font-size">Unsupervised SimCSE 학습 과정 [6]</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>해당 모델의 loss function은 위 그림과 같습니다. 분자는 같은 문장을 다르게 표현한 것들의 유사도, 분모는 다른 문장을 다르게 표현한 것들의 유사도의 합입니다. 즉, 분자는 커지고, 분모는 작아질수록 같은 것들의 유사도는 높아지고, 다른 것들 사이의 유사도는 낮아질수록 loss가 작아지는 형태로 학습됩니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>따라서 저희는 리멤버 커뮤니티의 글을 활용하여 Unsupervised learning(비지도학습) 방식으로 SimCSE를 fine-tuning했고 그를 통해서 리멤버 커뮤니티 도메인 최적화된 임베딩을 표현할 수 있도록 했습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":1} -->
<h1>3. Our Method</h1>
<!-- /wp:heading -->

<!-- wp:heading -->
<h2>3-1. Contents Embedding</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>콘텐츠를 구성하는 데이터들을 앞서 설명한 SimCSE 모델을 기반으로 임베딩 벡터를 추출합니다. 사용한 SimCSE 인코더는 transformer 기반의 모델인 BERT를 활용했습니다. 각 콘텐츠의 임베딩 벡터는 ”제목”, “본문”, “카테고리”, “좋아요 클릭 여부”, “댓글작성 여부”를 활용하여 생성했습니다. ”커뮤니티 유형”, “입력 시간” 역시 활용하려고 하였으나 추천 결과에 대한 정성 / 정량 평가를 기준으로 표현에서 제외 하게 되었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-3338" style="width: 400px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/11/image-2.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>3-2. 가중평균을 활용한 유저 임베딩 벡터 생성</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>가중 평균은 데이터 세트에서 일부 요인의 상대적 중요도 또는 빈도를 고려합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>유저가 읽은 콘텐츠 임베딩의 가중 평균 값을 유저 임베딩으로써 활용했습니다. 유저 임베딩과 코사인 유사도가 높은 콘텐츠들을 추천해주는 방식으로 추천을 진행했습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":5} -->
<h5>변수를 가중치로써 활용</h5>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>여러 변수를 검증해봤을때 가장 성능이 좋았던 좋아요와 댓글 작성 여부를 활용해서 가중치를 적용하여 가중평균한 임배딩을 산출 했습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-3350" style="width: 700px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/11/그림_5_유저임배딩생성.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>3-3. 전체 추천 로직</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>전체적인 추천 로직을 정리해보자면, 유저 임베딩과 유저가 참여중인 커뮤니티의 콘텐츠들과 유사도를 비교하여 가장 유사한 top K개를 추천해주는 로직 입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-3351" style="width: 800px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/11/그림_6_전체추천로직.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:separator -->
<hr class="wp-block-separator"/>
<!-- /wp:separator -->

<!-- wp:heading {"level":1} -->
<h1>4. 서비스 적용에 대한 문제</h1>
<!-- /wp:heading -->

<!-- wp:heading -->
<h2>4-1. 속도 문제</h2>
<!-- /wp:heading -->

<!-- wp:list -->
<ul><li>유저가 접속할 때 마다 모델을 활용한 추론을 통해서 임베딩을 생성하면 시간이 오래 걸릴 것이라고 판단 했습니다.</li><li>기존에 고려한 방식<ul><li>MongoDB에 임베딩을 저장 후, 유저가 커뮤니티에 접속하면 임베딩을 추출하여 비교</li><li>MongoDB에서 추천 후보군에 대한 임베딩을 전부 추출하는데 걸리는 시간이 실시간 서비스로 적용하기에는 매우 어려운 수준</li><li>서비스를 제공할때 업데이트 주기를 길게 설정하여 서비스 적용</li></ul></li><li>변경된 방식<ul><li>ElasticSearch 도입으로 별도의 DB조회 없이 검색엔진 안에서 벡터 간 유사도 계산</li></ul></li></ul>
<!-- /wp:list -->

<!-- wp:heading -->
<h2>4-2. MongoDB</h2>
<!-- /wp:heading -->

<!-- wp:list -->
<ul><li>MongoDB 란?<ul><li>MongoDB는 기존의 테이블 기반 관계형 데이터베이스 구조가 아닌 문서 지향&nbsp;데이터 모델을 사용하는 교차 플랫폼 오픈 소스 데이터베이스입니다. 이러한 유형의 모델을 사용하면&nbsp;정형 및&nbsp;비정형 데이터를&nbsp;보다 쉽고 빠르게 통합할 수 있습니다.</li></ul></li><li>변경 전 방법<br><img class="wp-image-3352" style="width: 800px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/11/그림_7_몽고DB활용.png" alt=""></li></ul>
<!-- /wp:list -->

<!-- wp:list -->
<ul><li>처음 고려했던 서비스 제공 방식은 위와 같이 설명할 수 있습니다.<ol><li>유저가 리멤버 커뮤니티에 접속</li><li>MongoDB에서 유저의 임베딩 값을 추출</li><li>유저에게 추천될 수 있는 카테고리의 콘텐츠 임베딩 값들을 추출하여 유저 임베딩 값과</li><li>코사인 유사도를 비교</li><li>유저에게 추천되는 post id 들을 sorting하여 list 형태로 저장</li></ol></li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>MongoDB만을 활용해서 서비스에 적용했을때는 치명적인 문제가 있었습니다. 각 콘텐츠의 임베딩을 저장한 MongoDB collection에서 추천 후보군 몇 천 개의 임베딩을 추출하는 데 걸리는 시간이 오래걸리는 문제 입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><em><strong>총 소요시간 : 5 sec</strong></em></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>그래서 저희는 고민 끝에 빠른 속도로 코사인 유사도 기반 임베딩 벡터를 찾을 수 있는 검색엔진 ElasticSearch를 활용하기로 했습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:separator -->
<hr class="wp-block-separator"/>
<!-- /wp:separator -->

<!-- wp:heading {"level":1} -->
<h1>5. ElasticSearch (OpenSearch) 도입</h1>
<!-- /wp:heading -->

<!-- wp:heading -->
<h2>5-1. ElasticSearch란?</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Elasticsearch는 시간이 갈수록 증가하는 문제를 처리하는 분산형 RESTful 검색 및 분석 엔진입니다. Elastic Stack의 핵심 제품인 Elasticsearch는 데이터를 중앙에 저장하여 손쉽게 확장되는 광속에 가까운 빠른 검색, 정교하게 조정된 정확도, 강력한 분석을 제공합니다. 프로토타입에서 운영 배포까지 이어지는 모든 과정을 원활하게 처리할 수 있습니다. 단일 클러스터에서도 300개의 노드 클러스터에서와 동일한 방식으로 Elasticsearch를 실행합니다. 수평적 확장을 통해 매초당 수많은 양의 이벤트를 처리할 수 있으며, 클러스터에서 인덱스와 쿼리 배포를 자동화하여 보다 원활한 시스템 운영을 지원합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>5-1-1. ElasticSearch 기능</h3>
<!-- /wp:heading -->

<!-- wp:list -->
<ul><li><strong>Elastic Enterprise Search</strong> : 데이터베이스 검색, 엔터프라이즈 시스템 오프로드, 전자 상거래, 고객 지원, 워크플레이스 콘텐츠, 웹사이트 또는 모든 애플리케이션에 Elastic을 사용하여 모든 사람이 필요한 것을 더 빨리 찾을 수 있습니다.</li><li><strong>Infrastructure Monitoring</strong> : AWS, Microsoft Azure 및 Google Cloud와 같은 클라우드 플랫폼을 포함하여 200개 이상의 통합을 지원하여 인프라를 원활하게 모니터링이 가능합니다.</li><li><strong>엔드포인트를 위한 Elastic Security</strong> : 엔드포인트를 위한 Elastic Security는 랜섬웨어 및 Malware를 방지하고, 지능적 위협을 탐지하며, 대응자에게 중요한 조사 컨텍스트를 제공합니다.</li></ul>
<!-- /wp:list -->

<!-- wp:list -->
<ul><li>이 외에도 로그 모니터링, APM(Application Performance Monitoring), 위치탐색 등 모니터링 서비스와 검색 서비스를 제공하고 있습니다.</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>ElasticSearch의 기능을 서비스에 적용하기 위하여 저희 팀에서는 Amazon OpenSearch Service를 활용했습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>5-1-2. Amazon OpenSearch Service란?</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Amazon OpenSearch Service는 인프라 관리, 모니터링 및 유지 관리에 대한 걱정이나 OpenSearch 클러스터 운영에 대한 심층적인 전문성을 쌓을 필요 없이 OpenSearch 클러스터를 실행하고 확장할 수 있는 AWS 관리형 서비스입니다. OpenSearch는 Apache Lucene 검색 라이브러리로 구동되며 k-nearest neighbors(KNN) 검색, SQL, Anomaly Detection, Machine Learning Commons, Trace Analytics, 전체 텍스트 검색 등 다수의 검색 및 분석 기능을 지원합니다. OpenSearch는 ALv2 버전의 Elasticsearch 및 Kibana에서 포크를 만들어 유지하고 있습니다. Elasticsearch에서 제공되는 새로운 기능과 유사한 기능이 OpenSearch에 포함될 수 있지만(그 반대의 경우도 마찬가지) 모든 기능의 구현은 두 프로젝트 간에 고유합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>k-NN(<em>k-nearest neighbors)</em></h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>k-NN을 사용하면 벡터 공간에서 포인트를 검색하고 해당 포인트에 대한 “가장 가까운 이웃”을 Euclidean 거리 또는 코사인 유사도로 찾을 수 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-3353" style="width: 300px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/11/그림_8_knn예시.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":5} -->
<h5>HNSW (Hierarchical Navigable Small World Algorithm)</h5>
<!-- /wp:heading -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-3354" style="width: 300px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/11/그림_9_HSWM.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>OpenSearch에서 k-NN 검색문제에 대해서 빠르고 정확한 솔루션을 제공하기위해서 HNSW 알고리즘을 기반으로 하여 검색엔진이 동작합니다. 이 알고리즘은 적은 거리를 계산하고, 거리 계산 비용을 더 저렴하게 하도록 하는 것을 중점적으로 두고 있습니다.  입력 쿼리에 대한 가장 가까운 이웃을 찾기 위해 검색 프로세스는 최상위 계층의 그래프에서 가장 가까운 이웃을 찾고 이 점을 후속 계층에 대한 진입점으로 사용합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":5} -->
<h5>OpenSearch k-NN 데이터 입력 예시</h5>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>인덱스 생성 : k-NN 관련 index는 다음과 같이 설정할 수 있는데, “dimension”을 통해서 계산하는 임베딩 벡터의 차원을 사전에 정의합니다. </p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class="EnlighterJSRAW" data-enlighter-language="generic" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">PUT /myindex
{
 "settings": {
      "index.knn": true
      },
 "mappings": {
     "properties": {
          "my_vector": {
                "type": "knn_vector",
                "dimension": 2
              }
         }
    }
}</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>데이터 입력 : 콘텐츠에 대해서 생성된 임베딩 벡터 및 데이터 입력합니다. </p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class="EnlighterJSRAW" data-enlighter-language="generic" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">PUT /myindex/_doc/1
{
  "my_vector": [1.5, 2.5]
}

PUT/myindex/_doc/2
{
  "my_vector": [2.5, 3.5]
}</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>저희가 개발한 추천로직에서 Sentence Representation에 활용한 SimCSE 모델로 생성한 최종 임베딩 벡터는 1,638차원 입니다. OpenSearch에서는 최대 10,000 차원까지의 임베딩 벡터에 대해서 검색기능을 제공하고 있습니다. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>OpenSearch에서는 3가지 다른 방법의 쿼리 벡터에 대해서 k-NN의 결과를 얻을 수 있는 3가지 다른 방법을 제공 합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true} -->
<ol><li><strong>Approximate k-NN</strong><ul><li>첫 번째 방법은 Approximate k-NN입니다. 여러 알고리즘 중 하나를 사용하여 대략적인 k-NN 결과를 쿼리 벡터로 반환합니다.&nbsp;일반적으로 이러한 알고리즘은 더 짧은 대기 시간, 더 작은 메모리 공간 및 더 확장 가능한 검색과 같은 성능 이점이 있습니다. 그러나 인덱싱 속도와 검색 정확도의 성능은 일부 떨어질 수 있다는 단점이 있습니다.</li></ul></li><li><strong>Script Score k-NN</strong><ul><li>두 번째 방법은 Script Score k-NN 입니다. OpenSearch의 Script Score 기능을 확장하여 나타나는 “knn_vector”에 대하여 정확한 k-NN 검색을 수행합니다. 이 방식을 사용하면 인덱스에 있는 벡터의 하위 집합에 대해서 k-NN 검색을 실행할 수 있습니다. 따라서, 존재하는 벡터에 대해서 사전 필터링이 필요할 경우에 이 방식을 사용합니다.</li></ul></li><li><strong>Painless extensions</strong><ul><li>세 번째 방법은 Painless extensions 입니다. 두 번째로 언급 드린 Script Score k-NN에 비하여 쿼리 성능이 약간 느리다는 단점이 존재합니다. 그러나 거리함수를 더 복잡한 상황에서 적용할 수 있다는 장점이 있습니다.</li></ul></li></ol>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>저희는 소속된 커뮤니티와 날짜를 관련한 필터링 조건이 필요하기 때문에 Script Score k-NN을 선택하여 진행했습니다. <em>(복잡하지 않은 조건이기 때문에 속도가 더 빠른 Script Score k-NN 사용)</em> 이를 통해서 소속된 커뮤니티 등록 날짜 등의 조건으로 필터링된 대상에 대한 검색을 수행할 수 있었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>변경 후 방법<br><img class="wp-image-3355" style="width: 800px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/11/그림_10_opensearch활용예시.png" alt=""></li></ul>
<!-- /wp:list -->

<!-- wp:list {"ordered":true} -->
<ol><li>유저가 리멤버 커뮤니티에 접속</li><li>MongoDB에서 유저의 임베딩 값을 추출</li><li>유저에게 추천될 수 있는 카테고리의 콘텐츠 임베딩 값들을 추출하여 유저 임베딩 값과</li><li>코사인 유사도를 비교하여 list 형태로 해당 post id들을 반환</li></ol>
<!-- /wp:list -->

<!-- wp:heading -->
<h2>5-2. 속도 개선 결과</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>MongoDB를 활용하여 임베딩 벡터를 추출할 때 생겼던 병목을 OpenSearch 내에서 한번에 해결함으로써 시간을 대폭 감축할 수 있었습니다. 유저 임베딩을 업데이트하는 부분에 대해서는 NiFi 라고하는 별도의 시스템을 활용하여 구성하였습니다. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>임베딩을 추출하고 유사도를 계산하는 추천 로직에 있어서 평균적으로 <em><strong>0.2 sec</strong></em> 로 결과를 반환하는 API를 생성할 수 있었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-3356" style="width: 400px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/11/스크린샷-2022-11-07-오후-10.13.47.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:separator -->
<hr class="wp-block-separator"/>
<!-- /wp:separator -->

<!-- wp:heading {"level":1} -->
<h1>결론</h1>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>구축한 추천 로직을 활용하여 A/B test를 진행했습니다. A/B test를 통해 추천 로직으로 배포된 글과 “최신글 + 인기글(좋아요, 댓글 다수)”의 클릭률을 비교했습니다. 그 결과, 인기글 보단 클릭률이 낮았고 최신글보단 클릭률이 높은 결과가 나타났습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-3368" style="width: 600px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/11/스크린샷-2022-11-08-오후-1.57.38.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>좀 더 다양한 변수를 활용한 고도화된 모델에 대한 연구 진행을 검토했으나 내부 사정으로 인해서 추가 연구와 서비스까지는 이어지지는 못했습니다. 그러나 머신러닝 모델에 대한 서비스 적용은 결과 평가에 앞서서 서비스에 어떻게 적용할 것인지를 고민하는 것이 중요하다는 것을 다시 한번 느끼게 해주는 프로젝트 였습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>실제 예시로 여러 추천 알고리즘들을 서비스에 도입 시에는 빠른 업데이트를 이유로 knn 유사도 방식으로 서비스를 제공했다고 합니다. 이처럼 머신러닝을 서비스에 적용하기 위해서는 머신러닝의 성능에 대한 고려와 서비스 제공에 대한 고려를 동시에 하는 것이 중요합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>리멤버 빅데이터 센터 AI Lab에서는 꾸준히 최신 연구를 활용하여 인재 추천 서비스, 광고 추천 서비스, 명함 인식 등 다양한 연구를 수행하고 있습니다. 차후 AI Lab 에서 연구하는 다른 분야를 소개하고 공유하며 찾아뵙도록 하겠습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>궁금하신 사항은 댓글을 통해 문의 부탁드리며 긴 글 읽어주셔서 감사합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:separator -->
<hr class="wp-block-separator"/>
<!-- /wp:separator -->

<!-- wp:heading {"level":1} -->
<h1>Reference</h1>
<!-- /wp:heading -->

<!-- wp:list -->
<ul><li>[1] <a href="https://community.rememberapp.co.kr/main">https://community.rememberapp.co.kr/main</a></li><li>[2] <a href="https://aws.amazon.com/ko/what-is/opensearch/"></a><a href="https://aws.amazon.com/ko/what-is/opensearch/">https://aws.amazon.com/ko/what-is/opensearch/</a></li><li>[3] opensearch knn documentation.. <a style="font-family: &quot;Helvetica Neue&quot;, Helvetica, Roboto, Arial, sans-serif;" href="https://opensearch.org/docs/latest/search-plugins/knn/index/">https://opensearch.org/docs/latest/search-plugins/knn/index/</a></li><li>[4] <a style="font-family: &quot;Helvetica Neue&quot;, Helvetica, Roboto, Arial, sans-serif;" href="https://opensearch.org/blog/odfe-updates/2020/04/Building-k-Nearest-Neighbor-(k-NN)-Similarity-Search-Engine-with-Elasticsearch/">https://opensearch.org/blog/odfe-updates/2020/04/Building-k-Nearest-Neighbor-(k-NN)-Similarity-Search-Engine-with-Elasticsearch/</a></li><li>[5] MongoDB documentation, <a href="https://www.mongodb.com/docs/"></a><a href="https://www.mongodb.com/docs/">https://www.mongodb.com/docs/</a></li><li>[6] Transformer, Vaswani, Ashish, et al. "Attention is all you need."&nbsp;<em>Advances in neural information processing systems</em> 30 (2017).</li><li>[7] Devlin, Jacob, et al. "Bert: Pre-training of deep bidirectional transformers for language understanding."&nbsp;<em>arXiv preprint arXiv:1810.04805</em>&nbsp;(2018).</li><li>[8] SimCSE, Gao, Tianyu, Xingcheng Yao, and Danqi Chen. "Simcse: Simple contrastive learning of sentence embeddings."&nbsp;<em>arXiv preprint arXiv:2104.08821</em>&nbsp;(2021).</li></ul>
<!-- /wp:list -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3343</wp:post_id>
		<wp:post_date><![CDATA[2022-11-08 09:18:17]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-11-08 00:18:17]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-11-23 11:45:02]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-11-23 02:45:02]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%ec%b6%94%ec%b2%9c-%ec%8b%9c%ec%8a%a4%ed%85%9c-%ec%84%9c%eb%b9%84%ec%8a%a4-%ec%a0%81%ec%9a%a9%ec%9d%84-%ec%9c%84%ed%95%9c-elastic-search-%eb%8f%84%ec%9e%85%ea%b8%b0]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="ailab"><![CDATA[AI Lab.]]></category>
		<category domain="post_tag" nicename="aws-opensearch"><![CDATA[AWS OpenSearch]]></category>
		<category domain="post_tag" nicename="elasticsearch"><![CDATA[ElasticSearch]]></category>
		<category domain="post_tag" nicename="simcse"><![CDATA[SimCSE]]></category>
		<category domain="post_tag" nicename="%eb%a6%ac%eb%a9%a4%eb%b2%84"><![CDATA[리멤버]]></category>
		<category domain="post_tag" nicename="%eb%a6%ac%eb%a9%a4%eb%b2%84-%ec%bb%a4%eb%ae%a4%eb%8b%88%ed%8b%b0"><![CDATA[리멤버 커뮤니티]]></category>
		<category domain="post_tag" nicename="%ec%b6%94%ec%b2%9c%ec%8b%9c%ec%8a%a4%ed%85%9c"><![CDATA[추천시스템]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle_flag]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729512499;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:2047;}i:1;a:1:{s:2:"id";i:2978;}i:2;a:1:{s:2:"id";i:3642;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[52]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_single_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:23:{s:8:"subtitle";s:0:"";s:6:"format";s:8:"standard";s:5:"video";s:0:"";s:7:"gallery";s:0:"";s:11:"source_name";s:0:"";s:10:"source_url";s:0:"";s:8:"via_name";s:0:"";s:7:"via_url";s:0:"";s:17:"override_template";s:1:"0";s:8:"override";a:1:{i:0;a:32:{s:8:"template";s:1:"1";s:18:"single_blog_custom";s:0:"";s:8:"parallax";s:1:"1";s:10:"fullscreen";s:1:"1";s:6:"layout";s:13:"right-sidebar";s:7:"sidebar";s:15:"default-sidebar";s:14:"second_sidebar";s:15:"default-sidebar";s:14:"sticky_sidebar";s:1:"1";s:14:"share_position";s:3:"top";s:17:"share_float_style";s:16:"share-monocrhome";s:18:"show_share_counter";s:1:"1";s:17:"show_view_counter";s:1:"1";s:13:"show_featured";s:1:"1";s:14:"show_post_meta";s:1:"1";s:16:"show_post_author";s:1:"1";s:22:"show_post_author_image";s:1:"1";s:14:"show_post_date";s:1:"1";s:16:"post_date_format";s:7:"default";s:23:"post_date_format_custom";s:5:"Y/m/d";s:18:"show_post_category";s:1:"1";s:22:"show_post_reading_time";s:1:"0";s:21:"post_reading_time_wpm";s:3:"300";s:16:"show_zoom_button";s:1:"0";s:20:"zoom_button_out_step";s:1:"2";s:19:"zoom_button_in_step";s:1:"3";s:13:"show_post_tag";s:1:"1";s:19:"show_prev_next_post";s:1:"1";s:15:"show_popup_post";s:1:"1";s:17:"number_popup_post";s:1:"1";s:15:"show_author_box";s:1:"0";s:17:"show_post_related";s:1:"0";s:24:"show_inline_post_related";s:1:"0";}}s:19:"override_image_size";s:1:"0";s:14:"image_override";a:1:{i:0;a:2:{s:26:"single_post_thumbnail_size";s:8:"crop-500";s:24:"single_post_gallery_size";s:8:"crop-500";}}s:13:"trending_post";s:1:"0";s:22:"trending_post_position";s:4:"meta";s:19:"trending_post_label";s:8:"Trending";s:14:"sponsored_post";s:1:"0";s:20:"sponsored_post_label";s:12:"Sponsored by";s:19:"sponsored_post_name";s:0:"";s:18:"sponsored_post_url";s:0:"";s:26:"sponsored_post_logo_enable";s:1:"0";s:19:"sponsored_post_logo";s:0:"";s:19:"sponsored_post_desc";s:0:"";s:10:"disable_ad";s:1:"0";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:2:"id";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[114]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_estimated-reading-time-minutes]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_wordproof_timestamp]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[3354]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>12888</wp:comment_id>
			<wp:comment_author><![CDATA[lllll]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[labyu2020@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.25.186]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-10-19 00:50:20]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-10-18 15:50:20]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[좋은 글 감사합니다]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1697644220.757039;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1699263827.711767;s:5:"event";s:15:"status-approved";s:4:"user";s:8:"aaronroh";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>15533</wp:comment_id>
			<wp:comment_author><![CDATA[짱강한고양이]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[tiqmfk.274@daum.net]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.28.59]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-09-09 17:26:45]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-09-09 08:26:45]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[유저 임베딩값은 매번 모든 행동 데이터를 평균 가중치로 출력 하는 건가요 아니면 최근 행동 데이터 일부만 사용 하는지 알수 있을까요?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1725870405.984262;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[AI 명함 촬영 인식 ‘리오(RIO)’ 적용기 1부 - 명함촬영인식 위한 Instance Segmentation & Computer Vision]]></title>
		<link>https://blog.dramancompany.com/2022/11/ai-%eb%aa%85%ed%95%a8-%ec%b4%ac%ec%98%81-%ec%9d%b8%ec%8b%9d-%eb%a6%ac%ec%98%a4rio-%ec%a0%81%ec%9a%a9%ea%b8%b0-1%eb%b6%80-%eb%aa%85%ed%95%a8%ec%b4%ac%ec%98%81%ec%9d%b8%ec%8b%9d-%ec%9c%84%ed%95%9c-ins/</link>
		<pubDate>Wed, 16 Nov 2022 02:47:19 +0000</pubDate>
		<dc:creator><![CDATA[minseokkang]]></dc:creator>
		<guid isPermaLink="false">https://blog.dramancompany.com/?p=3374</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:spacer {"height":"36px"} -->
<div style="height:36px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">안녕하세요. 빅데이터센터 AI Lab 강민석입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">리멤버의 명함 촬영 인식은 유저가 명함을 등록하기 위한 촬영 순간에 명함을 인식하고 배경이 제거된 명함만을 사용자에게 보여주는 기술 입니다. 지금 이 시간에도 많은 사용자들이 명함을 촬영하고 있어 리멤버에서 더 정확하고 선명한 명함을 사용자에게 제공하고자 꾸준히 노력을 해왔습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">이번에 포스팅에서 소개할 <strong>명함 촬영 인식 AI 모델 ‘리오(RIO)’</strong>는 기존의 전통적인 컴퓨터 비전 기술인 Edge Detection, Hough Transform과 같은 기술에서 Deep Learning을 활용한 Instance Segmentation 기술로의 교체를 통해 사용자에게 더 다양한 환경에서 촬영할 수 있게 하고 선명하고 깨끗한 명함을 사용자에게 제공하고자 합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">이 AI 명함 촬영 인식 ‘리오’ 적용기 포스팅은 1부와 2부로 나누어 포스팅되어 있으며 이번 포스팅인 1부에서는 명함 촬영 인식 위한 Instance Segmentation &amp; Computer Vision 적용 방법을 다루고 2부에서는 ML Model Converter와 안드로이드 앱 적용기에 대해 포스팅 되어있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size"><strong>AI 명함 촬영 인식 ‘리오(RIO)’ 적용기 1부 - 명함 촬영 인식 위한 Instance Segmentation &amp; Computer Vision</strong></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size"><strong>AI 명함 촬영 인식 ‘리오(RIO)’ 적용기 2부 - ML Model Converter와 안드로이드 앱 적용기</strong></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">2부의 ML Model Converter와 안드로이드 앱 적용기 또한 많은 관심 부탁드립니다. 🙂</p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":"60px"} -->
<div style="height:60px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading -->
<h2><strong>명함 촬영의 다양한 환경 및 촬영 어려움</strong></h2>
<!-- /wp:heading -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">리멤버의 기존 명함 촬영 인식 방법에서 사용자들의 꾸준한 개선 요구가 있었습니다. 그 원인은 크게 3가지 정도라고 생각됩니다. 첫 번째로는 다양한 배경에서 명함 촬영, 두 번째로는 다양한 촬영 상황, 세 번째로는 촬영 시 제약 사항이 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true,"fontSize":"medium"} -->
<ol class="has-medium-font-size"><li><strong>다양한 배경에서의 명함 촬영 </strong>: 많은 리멤버 앱 사용자들이 명함을 촬영할 당시에 명함을 테이블 위에 놓고 찍는 환경 찍습니다. 하지만 생각보다 많은 사용자가 차량 안, 손에 들고, 키보드 위에 놓고 명함 사진을 찍는 경우도 많다 보니 촬영에 어려움이 있었습니다.</li><li><strong>다양한 촬영 상황</strong> : 너무 어둡거나 밝은 조명에서 촬영하거나 그림자가 짙은 곳에서의 촬영, 사용자가 걷거나 움직이는 촬영 환경에서도 촬영에 어려움을 겪고 있었습니다.</li><li><strong>촬영 시 제약사항</strong> : 환경적인 요소를 제한하기 위한 근접한 명함, 배경과 대조되는 환경에서의 제약이 실제 사용자들의 재촬영 또는 촬영시간의 증가로 이어졌었습니다.</li></ol>
<!-- /wp:list -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">이러한 3가지 요소들을 해결하고자 AI 명함 촬영 인식 ‘리오(RIO)’는 리멤버의 명함촬영을 하는 사용자에게 더욱 더 쉽고 빠르게 깨끗한 명함 촬영을 제공하고자 개발되었습니다. 이후 아래의 글에서는 AI 명함 촬영 인식 모델을 설명하고자 합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-3375" style="width: 1300px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/11/그림-1.-다양한-환경-및-촬영-상황.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center">그림 1. 다양한 환경 및 촬영 상황 (왼쪽-키보드 위 명함, 가운데-어두운 환경의 명함, 오른쪽-멀리서 찍은 명함)</p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":"60px"} -->
<div style="height:60px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading -->
<h2><strong>AI 명함 촬영 인식의 Task</strong></h2>
<!-- /wp:heading -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">AI 명함 촬영 인식 리오(RIO)를 개발 하기에 앞서 다양한 문제 해결방법에 대해 리서치를 진행하게 되었습니다. 명함 촬영 인식이라는 문제를 해결하기 위한 Task들로 <strong>Rotated Object Detection, Keypoint Detection, Instance Segmentation</strong>으로 추려졌습니다. 따라서 각 Task는 서로 장단점들이 존재하고 저희 명함에 적합한 Task는 Instance Segmentation이라 판단했습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">우선적으로 <strong>Rotated Object Detection</strong>은 다른 Task에 비해 쉬운 테스크를 갖고 있어 학습에 유리하고 명함의 방향까지 찾아 줄 수 있다는 장점이 있습니다. 하지만 명함 촬영 시에 카메라 특성 때문에 실제 사물이 이미지에 투영되는 2차원 이미지로 표현되는데 이는 명함이 직사각형으로 표현되지 않는 한계를 갖는 것을 의미하며 저희가 해결하고자 하는 문제를 해결할 수 없었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size"><strong>Keypoint Detection</strong>은 명함의 4개의 점을 바로 찾아 사용자에게 제공되므로 모델 결과물에 대한 후처리가 따로 필요 없다는 장점을 갖고 있습니다. 하지만 Keypoint Detection으로 찾는 4개의 점의 정확도와 리멤버 촬영시 원하는 정확도보다는 못 미치는 결과를 얻었습니다. 또한, 동그라미 및 다각형등의 다양한 명함 Shape를 표현하지 못하는 문제가 존재 했습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size"><strong>Instance Segmentation</strong>의 경우 실제 사물이 이미지에 투영되는 특성에 상관없이 다양한 모양의 명함의 Shape을 찾아주고 위에 설명한 다른 Task들보다 정확하게 명함을 찾아주는 결과를 보여줬습니다. 하지만 Segmentation 결과 자체를 사용하지 않고 추가적인 후처리를 통해 사용자에게 제공해주어야 했습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-3376" style="width: 1300px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/11/그림-2.-Task의-결과.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center">그림 2. Rotated Object Detection[1], Keypoint Detection[2], Instance Segmentation[3] 각 Task의 결과</p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":"60px"} -->
<div style="height:60px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading -->
<h2><strong>AI 명함 촬영 인식 모델의 파이프 라인</strong></h2>
<!-- /wp:heading -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">이번에 새롭게 배포되는 AI 명함 촬영 인식 모델 ‘리오(RIO)’는 아래의 흐름으로 입력된 이미지를 처리하게 됩니다. 사용자에게 실시간으로 명함을 찾아 사용자 화면에 표현해주기 위해 명함의 위치를 <strong>RIO Detector</strong>가 이미지 위에 동그라미로 표현해주게 됩니다. 사용자가 촬영 버튼을 클릭하게 되면 촬영된 명함 이미지를  <strong>RIO Segmentor</strong>를 통해 명함의 영역을 찾아내고 사용자에게 명함 이미지만으로 보이게끔 배경을 잘라내고 명함의 형태를 변형하여 명함의 이미지를 보여주게 됩니다. 아래의 내용에서 기능을 하나씩 설명하겠습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-3377" style="width: 1300px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/11/그림-3-AI-명함-촬영-인식-모델의-파이프-라인.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center">그림 3 AI 명함 촬영 인식 모델의 파이프 라인</p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":"60px"} -->
<div style="height:60px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading -->
<h2><strong>RIO Detector(Object Detection)</strong></h2>
<!-- /wp:heading -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-3379" style="width: 400px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/11/그림-4.-RIO-Detector-적용된-리멤버-앱-min.gif" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center">그림 4. RIO Detector 적용된 리멤버 앱</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size"><strong>RIO Detector</strong>는 사용자가 촬영한 이미지에서 명함의 위치 및 크기를 직사각형 형태로 찾는 작업입니다. 이는 사용자에게 명함의 위치를 인지하게 해주고 명함의 촬영이 준비 되었다는 의미를 갖습니다. 명함 촬영시에 가이드 역할을 합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":"60px"} -->
<div style="height:60px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading -->
<h2><strong>RIO Segmentor(Instance Segmentation)</strong></h2>
<!-- /wp:heading -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-3380" style="width: 500px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/11/그림-5.-이진화된-명함의-영역세그멘테이션-결과.png" alt="">.     <img class="wp-image-3381" style="width: 500px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/11/그림-6.-원본-이미지와-세그멘테이션-매핑예상-결과.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"left"} -->
<p class="has-text-align-left">                                              그림 5. 이진화된 명함의 영역(세그멘테이션 결과)                                                 그림 6. 원본 이미지와 세그멘테이션 매핑(예상) 결과</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"left","fontSize":"medium"} -->
<p class="has-text-align-left has-medium-font-size"><strong>RIO Segmentor</strong>는 사용자가 촬영 버튼 클릭 시 동작하게 됩니다. 사용자가 촬영한 이미지에서 입력 이미지의(640x640) 모든 픽셀에 대해 명함 인지 아닌지를 판단하여 이진화된 명함의 영역을 찾게 됩니다. RIO Segmentor로 찾게 된 이진화된 명함의 영역(명함의 Segment)을 후처리를 통하여 정제된 명함 이미지로 변환하게 됩니다.</p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":"60px"} -->
<div style="height:60px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading -->
<h2><strong>Post-Processing</strong></h2>
<!-- /wp:heading -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">RIO Segmentor로 찾아낸 이진화된 명함의 영역(명함의 Segment)을 통해 사용자에게 보여주는 명함 이미지로 변환하는 일련의 작업을 <strong>Post-Processing</strong>이라고 부르고, 내부적으로 외곽선 검출→최소 넓이 사각형 검출→최소 거리 꼭짓점 검출→투영 변환 순으로 진행하게 됩니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3><strong>외곽선 검출 (Contour)</strong></h3>
<!-- /wp:heading -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-3383" style="width: 1300px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/11/그림-6.-명함이미지의-외각선-검출-예시.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center">그림 6. 명함이미지의 외곽선 검출 예시</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">RIO Segmentor으로 찾게 된 이진화된 명함의 영역(Segment)의 가장 밖에 있는 외곽선을 찾는 작업입니다. OpenCV의 <code><strong>findContours()</strong></code>를 활용하여 외곽선을 찾습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":"33px"} -->
<div style="height:33px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading {"level":3} -->
<h3><strong>최소 넓이 직사각형 검출 (Minimum Area Rectangle)</strong></h3>
<!-- /wp:heading -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-3384" style="width: 1300px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/11/그림-7.-minAreaRect-결과-이미지.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center">그림 7. minAreaRect() 결과 이미지 - 왼쪽 OpenCV Contour Feature 예시[4], 오른쪽 명함이미지 결과 예시</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">OpenCV 함수인 <strong>minAreaRect()</strong> 를 사용하여 명함의 영역(Segment)을 감싸는 <strong>Minimum Area Rectangle(최소 넓이 직사각형)</strong>을 찾습니다. 위 그림에서 빨간색의 사각형이 회전을 포함한 최소 넓이를 갖는 직사각형입니다. 연두색의 사각형이 일반적으로 사용되는 Bounding Box(Object Detection의 결과)를 나타내고 회전이 없는 최소 넓이를 갖는 직사각형입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":"33px"} -->
<div style="height:33px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading {"level":3} -->
<h3><strong>최소 거리 꼭짓점 검출 (Minimum Distance Point)</strong></h3>
<!-- /wp:heading -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-3385" style="width: 1300px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/11/그림-8.-최소거리-포인트-검출-방법.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center">그림 8. 최소거리 포인트 검출 방법</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size"><strong>최소거리 꼭짓점 검출</strong>은 외곽선과 최소 넓이 직사각형을 활용해 최종적인 명함의 4개의 꼭짓점을 찾는 작업입니다. 찾아낸 최소 넓이 직사각형의 4개의 꼭짓점(위 그림의 파란색 동그라미)과 외곽선을 이루는 점 간의 가장 가까운 4개의 꼭짓점(빨간색 동그라미)을 찾게 됩니다. 찾아낸 4개의 점(빨간색 동그라미)을 명함의 꼭짓점이라고 판단합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":"33px"} -->
<div style="height:33px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading {"level":3} -->
<h3><strong>투영 변환 (Projection Transform)</strong></h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p><img class="wp-image-3386" style="width: 1300px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/11/그림-9.-명함-이미지의-투영-변환-예시.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center">그림 9. 명함 이미지의 투영 변환 예시</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size"><strong>투영 변환</strong>은 사용자가 촬영한 사진 속 명함을 2차원 평면으로 펴주는 작업으로 OpenCV 함수인 <code><strong>getPerspectiveTransform()</strong></code> 를 활용해 투영 변환 행렬을 구하고 <code><strong>warpPerspective()</strong></code> 를 통해 촬영된 이미지를 명함을 명함 사이즈라고 판단되는 정방향으로 회전된 최소 넓이 직사각형의 형태로 변형하여 사용자에게 정제된 명함 이미지로 보이게 됩니다.</p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":"59px"} -->
<div style="height:59px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading -->
<h2><strong>AI 명함촬영인식 ‘리오(RIO)’ 적용기 1부를 맺으며</strong></h2>
<!-- /wp:heading -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size"><strong>AI 명함촬영인식 ‘리오(RIO)’ 적용기 1부</strong>에서는 AI 명함촬영인식 ‘리오(RIO)’를 개발하게 된 이야기를 시작으로 명함촬영에서 해결하고자 하는 문제를 풀기 위한 다양한 방법들은 검토하고 리멤버 만의 명함촬영인식 방법으로 고안한 AI 명함촬영인식 ‘리오(RIO)’의 방법을 설명했습니다. <strong>AI 명함촬영인식 ‘리오(RIO)’ 적용기 2부 - ML Model Converter와 안드로이드 앱 적용기</strong>에서는 AI 명함촬영인식 ‘리오(RIO)’의 파이프 라인을 안드로이드에 적용하는 방법들과 다양한 시도들을 공유하고자 합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">리멤버 빅데이터 센터 AI Lab에서는 꾸준히 최신 연구를 활용하여 인재 추천 서비스, 광고 추천 서비스, 명함 인식 등 다양한 연구를 수행하고 계속해서 블로그에 글을 포스팅하려고 하고 있습니다. 지속적인 관심 부탁드립니다. 궁금하신 사항은 댓글을 통해 문의 부탁드리며 긴 글 읽어주셔서 감사합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":"60px"} -->
<div style="height:60px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading {"level":1} -->
<h1><strong>Reference</strong></h1>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>[1] Zhang, Luyang, et al. "Constraint Loss for Rotated Object Detection in Remote Sensing Images."&nbsp;<em>Remote Sensing</em> 13.21 (2021): 4291.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>[2] Xu, Yufei, et al. "ViTPose: Simple Vision Transformer Baselines for Human Pose Estimation."&nbsp;<em>arXiv preprint arXiv:2204.12484</em> (2022).</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>[3] Bolya, Daniel, et al. "Yolact: Real-time instance segmentation."&nbsp;<em>Proceedings of the IEEE/CVF international conference on computer vision</em>. 2019.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>[4] OpenCV: Contour Features Official Tutorials</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[리멤버의 AI 명함촬영인식 ‘리오(RIO)’ 적용기 1부에서는 AI 명함촬영인식 ‘리오(RIO)’를 개발하게 된 이야기를 시작으로 명함촬영에서 해결하고자 하는 문제를 풀기 위한 다양한 방법들은 검토하고 리멤버 만의 명함촬영인식 방법으로 고안한 AI 명함촬영인식 ‘리오(RIO)’의 방법을 설명했습니다. ]]></excerpt:encoded>
		<wp:post_id>3374</wp:post_id>
		<wp:post_date><![CDATA[2022-11-16 11:47:19]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-11-16 02:47:19]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-11-23 11:45:17]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-11-23 02:45:17]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[ai-%eb%aa%85%ed%95%a8-%ec%b4%ac%ec%98%81-%ec%9d%b8%ec%8b%9d-%eb%a6%ac%ec%98%a4rio-%ec%a0%81%ec%9a%a9%ea%b8%b0-1%eb%b6%80-%eb%aa%85%ed%95%a8%ec%b4%ac%ec%98%81%ec%9d%b8%ec%8b%9d-%ec%9c%84%ed%95%9c-ins]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="ailab"><![CDATA[AI Lab.]]></category>
		<category domain="post_tag" nicename="ai-%eb%aa%85%ed%95%a8-%ec%b4%ac%ec%98%81-%ec%9d%b8%ec%8b%9d"><![CDATA[AI 명함 촬영 인식]]></category>
		<category domain="post_tag" nicename="ai-%ec%a0%81%ec%9a%a9%ea%b8%b0"><![CDATA[AI 적용기]]></category>
		<category domain="post_tag" nicename="contour"><![CDATA[Contour]]></category>
		<category domain="post_tag" nicename="findcontours"><![CDATA[findContours]]></category>
		<category domain="post_tag" nicename="getperspectivetransform"><![CDATA[getPerspectiveTransform]]></category>
		<category domain="post_tag" nicename="instance-segmentation"><![CDATA[Instance Segmentation]]></category>
		<category domain="post_tag" nicename="projection-transform"><![CDATA[Projection Transform]]></category>
		<category domain="post_tag" nicename="rio"><![CDATA[rio]]></category>
		<category domain="post_tag" nicename="rio-detector"><![CDATA[RIO Detector]]></category>
		<category domain="post_tag" nicename="rio-segmentor"><![CDATA[RIO Segmentor]]></category>
		<category domain="post_tag" nicename="segmentation"><![CDATA[Segmentation]]></category>
		<category domain="post_tag" nicename="warpperspective"><![CDATA[warpPerspective]]></category>
		<category domain="post_tag" nicename="%eb%a6%ac%ec%98%a4"><![CDATA[리오]]></category>
		<category domain="post_tag" nicename="%eb%aa%85%ed%95%a8%ec%b4%ac%ec%98%81"><![CDATA[명함촬영]]></category>
		<category domain="post_tag" nicename="%eb%aa%85%ed%95%a8%ec%b4%ac%ec%98%81%ec%9d%b8%ec%8b%9d"><![CDATA[명함촬영인식]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle_flag]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle]]></wp:meta_key>
		<wp:meta_value><![CDATA[명함촬영인식 위한 Instance Segmentation & Computer Vision]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729504779;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:3447;}i:1;a:1:{s:2:"id";i:3398;}i:2;a:1:{s:2:"id";i:1016;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[52]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_single_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:23:{s:8:"subtitle";s:65:"명함촬영인식 위한 Instance Segmentation & Computer Vision";s:6:"format";s:8:"standard";s:5:"video";s:0:"";s:7:"gallery";s:0:"";s:11:"source_name";s:0:"";s:10:"source_url";s:0:"";s:8:"via_name";s:0:"";s:7:"via_url";s:0:"";s:17:"override_template";s:1:"0";s:8:"override";a:1:{i:0;a:32:{s:8:"template";s:1:"1";s:18:"single_blog_custom";s:0:"";s:8:"parallax";s:1:"1";s:10:"fullscreen";s:1:"1";s:6:"layout";s:13:"right-sidebar";s:7:"sidebar";s:15:"default-sidebar";s:14:"second_sidebar";s:15:"default-sidebar";s:14:"sticky_sidebar";s:1:"1";s:14:"share_position";s:3:"top";s:17:"share_float_style";s:16:"share-monocrhome";s:18:"show_share_counter";s:1:"1";s:17:"show_view_counter";s:1:"1";s:13:"show_featured";s:1:"1";s:14:"show_post_meta";s:1:"1";s:16:"show_post_author";s:1:"1";s:22:"show_post_author_image";s:1:"1";s:14:"show_post_date";s:1:"1";s:16:"post_date_format";s:7:"default";s:23:"post_date_format_custom";s:5:"Y/m/d";s:18:"show_post_category";s:1:"1";s:22:"show_post_reading_time";s:1:"0";s:21:"post_reading_time_wpm";s:3:"300";s:16:"show_zoom_button";s:1:"0";s:20:"zoom_button_out_step";s:1:"2";s:19:"zoom_button_in_step";s:1:"3";s:13:"show_post_tag";s:1:"1";s:19:"show_prev_next_post";s:1:"1";s:15:"show_popup_post";s:1:"1";s:17:"number_popup_post";s:1:"1";s:15:"show_author_box";s:1:"0";s:17:"show_post_related";s:1:"0";s:24:"show_inline_post_related";s:1:"0";}}s:19:"override_image_size";s:1:"0";s:14:"image_override";a:1:{i:0;a:2:{s:26:"single_post_thumbnail_size";s:8:"crop-500";s:24:"single_post_gallery_size";s:8:"crop-500";}}s:13:"trending_post";s:1:"0";s:22:"trending_post_position";s:4:"meta";s:19:"trending_post_label";s:8:"Trending";s:14:"sponsored_post";s:1:"0";s:20:"sponsored_post_label";s:12:"Sponsored by";s:19:"sponsored_post_name";s:0:"";s:18:"sponsored_post_url";s:0:"";s:26:"sponsored_post_logo_enable";s:1:"0";s:19:"sponsored_post_logo";s:0:"";s:19:"sponsored_post_desc";s:0:"";s:10:"disable_ad";s:1:"0";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:2:"id";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_estimated-reading-time-minutes]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_wordproof_timestamp]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[114]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[3391]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[리멤버의 AI명함촬영의 리서치 및 ‘리오(RIO)’의 방법을 설명]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
		<wp:meta_value><![CDATA[%%sitename%% %%primary_category%% 리멤버의 명함촬영에서 해결하고자 하는 문제를 풀기 위한 다양한 방법들을 검토하고 리멤버 만의 명함촬영인식 방법으로 고안한 AI 명함촬영인식 ‘리오(RIO)’의 방법을 설명했습니다. - Instance Segmentation, Object Detection]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[49]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>12742</wp:comment_id>
			<wp:comment_author><![CDATA[박현순]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[hpark@healthport.co.kr]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.healthport.co.kr</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.15.99]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-02-16 10:38:21]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-02-16 01:38:21]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[강민석 센터장님.
안녕하세요.
리오 서비스를 활용해서 병원에서 생성되는 처방전을 pdf로 전환할 경우 이 pdf를 사용자가 카메라로 촬영하여 앱으로 송부하는 프로세스에 적용해보려고 하는데
혹시 이 부분 관련한 기술 제공이나 외부 전문기업 추천이 혹시 가능하실까 문의드리고자 연락드립니다]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1676511502.060242;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[리멤버 유저에게 보다 깨끗한 명함 이미지 제공을 위한 이미지 복원 방법]]></title>
		<link>https://blog.dramancompany.com/2022/11/%eb%a6%ac%eb%a9%a4%eb%b2%84-%ec%9c%a0%ec%a0%80%ec%97%90%ea%b2%8c-%eb%b3%b4%eb%8b%a4-%ea%b9%a8%eb%81%97%ed%95%9c-%eb%aa%85%ed%95%a8-%ec%9d%b4%eb%af%b8%ec%a7%80-%ec%a0%9c%ea%b3%b5%ec%9d%84-%ec%9c%84/</link>
		<pubDate>Fri, 18 Nov 2022 05:21:27 +0000</pubDate>
		<dc:creator><![CDATA[horimpark]]></dc:creator>
		<guid isPermaLink="false">https://blog.dramancompany.com/?p=3398</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>안녕하세요. 드라마앤컴퍼니의 빅데이터센터 AILab 박호림입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>드라마앤컴퍼니 빅데이터 센터의 AI Lab은 Recommendation System, Ranking Model, Graph Neural Network, Natural Language Processing, Document Understanding, Computer Vision 등 연구 영역을 넓혀가고 있으며, 기반 연구를 통해 고객의 비즈니스에서 WOW 하는 경험을 제공하고자 노력하고 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>리멤버를 사용하는 많은 유저들은 본인의 명함 또는 주고받은 명함을 직접 촬영하여 등록하고 있습니다. 직접 촬영을 하다 보면 밝거나 어두운 또는 명함을 책상에 두거나 손으로 들거나 등의 다양한 환경에서 촬영하다 보니 명함 이미지를 복원하거나 다양한 후처리가 필요합니다. 따라서 이번 포스팅에서는 유저가 촬영한 명함 이미지에 대한 복원 방법에 대해 알아보고자 합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":1} -->
<h1>1. 명함 이미지 복원의 필요성과 이미지 복원 Task</h1>
<!-- /wp:heading -->

<!-- wp:heading -->
<h2>명함 이미지 복원의 필요성</h2>
<!-- /wp:heading -->

<!-- wp:list {"ordered":true} -->
<ol><li>명함을 촬영하면 명함 외  배경 부분을 잘라내고 명함만 확대하여 사용자에게 보이도록 합니다. 여기서 원본이미지에서 명함 부분만 잘라내어 확대하기 때문에 저해상도(낮은 품질)로 유저에게 보이는 문제가 있어 고해상도로 복원을 필요로 합니다.</li><li>리멤버 앱을 통한 명함 촬영은 자연히 다양한 환경에서 촬영된 명함 이미지들이 포함되어 있습니다. 하지만 촬영 시 주변 환경에 따라, 카메라의 성능에 따라 명함을 촬영한 이미지에 노이즈가 내포되곤 합니다. 촬영한 이미지에서 명함을 잘라내는 데 큰 문제는 없지만, 사용자에게 깨끗한 명함 이미지를 제공하기 위해서는 노이즈를 제거하는 명함 이미지 복원 작업이 필요합니다.</li><li>실제 명함을 촬영하여 명함 이미지를 저장하기 때문에 명함 자체가 오염되거나 명함을 잡고 찍은 명함 이미지라면 해당 부분이 반영되어 저장됩니다. 많은 유저들은 리멤버 상에서 명함을 통한 다양한 교류와 활동을 하기에 오염된 명함을 깨끗한 명함으로 복원할 필요가 있습니다.</li></ol>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p><img class="wp-image-3401" style="width: 3000px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/11/스크린샷-2022-11-17-오후-2.06.48-1.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center","fontSize":"small"} -->
<p class="has-text-align-center has-small-font-size">그림 1. 저해상도 명함 이미지(좌), 흐릿한 명함 이미지(중), 명함 정보 일부가 가려진 명함 이미지(우)</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>이미지 복원 Task</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>리멤버에서 명함 이미지를 촬영하고 난 후 이미지 복원에 대한 문제에 대해 3가지 정도 Task로 정의할 수 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Super-Resolution</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Super-Resolution(SR)은 저해상도 이미지를 고해상도 이미지로 변환하는 Task를 의미합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-3404" style="width: 1000px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/11/그림2.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center","fontSize":"small"} -->
<p class="has-text-align-center has-small-font-size">그림 2. Super-Resolution 예시 이미지</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Denoising, Deblurring</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Denoising 이란 입력 이미지로부터 이미지에 존재하는 노이즈를 제거하는 Task를 의미합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Deblurring 이란 흐릿한 이미지에서 Blur를 제거하여 깔끔한 이미지로 만드는 Task 입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-3406" style="width: 1000px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/11/스크린샷-2022-11-17-오후-2.20.08.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center","fontSize":"small"} -->
<p class="has-text-align-center has-small-font-size">그림 3. Denoising, Deblurring 예시 이미지</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Inpainting</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Inpainting 이란 오래된 사진 또는 화질이 번진 이미지에서 손실된 영역을 복구하는 Task입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-3407" style="width: 1000px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/11/그림4.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center","fontSize":"small"} -->
<p class="has-text-align-center has-small-font-size">그림 4. Inpainting 예시 이미지</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":1} -->
<h1>2. 전통적 이미지 복원 방법</h1>
<!-- /wp:heading -->

<!-- wp:heading {"level":3} -->
<h3>Super-Resolution</h3>
<!-- /wp:heading -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-3408" style="width: 600px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/11/그림5.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center","fontSize":"small"} -->
<p class="has-text-align-center has-small-font-size">그림 5. Interpolation 종류</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Super-Resolution Task를 해결하기 위해 전통적으로 많이 쓰는 방법의 하나는 Interpolation입니다. Interpolation이란 알고 있는 값을 가지는 두 점 사이의 어떠한 지점의 값을 추정하는 방법을 의미합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Super-Resolution을 해결하기 위한 Interpolation으로는 Bilinear interpolation, Bicubic interpolation 등이 있습니다. linear interpolation이란 두 점 사이의 직선을 그리는 방법, 즉 1차 함수에 해당하며 Cubic interpolation은 3차 함수 그래프 기준으로 값을 추정하는 방법입니다. 이 방법들을 2차원으로 확장해 Super-Resolution으로 적용하여 저해상도 이미지를 고해상도 이미지로 변환시켜줍니다. 이러한 방법 외에도 Nearest, Area, Lanczos 등의 Interpolation이 존재합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-3409" style="width: 700px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/11/그림7.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center","fontSize":"small"} -->
<p class="has-text-align-center has-small-font-size">그림 6. Bilinear, Lanczos Interpolation 테스트 이미지</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>그림 6은 360x270 사이즈의 명함 이미지를 두 가지 interpolation으로 변환한 결과 이미지입니다. Bilinear, Lanczos interpolation을 거친 두 결과 이미지를 보면 Lanczos interpolation 결과가 조금 더 선명하게 나타납니다. 하지만 두 결과 모두 좋지 않은 해상도를 보여주고 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>사실 Interpolation은 Opencv에서 이미지 사이즈를 축소, 확대 시킬때 사용하는 방법으로 Super Resolution으로 부르기 애매한 부분이 있으며 Interpolation을 통한 Resize는 좋은 결과를 얻기 어려운 부분이 있습니다. 또 다른 Super-Resolution solution으로는 저해상도 이미지를 만드는 Image degradation model을 정의하고 Inverse problem으로 접근하는 방법이 존재합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Denoising</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>De-noising Task를 해결하는 전통적 방법 중 필터링을 이용해 노이즈를 제거하는 방법이 존재합니다. 대중적인 방법으로는 Gaussian, Bilateral, Median filtering, Non-Local means filtering 등이 존재합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true} -->
<ol><li>Gaussian filtering : Gaussian filtering은 현 픽셀값과 이웃 픽셀 값들의 가중 평균을 이용해 현재 픽셀 값을 교체하는 방법입니다. Gaussian filtering은 이미지가 공간적으로 천천히 변하기 때문에 가까이 있는 픽셀들은 비슷한 값을 갖는다는 가정하에 만들어진 방법으로, 현재 픽셀에 가까울 수록 더 큰 가중치 값을 갖고 멀수록 작은 가중치 값을 갖습니다. 하지만 이 방법은 Edge 같은 부분을 뭉그러트리기 때문에 노이즈 제거에는 단점으로 나타납니다.</li><li>Bilateral filtering : Gaussian filtering을 보완한 방법으로 Bilateral filtering이 등장했는데, Edge 정보를 보존하면서 노이즈를 제거하는 방법으로 현재 픽셀과 이웃 픽셀 사이의 거리와 픽셀 값의 차이를 동시에 가중치에 반영하여 픽셀간의 거리만 반영한 Gaussian filtering을 보완한 방법입니다.</li><li>Non-Local means filtering[1] : 2번의 Bilateral filtering 방법도 문제점이 있습니다. Bilateral filtering은 픽셀간 거리와 픽셀 값 차이를 사용하는데, 픽셀값만을 비교하게 되어 위치적 요소를 고려하지 못하기 때문에 너무 심한 노이즈를 갖는 이미지의 경우 픽셀의 평균을 구해 연산하는데 문제점이 존재합니다. 이런 Bilateral Filtering 을 보완한 방법으로 Non-Local means filtering이 등장합니다. Non-Local means filtering은 비교하고자 하는 지점의 픽셀만 보는 것이 아니라 해당 픽셀에 대한 주변을 patch로 잘라내어 patch 사이의 거리를 계산합니다. patch까지 비슷하다고 판단되면 두 픽셀 간의 평균을 구해 노이즈를 제거하는 방식으로 진행됩니다. 따라서 Bilateral filtering과 비슷하지만 보완되어 성능이 뛰어나며, 딥러닝이 등장하고 Restoration에 적용되기 전까지 대중적으로 사용되어 왔습니다. 그림 7은 노이즈가 있는 4032x3024 명함 이미지에 대해 Non-Local means filtering을 적용한 결과에 대한 이미지입니다.</li></ol>
<!-- /wp:list -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-3410" style="width: 1000px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/11/그림7_1.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center","fontSize":"small"} -->
<p class="has-text-align-center has-small-font-size">그림 7. 명함 이미지 Non Local Means Filtering 테스트 결과</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Inpainting</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Inpainting이란 이미지의 손상, 열화, 누락된, 가려진, 보이지 않는 부분을 채워 완전한 이미지를 복원, 생성하는 것을 의미합니다. 전통적 Inpainting 방법으로는 Patch 기반, Diffusion 기반 두 가지 방법으로 볼 수 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Patch 기반의 방법은 이미지에서 손상되지 않는 부분에서 가장 일치하는 후보 패치를 찾아 손상된 위치에 복사하는 방법입니다. Diffusion 기반의 방법은 이미지 컨텐츠에서 누락된 영역의 경계로부터 시작하여 누락된 영역 내부로 점차 채워가는 방법을 의미합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":1} -->
<h1>3. 딥러닝 기반 이미지 복원 방법</h1>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>딥러닝이 등장하고 발전함에 따라 전통적인 복원 방법에서 딥러닝을 활용한 이미지 복원 방법이 등장하기 시작했습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>SRCNN[2]</h3>
<!-- /wp:heading -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-3411" style="width: 800px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/11/그림8.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center","fontSize":"small"} -->
<p class="has-text-align-center has-small-font-size">그림 8. SRCNN의 전체 구조</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>본 모델은 지도학습 모델이며, 저해상도 이미지와 고해상도 정답 이미지를 제공한 후 모델이 변환한 고해상도 이미지와 정답 이미지 간의 차이를 좁히도록 학습하는, 정답에 가까워지도록 하는 맵핑 함수를 찾는 모델입니다. 그림 8은 SRCNN의 전체 구조입니다. Bicubic interpolation으로 고해상도 이미지 사이즈와 동일하게 만든 후 임의의 Patch size 기준으로 분할하여 각 Patch의 High resolution에서의 Convolution 연산을 통해 추정합니다. 이후 Convolution 연산을 통해 고해상도 이미지로 Reconstruction 하는 구조로 설계된 모델입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>DnCNN[3]</h3>
<!-- /wp:heading -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-3412" style="width: 1000px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/11/그림9.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center","fontSize":"small"} -->
<p class="has-text-align-center has-small-font-size">그림 9. DnCNN의 전체 구조</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>위 SRCNN은 Super-Resolution task에 대한 모델이며 DnCNN은 Denoising task에 대한 모델입니다. 그림 9는 DnCNN의 전체 구조입니다. 정답 이미지에 Noise를 입혀 Noisy image를 생성하고 CNN 네트워크를 통해 Residual Image를 생성한 다음 정답 이미지와 평균제곱오차(MSE) 계산을 통해 차이를 학습하는 모델입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>SRGAN[4]</h3>
<!-- /wp:heading -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-3415" style="width: 800px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/11/그림10.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center","fontSize":"small"} -->
<p class="has-text-align-center has-small-font-size">그림 10. SRGAN의 전체 구조</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>본 모델은 처음으로 GAN을 이용하여 Super-Resolution task에 적용한 논문입니다. Generator는 저해상도 이미지를 고해상도 이미지로 만들고, Discriminator가 생성된 고해상도 이미지와 정답 고해상도 이미지를 판별하며, 진짜를 가려내는 학습을 진행하는 구조의 모델입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>SwinIR[5]</h3>
<!-- /wp:heading -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-3414" style="width: 800px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/11/그림11-1.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center","fontSize":"small"} -->
<p class="has-text-align-center has-small-font-size">그림 11. SwinIR의 전체 구조</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>본 논문은 21년도에 나온 논문에 해당 연도 기준으로 Super-Resolution, Denoising Task에 대해 SOTA를 달성한 논문입니다. Vision transformer를 이용한 Image Restoration 모델들은 보통 이미지를 Patch 단위로 나누어 각 Patch 독립적으로 보아서 패치 단위에서의 이웃 픽셀에 대한 정보를 이용하지 못한 문제점이 있습니다. 본 논문에서는 Patch 단위에서만 Attention이 이루어지는 것이 문제점으로 보고 Patch 간의 Attention이 가능하도록 하는 Swin transformer 구조의 Image reestoration 모델입니다. 하지만 Transformer 모델이기에 리소스나 추론 시간 등 상대적으로 더 많은 자원을 사용하기에 실 서비스에 사용되기 위해서는 고려되야 할 점이 많습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-3423" style="width: 1000px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/11/스크린샷-2022-11-17-오후-5.39.53.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center","fontSize":"small"} -->
<p class="has-text-align-center has-small-font-size">그림 12. SwinIR 테스트 결과</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>그림 12는 저해상도의 테스트 이미지를 SwinIR 모델의 입력으로 하여 추론된 출력 간 비교 이미지입니다. 위에 Interpolation으로 얻은 결과와 눈으로도 확연히 보이는 좋은 결과를 보여줍니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>NAFNet[6]</h3>
<!-- /wp:heading -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-3425" style="width: 1000px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/11/스크린샷-2022-11-18-오후-1.45.43.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center","fontSize":"small"} -->
<p class="has-text-align-center has-small-font-size">그림 13. NAFNet baseline Architecture(좌), GLU 기반의 NAFNet Activation Fuction(우)</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"left"} -->
<p class="has-text-align-left">22년도 ECCV에 발표된 논문으로 Denoising, Deblurring Task에 대한 이미지 복원 논문입니다. 새로운 모델 디자인을 제안하는 논문이 아닌, UNet[7] 모델 구조를 채택하여 Gated Linear Unit을 활용해 비선형 활성화 함수를 사용하지 않고 Denoising, Deblurring Task를 해결하는 논문입니다. 현재 Denoising, Deblurring Task에서 SOTA를 달성한 모델입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><br><img class="wp-image-3433" style="width: 1000px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/11/KakaoTalk_Image_2022-11-18-15-07-38-1.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center","fontSize":"small"} -->
<p class="has-text-align-center has-small-font-size">그림 14. 노이즈 명함 이미지, 흐릿한 명함 이미지에 대한 NAFNet 모델 출력 결과</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>그림 14는 논문 저자가 학습한 NAFNet Pre-trained Model로 노이즈가 존재하는 명함 이미지와 흐릿한 명함 이미지를 각각 추론한 결과입니다. 아주 깨끗한 또는 글자가 선명하게 복원된 이미지는 아니지만 입력 이미지로부터 어느 정도 좋은 복원 결과를 보여주고 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":1} -->
<h1>4. 결론</h1>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>지금까지 전통적인 이미지 복원 방법부터 딥러닝 기반의 이미지 복원 방법을 간단하게 살펴보았습니다. 딥러닝 기반의 이미지 복원 방법들이 기존 전통적인 방법에 비해 월등한 성능을 보여주고 있지만, 다만 각각 해결해야 하는 문제에 대한 필요 정도의 성능, 리소스, 시간 등을 고려하여 가장 적절한 방법론을 선택하고 적용하는 것이 좋은 방향으로 판단됩니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>리멤버 빅데이터 센터 AI Lab에서는 꾸준히 최신 연구를 활용하여 인재 추천 서비스, 광고 추천 서비스, 명함 인식 등 다양한 연구를 수행하고 계속해서 블로그에 글을 포스팅하려고 하고 있습니다. 지속적인 관심 부탁드립니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>궁금하신 사항은 댓글을 통해 문의 부탁드리며 긴 글 읽어주셔서 감사합니다.<br></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Reference</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>[1] Buades, Antoni, Bartomeu Coll, and J-M. Morel. "A non-local algorithm for image denoising."&nbsp;<em>2005 IEEE computer society conference on computer vision and pattern recognition (CVPR'05)</em>. Vol. 2. Ieee, 2005.APA</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>[2] Dong, Chao, et al. "Image super-resolution using deep convolutional networks."&nbsp;<em>IEEE transactions on pattern analysis and machine intelligence</em> &nbsp;38.2 (2015): 295-307.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>[3] Zhang, Kai, et al. "Beyond a gaussian denoiser: Residual learning of deep cnn for image denoising."&nbsp;<em>IEEE transactions on image processing</em> &nbsp;26.7 (2017): 3142-3155.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>[4] Ledig, Christian, et al. "Photo-realistic single image super-resolution using a generative adversarial network."&nbsp;<em>Proceedings of the IEEE conference on computer vision and pattern recognition</em> . 2017.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>[5] Liang, Jingyun, et al. "Swinir: Image restoration using swin transformer."&nbsp;<em>Proceedings of the IEEE/CVF International Conference on Computer Vision</em> . 2021.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>[6] Chen, Liangyu, et al. "Simple baselines for image restoration."&nbsp;<em>arXiv preprint arXiv:2204.04676</em>&nbsp;(2022).</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>[7] Ronneberger, Olaf, Philipp Fischer, and Thomas Brox. "U-net: Convolutional networks for biomedical image segmentation."&nbsp;<em>International Conference on Medical image computing and computer-assisted intervention</em>. Springer, Cham, 2015.</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3398</wp:post_id>
		<wp:post_date><![CDATA[2022-11-18 14:21:27]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-11-18 05:21:27]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-11-23 11:45:33]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-11-23 02:45:33]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%eb%a6%ac%eb%a9%a4%eb%b2%84-%ec%9c%a0%ec%a0%80%ec%97%90%ea%b2%8c-%eb%b3%b4%eb%8b%a4-%ea%b9%a8%eb%81%97%ed%95%9c-%eb%aa%85%ed%95%a8-%ec%9d%b4%eb%af%b8%ec%a7%80-%ec%a0%9c%ea%b3%b5%ec%9d%84-%ec%9c%84]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="ailab"><![CDATA[AI Lab.]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle_flag]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729516594;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:3374;}i:1;a:1:{s:2:"id";i:3447;}i:2;a:1:{s:2:"id";i:1016;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[52]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_single_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:23:{s:8:"subtitle";s:0:"";s:6:"format";s:8:"standard";s:5:"video";s:0:"";s:7:"gallery";s:0:"";s:11:"source_name";s:0:"";s:10:"source_url";s:0:"";s:8:"via_name";s:0:"";s:7:"via_url";s:0:"";s:17:"override_template";s:1:"0";s:8:"override";a:1:{i:0;a:32:{s:8:"template";s:1:"1";s:18:"single_blog_custom";s:0:"";s:8:"parallax";s:1:"1";s:10:"fullscreen";s:1:"1";s:6:"layout";s:13:"right-sidebar";s:7:"sidebar";s:15:"default-sidebar";s:14:"second_sidebar";s:15:"default-sidebar";s:14:"sticky_sidebar";s:1:"1";s:14:"share_position";s:3:"top";s:17:"share_float_style";s:16:"share-monocrhome";s:18:"show_share_counter";s:1:"1";s:17:"show_view_counter";s:1:"1";s:13:"show_featured";s:1:"1";s:14:"show_post_meta";s:1:"1";s:16:"show_post_author";s:1:"1";s:22:"show_post_author_image";s:1:"1";s:14:"show_post_date";s:1:"1";s:16:"post_date_format";s:7:"default";s:23:"post_date_format_custom";s:5:"Y/m/d";s:18:"show_post_category";s:1:"1";s:22:"show_post_reading_time";s:1:"0";s:21:"post_reading_time_wpm";s:3:"300";s:16:"show_zoom_button";s:1:"0";s:20:"zoom_button_out_step";s:1:"2";s:19:"zoom_button_in_step";s:1:"3";s:13:"show_post_tag";s:1:"1";s:19:"show_prev_next_post";s:1:"1";s:15:"show_popup_post";s:1:"1";s:17:"number_popup_post";s:1:"1";s:15:"show_author_box";s:1:"0";s:17:"show_post_related";s:1:"0";s:24:"show_inline_post_related";s:1:"0";}}s:19:"override_image_size";s:1:"0";s:14:"image_override";a:1:{i:0;a:2:{s:26:"single_post_thumbnail_size";s:8:"crop-500";s:24:"single_post_gallery_size";s:8:"crop-500";}}s:13:"trending_post";s:1:"0";s:22:"trending_post_position";s:4:"meta";s:19:"trending_post_label";s:8:"Trending";s:14:"sponsored_post";s:1:"0";s:20:"sponsored_post_label";s:12:"Sponsored by";s:19:"sponsored_post_name";s:0:"";s:18:"sponsored_post_url";s:0:"";s:26:"sponsored_post_logo_enable";s:1:"0";s:19:"sponsored_post_logo";s:0:"";s:19:"sponsored_post_desc";s:0:"";s:10:"disable_ad";s:1:"0";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:2:"id";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_estimated-reading-time-minutes]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_wordproof_timestamp]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[3400]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[114]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>13166</wp:comment_id>
			<wp:comment_author><![CDATA[김지훈]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[rlawl0001@naver.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.13.77]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-01-02 19:26:08]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-01-02 10:26:08]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[딥러닝기반 이미지 복원 방법에서 input이미지가 clean image(정답이미지)가 아닌 noise image만 있어도
복원이 가능할까요? 정답이미지가 없으면 개선된 이미지와 비교할수 없어 딥러닝 모델 활용이 필요 없을까요?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1704191168.14953;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[리멤버 웹 서비스 좌충우돌 Yarn Berry 도입기]]></title>
		<link>https://blog.dramancompany.com/2023/02/%eb%a6%ac%eb%a9%a4%eb%b2%84-%ec%9b%b9-%ec%84%9c%eb%b9%84%ec%8a%a4-%ec%a2%8c%ec%b6%a9%ec%9a%b0%eb%8f%8c-yarn-berry-%eb%8f%84%ec%9e%85%ea%b8%b0/</link>
		<pubDate>Wed, 22 Feb 2023 02:30:29 +0000</pubDate>
		<dc:creator><![CDATA[jongtaek.oh]]></dc:creator>
		<guid isPermaLink="false">https://blog.dramancompany.com/?p=3445</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>안녕하세요. 드라마앤컴퍼니에서 현재 채용 서비스를 개발하고 있는 웹 프론트엔드 개발자 오종택입니다. 이전에는 동료 분들의 비즈니스 임팩트를 극대화 하기 위한 UTS(User Targeting System, 조건에 맞는 유저를 찾아주는 쿼리 빌더) 등의 인터널 제품을 만들기도 했습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>리멤버 웹 팀은 리멤버 블랙, 리멤버 채용 솔루션 등 모든 서비스의 웹 애플리케이션을 개선 발전시키는 업무를 담당하고 있습니다. 이 과정에서 고객의 제품 경험을 개선하고, 이러한 개선 활동을 원활하게 지원할 수 있도록 팀의 생산성을 개선하는 일을 중요한 어젠다로 보고 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>최근에는 기존에 사용하던 패키지 매니저인 <code>yarn</code> 을 최신 버전인 <code>yarn berry</code> 로 마이그레이션 하기도 했습니다. 처음 <code>yarn berry</code> 라는 키워드를 접했을 땐, 빌드 시간을 일부 단축 시켜주고 개발 과정에서의 안정성을 높여줄 수 있다는 점에서 관심을 가지게 되었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>새로운 기술은 이후에 일어날 수 있는 변화를 미리 생각해서 신중하게 도입해야 할 것입니다. 웹 파트는 지속적으로 기술을 습득하고 지식을 공유하며, 팀이 효과적으로 일할 수 있다고 판단한 기술은 빠르게 개념 증명(PoC)을 진행하여 기술의 이해도를 높여가고 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>현재 리멤버 웹 파트는 모노레포 도입을 준비하면서 <code>pnpm</code> + <code>Turborepo</code>(<a href="https://turbo.build/">링크</a>) 조합을 선택하게 되어 <code>yarn berry</code>는 사용하지 않게 되었습니다. 이러한 시도가 있었기에 프로덕션 레벨에서 패키지 매니저를 교체하면서 해당 기술에 대한 이해도를 높였고 이를 바탕으로 최종적으로는 가장 만족스러운 결론에 다다를 수 있었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>이번 글에서는 리멤버 웹 서비스에 점진적으로 <code>yarn berry</code> 를 적용한 과정과, 트러블 슈팅 과정을 겪으며 느꼈던 점들을 공유드리고자 합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>1. Yarn Berry를 써야 할 결심</h2>
<!-- /wp:heading -->

<!-- wp:image {"align":"center","id":3552,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2023/02/image-2.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2023/02/image-2-1024x510.png" alt="" class="wp-image-3552"/></a><figcaption>제로 인스톨로 탄소 감축 :가보자고:</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>여러 아티클을 살펴보니 <code>yarn berry</code> 를 사용하면 빌드 시간을 평균적으로 1분 정도 단축할 수 있는 것으로 보였습니다. 뿐만 아니라 종속성들을 보다 안전하게 관리하면서도 기존 node_modules에 딸려오는 여러가지 골치 아픈 문제들을 근본적으로 해결할 수도 있을 것으로 봤습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>업무 기록을 살펴보니 유사한 고민이 과거에도 있었으나 당시 몇 명 없는 인원으로 운영되던 터라 개발 인프라 단에 리소스를 투자하기 어려운 상황이었기 때문에 우선 순위에서 밀렸던 것 같았습니다. 이제 그 때에 비해 프론트엔드 개발자도 늘었고, 개선 시 얻을 수 있는 임팩트도 커졌으니 명분도 충분했습니다. yarn berry 기술 자체도 처음 발표 때와 비교하여 어느 정도 관련 자료도 늘고 성숙해졌다는 판단 또한 있었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>기존 리멤버의 웹 서비스는 yarn 1.x 버전의 패키지 매니저를 사용해왔습니다. 현재 yarn 1.x 버전은 classic 으로 명명되었으며, 새로운 기능 개발은 이루어지지 않고 유지보수만 이루어지는 레거시 프로젝트가 되었습니다. 즉, yarn classic을 사용하고 있는 상황이고, yarn berry냐 pnpm이냐 하는 선택지를 고민하는게 아니라면 점진적으로 berry로 마이그레이션하는게 바람직하다고 생각합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>(참고로 새 프로젝트를 만드는 시점이라면 <code>yarn init -2</code> 명령으로 간단하게 프로젝트를 생성할 수 있습니다. 해당 프로젝트에 대한 보다 상세한 정보는 <a href="https://github.com/yarnpkg/berry">yarnpkg/berry</a> 에서 확인하실 수 있습니다.)</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","sizeSlug":"large"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><img src="https://user-images.githubusercontent.com/35240142/215241351-e7c73027-f829-459c-ab1e-f6e2d15f474c.png" alt=""/><figcaption>yarn classic 레포지토리. 기능 개발이 중단되었음을 알리는 디스크립션이 붙어있다.</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:image {"align":"center","sizeSlug":"large"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><img src="https://user-images.githubusercontent.com/35240142/215241355-efcfd03d-1b08-4e64-a875-acf658c21eb8.png" alt=""/><figcaption>yarn berry 레포지토리. yarn classic과는 대조되는 'Active development' 문구가 붙어있다.</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>2. Why ‘Yarn Berry’</h2>
<!-- /wp:heading -->

<!-- wp:image {"align":"center","sizeSlug":"large"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><img src="https://user-images.githubusercontent.com/35240142/219931631-edf19a25-06cd-4553-a6ba-88befa0ac587.png" alt=""/><figcaption>빠른 찍먹 후 공부를 곁들인...</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>도입을 결심한 뒤 개발이 비교적 적게 일어나고, 변경으로 인한 리스크가 적은 어드민 및 내부 라이브러리 프로젝트 부터 점진적으로 적용을 시작해나갔습니다. <code>yarn berry</code>를 적용하는 한편으로는 내부 공유를 위한 스터디 자료 준비가 이루어졌습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>적용 과정에서 패키지 매니저의 특징에 대해 자세히 살펴볼 수 있었습니다. yarn의 새로운 버전은 <code>node_modules</code> 라는 설계 그 자체로 인해 생기는 막대한 비효율을 해결하고자 기획 되었습니다. 물론 <code>npm</code> 은 그간 Node 생태계를 위해 많은 일을 해왔지만 가장 첫 번째로 꼽힐 용량 문제를 제외하고서라도 많은 문제를 안고 있었습니다. 아래는 <a href="https://yarnpkg.com/features/pnp">yarn 공식 문서</a>에 언급되어 있는 내용에 대한 정리입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>1) 모듈 탐색 과정의 비효율</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>node_modules 구조 하에서 모듈을 검색하는 방식은 기본적으로 디스크 I/O 작업입니다. 이는 node_modules가 가진 문제이기 때문에 yarn classic과 npm 모두에 해당되는 내용입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>개발자가 node_modules 내부에서 특정 라이브러리를 불러오는 상황을 가정해보겠습니다. Node.js가 모듈을 불러올 때 경로 탐색에 사용하는 몇 가지 규칙이 있는데요. 이 규칙은 <a href="https://nodejs.org/api/modules.html#loading-from-node_modules-folders">Node.js 공식 문서</a>에서 확인할 수 있습니다. <code>require()</code>의 경우 1) fs, http 등의 코어 모듈이 아니면서, 2) 절대 경로를 사용할 경우 대략 아래와 같은 순서로 순회하며 모듈을 검색합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>다음은 <code>'/home/ry/projects/foo.js'</code> 에서 <code>require('bar.js')</code> 를 탐색할 경우입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li><code>/home/ry/projects/node_modules/bar.js</code></li></ul>
<!-- /wp:list -->

<!-- wp:list -->
<ul><li><code>/home/ry/node_modules/bar.js</code></li></ul>
<!-- /wp:list -->

<!-- wp:list -->
<ul><li><code>/home/node_modules/bar.js</code></li></ul>
<!-- /wp:list -->

<!-- wp:list -->
<ul><li><code>/node_modules/bar.js</code></li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>이처럼 매 탐색마다 수 많은 폴더와 파일을 실제로 열고 닫으면서 검색할 수 밖에 없으며, node_modules 중첩 등 경우에 따라서는 순회해야 하는 경로가 이보다 복잡해질 수 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>패키지 설치 과정의 경우에도 마찬가지 입니다. 설치 과정에 필요한 최소 동작만으로도 이미 비용이 많이 들고 있기 때문에 각 패키지 간 의존 관계가 유효한지 등의 추가적인 검증에 리소스를 할당하기 어렵습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>이처럼 모듈 탐색을 메모리 상에서 자료구조로 처리하지 않고 I/O로 직접 처리하다보니 추가적인 최적화가 어렵습니다. 실제로 yarn 개발진은 이러한 이유들로 더 이상 최적화 할 여지가 없었다고 문서에서 밝히고 있습니다. yarn berry에서는 이 뒤에서 언급될 PnP 라는 기술을 통해 이를 개선합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>2) 유령 의존성 (Phantom Dependency)</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>물론 npm은 속도 문제를 개선하기 위해 호이스팅 등 최적화 알고리즘을 도입하였으나 부작용으로 <code>유령 의존성</code> 이라는 문제를 새로 낳고 말았습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","sizeSlug":"large"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><img src="https://classic.yarnpkg.com/assets/posts/2018-02-15-nohoist/standalone-2.svg" alt=""/><figcaption>https://classic.yarnpkg.com/blog/2018/02/15/nohoist/</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>npm, yarn classic 등은 중복 설치를 방지하기 위해 위 그림처럼 종속성 트리 아래에 존재하는 패키지들을 호이스팅 &amp; 병합합니다. 그렇게 하면 패키지 최상위에서 트리 깊이 탐색하지 않고 루트 경로에서 원하는 패키지를 탐색할 수 있으므로 효율적입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>하지만 이런 효율의 반대 급부로는 직접 설치하지 않고, 간접 설치한 종속성에 개발자가 접근할 수 있게 되는 상황이 벌어지기도 합니다. 존재하지 않는 종속성에 의존하는 코드가 왕왕 발생할 수 있다는 뜻입니다. 이를 <code>유령 의존성</code> 이라고 합니다. 앞서 언급한 node_modules의 단점으로 인해 의존성 트리의 유효성을 검증하기 어렵다는 것도 한 몫을 했습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>yarn berry에서는 이런 식의 호이스팅 동작이 일어나지 않도록 <code>nohoist</code> 옵션이 기본적으로 활성화 되어 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>3) Plug'n'Play (PnP)</h3>
<!-- /wp:heading -->

<!-- wp:list -->
<ul><li><a href="https://yarnpkg.com/features/pnp" target="_blank" rel="noreferrer noopener">https://yarnpkg.com/features/pnp</a></li><li><a href="https://classic.yarnpkg.com/lang/en/docs/pnp/" target="_blank" rel="noreferrer noopener">https://classic.yarnpkg.com/lang/en/docs/pnp/</a></li><li><a href="https://github.com/yarnpkg/berry/issues/850" target="_blank" rel="noreferrer noopener">https://github.com/yarnpkg/berry/issues/850</a></li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>yarn berry는 <strong>Plug'n'Play(PnP)</strong> 라는 기술을 사용하여 이러한 문제들을 해결합니다. yarn berry는 node_modules를 사용하지 않습니다. 대신 <code>.yarn</code> 경로 하위에 의존성들을 <code>.zip</code> 포맷으로 압축 저장하고, <code>.pnp.cjs</code> 파일을 생성 후 의존성 트리 정보를 단일 파일에 저장합니다. 이를 <code>인터페이스 링커 (Interface Linker)</code> 라고 합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:quote -->
<blockquote class="wp-block-quote"><p><em>Linkers are the glue between the logical dependency tree and the way it's represented on the filesystem. Their main use is to take the package data and put them on the filesystem in a way that their target environment will understand (for example, in Node's case, it will be to generate a .pnp.cjs file).</em></p><cite>https://yarnpkg.com/api/interfaces/yarnpkg_core.linker.html</cite></blockquote>
<!-- /wp:quote -->

<!-- wp:paragraph -->
<p>링커를 논리적 종속성 트리와 파일 시스템 사이에 있는 일종의 접착제로도 비유할 수 있습니다. 이러한 링커를 사용함으로서 패키지를 검색하기 위한 비효율적이고 반복적인 디스크 I/O로부터 벗어날 수 있게 되었습니다. 의존성 또한 쉽게 검증할 수 있어 유령 의존성 문제도 해결 가능해졌습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>아래 코드는 pnp.cjs의 일부입니다</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class="EnlighterJSRAW" data-enlighter-language="generic" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">      ["@babel/helper-module-transforms", [\
        ["npm:7.19.6", {\
          "packageLocation": "./.yarn/cache/@babel-helper-module-transforms-npm-7.19.6-c73ab63519-c28692b37d.zip/node_modules/@babel/helper-module-transforms/",\
          "packageDependencies": [\
            ["@babel/helper-module-transforms", "npm:7.19.6"],\
            ["@babel/helper-environment-visitor", "npm:7.18.9"],\
            ["@babel/helper-module-imports", "npm:7.18.6"],\
            ["@babel/helper-simple-access", "npm:7.19.4"],\
            ["@babel/helper-split-export-declaration", "npm:7.18.6"],\
            ["@babel/helper-validator-identifier", "npm:7.19.1"],\
            ["@babel/template", "npm:7.18.10"],\
            ["@babel/traverse", "npm:7.19.6"],\
            ["@babel/types", "npm:7.20.2"]\
          ],\
          "linkType": "HARD"\
        }]\
      ]],\
      ["@babel/helper-optimise-call-expression", [\
        ["npm:7.18.6", {\
          "packageLocation": "./.yarn/cache/@babel-helper-optimise-call-expression-npm-7.18.6-65705387c4-e518fe8418.zip/node_modules/@babel/helper-optimise-call-expression/",\
          "packageDependencies": [\
            ["@babel/helper-optimise-call-expression", "npm:7.18.6"],\
            ["@babel/types", "npm:7.20.2"]\
          ],\
          "linkType": "HARD"\
        }]\
      ]],\</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>위와 같이 .pnp.cjs는 의존성 트리를 중첩된 맵으로 표현하였습니다. 기존 Node 가 파일시스템에 접근하여 직접 I/O 를 실행하던 require 문의 비효율을 자료구조를 메모리에 올리는 방식으로 탐색을 최적화한 것입니다. 의존성 압축을 통하여 디스크 용량 절감 효과도 볼 수 있습니다. <code>du -sh</code> 명령어로 확인해보았을 때, Next.js 기반 어드민 서비스 기준 <code>913MB → 247MB</code> 로 기존 패키지 용량 대비 약 <code>27%</code> 수준으로 패키지 관련 용량이 감소한 것을 확인할 수 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","sizeSlug":"large"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><img src="https://user-images.githubusercontent.com/35240142/215241955-a7b64cd0-e15c-49c8-8a0a-b7746d5625a3.png" alt=""/><figcaption>.yarn/cache에 다운로드 된 종속성들</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:image {"align":"center","sizeSlug":"large"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><img src="https://user-images.githubusercontent.com/35240142/215241959-a17f711b-66f1-4494-810f-9f70744d039c.png" alt=""/><figcaption>yarn classic 에서의 node_modules 크기 (913MB)</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:image {"align":"center","sizeSlug":"large"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><img src="https://user-images.githubusercontent.com/35240142/215241967-11476f03-2757-4aaf-9913-323f64fc87a4.png" alt=""/><figcaption>yarn berry 에서의 .yarn 크기 (247MB)</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>다만 .yarnrc.yml의 링커 설정을 pnp가 아닌 <code>node-modules</code> 로 하게 된다면 기존처럼 node_modules를 설치하여 의존성을 관리하게 됩니다. 하지만 이렇게 사용할 경우 앞서 설명드린 PnP의 장점들을 활용하지 못하게 됩니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>이에 대한 예시로 최근 `Vercel` 에서 모노레포 툴링으로 발표한 <code>Turborepo</code> 의 경우 패키지 매니저 중 <code>pnpm</code> 의 pnp 모드만 지원하고 있고, 메인테이너는 yarn berry의 경우 지원 계획을 취소한 상태입니다. 이 경우 앞서 말씀드린 방식으로 berry를 사용해야 합니다. 관련 이슈는 <a href="https://github.com/vercel/turbo/issues/693#issuecomment-1278886166" target="_blank" rel="noreferrer noopener">여기</a>에서 확인하실 수 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>4) Zero-Installs</h3>
<!-- /wp:heading -->

<!-- wp:list -->
<ul><li><a href="https://yarnpkg.com/features/zero-installs" target="_blank" rel="noreferrer noopener">https://yarnpkg.com/features/zero-installs</a></li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p><code>.yarn</code> 폴더에 받아놓은 파일들은 오프라인 캐시 역할 또한 할 수 있습니다. 커밋에 포함시켜 github에 프로젝트 코드와 함께 올려두면 어디서든 같은 환경에서 실행 가능할 것을 보장할 수 있으며 별도의 설치 과정도 필요가 없습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>만약 의존성에 변경이 발생하더라도 git 상에서 diff로 잡히므로 쉽게 파악 가능합니다. 개발자들 간 node_modules가 동일한지 체크할 필요가 없다는 뜻입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>제가 생각했을 때 Yarn berry 도입 시 가장 강조되어야 할 중요한 지점이라고 생각합니다. 우리가 작성한 코드들이 여러 툴체인을 거치는 동안 많은 파일들이 generate 되는데, 만약 로컬에 설치된 파일과 리모트(CI 환경, 실서비스 등)에 설치된 파일이 달라 디버깅을 어렵게 한다면 대응하기 매우 어려워질 것입니다. Zero Install을 사용하게 된다면 어떤 설치 환경에서든 같은 상황임을 명시적으로 보장할 수 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>부가적인 장점으로 현재 브랜치에 맞는 package.json에 맞게 node_modules를 갱신하기 위한 반복적인 yarn install을 할 필요 또한 없습니다. 브랜치를 체크아웃할 때마다 <code>.yarn/cache</code> 폴더에 있는 의존성도 커밋으로 잡혀있기 때문에 여타 파일들처럼 파일로 취급되어 함께 변경되기 때문입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>3. 적용 방법</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p><a href="https://yarnpkg.com/features/pnp#compatibility-table)" target="_blank" rel="noreferrer noopener">호환성 테이블</a> 에서 지원하는 버전에 해당만 한다면 마이그레이션 자체는 어렵지 않습니다. <code>yarn</code>이 이미 설치되어 있다는 가정 하에 <a href="https://yarnpkg.com/getting-started/migration" target="_blank" rel="noreferrer noopener">yarn 공식 문서</a> 에서 설명하는 대로 진행합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>정말 해결할 수 없는 문제가 있다면 <code>.yarnrc.yml</code> 에서 <code>nodeLinker</code> 설정을 <code>loose</code> 혹은 <code>node-modules</code> 로 바꿔야(<a href="https://yarnpkg.com/getting-started/migration#if-required-enable-the-node-modules-plugin" target="_blank" rel="noreferrer noopener">링크</a>) 합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>nodeLinker : "pnp" # 혹은 "node-modules"</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>위에서 설명 드린 유령 의존성 문제 등의 이유로 현재 깨져 있는 종속성 트리를 수동으로 추가해주어야 하는 경우가 있을 수 있습니다. 이때는 일반적인 설치 방식으로 package.json에 종속성으로 추가해주거나, packageExtensions를 사용(<a href="https://yarnpkg.com/getting-started/migration#a-package-is-trying-to-access-another-package-" target="_blank" rel="noreferrer noopener">링크</a>)하여 보완해줄 수 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock {"language":"yaml"} -->
<pre class="EnlighterJSRAW" data-enlighter-language="yaml" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">packageExtensions:
  "debug@*":
    peerDependenciesMeta:
      "supports-color":
        optional: true</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:heading {"level":3} -->
<h3>1) yarn 버전 변경</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>&gt; yarn set version berry</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>이미 .yarnrc.yml 등 berry 관련된 파일이 생성되어 있으면 작동하지 않습니다. 만약 v1.x로 돌아가려면 <code>yarn set version classic</code> 을 입력합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>2) <code>.gitignore</code> 설정</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p><a href="https://yarnpkg.com/getting-started/qa#which-files-should-be-gitignored" target="_blank" rel="noreferrer noopener">문서</a>(Zero-Installs 기준)를 따라 <code>.gitignore</code> 에 아래 경로를 추가해줍니다. <code>!</code> 는 제외할(gitignore) 경로에서 빼달라는 뜻이므로 <code>.yarn</code> 이하 경로 중 포함시킬 경로들을 명시한 것으로 생각하시면 됩니다. 부정의 부정이라 좀 혼란스러울 수는 있을 것 같습니다. 각 경로의 역할에 대한 자세한 설명은 공식 문서에서 확인하실 수 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>.yarn/*
!.yarn/cache
!.yarn/patches
!.yarn/plugins
!.yarn/releases
!.yarn/sdks
!.yarn/versions</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":3} -->
<h3>3) <code>.npmrc</code>, <code>.yarnrc</code>를 <code>.yarnrc.yml</code> 로 마이그레이션</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>berry로 버전을 변경하게 되면 루트 경로에 .yarnrc.yml 파일이 생성됩니다. 기존에 있던 .npmrc, .yarnrc는 지원하지 않기 때문에 <a href="https://yarnpkg.com/configuration/yarnrc" target="_blank" rel="noreferrer noopener">문서</a>를 확인하여 각각의 옵션을 마이그레이션 해주면 됩니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>.yarnrc.yml에서 nodeLinker를 <code>node-modules</code> 로 입력하면 classic에서 하던 대로 종속성들을 node_modules에서 관리하게 됩니다. pnp 모드를 사용할 것이므로 <code>pnp</code> 라고 적혀 있는지 확인합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>또한 저희 프로젝트에서는 github packages로 배포한 종속성을 포함하고 있어 <code>yarnrc.yml</code> 에 추가적으로 관련 설정을 추가해줍니다. 배포 시에는 <code>Dockerfile</code> 에서 토큰 값을 넣어줍니다.</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock {"language":"yaml"} -->
<pre class="EnlighterJSRAW" data-enlighter-language="yaml" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">nodeLinker: pnp

yarnPath: .yarn/releases/yarn-3.3.0.cjs

npmScopes:
  organization이름(ex. dramancompany):
    npmAlwaysAuth: true
    # NOTE: 로컬에서 설치 시 터미널에 'export NPM_AUTH_TOKEN=...' 명령어로 환경변수를 설정
    npmAuthToken: ${NPM_AUTH_TOKEN} # https://github.com/yarnpkg/berry/pull/1341
    npmRegistryServer: 'https://npm.pkg.github.com'</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>상기 세팅이 모두 끝나면 `yarn install` 을 입력하여 yarn classic에서 berry로 마이그레이션을 진행합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>&gt; yarn install</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>이 과정에서 깨진 의존성들이 발견되곤 합니다. <code>styled-components</code> 사용 시 <code>react-is</code> 를 설치하라는 에러 메시지가 뜨는 것이 대표적인 케이스입니다. 터미널에 뜨는 에러 메시지를 확인하여 필요한 의존성들을 추가 설치해줍니다.</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock {"language":"yaml"} -->
<pre class="EnlighterJSRAW" data-enlighter-language="yaml" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">packageExtensions:
  styled-components@*:
    dependencies:
      react-is: '*'</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>설치 시 <code>~/.yarn/berry/cache</code> 전역 경로에도 함께 설치가 되므로 <code>yarn cache clean</code> 등의 명령어를 통해 의존성이 완전히 설치되지 않은 상황을 재현하고 싶을 경우 <code>yarn cache clean --mirror</code> 를 입력(<a href="https://yarnpkg.com/features/offline-cache#cleaning-the-cache" target="_blank" rel="noreferrer noopener">관련 문서</a>)해야 하므로 유의할 필요가 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>여기까지 마무리 되었으면 한번 커밋하여 진행 상황을 저장합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>4) yarn berry를 IDE와 통합 (with. TypeScript)</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>지금까지는 패키지 매니저 레벨에서 마이그레이션 할 것들을 처리해주었습니다. 이제 IDE에 의존성과 타입 정보를 node_modules가 아닌 .yarn에서 읽어오도록 알려주어야 합니다. VSCode 기준으로 설명하겠습니다.<br>일단 아래 세 가지 요소들을 설치합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>1. <code>VSCode Extension에서 ZipFS 설치</code> (zip 파일로 설치된 종속성을 읽어올 수 있도록)</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","sizeSlug":"large"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><img src="https://user-images.githubusercontent.com/35240142/215242255-06b1fe32-b8df-4434-816e-7d0c7b0bd779.png" alt=""/><figcaption>ZipFS 설치</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>2. <code>yarn install -D typescript eslint prettier</code></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>3. <code>yarn dlx @yarnpkg/sdks vscode</code> (yarn dlx = npx) 를 실행하여 관련 세팅을 포함한 <code>.vscode</code> 폴더를 생성합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock {"language":"json"} -->
<pre class="EnlighterJSRAW" data-enlighter-language="json" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">{
  "recommendations": [
    "arcanis.vscode-zipfs",
    "dbaeumer.vscode-eslint",
    "esbenp.prettier-vscode"
  ]
}</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:enlighter/codeblock {"language":"json"} -->
<pre class="EnlighterJSRAW" data-enlighter-language="json" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">{
  "search.exclude": {
    "**/.yarn": true,
    "**/.pnp.*": true
  },
  "eslint.nodePath": ".yarn/sdks",
  "prettier.prettierPath": ".yarn/sdks/prettier/index.js",
  "typescript.tsdk": ".yarn/sdks/typescript/lib",
  "typescript.enablePromptUseWorkspaceTsdk": true
}</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>4. 설치가 완료되면 아무 타입스크립트 파일이나 들어간 다음</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>5. 우측 하단 TypeScript 클릭 or <code>cmd + shift + p</code> 를 눌러 TypeScript 검색</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","sizeSlug":"large"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><img src="https://user-images.githubusercontent.com/35240142/215242264-c9d267c6-a43f-427e-951d-9d0bdd166f42.png" alt=""/></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>6. Use Workspace Version 클릭</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","sizeSlug":"large"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><img src="https://user-images.githubusercontent.com/35240142/215242269-6d5640db-1ed4-46f1-9242-d4ae20642188.png" alt=""/></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>여기까지 진행 한 뒤 다시 한번 진행 상황 저장을 위해 커밋합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>5) Dockerfile 수정</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>이상 로컬에서 필요한 작업들은 모두 완료를 해주었습니다. 배포 시 도커를 사용하고 있으므로 <code>Dockerfile</code> 에도 필요한 작업을 해줍니다. 아래와 같이 작업을 해주었으며 필요한 설명은 파일 내 주석으로 추가해두었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>세 가지 정도의 주의사항이 있습니다. 하나는 <code>yarn berry</code> 가 <code>Node 16.14+</code> 버전에서 동작한다는 것이고, 다른 하나는 <code>yarn berry</code> 에서 <code>zero install</code> 을 사용할 때 <code>yarn install</code> 시 <code>--immutable</code> 옵션을 사용해야 하고, Docker로 배포 시 Dockerfile에 다음과 같이 작성하여 관련 파일들을 working directory에 복사해줘야 합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>COPY package* yarn.lock .pnp*     ./
COPY .yarnrc.yml                  ./
COPY .yarn                        ./.yarn</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>위와 같은 과정을 거치면 yarn berry의 zero install을 사용할 수 있게 됩니다. 개선된 빌드 시간은 프로젝트마다 차이가 있으나 지금까지 적용해본 케이스들에서는 약 50초 ~ 1분 정도의 시간 단축이 있었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>4. 트러블 슈팅 (with Github issues)</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p><code>yarn berry</code> 가 처음 발표되었을 때에 비해 관련 자료도 많아지고, <a href="https://yarnpkg.com/features/pnp#compatibility-table" target="_blank" rel="noreferrer noopener">여러 대규모 프로젝트</a>에서 지원하기 시작하는 등 꾸준한 개선이 있어왔지만, 기존 패키지 매니저와의 구조적인 차이 때문에 맞닥뜨리게 되는 낯선 이슈들이 여전히 존재합니다. 이번 섹션에서는 그러한 문제들을 해결했던 경험을 이야기해보겠습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>1) 커밋에 포함되지 않는 종속성 문제</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p><code>yarn install</code> 시 커밋에 포함되지 않는 파일들이 있습니다. <code>.yarn/install-state.gz</code> 같은 경우 최적화 관련 파일이기 때문에 애초에 커밋할 필요 없다고 공식 문서에서 안내하고 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>한편 예상치 못한 예외 케이스도 있었습니다. Next.js 등에 포함되는 `swc`의 경우 운영체제에 종속되는 부분이 있다보니 커밋에 포함시킬 경우 실행환경에 따라 문제를 일으킬 수 있어 커밋에서 제외되고 있습니다. 따라서 swc를 사용한다면 정상적인 빌드를 위해 최초 1회 설치 명령어가 필요합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>만약 설치를 실행하지 않으면 아래와 같은 오류가 발생합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","sizeSlug":"large"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><img src="https://user-images.githubusercontent.com/35240142/215242557-6ceaf60b-7044-42e1-99ac-e975823d0088.png" alt=""/></figure></div>
<!-- /wp:image -->

<!-- wp:image {"align":"center","sizeSlug":"large"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><img src="https://user-images.githubusercontent.com/35240142/215242563-29edb728-b040-402d-bcdb-dcf90a104a80.png" alt=""/></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>설치 후 추가된 파일들이 .gitignore에 등록되어 있으며, 설치된 종속성의 폴더명으로부터 플랫폼 종속적이라는 사실을 추측해볼 수 있습니다. 참고로 <code>.yarn/unplugged</code> 는 zip으로 묶이지 않고 압축해제 된 종속성들이 설치되는 경로입니다. <code>yarn unplug</code> 등의 명령어를 사용하면 압축된 종속성 들을 풀어서 확인할 수 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>2) ESLint import/order 관련 이슈</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p><code>eslint</code> 에서 import 관련 룰을 사용하고 있다면 추가 세팅이 필요합니다. <code>eslint-plugin-import</code> 에서 제공하는 <code>import/order</code> 옵션을 활용해 다음과 같이 외부 의존성과 내부 의존성을 구분지어 줄바꿈 해주고 있었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","sizeSlug":"large"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><img src="https://user-images.githubusercontent.com/35240142/215242568-de643261-f829-4f7a-a5c3-ebff19da0a53.png" alt=""/></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>이 Lint 규칙이 yarn berry 적용 후 제대로 작동하지 않는 것을 발견하였습니다. 프로젝트 내부에서 가져온 모듈과, 외부 라이브러리에서 가져오는 모듈을 구분하는 기준이 node_modules가 경로에 포함되어 있는지 여부였을 것이라 생각하여 검색해보았습니다. <a href="https://github.com/import-js/eslint-plugin-import/issues/2164" target="_blank" rel="noreferrer noopener">관련 이슈</a>로부터 힌트를 얻어 <a href="https://github.com/import-js/eslint-plugin-import#importexternal-module-folders" target="_blank" rel="noreferrer noopener">README</a> 내에 언급된 해결책을 찾을 수 있었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:quote -->
<blockquote class="wp-block-quote"><p><em>If you are using yarn PnP as your package manager, add the .yarn folder and all your installed dependencies will be considered as external, instead of internal.</em></p></blockquote>
<!-- /wp:quote -->

<!-- wp:paragraph -->
<p>이 문제를 해결하려면 <code>.eslintrc.js</code> 에 다음과 같이 옵션을 추가하여 <code>.yarn</code> 경로를 외부 의존성으로 인식시켜주면 됩니다.</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock {"language":"js"} -->
<pre class="EnlighterJSRAW" data-enlighter-language="js" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">// .eslintrc.js
// ...
  settings: {
    'import/external-module-folders': ['.yarn'],
// ...</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:heading {"level":3} -->
<h3>3) yarn berry에서 pre-hook 지원하지 않음</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>yarn 2.x 버전 부터는 pre-hook(ex. <code>preinstall</code> , <code>prepare</code> 등) 을 지원하지 않습니다. <a href="https://yarnpkg.com/advanced/lifecycle-scripts#gatsby-focus-wrapper" target="_blank" rel="noreferrer noopener">문서</a>에 따르면 이는 사이드 이펙트를 줄이기 위한 의도적인 변경이라고 하며, 호환성을 위해서 <code>preinstall</code> 과 <code>install</code> 은 <code>postinstall</code>의 일부로서 실행됩니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>기존에 husky 등을 사용하기 위해 걸어둔 pre-hook이 있었다면 yarn berry 업그레이드 후 작동하지 않을 것이므로 이에 대한 처리가 필요합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>"postinstall": "husky install"</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":3} -->
<h3>4) yarn berry와 vite를 함께 사용할 때 storybook이 실행되지 않는 문제</h3>
<!-- /wp:heading -->

<!-- wp:image {"align":"center","sizeSlug":"large"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><img src="https://user-images.githubusercontent.com/35240142/215242682-106bffb8-6eb7-452a-86f1-869726aa4b17.png" alt=""/></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>이 경우는 누락된 devDependencies를 다 깔아주면 되는 문제로 간단하게 해결할 수 있었습니다. 관련 이슈는 <a href="https://github.com/storybookjs/builder-vite/issues/141" target="_blank" rel="noreferrer noopener">여기</a>에서 찾아볼 수 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>하지만 이 종속성들을 설치하고 나서도 storybook이 정상적으로 실행되지는 않았는데, 스토리북으로 띄운 화면 상의 콘솔에 `"Cannot access "./util.inspect.custom" in client code."` 라는 에러가 발생했습니다. pnp와 vite 사이에서만 발생하는 문제로 build 과정에서 서버 / 클라이언트 환경에서 실행되는 코드들이 적절히 처리되지 않아서 생기는 문제로 이해했습니다. vite 측에서 폴리필을 추가하여 해결한 것으로 보이며, 관련 이슈는 <a href="https://github.com/vitejs/vite/issues/9238" target="_blank" rel="noreferrer noopener">여기</a>, <a href="https://github.com/vitejs/vite/issues/7576" target="_blank" rel="noreferrer noopener">여기2</a>에서 찾아볼 수 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","sizeSlug":"large"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><img src="https://user-images.githubusercontent.com/35240142/215242692-31961169-1beb-4de4-9d3a-a564b61c0ed4.png" alt=""/></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>이 외에도 vite와의 조합에서 생기는 문제는 또 있었는데요. build를 실행했을 시 종속성을 제대로 찾지 못하는 문제였습니다. 이 문제는 yarn berry를 3.3.0으로 올리고 vscode sdk를 재설치한 뒤, vite를 3.2.0 버전으로 업데이트 하여 해결했습니다. 관련 이슈는 <a href="https://github.com/yarnpkg/berry/issues/4872#issuecomment-1284318301" target="_blank" rel="noreferrer noopener">여기</a>에서 찾아볼 수 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>5. 개선 결과</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>결과적으로 개선된 빌드 시간은 프로젝트마다 차이가 있으나 지금까지 적용해본 케이스들에서는 yarn berry 단독으로만 따졌을 때 평균적으로 약 50초 ~ 1분 정도의 시간 단축이 있었습니다. 만약 앞서 언급한 swc 관련 설치 시간을 생략할 수 있다면 20초 정도를 추가로 단축할 여지가 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:image -->
<figure class="wp-block-image"><img src="https://user-images.githubusercontent.com/35240142/220504822-90f3f3a5-4142-4bdb-bd5e-32e8b682f2c8.png" alt="image"/><figcaption>swc 설치에 소요되는 시간</figcaption></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>빌드 시간 단축 이외에도 실제 도입해보고 나서 체감할 수 있었던 장점들이 많았습니다. 레포지토리 설치 시 종속성 크기 감소, 로컬과 리모트 환경에서의 빌드 결과물의 동일성 보장, 엄격한 종속성 트리 관리로 인한 안정성 향상 등의 이점이 기존 버전 대비 방법론적인 개선을 이룰 수 있었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>개발 단계에서 git branch 변경 시 반복적으로 install 스크립트를 실행하여 node_modules를 업데이트 해줘야 하거나, 종종 잘못 설치된 종속성 때문에 한참 디버깅을 하다 결국 node_modules를 지우고 재설치 해야 하는 번거로움이 줄어든 것도 체감되는 부분이었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>추가로 Dockerfile에 들어있던 세팅에서 불필요한 부분을 걷어내고, <a href="https://docs.aws.amazon.com/ko_kr/codebuild/latest/userguide/build-caching.html#caching-local">AWS Codebuild에서 Docker Layer가 로컬 캐싱</a>될 수 있는 방법을 찾아 적용하였습니다. yarn berry와는 직접적으로 관련은 없지만 배포 성능을 개선하는 도중에 진행했던 변경이라 함께 언급해두겠습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>도커 파일 내 각 레이어는 변경사항이 생기지 않는 이상 새롭게 생성될 필요가 없습니다. 변경이 사항 없을 시 CodeBuild의 빌드 호스트가 자연스럽게 Docker Layer 캐싱을 이용할 수 있도록 세팅을 변경해주었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>현재 AWS CodePipeline을 사용하여 배포하고 있으며, 빌드는 AWS Codebuild를 사용하고 있으므로, 해당 단계에서 생성된 빌드 결과물을 캐싱에 사용할 수 있도록 아래와 같이 체크해줍니다. 다만 이 로컬 캐시의 정확한 유효 시간(약 5 ~ 15분)이나 히트 조건에 대해서는 조금 더 확인이 필요합니다. (<a href="https://stackoverflow.com/questions/58793704/aws-codebuild-local-cache-failing-to-actually-cache">링크</a>)</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","sizeSlug":"large"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><img src="https://user-images.githubusercontent.com/35240142/215242409-a7761e7b-6c11-44e1-9371-c22e10085819.png" alt=""/><figcaption>AWS Codebuild - 편집 - 아티팩트 - 캐싱 메뉴 하단</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>이 과정에서 기존에 잘못 세팅되어 있던 Codebuild의 Buildspec을 바로 잡고 로컬 캐싱이 작동하도록 함으로서 추가적으로 빌드 시간을 단축하였습니다. Next.js 기반의 어드민 프로젝트 기준 최대 2분 가량 추가 단축한 것으로 추정됩니다.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center"} -->
<div class="wp-block-image"><figure class="aligncenter"><img src="https://user-images.githubusercontent.com/35240142/220504970-ba4c5fb9-d6ad-4510-85ec-6785ac8b7132.png" alt="image"/><figcaption>캐시 히트 시 빌드 소요 시간 2분 37초 (직전 빌드 4분 28초 - yarn berry 적용 분 포함)</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:image {"align":"center","id":3557,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2023/02/image-6.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2023/02/image-6-1024x276.png" alt="" class="wp-image-3557"/></a><figcaption>도커 레이어 레벨에서 캐싱이 일어났을 때의 빌드 로그</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>한 프로젝트는 언급드린 두 가지 조치를 통하여 프로젝트에 따라 빌드 시간이 5분 30초 → 1분 50초로 드라마틱하게 감소하기도 했는데, 프로젝트별 인스턴스 세팅과 빌드 시점, 캐시 여부에 따라 개선되는 폭은 상이할 것으로 생각되어 절대적인 수치로는 참고하지 말아주시고 대략적인 수치로만 봐주시면 좋을 것 같습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>6. 마치며</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>한 명의 아이를 기르기 위해 온 마을이 필요하다는 말 처럼, 하나의 웹 서비스가 만들어지기 위해서는 정말 다양한 기술이 필요합니다. 어느 개발이나 그렇겠지만 특히 최근 자바스크립트 생태계는 특히 이런 <code>툴체인(Toolchain)</code> 의 조합을 여러 방향으로 실험해보는 활발한 분위기가 느껴집니다. <code>npm</code> 과 함께 오랫동안 사랑 받아온 패키지 매니저 <code>yarn</code> 또한 개발에 필요한 라이브러리들의 설치와 종속성을 담당하는 점에서 툴체인의 중요한 일부를 담당하고 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>그 중에서도 yarn berry와 pnp는 과감하면서도 멋진 진전이라고 생각합니다. 물론 위에 말씀드린 이슈들처럼 아직 사용자들이 직접 부딪혀야 하는 문제들이 산재해있지만, 기술이 처음 공개되었을 때와 비교하면 현재 이 리스크들은 감내할 수 있는 수준이라고 생각합니다. <code>yarn unplug</code> , <code>yarn why</code> , <code>yarn patch</code> 등의 기능을 활용하여 디버깅하고, 긴급한 상황에서는 <code>nodeLinker: node-modules</code> 로 되돌리거나 <code>pnpMode: loose</code> 등의 절충점이 존재하므로 자신 있게 도입해볼 수 있을 것 같습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>사실 <code>yarn berry</code> 를 도입하는 과정에서 가장 좋았던 점은 성능상의 이점보다도, yarn이나 여러 패키지 내부의 코드를 살펴보며 동작 원리를 가늠하거나, Github에 올라온 issue들을 싹싹 긁어가며 읽고, peerDependencies 등 종속성들 간의 관계를 생각하며 패키지를 이리저리 설치해보던 시간들이었습니다. 가벼운 마음으로 시작했지만 역시 어떤 기술이든 직접 만져보고 굴려볼 때 이해도가 더 높아진다는 사실을 새삼스레 곱씹어보게 됐던 것 같네요.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>서두에서 말씀드렸듯 결국 저희 팀에서는 비록 <code>Turborepo</code> 와의 호환 이슈로 <code>pnpm</code> 을 선택하게 되었지만 yarn berry는 충분히 매력적인 기술인만큼 검토해보시고 도입을 적극 고려해보셨으면 좋겠습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>이제 저희 팀의 채용 홍보로 글을 마무리 짓도록 하겠습니다. <strong>리멤버 웹 파트에서는 이러한 기술적인 고민을 함께 나누며 성장하실 동료분을 모시고 있습니다.</strong> 서류 검토, 기술 면접, 컬처핏 면접 절차 세 단계로 간소하게 프로세스를 진행하고 있습니다. 보다 상세한 내용은 <a href="https://hello.remember.co.kr/recruit/web">채용 공고</a>를 확인 부탁드리며, 많은 관심과 지원 부탁드리겠습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>지금까지 긴 글 읽어주셔서 감사합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:buttons {"align":"wide"} -->
<div class="wp-block-buttons alignwide"><!-- wp:button {"backgroundColor":"luminous-vivid-orange","align":"center"} -->
<div class="wp-block-button aligncenter"><a class="wp-block-button__link has-luminous-vivid-orange-background-color has-background" href="https://hello.remember.co.kr/recruit/web" target="_blank" rel="noreferrer noopener">&gt;_ 웹 파트 채용공고 보러가기</a></div>
<!-- /wp:button --></div>
<!-- /wp:buttons -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":3548,"sizeSlug":"large","linkDestination":"media"} -->
<div class="wp-block-image"><figure class="aligncenter size-large"><a href="https://blog.dramancompany.com/wp-content/uploads/2023/02/image.png"><img src="https://blog.dramancompany.com/wp-content/uploads/2023/02/image-1024x275.png" alt="" class="wp-image-3548"/></a><figcaption>도입 초기에는 모든 에러로부터 Yarn Berry가 의심의 눈초리를 받을 수 있으니 주의 요망</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>6. 참고 자료</h2>
<!-- /wp:heading -->

<!-- wp:list -->
<ul><li><a href="https://yarnpkg.com/" target="_blank" rel="noreferrer noopener">https://yarnpkg.com/</a></li><li><a href="https://toss.tech/article/node-modules-and-yarn-berry" target="_blank" rel="noreferrer noopener">node_modules로부터 우리를 구원해 줄 Yarn Berry</a></li><li><a href="https://medium.com/wantedjobs/yarn-berry-%EC%A0%81%EC%9A%A9%EA%B8%B0-1-e4347be5987" target="_blank" rel="noreferrer noopener">yarn berry 적용기(1)</a></li><li><a href="https://medium.com/teamo2/yarn-berry-%EA%B5%B3%EC%9D%B4-%EB%8F%84%EC%9E%85%ED%95%B4%EC%95%BC-%ED%95%A0%EA%B9%8C-d6221b9beca6" target="_blank" rel="noreferrer noopener">Yarn Berry, 굳이 도입해야 할까?</a></li><li><a href="https://yceffort.kr/2022/05/npm-vs-yarn-vs-pnpm" target="_blank" rel="noreferrer noopener">npm, yarn, pnpm 비교해보기</a></li></ul>
<!-- /wp:list -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3445</wp:post_id>
		<wp:post_date><![CDATA[2023-02-22 11:30:29]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2023-02-22 02:30:29]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2023-02-22 15:04:23]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2023-02-22 06:04:23]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%eb%a6%ac%eb%a9%a4%eb%b2%84-%ec%9b%b9-%ec%84%9c%eb%b9%84%ec%8a%a4-%ec%a2%8c%ec%b6%a9%ec%9a%b0%eb%8f%8c-yarn-berry-%eb%8f%84%ec%9e%85%ea%b8%b0]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="frontend"><![CDATA[frontend]]></category>
		<category domain="category" nicename="develop"><![CDATA[Tech]]></category>
		<category domain="post_tag" nicename="yarn"><![CDATA[yarn]]></category>
		<category domain="post_tag" nicename="yarn-berry"><![CDATA[yarn berry]]></category>
		<category domain="post_tag" nicename="%ea%b0%9c%eb%b0%9c%eb%ac%b8%ed%99%94"><![CDATA[개발문화]]></category>
		<category domain="post_tag" nicename="%eb%a6%ac%eb%a9%a4%eb%b2%84"><![CDATA[리멤버]]></category>
		<category domain="post_tag" nicename="%eb%a6%ac%eb%a9%a4%eb%b2%84-%ec%9b%b9"><![CDATA[리멤버 웹]]></category>
		<category domain="post_tag" nicename="%eb%a6%ac%eb%a9%a4%eb%b2%84-%ec%b1%84%ec%9a%a9"><![CDATA[리멤버 채용]]></category>
		<category domain="post_tag" nicename="%ed%8c%a8%ed%82%a4%ec%a7%80-%eb%a7%a4%eb%8b%88%ec%a0%80"><![CDATA[패키지 매니저]]></category>
		<category domain="post_tag" nicename="%ed%94%84%eb%a1%a0%ed%8a%b8%ec%97%94%eb%93%9c"><![CDATA[프론트엔드]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle_flag]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729505386;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:2019;}i:1;a:1:{s:2:"id";i:2174;}i:2;a:1:{s:2:"id";i:1783;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[56]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_single_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:23:{s:8:"subtitle";s:0:"";s:6:"format";s:8:"standard";s:5:"video";s:0:"";s:7:"gallery";s:0:"";s:11:"source_name";s:0:"";s:10:"source_url";s:0:"";s:8:"via_name";s:0:"";s:7:"via_url";s:0:"";s:17:"override_template";s:1:"0";s:8:"override";a:1:{i:0;a:32:{s:8:"template";s:1:"1";s:18:"single_blog_custom";s:0:"";s:8:"parallax";s:1:"1";s:10:"fullscreen";s:1:"1";s:6:"layout";s:13:"right-sidebar";s:7:"sidebar";s:15:"default-sidebar";s:14:"second_sidebar";s:15:"default-sidebar";s:14:"sticky_sidebar";s:1:"1";s:14:"share_position";s:3:"top";s:17:"share_float_style";s:16:"share-monocrhome";s:18:"show_share_counter";s:1:"1";s:17:"show_view_counter";s:1:"1";s:13:"show_featured";s:1:"1";s:14:"show_post_meta";s:1:"1";s:16:"show_post_author";s:1:"1";s:22:"show_post_author_image";s:1:"1";s:14:"show_post_date";s:1:"1";s:16:"post_date_format";s:7:"default";s:23:"post_date_format_custom";s:5:"Y/m/d";s:18:"show_post_category";s:1:"1";s:22:"show_post_reading_time";s:1:"0";s:21:"post_reading_time_wpm";s:3:"300";s:16:"show_zoom_button";s:1:"0";s:20:"zoom_button_out_step";s:1:"2";s:19:"zoom_button_in_step";s:1:"3";s:13:"show_post_tag";s:1:"1";s:19:"show_prev_next_post";s:1:"1";s:15:"show_popup_post";s:1:"1";s:17:"number_popup_post";s:1:"1";s:15:"show_author_box";s:1:"0";s:17:"show_post_related";s:1:"0";s:24:"show_inline_post_related";s:1:"0";}}s:19:"override_image_size";s:1:"0";s:14:"image_override";a:1:{i:0;a:2:{s:26:"single_post_thumbnail_size";s:8:"crop-500";s:24:"single_post_gallery_size";s:8:"crop-500";}}s:13:"trending_post";s:1:"0";s:22:"trending_post_position";s:4:"meta";s:19:"trending_post_label";s:8:"Trending";s:14:"sponsored_post";s:1:"0";s:20:"sponsored_post_label";s:12:"Sponsored by";s:19:"sponsored_post_name";s:0:"";s:18:"sponsored_post_url";s:0:"";s:26:"sponsored_post_logo_enable";s:1:"0";s:19:"sponsored_post_logo";s:0:"";s:19:"sponsored_post_desc";s:0:"";s:10:"disable_ad";s:1:"0";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:2:"id";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_estimated-reading-time-minutes]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_wordproof_timestamp]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
		<wp:meta_value><![CDATA[리멤버 프로덕션 서비스를 Yarn Berry로 마이그레이션 해본 경험, A to Z까지!]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[30]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_template_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[wp-post]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_version]]></wp:meta_key>
		<wp:meta_value><![CDATA[3.8.0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_e2c35bf4c391a4a297db0c3c67a55803]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_87488f93efec045e9815571183acdf68]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_data]]></wp:meta_key>
		<wp:meta_value><![CDATA[[{"id":"4980e7a2","elType":"section","settings":[],"elements":[{"id":"4a986c74","elType":"column","settings":{"_column_size":100},"elements":[{"id":"5199a69a","elType":"widget","settings":{"editor":"<!-- wp:paragraph -->\n<p>\uc548\ub155\ud558\uc138\uc694. \ub4dc\ub77c\ub9c8\uc564\ucef4\ud37c\ub2c8\uc5d0\uc11c \ud604\uc7ac \ucc44\uc6a9 \uc11c\ube44\uc2a4\ub97c \uac1c\ubc1c\ud558\uace0 \uc788\ub294 \uc6f9 \ud504\ub860\ud2b8\uc5d4\ub4dc \uac1c\ubc1c\uc790 \uc624\uc885\ud0dd\uc785\ub2c8\ub2e4. \uc774\uc804\uc5d0\ub294 \ub3d9\ub8cc \ubd84\ub4e4\uc758 \ube44\uc988\ub2c8\uc2a4 \uc784\ud329\ud2b8\ub97c \uadf9\ub300\ud654 \ud558\uae30 \uc704\ud55c UTS(User Targeting System, \uc870\uac74\uc5d0 \ub9de\ub294 \uc720\uc800\ub97c \ucc3e\uc544\uc8fc\ub294 \ucffc\ub9ac \ube4c\ub354) \ub4f1\uc758 \uc778\ud130\ub110 \uc81c\ud488\uc744 \ub9cc\ub4e4\uae30\ub3c4 \ud588\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:paragraph -->\n<p>\ub9ac\uba64\ubc84 \uc6f9 \ud300\uc740 \ub9ac\uba64\ubc84 \ube14\ub799, \ub9ac\uba64\ubc84 \ucc44\uc6a9 \uc194\ub8e8\uc158 \ub4f1 \ubaa8\ub4e0 \uc11c\ube44\uc2a4\uc758 \uc6f9 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uac1c\uc120 \ubc1c\uc804\uc2dc\ud0a4\ub294 \uc5c5\ubb34\ub97c \ub2f4\ub2f9\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uacfc\uc815\uc5d0\uc11c \uace0\uac1d\uc758 \uc81c\ud488 \uacbd\ud5d8\uc744 \uac1c\uc120\ud558\uace0, \uc774\ub7ec\ud55c \uac1c\uc120 \ud65c\ub3d9\uc744 \uc6d0\ud65c\ud558\uac8c \uc9c0\uc6d0\ud560 \uc218 \uc788\ub3c4\ub85d \ud300\uc758 \uc0dd\uc0b0\uc131\uc744 \uac1c\uc120\ud558\ub294 \uc77c\uc744 \uc911\uc694\ud55c \uc5b4\uc820\ub2e4\ub85c \ubcf4\uace0 \uc788\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:paragraph -->\n<p>\ucd5c\uadfc\uc5d0\ub294 \uae30\uc874\uc5d0 \uc0ac\uc6a9\ud558\ub358 \ud328\ud0a4\uc9c0 \ub9e4\ub2c8\uc800\uc778 <code>yarn<\/code> \uc744 \ucd5c\uc2e0 \ubc84\uc804\uc778 <code>yarn berry<\/code> \ub85c \ub9c8\uc774\uadf8\ub808\uc774\uc158 \ud558\uae30\ub3c4 \ud588\uc2b5\ub2c8\ub2e4. \ucc98\uc74c <code>yarn berry<\/code> \ub77c\ub294 \ud0a4\uc6cc\ub4dc\ub97c \uc811\ud588\uc744 \ub550, \ube4c\ub4dc \uc2dc\uac04\uc744 \uc77c\ubd80 \ub2e8\ucd95 \uc2dc\ucf1c\uc8fc\uace0 \uac1c\ubc1c \uacfc\uc815\uc5d0\uc11c\uc758 \uc548\uc815\uc131\uc744 \ub192\uc5ec\uc904 \uc218 \uc788\ub2e4\ub294 \uc810\uc5d0\uc11c \uad00\uc2ec\uc744 \uac00\uc9c0\uac8c \ub418\uc5c8\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:paragraph -->\n<p>\uc0c8\ub85c\uc6b4 \uae30\uc220\uc740 \uc774\ud6c4\uc5d0 \uc77c\uc5b4\ub0a0 \uc218 \uc788\ub294 \ubcc0\ud654\ub97c \ubbf8\ub9ac \uc0dd\uac01\ud574\uc11c \uc2e0\uc911\ud558\uac8c \ub3c4\uc785\ud574\uc57c \ud560 \uac83\uc785\ub2c8\ub2e4. \uc6f9 \ud30c\ud2b8\ub294 \uc9c0\uc18d\uc801\uc73c\ub85c \uae30\uc220\uc744 \uc2b5\ub4dd\ud558\uace0 \uc9c0\uc2dd\uc744 \uacf5\uc720\ud558\uba70, \ud300\uc774 \ud6a8\uacfc\uc801\uc73c\ub85c \uc77c\ud560 \uc218 \uc788\ub2e4\uace0 \ud310\ub2e8\ud55c \uae30\uc220\uc740 \ube60\ub974\uac8c \uac1c\ub150 \uc99d\uba85(PoC)\uc744 \uc9c4\ud589\ud558\uc5ec \uae30\uc220\uc758 \uc774\ud574\ub3c4\ub97c \ub192\uc5ec\uac00\uace0 \uc788\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:paragraph -->\n<p>\ud604\uc7ac \ub9ac\uba64\ubc84 \uc6f9 \ud30c\ud2b8\ub294 \ubaa8\ub178\ub808\ud3ec \ub3c4\uc785\uc744 \uc900\ube44\ud558\uba74\uc11c <code>pnpm<\/code> + <code>Turborepo<\/code>(<a href=\"https:\/\/turbo.build\/\">\ub9c1\ud06c<\/a>) \uc870\ud569\uc744 \uc120\ud0dd\ud558\uac8c \ub418\uc5b4 <code>yarn berry<\/code>\ub294 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uac8c \ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc2dc\ub3c4\uac00 \uc788\uc5c8\uae30\uc5d0 \ud504\ub85c\ub355\uc158 \ub808\ubca8\uc5d0\uc11c \ud328\ud0a4\uc9c0 \ub9e4\ub2c8\uc800\ub97c \uad50\uccb4\ud558\uba74\uc11c \ud574\ub2f9 \uae30\uc220\uc5d0 \ub300\ud55c \uc774\ud574\ub3c4\ub97c \ub192\uc600\uace0 \uc774\ub97c \ubc14\ud0d5\uc73c\ub85c \ucd5c\uc885\uc801\uc73c\ub85c\ub294 \uac00\uc7a5 \ub9cc\uc871\uc2a4\ub7ec\uc6b4 \uacb0\ub860\uc5d0 \ub2e4\ub2e4\ub97c \uc218 \uc788\uc5c8\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:paragraph -->\n<p>\uc774\ubc88 \uae00\uc5d0\uc11c\ub294 \ub9ac\uba64\ubc84 \uc6f9 \uc11c\ube44\uc2a4\uc5d0 \uc810\uc9c4\uc801\uc73c\ub85c <code>yarn berry<\/code> \ub97c \uc801\uc6a9\ud55c \uacfc\uc815\uacfc, \ud2b8\ub7ec\ube14 \uc288\ud305 \uacfc\uc815\uc744 \uacaa\uc73c\uba70 \ub290\uaf08\ub358 \uc810\ub4e4\uc744 \uacf5\uc720\ub4dc\ub9ac\uace0\uc790 \ud569\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:heading -->\n<h2>1. Yarn Berry\ub97c \uc368\uc57c \ud560 \uacb0\uc2ec<\/h2>\n<!-- \/wp:heading --><!-- wp:image {\"align\":\"center\",\"sizeSlug\":\"large\",\"className\":\"is-style-default\"} -->\n<div class=\"wp-block-image is-style-default\">\n<figure class=\"aligncenter size-large\"><img src=\"https:\/\/user-images.githubusercontent.com\/35240142\/219931620-f58760d6-f46f-4a8c-94c1-4bcbacfb427a.png\" alt=\"\" \/>\n<figcaption>\uc0ac\uc2e4\uc740 \uc138\uc0c1 \ub2e8\uc21c\ud588\ub358 \ub3c4\uc785 \uacc4\uae30<\/figcaption>\n<\/figure>\n<\/div>\n<!-- \/wp:image --><!-- wp:paragraph -->\n<p>\uc5ec\ub7ec \uc544\ud2f0\ud074\uc744 \uc0b4\ud3b4\ubcf4\ub2c8 <code>yarn berry<\/code> \ub97c \uc0ac\uc6a9\ud558\uba74 \ube4c\ub4dc \uc2dc\uac04\uc744 \ud3c9\uade0\uc801\uc73c\ub85c 1\ubd84 \uc815\ub3c4 \ub2e8\ucd95\ud560 \uc218 \uc788\ub294 \uac83\uc73c\ub85c \ubcf4\uc600\uc2b5\ub2c8\ub2e4. \ubfd0\ub9cc \uc544\ub2c8\ub77c \uc885\uc18d\uc131\ub4e4\uc744 \ubcf4\ub2e4 \uc548\uc804\ud558\uac8c \uad00\ub9ac\ud558\uba74\uc11c\ub3c4 \uae30\uc874 node_modules\uc5d0 \ub538\ub824\uc624\ub294 \uc5ec\ub7ec\uac00\uc9c0 \uace8\uce58 \uc544\ud508 \ubb38\uc81c\ub4e4\uc744 \uadfc\ubcf8\uc801\uc73c\ub85c \ud574\uacb0\ud560 \uc218\ub3c4 \uc788\uc744 \uac83\uc73c\ub85c \ubd24\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:paragraph -->\n<p>\uc5c5\ubb34 \uae30\ub85d\uc744 \uc0b4\ud3b4\ubcf4\ub2c8 \uc720\uc0ac\ud55c \uace0\ubbfc\uc774 \uacfc\uac70\uc5d0\ub3c4 \uc788\uc5c8\uc73c\ub098 \ub2f9\uc2dc \uba87 \uba85 \uc5c6\ub294 \uc778\uc6d0\uc73c\ub85c \uc6b4\uc601\ub418\ub358 \ud130\ub77c \uac1c\ubc1c \uc778\ud504\ub77c \ub2e8\uc5d0 \ub9ac\uc18c\uc2a4\ub97c \ud22c\uc790\ud558\uae30 \uc5b4\ub824\uc6b4 \uc0c1\ud669\uc774\uc5c8\uae30 \ub54c\ubb38\uc5d0 \uc6b0\uc120 \uc21c\uc704\uc5d0\uc11c \ubc00\ub838\ub358 \uac83 \uac19\uc558\uc2b5\ub2c8\ub2e4. \uc774\uc81c \uadf8 \ub54c\uc5d0 \ube44\ud574 \ud504\ub860\ud2b8\uc5d4\ub4dc \uac1c\ubc1c\uc790\ub3c4 \ub298\uc5c8\uace0, \uac1c\uc120 \uc2dc \uc5bb\uc744 \uc218 \uc788\ub294 \uc784\ud329\ud2b8\ub3c4 \ucee4\uc84c\uc73c\ub2c8 \uba85\ubd84\ub3c4 \ucda9\ubd84\ud588\uc2b5\ub2c8\ub2e4. yarn berry \uae30\uc220 \uc790\uccb4\ub3c4 \ucc98\uc74c \ubc1c\ud45c \ub54c\uc640 \ube44\uad50\ud558\uc5ec \uc5b4\ub290 \uc815\ub3c4 \uad00\ub828 \uc790\ub8cc\ub3c4 \ub298\uace0 \uc131\uc219\ud574\uc84c\ub2e4\ub294 \ud310\ub2e8 \ub610\ud55c \uc788\uc5c8\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:paragraph -->\n<p>\uae30\uc874 \ub9ac\uba64\ubc84\uc758 \uc6f9 \uc11c\ube44\uc2a4\ub294 yarn 1.x \ubc84\uc804\uc758 \ud328\ud0a4\uc9c0 \ub9e4\ub2c8\uc800\ub97c \uc0ac\uc6a9\ud574\uc654\uc2b5\ub2c8\ub2e4. \ud604\uc7ac yarn 1.x \ubc84\uc804\uc740 classic \uc73c\ub85c \uba85\uba85\ub418\uc5c8\uc73c\uba70, \uc0c8\ub85c\uc6b4 \uae30\ub2a5 \uac1c\ubc1c\uc740 \uc774\ub8e8\uc5b4\uc9c0\uc9c0 \uc54a\uace0 \uc720\uc9c0\ubcf4\uc218\ub9cc \uc774\ub8e8\uc5b4\uc9c0\ub294 \ub808\uac70\uc2dc \ud504\ub85c\uc81d\ud2b8\uac00 \ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uc989, yarn classic\uc744 \uc0ac\uc6a9\ud558\uace0 \uc788\ub294 \uc0c1\ud669\uc774\uace0, yarn berry\ub0d0 pnpm\uc774\ub0d0 \ud558\ub294 \uc120\ud0dd\uc9c0\ub97c \uace0\ubbfc\ud558\ub294\uac8c \uc544\ub2c8\ub77c\uba74 \uc810\uc9c4\uc801\uc73c\ub85c berry\ub85c \ub9c8\uc774\uadf8\ub808\uc774\uc158\ud558\ub294\uac8c \ubc14\ub78c\uc9c1\ud558\ub2e4\uace0 \uc0dd\uac01\ud569\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:paragraph -->\n<p>(\ucc38\uace0\ub85c \uc0c8 \ud504\ub85c\uc81d\ud2b8\ub97c \ub9cc\ub4dc\ub294 \uc2dc\uc810\uc774\ub77c\uba74 <code>yarn init -2<\/code> \uba85\ub839\uc73c\ub85c \uac04\ub2e8\ud558\uac8c \ud504\ub85c\uc81d\ud2b8\ub97c \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud574\ub2f9 \ud504\ub85c\uc81d\ud2b8\uc5d0 \ub300\ud55c \ubcf4\ub2e4 \uc0c1\uc138\ud55c \uc815\ubcf4\ub294 <a href=\"https:\/\/github.com\/yarnpkg\/berry\">yarnpkg\/berry<\/a> \uc5d0\uc11c \ud655\uc778\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4.)<\/p>\n<!-- \/wp:paragraph --><!-- wp:image {\"align\":\"center\",\"sizeSlug\":\"large\"} -->\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter size-large\"><img src=\"https:\/\/user-images.githubusercontent.com\/35240142\/215241351-e7c73027-f829-459c-ab1e-f6e2d15f474c.png\" alt=\"\" \/>\n<figcaption>yarn classic \ub808\ud3ec\uc9c0\ud1a0\ub9ac. \uae30\ub2a5 \uac1c\ubc1c\uc774 \uc911\ub2e8\ub418\uc5c8\uc74c\uc744 \uc54c\ub9ac\ub294 \ub514\uc2a4\ud06c\ub9bd\uc158\uc774 \ubd99\uc5b4\uc788\ub2e4.<\/figcaption>\n<\/figure>\n<\/div>\n<!-- \/wp:image --><!-- wp:image {\"align\":\"center\",\"sizeSlug\":\"large\"} -->\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter size-large\"><img src=\"https:\/\/user-images.githubusercontent.com\/35240142\/215241355-efcfd03d-1b08-4e64-a875-acf658c21eb8.png\" alt=\"\" \/>\n<figcaption>yarn berry \ub808\ud3ec\uc9c0\ud1a0\ub9ac. yarn classic\uacfc\ub294 \ub300\uc870\ub418\ub294 'Active development' \ubb38\uad6c\uac00 \ubd99\uc5b4\uc788\ub2e4.<\/figcaption>\n<\/figure>\n<\/div>\n<!-- \/wp:image --><!-- wp:heading -->\n<h2>2. Why \u2018Yarn Berry\u2019<\/h2>\n<!-- \/wp:heading --><!-- wp:image {\"align\":\"center\",\"sizeSlug\":\"large\"} -->\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter size-large\"><img src=\"https:\/\/user-images.githubusercontent.com\/35240142\/219931631-edf19a25-06cd-4553-a6ba-88befa0ac587.png\" alt=\"\" \/>\n<figcaption>\ube60\ub978 \ucc0d\uba39 \ud6c4 \uacf5\ubd80\ub97c \uacc1\ub4e4\uc778...<\/figcaption>\n<\/figure>\n<\/div>\n<!-- \/wp:image --><!-- wp:paragraph -->\n<p>\ub3c4\uc785\uc744 \uacb0\uc2ec\ud55c \ub4a4 \uac1c\ubc1c\uc774 \ube44\uad50\uc801 \uc801\uac8c \uc77c\uc5b4\ub098\uace0, \ubcc0\uacbd\uc73c\ub85c \uc778\ud55c \ub9ac\uc2a4\ud06c\uac00 \uc801\uc740 \uc5b4\ub4dc\ubbfc \ubc0f \ub0b4\ubd80 \ub77c\uc774\ube0c\ub7ec\ub9ac \ud504\ub85c\uc81d\ud2b8 \ubd80\ud130 \uc810\uc9c4\uc801\uc73c\ub85c \uc801\uc6a9\uc744 \uc2dc\uc791\ud574\ub098\uac14\uc2b5\ub2c8\ub2e4. <code>yarn berry<\/code>\ub97c \uc801\uc6a9\ud558\ub294 \ud55c\ud3b8\uc73c\ub85c\ub294 \ub0b4\ubd80 \uacf5\uc720\ub97c \uc704\ud55c \uc2a4\ud130\ub514 \uc790\ub8cc \uc900\ube44\uac00 \uc774\ub8e8\uc5b4\uc84c\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:paragraph -->\n<p>\uc801\uc6a9 \uacfc\uc815\uc5d0\uc11c \ud328\ud0a4\uc9c0 \ub9e4\ub2c8\uc800\uc758 \ud2b9\uc9d5\uc5d0 \ub300\ud574 \uc790\uc138\ud788 \uc0b4\ud3b4\ubcfc \uc218 \uc788\uc5c8\uc2b5\ub2c8\ub2e4. yarn\uc758 \uc0c8\ub85c\uc6b4 \ubc84\uc804\uc740 <code>node_modules<\/code> \ub77c\ub294 \uc124\uacc4 \uadf8 \uc790\uccb4\ub85c \uc778\ud574 \uc0dd\uae30\ub294 \ub9c9\ub300\ud55c \ube44\ud6a8\uc728\uc744 \ud574\uacb0\ud558\uace0\uc790 \uae30\ud68d \ub418\uc5c8\uc2b5\ub2c8\ub2e4. \ubb3c\ub860 <code>npm<\/code> \uc740 \uadf8\uac04 Node \uc0dd\ud0dc\uacc4\ub97c \uc704\ud574 \ub9ce\uc740 \uc77c\uc744 \ud574\uc654\uc9c0\ub9cc \uac00\uc7a5 \uccab \ubc88\uc9f8\ub85c \uaf3d\ud790 \uc6a9\ub7c9 \ubb38\uc81c\ub97c \uc81c\uc678\ud558\uace0\uc11c\ub77c\ub3c4 \ub9ce\uc740 \ubb38\uc81c\ub97c \uc548\uace0 \uc788\uc5c8\uc2b5\ub2c8\ub2e4. \uc544\ub798\ub294 <a href=\"https:\/\/yarnpkg.com\/features\/pnp\">yarn \uacf5\uc2dd \ubb38\uc11c<\/a>\uc5d0 \uc5b8\uae09\ub418\uc5b4 \uc788\ub294 \ub0b4\uc6a9\uc5d0 \ub300\ud55c \uc815\ub9ac\uc785\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:heading {\"level\":3} -->\n<h3>1) \ubaa8\ub4c8 \ud0d0\uc0c9 \uacfc\uc815\uc758 \ube44\ud6a8\uc728<\/h3>\n<!-- \/wp:heading --><!-- wp:paragraph -->\n<p>node_modules \uad6c\uc870 \ud558\uc5d0\uc11c \ubaa8\ub4c8\uc744 \uac80\uc0c9\ud558\ub294 \ubc29\uc2dd\uc740 \uae30\ubcf8\uc801\uc73c\ub85c \ub514\uc2a4\ud06c I\/O \uc791\uc5c5\uc785\ub2c8\ub2e4. \uc774\ub294 node_modules\uac00 \uac00\uc9c4 \ubb38\uc81c\uc774\uae30 \ub54c\ubb38\uc5d0 yarn classic\uacfc npm \ubaa8\ub450\uc5d0 \ud574\ub2f9\ub418\ub294 \ub0b4\uc6a9\uc785\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:paragraph -->\n<p>\uac1c\ubc1c\uc790\uac00 node_modules \ub0b4\ubd80\uc5d0\uc11c \ud2b9\uc815 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \ubd88\ub7ec\uc624\ub294 \uc0c1\ud669\uc744 \uac00\uc815\ud574\ubcf4\uaca0\uc2b5\ub2c8\ub2e4. Node.js\uac00 \ubaa8\ub4c8\uc744 \ubd88\ub7ec\uc62c \ub54c \uacbd\ub85c \ud0d0\uc0c9\uc5d0 \uc0ac\uc6a9\ud558\ub294 \uba87 \uac00\uc9c0 \uaddc\uce59\uc774 \uc788\ub294\ub370\uc694. \uc774 \uaddc\uce59\uc740 <a href=\"https:\/\/nodejs.org\/api\/modules.html#loading-from-node_modules-folders\">Node.js \uacf5\uc2dd \ubb38\uc11c<\/a>\uc5d0\uc11c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. <code>require()<\/code>\uc758 \uacbd\uc6b0 1) fs, http \ub4f1\uc758 \ucf54\uc5b4 \ubaa8\ub4c8\uc774 \uc544\ub2c8\uba74\uc11c, 2) \uc808\ub300 \uacbd\ub85c\ub97c \uc0ac\uc6a9\ud560 \uacbd\uc6b0 \ub300\ub7b5 \uc544\ub798\uc640 \uac19\uc740 \uc21c\uc11c\ub85c \uc21c\ud68c\ud558\uba70 \ubaa8\ub4c8\uc744 \uac80\uc0c9\ud569\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:paragraph -->\n<p>\ub2e4\uc74c\uc740 <code>'\/home\/ry\/projects\/foo.js'<\/code> \uc5d0\uc11c <code>require('bar.js')<\/code> \ub97c \ud0d0\uc0c9\ud560 \uacbd\uc6b0\uc785\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:list -->\n<ul>\n<li><code>\/home\/ry\/projects\/node_modules\/bar.js<\/code><\/li>\n<\/ul>\n<!-- \/wp:list --><!-- wp:list -->\n<ul>\n<li><code>\/home\/ry\/node_modules\/bar.js<\/code><\/li>\n<\/ul>\n<!-- \/wp:list --><!-- wp:list -->\n<ul>\n<li><code>\/home\/node_modules\/bar.js<\/code><\/li>\n<\/ul>\n<!-- \/wp:list --><!-- wp:list -->\n<ul>\n<li><code>\/node_modules\/bar.js<\/code><\/li>\n<\/ul>\n<!-- \/wp:list --><!-- wp:paragraph -->\n<p>\uc774\ucc98\ub7fc \ub9e4 \ud0d0\uc0c9\ub9c8\ub2e4 \uc218 \ub9ce\uc740 \ud3f4\ub354\uc640 \ud30c\uc77c\uc744 \uc2e4\uc81c\ub85c \uc5f4\uace0 \ub2eb\uc73c\uba74\uc11c \uac80\uc0c9\ud560 \uc218 \ubc16\uc5d0 \uc5c6\uc73c\uba70, node_modules \uc911\ucca9 \ub4f1 \uacbd\uc6b0\uc5d0 \ub530\ub77c\uc11c\ub294 \uc21c\ud68c\ud574\uc57c \ud558\ub294 \uacbd\ub85c\uac00 \uc774\ubcf4\ub2e4 \ubcf5\uc7a1\ud574\uc9c8 \uc218 \uc788\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:paragraph -->\n<p>\ud328\ud0a4\uc9c0 \uc124\uce58 \uacfc\uc815\uc758 \uacbd\uc6b0\uc5d0\ub3c4 \ub9c8\ucc2c\uac00\uc9c0 \uc785\ub2c8\ub2e4. \uc124\uce58 \uacfc\uc815\uc5d0 \ud544\uc694\ud55c \ucd5c\uc18c \ub3d9\uc791\ub9cc\uc73c\ub85c\ub3c4 \uc774\ubbf8 \ube44\uc6a9\uc774 \ub9ce\uc774 \ub4e4\uace0 \uc788\uae30 \ub54c\ubb38\uc5d0 \uac01 \ud328\ud0a4\uc9c0 \uac04 \uc758\uc874 \uad00\uacc4\uac00 \uc720\ud6a8\ud55c\uc9c0 \ub4f1\uc758 \ucd94\uac00\uc801\uc778 \uac80\uc99d\uc5d0 \ub9ac\uc18c\uc2a4\ub97c \ud560\ub2f9\ud558\uae30 \uc5b4\ub835\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:paragraph -->\n<p>\uc774\ucc98\ub7fc \ubaa8\ub4c8 \ud0d0\uc0c9\uc744 \uba54\ubaa8\ub9ac \uc0c1\uc5d0\uc11c \uc790\ub8cc\uad6c\uc870\ub85c \ucc98\ub9ac\ud558\uc9c0 \uc54a\uace0 I\/O\ub85c \uc9c1\uc811 \ucc98\ub9ac\ud558\ub2e4\ubcf4\ub2c8 \ucd94\uac00\uc801\uc778 \ucd5c\uc801\ud654\uac00 \uc5b4\ub835\uc2b5\ub2c8\ub2e4. \uc2e4\uc81c\ub85c yarn \uac1c\ubc1c\uc9c4\uc740 \uc774\ub7ec\ud55c \uc774\uc720\ub4e4\ub85c \ub354 \uc774\uc0c1 \ucd5c\uc801\ud654 \ud560 \uc5ec\uc9c0\uac00 \uc5c6\uc5c8\ub2e4\uace0 \ubb38\uc11c\uc5d0\uc11c \ubc1d\ud788\uace0 \uc788\uc2b5\ub2c8\ub2e4. yarn berry\uc5d0\uc11c\ub294 \uc774 \ub4a4\uc5d0\uc11c \uc5b8\uae09\ub420 PnP \ub77c\ub294 \uae30\uc220\uc744 \ud1b5\ud574 \uc774\ub97c \uac1c\uc120\ud569\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:heading {\"level\":3} -->\n<h3>2) \uc720\ub839 \uc758\uc874\uc131 (Phantom Dependency)<\/h3>\n<!-- \/wp:heading --><!-- wp:paragraph -->\n<p>\ubb3c\ub860 npm\uc740 \uc18d\ub3c4 \ubb38\uc81c\ub97c \uac1c\uc120\ud558\uae30 \uc704\ud574 \ud638\uc774\uc2a4\ud305 \ub4f1 \ucd5c\uc801\ud654 \uc54c\uace0\ub9ac\uc998\uc744 \ub3c4\uc785\ud558\uc600\uc73c\ub098 \ubd80\uc791\uc6a9\uc73c\ub85c <code>\uc720\ub839 \uc758\uc874\uc131<\/code> \uc774\ub77c\ub294 \ubb38\uc81c\ub97c \uc0c8\ub85c \ub0b3\uace0 \ub9d0\uc558\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:image {\"align\":\"center\",\"sizeSlug\":\"large\"} -->\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter size-large\"><img src=\"https:\/\/classic.yarnpkg.com\/assets\/posts\/2018-02-15-nohoist\/standalone-2.svg\" alt=\"\" \/>\n<figcaption>https:\/\/classic.yarnpkg.com\/blog\/2018\/02\/15\/nohoist\/<\/figcaption>\n<\/figure>\n<\/div>\n<!-- \/wp:image --><!-- wp:paragraph -->\n<p>npm, yarn classic \ub4f1\uc740 \uc911\ubcf5 \uc124\uce58\ub97c \ubc29\uc9c0\ud558\uae30 \uc704\ud574 \uc704 \uadf8\ub9bc\ucc98\ub7fc \uc885\uc18d\uc131 \ud2b8\ub9ac \uc544\ub798\uc5d0 \uc874\uc7ac\ud558\ub294 \ud328\ud0a4\uc9c0\ub4e4\uc744 \ud638\uc774\uc2a4\ud305 &amp; \ubcd1\ud569\ud569\ub2c8\ub2e4. \uadf8\ub807\uac8c \ud558\uba74 \ud328\ud0a4\uc9c0 \ucd5c\uc0c1\uc704\uc5d0\uc11c \ud2b8\ub9ac \uae4a\uc774 \ud0d0\uc0c9\ud558\uc9c0 \uc54a\uace0 \ub8e8\ud2b8 \uacbd\ub85c\uc5d0\uc11c \uc6d0\ud558\ub294 \ud328\ud0a4\uc9c0\ub97c \ud0d0\uc0c9\ud560 \uc218 \uc788\uc73c\ubbc0\ub85c \ud6a8\uc728\uc801\uc785\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:paragraph -->\n<p>\ud558\uc9c0\ub9cc \uc774\ub7f0 \ud6a8\uc728\uc758 \ubc18\ub300 \uae09\ubd80\ub85c\ub294 \uc9c1\uc811 \uc124\uce58\ud558\uc9c0 \uc54a\uace0, \uac04\uc811 \uc124\uce58\ud55c \uc885\uc18d\uc131\uc5d0 \uac1c\ubc1c\uc790\uac00 \uc811\uadfc\ud560 \uc218 \uc788\uac8c \ub418\ub294 \uc0c1\ud669\uc774 \ubc8c\uc5b4\uc9c0\uae30\ub3c4 \ud569\ub2c8\ub2e4. \uc874\uc7ac\ud558\uc9c0 \uc54a\ub294 \uc885\uc18d\uc131\uc5d0 \uc758\uc874\ud558\ub294 \ucf54\ub4dc\uac00 \uc655\uc655 \ubc1c\uc0dd\ud560 \uc218 \uc788\ub2e4\ub294 \ub73b\uc785\ub2c8\ub2e4. \uc774\ub97c <code>\uc720\ub839 \uc758\uc874\uc131<\/code> \uc774\ub77c\uace0 \ud569\ub2c8\ub2e4. \uc55e\uc11c \uc5b8\uae09\ud55c node_modules\uc758 \ub2e8\uc810\uc73c\ub85c \uc778\ud574 \uc758\uc874\uc131 \ud2b8\ub9ac\uc758 \uc720\ud6a8\uc131\uc744 \uac80\uc99d\ud558\uae30 \uc5b4\ub835\ub2e4\ub294 \uac83\ub3c4 \ud55c \ubaab\uc744 \ud588\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:paragraph -->\n<p>yarn berry\uc5d0\uc11c\ub294 \uc774\ub7f0 \uc2dd\uc758 \ud638\uc774\uc2a4\ud305 \ub3d9\uc791\uc774 \uc77c\uc5b4\ub098\uc9c0 \uc54a\ub3c4\ub85d <code>nohoist<\/code> \uc635\uc158\uc774 \uae30\ubcf8\uc801\uc73c\ub85c \ud65c\uc131\ud654 \ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:heading {\"level\":3} -->\n<h3>3) Plug'n'Play (PnP)<\/h3>\n<!-- \/wp:heading --><!-- wp:list -->\n<ul>\n<li><a href=\"https:\/\/yarnpkg.com\/features\/pnp\" target=\"_blank\" rel=\"noreferrer noopener\">https:\/\/yarnpkg.com\/features\/pnp<\/a><\/li>\n<li><a href=\"https:\/\/classic.yarnpkg.com\/lang\/en\/docs\/pnp\/\" target=\"_blank\" rel=\"noreferrer noopener\">https:\/\/classic.yarnpkg.com\/lang\/en\/docs\/pnp\/<\/a><\/li>\n<li><a href=\"https:\/\/github.com\/yarnpkg\/berry\/issues\/850\" target=\"_blank\" rel=\"noreferrer noopener\">https:\/\/github.com\/yarnpkg\/berry\/issues\/850<\/a><\/li>\n<\/ul>\n<!-- \/wp:list --><!-- wp:paragraph -->\n<p>yarn berry\ub294 <strong>Plug'n'Play(PnP)<\/strong> \ub77c\ub294 \uae30\uc220\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc774\ub7ec\ud55c \ubb38\uc81c\ub4e4\uc744 \ud574\uacb0\ud569\ub2c8\ub2e4. yarn berry\ub294 node_modules\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ub300\uc2e0 <code>.yarn<\/code> \uacbd\ub85c \ud558\uc704\uc5d0 \uc758\uc874\uc131\ub4e4\uc744 <code>.zip<\/code> \ud3ec\ub9f7\uc73c\ub85c \uc555\ucd95 \uc800\uc7a5\ud558\uace0, <code>.pnp.cjs<\/code> \ud30c\uc77c\uc744 \uc0dd\uc131 \ud6c4 \uc758\uc874\uc131 \ud2b8\ub9ac \uc815\ubcf4\ub97c \ub2e8\uc77c \ud30c\uc77c\uc5d0 \uc800\uc7a5\ud569\ub2c8\ub2e4. \uc774\ub97c <code>\uc778\ud130\ud398\uc774\uc2a4 \ub9c1\ucee4 (Interface Linker)<\/code> \ub77c\uace0 \ud569\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:quote -->\n<blockquote class=\"wp-block-quote\">\n<p><em><span style=\"text-decoration: underline;\">Linkers are the glue between the logical dependency tree and the way it's represented on the filesystem. <\/span>Their main use is to take the package data and put them on the filesystem in a way that their target environment will understand (for example, in Node's case, it will be to generate a .pnp.cjs file).<\/em><\/p>\n<cite>https:\/\/yarnpkg.com\/api\/interfaces\/yarnpkg_core.linker.html<\/cite><\/blockquote>\n<!-- \/wp:quote --><!-- wp:paragraph -->\n<p>\ub9c1\ucee4\ub97c \ub17c\ub9ac\uc801 \uc885\uc18d\uc131 \ud2b8\ub9ac\uc640 \ud30c\uc77c \uc2dc\uc2a4\ud15c \uc0ac\uc774\uc5d0 \uc788\ub294 \uc77c\uc885\uc758 \uc811\ucc29\uc81c\ub85c\ub3c4 \ube44\uc720\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ub9c1\ucee4\ub97c \uc0ac\uc6a9\ud568\uc73c\ub85c\uc11c \ud328\ud0a4\uc9c0\ub97c \uac80\uc0c9\ud558\uae30 \uc704\ud55c \ube44\ud6a8\uc728\uc801\uc774\uace0 \ubc18\ubcf5\uc801\uc778 \ub514\uc2a4\ud06c I\/O\ub85c\ubd80\ud130 \ubc97\uc5b4\ub0a0 \uc218 \uc788\uac8c \ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uc758\uc874\uc131 \ub610\ud55c \uc27d\uac8c \uac80\uc99d\ud560 \uc218 \uc788\uc5b4 \uc720\ub839 \uc758\uc874\uc131 \ubb38\uc81c\ub3c4 \ud574\uacb0 \uac00\ub2a5\ud574\uc84c\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:paragraph -->\n<p>\uc544\ub798 \ucf54\ub4dc\ub294 pnp.cjs\uc758 \uc77c\ubd80\uc785\ub2c8\ub2e4<\/p>\n<!-- \/wp:paragraph --><!-- wp:enlighter\/codeblock -->\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">      [\"@babel\/helper-module-transforms\", [\\\n        [\"npm:7.19.6\", {\\\n          \"packageLocation\": \".\/.yarn\/cache\/@babel-helper-module-transforms-npm-7.19.6-c73ab63519-c28692b37d.zip\/node_modules\/@babel\/helper-module-transforms\/\",\\\n          \"packageDependencies\": [\\\n            [\"@babel\/helper-module-transforms\", \"npm:7.19.6\"],\\\n            [\"@babel\/helper-environment-visitor\", \"npm:7.18.9\"],\\\n            [\"@babel\/helper-module-imports\", \"npm:7.18.6\"],\\\n            [\"@babel\/helper-simple-access\", \"npm:7.19.4\"],\\\n            [\"@babel\/helper-split-export-declaration\", \"npm:7.18.6\"],\\\n            [\"@babel\/helper-validator-identifier\", \"npm:7.19.1\"],\\\n            [\"@babel\/template\", \"npm:7.18.10\"],\\\n            [\"@babel\/traverse\", \"npm:7.19.6\"],\\\n            [\"@babel\/types\", \"npm:7.20.2\"]\\\n          ],\\\n          \"linkType\": \"HARD\"\\\n        }]\\\n      ]],\\\n      [\"@babel\/helper-optimise-call-expression\", [\\\n        [\"npm:7.18.6\", {\\\n          \"packageLocation\": \".\/.yarn\/cache\/@babel-helper-optimise-call-expression-npm-7.18.6-65705387c4-e518fe8418.zip\/node_modules\/@babel\/helper-optimise-call-expression\/\",\\\n          \"packageDependencies\": [\\\n            [\"@babel\/helper-optimise-call-expression\", \"npm:7.18.6\"],\\\n            [\"@babel\/types\", \"npm:7.20.2\"]\\\n          ],\\\n          \"linkType\": \"HARD\"\\\n        }]\\\n      ]],\\<\/pre>\n<!-- \/wp:enlighter\/codeblock --><!-- wp:paragraph -->\n<p>\uc704\uc640 \uac19\uc774 .pnp.cjs\ub294 \uc758\uc874\uc131 \ud2b8\ub9ac\ub97c \uc911\ucca9\ub41c \ub9f5\uc73c\ub85c \ud45c\ud604\ud558\uc600\uc2b5\ub2c8\ub2e4. \uae30\uc874 Node \uac00 \ud30c\uc77c\uc2dc\uc2a4\ud15c\uc5d0 \uc811\uadfc\ud558\uc5ec \uc9c1\uc811 I\/O \ub97c \uc2e4\ud589\ud558\ub358 require \ubb38\uc758 \ube44\ud6a8\uc728\uc744 \uc790\ub8cc\uad6c\uc870\ub97c \uba54\ubaa8\ub9ac\uc5d0 \uc62c\ub9ac\ub294 \ubc29\uc2dd\uc73c\ub85c \ud0d0\uc0c9\uc744 \ucd5c\uc801\ud654\ud55c \uac83\uc785\ub2c8\ub2e4. \uc758\uc874\uc131 \uc555\ucd95\uc744 \ud1b5\ud558\uc5ec \ub514\uc2a4\ud06c \uc6a9\ub7c9 \uc808\uac10 \ud6a8\uacfc\ub3c4 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. <code>du -sh<\/code> \uba85\ub839\uc5b4\ub85c \ud655\uc778\ud574\ubcf4\uc558\uc744 \ub54c, Next.js \uae30\ubc18 \uc5b4\ub4dc\ubbfc \uc11c\ube44\uc2a4 \uae30\uc900 <code>913MB \u2192 247MB<\/code> \ub85c \uae30\uc874 \ud328\ud0a4\uc9c0 \uc6a9\ub7c9 \ub300\ube44 \uc57d <code>27%<\/code> \uc218\uc900\uc73c\ub85c \ud328\ud0a4\uc9c0 \uad00\ub828 \uc6a9\ub7c9\uc774 \uac10\uc18c\ud55c \uac83\uc744 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:image {\"align\":\"center\",\"sizeSlug\":\"large\"} -->\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter size-large\"><img src=\"https:\/\/user-images.githubusercontent.com\/35240142\/215241955-a7b64cd0-e15c-49c8-8a0a-b7746d5625a3.png\" alt=\"\" \/>\n<figcaption>.yarn\/cache\uc5d0 \ub2e4\uc6b4\ub85c\ub4dc \ub41c \uc885\uc18d\uc131\ub4e4<\/figcaption>\n<\/figure>\n<\/div>\n<!-- \/wp:image --><!-- wp:image {\"align\":\"center\",\"sizeSlug\":\"large\"} -->\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter size-large\"><img src=\"https:\/\/user-images.githubusercontent.com\/35240142\/215241959-a17f711b-66f1-4494-810f-9f70744d039c.png\" alt=\"\" \/>\n<figcaption>yarn classic \uc5d0\uc11c\uc758 node_modules \ud06c\uae30 (913MB)<\/figcaption>\n<\/figure>\n<\/div>\n<!-- \/wp:image --><!-- wp:image {\"align\":\"center\",\"sizeSlug\":\"large\"} -->\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter size-large\"><img src=\"https:\/\/user-images.githubusercontent.com\/35240142\/215241967-11476f03-2757-4aaf-9913-323f64fc87a4.png\" alt=\"\" \/>\n<figcaption>yarn berry \uc5d0\uc11c\uc758 .yarn \ud06c\uae30 (247MB)<\/figcaption>\n<\/figure>\n<\/div>\n<!-- \/wp:image --><!-- wp:paragraph -->\n<p>\ub2e4\ub9cc .yarnrc.yml\uc758 \ub9c1\ucee4 \uc124\uc815\uc744 pnp\uac00 \uc544\ub2cc <code>node-modules<\/code> \ub85c \ud558\uac8c \ub41c\ub2e4\uba74 \uae30\uc874\ucc98\ub7fc node_modules\ub97c \uc124\uce58\ud558\uc5ec \uc758\uc874\uc131\uc744 \uad00\ub9ac\ud558\uac8c \ub429\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \uc774\ub807\uac8c \uc0ac\uc6a9\ud560 \uacbd\uc6b0 \uc55e\uc11c \uc124\uba85\ub4dc\ub9b0 PnP\uc758 \uc7a5\uc810\ub4e4\uc744 \ud65c\uc6a9\ud558\uc9c0 \ubabb\ud558\uac8c \ub429\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:paragraph -->\n<p>\uc774\uc5d0 \ub300\ud55c \uc608\uc2dc\ub85c \ucd5c\uadfc `Vercel` \uc5d0\uc11c \ubaa8\ub178\ub808\ud3ec \ud234\ub9c1\uc73c\ub85c \ubc1c\ud45c\ud55c <code>Turborepo<\/code> \uc758 \uacbd\uc6b0 \ud328\ud0a4\uc9c0 \ub9e4\ub2c8\uc800 \uc911 <code>pnpm<\/code> \uc758 pnp \ubaa8\ub4dc\ub9cc \uc9c0\uc6d0\ud558\uace0 \uc788\uace0, \uba54\uc778\ud14c\uc774\ub108\ub294 yarn berry\uc758 \uacbd\uc6b0 \uc9c0\uc6d0 \uacc4\ud68d\uc744 \ucde8\uc18c\ud55c \uc0c1\ud0dc\uc785\ub2c8\ub2e4. \uc774 \uacbd\uc6b0 \uc55e\uc11c \ub9d0\uc500\ub4dc\ub9b0 \ubc29\uc2dd\uc73c\ub85c berry\ub97c \uc0ac\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4. \uad00\ub828 \uc774\uc288\ub294 <a href=\"https:\/\/github.com\/vercel\/turbo\/issues\/693#issuecomment-1278886166\" target=\"_blank\" rel=\"noreferrer noopener\">\uc5ec\uae30<\/a>\uc5d0\uc11c \ud655\uc778\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:heading {\"level\":3} -->\n<h3>4) Zero-Installs<\/h3>\n<!-- \/wp:heading --><!-- wp:list -->\n<ul>\n<li><a href=\"https:\/\/yarnpkg.com\/features\/zero-installs\" target=\"_blank\" rel=\"noreferrer noopener\">https:\/\/yarnpkg.com\/features\/zero-installs<\/a><\/li>\n<\/ul>\n<!-- \/wp:list --><!-- wp:paragraph -->\n<p><code>.yarn<\/code> \ud3f4\ub354\uc5d0 \ubc1b\uc544\ub193\uc740 \ud30c\uc77c\ub4e4\uc740 \uc624\ud504\ub77c\uc778 \uce90\uc2dc \uc5ed\ud560 \ub610\ud55c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucee4\ubc0b\uc5d0 \ud3ec\ud568\uc2dc\ucf1c github\uc5d0 \ud504\ub85c\uc81d\ud2b8 \ucf54\ub4dc\uc640 \ud568\uaed8 \uc62c\ub824\ub450\uba74 \uc5b4\ub514\uc11c\ub4e0 \uac19\uc740 \ud658\uacbd\uc5d0\uc11c \uc2e4\ud589 \uac00\ub2a5\ud560 \uac83\uc744 \ubcf4\uc7a5\ud560 \uc218 \uc788\uc73c\uba70 \ubcc4\ub3c4\uc758 \uc124\uce58 \uacfc\uc815\ub3c4 \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:paragraph -->\n<p>\ub9cc\uc57d \uc758\uc874\uc131\uc5d0 \ubcc0\uacbd\uc774 \ubc1c\uc0dd\ud558\ub354\ub77c\ub3c4 git \uc0c1\uc5d0\uc11c diff\ub85c \uc7a1\ud788\ubbc0\ub85c \uc27d\uac8c \ud30c\uc545 \uac00\ub2a5\ud569\ub2c8\ub2e4. \uac1c\ubc1c\uc790\ub4e4 \uac04 node_modules\uac00 \ub3d9\uc77c\ud55c\uc9c0 \uccb4\ud06c\ud560 \ud544\uc694\uac00 \uc5c6\ub2e4\ub294 \ub73b\uc785\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:paragraph -->\n<p>\uc81c\uac00 \uc0dd\uac01\ud588\uc744 \ub54c Yarn berry \ub3c4\uc785 \uc2dc \uac00\uc7a5 \uac15\uc870\ub418\uc5b4\uc57c \ud560 \uc911\uc694\ud55c \uc9c0\uc810\uc774\ub77c\uace0 \uc0dd\uac01\ud569\ub2c8\ub2e4. \uc6b0\ub9ac\uac00 \uc791\uc131\ud55c \ucf54\ub4dc\ub4e4\uc774 \uc5ec\ub7ec \ud234\uccb4\uc778\uc744 \uac70\uce58\ub294 \ub3d9\uc548 \ub9ce\uc740 \ud30c\uc77c\ub4e4\uc774 generate \ub418\ub294\ub370, \ub9cc\uc57d \ub85c\uceec\uc5d0 \uc124\uce58\ub41c \ud30c\uc77c\uacfc \ub9ac\ubaa8\ud2b8(CI \ud658\uacbd, \uc2e4\uc11c\ube44\uc2a4 \ub4f1)\uc5d0 \uc124\uce58\ub41c \ud30c\uc77c\uc774 \ub2ec\ub77c \ub514\ubc84\uae45\uc744 \uc5b4\ub835\uac8c \ud55c\ub2e4\uba74 \ub300\uc751\ud558\uae30 \ub9e4\uc6b0 \uc5b4\ub824\uc6cc\uc9c8 \uac83\uc785\ub2c8\ub2e4. Zero Install\uc744 \uc0ac\uc6a9\ud558\uac8c \ub41c\ub2e4\uba74 \uc5b4\ub5a4 \uc124\uce58 \ud658\uacbd\uc5d0\uc11c\ub4e0 \uac19\uc740 \uc0c1\ud669\uc784\uc744 \uba85\uc2dc\uc801\uc73c\ub85c \ubcf4\uc7a5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:paragraph -->\n<p>\ubd80\uac00\uc801\uc778 \uc7a5\uc810\uc73c\ub85c \ud604\uc7ac \ube0c\ub79c\uce58\uc5d0 \ub9de\ub294 package.json\uc5d0 \ub9de\uac8c node_modules\ub97c \uac31\uc2e0\ud558\uae30 \uc704\ud55c \ubc18\ubcf5\uc801\uc778 yarn install\uc744 \ud560 \ud544\uc694 \ub610\ud55c \uc5c6\uc2b5\ub2c8\ub2e4. \ube0c\ub79c\uce58\ub97c \uccb4\ud06c\uc544\uc6c3\ud560 \ub54c\ub9c8\ub2e4 <code>.yarn\/cache<\/code> \ud3f4\ub354\uc5d0 \uc788\ub294 \uc758\uc874\uc131\ub3c4 \ucee4\ubc0b\uc73c\ub85c \uc7a1\ud600\uc788\uae30 \ub54c\ubb38\uc5d0 \uc5ec\ud0c0 \ud30c\uc77c\ub4e4\ucc98\ub7fc \ud30c\uc77c\ub85c \ucde8\uae09\ub418\uc5b4 \ud568\uaed8 \ubcc0\uacbd\ub418\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:heading -->\n<h2>3. \uc801\uc6a9 \ubc29\ubc95 &amp; \uacb0\uacfc<\/h2>\n<!-- \/wp:heading --><!-- wp:paragraph -->\n<p><a href=\"https:\/\/yarnpkg.com\/features\/pnp#compatibility-table)\" target=\"_blank\" rel=\"noreferrer noopener\">\ud638\ud658\uc131 \ud14c\uc774\ube14<\/a> \uc5d0\uc11c \uc9c0\uc6d0\ud558\ub294 \ubc84\uc804\uc5d0 \ud574\ub2f9\ub9cc \ud55c\ub2e4\uba74 \ub9c8\uc774\uadf8\ub808\uc774\uc158 \uc790\uccb4\ub294 \uc5b4\ub835\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. <code>yarn<\/code>\uc774 \uc774\ubbf8 \uc124\uce58\ub418\uc5b4 \uc788\ub2e4\ub294 \uac00\uc815 \ud558\uc5d0 <a href=\"https:\/\/yarnpkg.com\/getting-started\/migration\" target=\"_blank\" rel=\"noreferrer noopener\">yarn \uacf5\uc2dd \ubb38\uc11c<\/a> \uc5d0\uc11c \uc124\uba85\ud558\ub294 \ub300\ub85c \uc9c4\ud589\ud569\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:paragraph -->\n<p>\uc815\ub9d0 \ud574\uacb0\ud560 \uc218 \uc5c6\ub294 \ubb38\uc81c\uac00 \uc788\ub2e4\uba74 <code>.yarnrc.yml<\/code> \uc5d0\uc11c <code>nodeLinker<\/code> \uc124\uc815\uc744 <code>loose<\/code> \ud639\uc740 <code>node-modules<\/code> \ub85c \ubc14\uafd4\uc57c(<a href=\"https:\/\/yarnpkg.com\/getting-started\/migration#if-required-enable-the-node-modules-plugin\" target=\"_blank\" rel=\"noreferrer noopener\">\ub9c1\ud06c<\/a>) \ud569\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:code -->\n<pre class=\"wp-block-code\"><code>nodeLinker : \"pnp\" # \ud639\uc740 \"node-modules\"<\/code><\/pre>\n<!-- \/wp:code --><!-- wp:paragraph -->\n<p>\uc704\uc5d0\uc11c \uc124\uba85 \ub4dc\ub9b0 \uc720\ub839 \uc758\uc874\uc131 \ubb38\uc81c \ub4f1\uc758 \uc774\uc720\ub85c \ud604\uc7ac \uae68\uc838 \uc788\ub294 \uc885\uc18d\uc131 \ud2b8\ub9ac\ub97c \uc218\ub3d9\uc73c\ub85c \ucd94\uac00\ud574\uc8fc\uc5b4\uc57c \ud558\ub294 \uacbd\uc6b0\uac00 \uc788\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub54c\ub294 \uc77c\ubc18\uc801\uc778 \uc124\uce58 \ubc29\uc2dd\uc73c\ub85c package.json\uc5d0 \uc885\uc18d\uc131\uc73c\ub85c \ucd94\uac00\ud574\uc8fc\uac70\ub098, packageExtensions\ub97c \uc0ac\uc6a9(<a href=\"https:\/\/yarnpkg.com\/getting-started\/migration#a-package-is-trying-to-access-another-package-\" target=\"_blank\" rel=\"noreferrer noopener\">\ub9c1\ud06c<\/a>)\ud558\uc5ec \ubcf4\uc644\ud574\uc904 \uc218 \uc788\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:enlighter\/codeblock {\"language\":\"yaml\"} -->\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">packageExtensions:\n  \"debug@*\":\n    peerDependenciesMeta:\n      \"supports-color\":\n        optional: true<\/pre>\n<!-- \/wp:enlighter\/codeblock --><!-- wp:heading {\"level\":3} -->\n<h3>1) yarn \ubc84\uc804 \ubcc0\uacbd<\/h3>\n<!-- \/wp:heading --><!-- wp:code -->\n<pre class=\"wp-block-code\"><code>&gt; yarn set version berry<\/code><\/pre>\n<!-- \/wp:code --><!-- wp:paragraph -->\n<p>\uc774\ubbf8 .yarnrc.yml \ub4f1 berry \uad00\ub828\ub41c \ud30c\uc77c\uc774 \uc0dd\uc131\ub418\uc5b4 \uc788\uc73c\uba74 \uc791\ub3d9\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ub9cc\uc57d v1.x\ub85c \ub3cc\uc544\uac00\ub824\uba74 <code>yarn set version classic<\/code> \uc744 \uc785\ub825\ud569\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:heading {\"level\":3} -->\n<h3>2) <code>.gitignore<\/code> \uc124\uc815<\/h3>\n<!-- \/wp:heading --><!-- wp:paragraph -->\n<p><a href=\"https:\/\/yarnpkg.com\/getting-started\/qa#which-files-should-be-gitignored\" target=\"_blank\" rel=\"noreferrer noopener\">\ubb38\uc11c<\/a>(Zero-Installs \uae30\uc900)\ub97c \ub530\ub77c <code>.gitignore<\/code> \uc5d0 \uc544\ub798 \uacbd\ub85c\ub97c \ucd94\uac00\ud574\uc90d\ub2c8\ub2e4. <code>!<\/code> \ub294 \uc81c\uc678\ud560(gitignore) \uacbd\ub85c\uc5d0\uc11c \ube7c\ub2ec\ub77c\ub294 \ub73b\uc774\ubbc0\ub85c <code>.yarn<\/code> \uc774\ud558 \uacbd\ub85c \uc911 \ud3ec\ud568\uc2dc\ud0ac \uacbd\ub85c\ub4e4\uc744 \uba85\uc2dc\ud55c \uac83\uc73c\ub85c \uc0dd\uac01\ud558\uc2dc\uba74 \ub429\ub2c8\ub2e4. \ubd80\uc815\uc758 \ubd80\uc815\uc774\ub77c \uc880 \ud63c\ub780\uc2a4\ub7ec\uc6b8 \uc218\ub294 \uc788\uc744 \uac83 \uac19\uc2b5\ub2c8\ub2e4. \uac01 \uacbd\ub85c\uc758 \uc5ed\ud560\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \uc124\uba85\uc740 \uacf5\uc2dd \ubb38\uc11c\uc5d0\uc11c \ud655\uc778\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:code -->\n<pre class=\"wp-block-code\"><code>.yarn\/*\n!.yarn\/cache\n!.yarn\/patches\n!.yarn\/plugins\n!.yarn\/releases\n!.yarn\/sdks\n!.yarn\/versions<\/code><\/pre>\n<!-- \/wp:code --><!-- wp:heading {\"level\":3} -->\n<h3>3) <code>.npmrc<\/code>, <code>.yarnrc<\/code>\ub97c <code>.yarnrc.yml<\/code> \ub85c \ub9c8\uc774\uadf8\ub808\uc774\uc158<\/h3>\n<!-- \/wp:heading --><!-- wp:paragraph -->\n<p>berry\ub85c \ubc84\uc804\uc744 \ubcc0\uacbd\ud558\uac8c \ub418\uba74 \ub8e8\ud2b8 \uacbd\ub85c\uc5d0 .yarnrc.yml \ud30c\uc77c\uc774 \uc0dd\uc131\ub429\ub2c8\ub2e4. \uae30\uc874\uc5d0 \uc788\ub358 .npmrc, .yarnrc\ub294 \uc9c0\uc6d0\ud558\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc5d0 <a href=\"https:\/\/yarnpkg.com\/configuration\/yarnrc\" target=\"_blank\" rel=\"noreferrer noopener\">\ubb38\uc11c<\/a>\ub97c \ud655\uc778\ud558\uc5ec \uac01\uac01\uc758 \uc635\uc158\uc744 \ub9c8\uc774\uadf8\ub808\uc774\uc158 \ud574\uc8fc\uba74 \ub429\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:paragraph -->\n<p>.yarnrc.yml\uc5d0\uc11c nodeLinker\ub97c <code>node-modules<\/code> \ub85c \uc785\ub825\ud558\uba74 classic\uc5d0\uc11c \ud558\ub358 \ub300\ub85c \uc885\uc18d\uc131\ub4e4\uc744 node_modules\uc5d0\uc11c \uad00\ub9ac\ud558\uac8c \ub429\ub2c8\ub2e4. pnp \ubaa8\ub4dc\ub97c \uc0ac\uc6a9\ud560 \uac83\uc774\ubbc0\ub85c <code>pnp<\/code> \ub77c\uace0 \uc801\ud600 \uc788\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:paragraph -->\n<p>\ub610\ud55c \uc800\ud76c \ud504\ub85c\uc81d\ud2b8\uc5d0\uc11c\ub294 github packages\ub85c \ubc30\ud3ec\ud55c \uc885\uc18d\uc131\uc744 \ud3ec\ud568\ud558\uace0 \uc788\uc5b4 <code>yarnrc.yml<\/code> \uc5d0 \ucd94\uac00\uc801\uc73c\ub85c \uad00\ub828 \uc124\uc815\uc744 \ucd94\uac00\ud574\uc90d\ub2c8\ub2e4. \ubc30\ud3ec \uc2dc\uc5d0\ub294 <code>Dockerfile<\/code> \uc5d0\uc11c \ud1a0\ud070 \uac12\uc744 \ub123\uc5b4\uc90d\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:enlighter\/codeblock {\"language\":\"yaml\"} -->\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">nodeLinker: pnp\n\nyarnPath: .yarn\/releases\/yarn-3.3.0.cjs\n\nnpmScopes:\n  organization\uc774\ub984(ex. dramancompany):\n    npmAlwaysAuth: true\n    # NOTE: \ub85c\uceec\uc5d0\uc11c \uc124\uce58 \uc2dc \ud130\ubbf8\ub110\uc5d0 'export NPM_AUTH_TOKEN=...' \uba85\ub839\uc5b4\ub85c \ud658\uacbd\ubcc0\uc218\ub97c \uc124\uc815\ud569\ub2c8\ub2e4.\n    npmAuthToken: ${NPM_AUTH_TOKEN} # https:\/\/github.com\/yarnpkg\/berry\/pull\/1341\n    npmRegistryServer: \"https:\/\/npm.pkg.github.com\"<\/pre>\n<!-- \/wp:enlighter\/codeblock --><!-- wp:paragraph -->\n<p>\uc0c1\uae30 \uc138\ud305\uc774 \ubaa8\ub450 \ub05d\ub098\uba74 `yarn install` \uc744 \uc785\ub825\ud558\uc5ec yarn classic\uc5d0\uc11c berry\ub85c \ub9c8\uc774\uadf8\ub808\uc774\uc158\uc744 \uc9c4\ud589\ud569\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:code -->\n<pre class=\"wp-block-code\"><code>&gt; yarn install<\/code><\/pre>\n<!-- \/wp:code --><!-- wp:paragraph -->\n<p>\uc774 \uacfc\uc815\uc5d0\uc11c \uae68\uc9c4 \uc758\uc874\uc131\ub4e4\uc774 \ubc1c\uacac\ub418\uace4 \ud569\ub2c8\ub2e4. <code>styled-components<\/code> \uc0ac\uc6a9 \uc2dc <code>react-is<\/code> \ub97c \uc124\uce58\ud558\ub77c\ub294 \uc5d0\ub7ec \uba54\uc2dc\uc9c0\uac00 \ub728\ub294 \uac83\uc774 \ub300\ud45c\uc801\uc778 \ucf00\uc774\uc2a4\uc785\ub2c8\ub2e4. \ud130\ubbf8\ub110\uc5d0 \ub728\ub294 \uc5d0\ub7ec \uba54\uc2dc\uc9c0\ub97c \ud655\uc778\ud558\uc5ec \ud544\uc694\ud55c \uc758\uc874\uc131\ub4e4\uc744 \ucd94\uac00 \uc124\uce58\ud574\uc90d\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:enlighter\/codeblock {\"language\":\"yaml\"} -->\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">packageExtensions:\n  styled-components@*:\n    dependencies:\n      react-is: \"*\"<\/pre>\n<!-- \/wp:enlighter\/codeblock --><!-- wp:paragraph -->\n<p>\uc124\uce58 \uc2dc <code>~\/.yarn\/berry\/cache<\/code> \uc804\uc5ed \uacbd\ub85c\uc5d0\ub3c4 \ud568\uaed8 \uc124\uce58\uac00 \ub418\ubbc0\ub85c <code>yarn cache clean<\/code> \ub4f1\uc758 \uba85\ub839\uc5b4\ub97c \ud1b5\ud574 \uc758\uc874\uc131\uc774 \uc644\uc804\ud788 \uc124\uce58\ub418\uc9c0 \uc54a\uc740 \uc0c1\ud669\uc744 \uc7ac\ud604\ud558\uace0 \uc2f6\uc744 \uacbd\uc6b0 <code>yarn cache clean --mirror<\/code> \ub97c \uc785\ub825(<a href=\"https:\/\/yarnpkg.com\/features\/offline-cache#cleaning-the-cache\" target=\"_blank\" rel=\"noreferrer noopener\">\uad00\ub828 \ubb38\uc11c<\/a>)\ud574\uc57c \ud558\ubbc0\ub85c \uc720\uc758\ud560 \ud544\uc694\uac00 \uc788\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:paragraph -->\n<p>\uc5ec\uae30\uae4c\uc9c0 \ub9c8\ubb34\ub9ac \ub418\uc5c8\uc73c\uba74 \ud55c\ubc88 \ucee4\ubc0b\ud558\uc5ec \uc9c4\ud589 \uc0c1\ud669\uc744 \uc800\uc7a5\ud569\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:heading {\"level\":3} -->\n<h3>4) yarn berry\ub97c IDE\uc640 \ud1b5\ud569 (with. TypeScript)<\/h3>\n<!-- \/wp:heading --><!-- wp:paragraph -->\n<p>\uc9c0\uae08\uae4c\uc9c0\ub294 \ud328\ud0a4\uc9c0 \ub9e4\ub2c8\uc800 \ub808\ubca8\uc5d0\uc11c \ub9c8\uc774\uadf8\ub808\uc774\uc158 \ud560 \uac83\ub4e4\uc744 \ucc98\ub9ac\ud574\uc8fc\uc5c8\uc2b5\ub2c8\ub2e4. \uc774\uc81c IDE\uc5d0 \uc758\uc874\uc131\uacfc \ud0c0\uc785 \uc815\ubcf4\ub97c node_modules\uac00 \uc544\ub2cc .yarn\uc5d0\uc11c \uc77d\uc5b4\uc624\ub3c4\ub85d \uc54c\ub824\uc8fc\uc5b4\uc57c \ud569\ub2c8\ub2e4. VSCode \uae30\uc900\uc73c\ub85c \uc124\uba85\ud558\uaca0\uc2b5\ub2c8\ub2e4.<br \/>\uc77c\ub2e8 \uc544\ub798 \uc138 \uac00\uc9c0 \uc694\uc18c\ub4e4\uc744 \uc124\uce58\ud569\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:paragraph -->\n<p>1. <code>VSCode Extension\uc5d0\uc11c ZipFS \uc124\uce58<\/code> (zip \ud30c\uc77c\ub85c \uc124\uce58\ub41c \uc885\uc18d\uc131\uc744 \uc77d\uc5b4\uc62c \uc218 \uc788\ub3c4\ub85d)<\/p>\n<!-- \/wp:paragraph --><!-- wp:image {\"align\":\"center\",\"sizeSlug\":\"large\"} -->\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter size-large\"><img src=\"https:\/\/user-images.githubusercontent.com\/35240142\/215242255-06b1fe32-b8df-4434-816e-7d0c7b0bd779.png\" alt=\"\" \/>\n<figcaption>ZipFS \uc124\uce58<\/figcaption>\n<\/figure>\n<\/div>\n<!-- \/wp:image --><!-- wp:paragraph -->\n<p>2. <code>yarn install -D typescript eslint prettier<\/code><\/p>\n<!-- \/wp:paragraph --><!-- wp:paragraph -->\n<p>3. <code>yarn dlx @yarnpkg\/sdks vscode<\/code> (yarn dlx = npx) \ub97c \uc2e4\ud589\ud558\uc5ec \uad00\ub828 \uc138\ud305\uc744 \ud3ec\ud568\ud55c <code>.vscode<\/code> \ud3f4\ub354\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:enlighter\/codeblock {\"language\":\"json\"} -->\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"json\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">{\n  \"recommendations\": [\n    \"arcanis.vscode-zipfs\",\n    \"dbaeumer.vscode-eslint\",\n    \"esbenp.prettier-vscode\"\n  ]\n}<\/pre>\n<!-- \/wp:enlighter\/codeblock --><!-- wp:enlighter\/codeblock {\"language\":\"json\"} -->\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"json\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">{\n  \"search.exclude\": {\n    \"**\/.yarn\": true,\n    \"**\/.pnp.*\": true\n  },\n  \"eslint.nodePath\": \".yarn\/sdks\",\n  \"prettier.prettierPath\": \".yarn\/sdks\/prettier\/index.js\",\n  \"typescript.tsdk\": \".yarn\/sdks\/typescript\/lib\",\n  \"typescript.enablePromptUseWorkspaceTsdk\": true\n}<\/pre>\n<!-- \/wp:enlighter\/codeblock --><!-- wp:paragraph -->\n<p>4. \uc124\uce58\uac00 \uc644\ub8cc\ub418\uba74 \uc544\ubb34 \ud0c0\uc785\uc2a4\ud06c\ub9bd\ud2b8 \ud30c\uc77c\uc774\ub098 \ub4e4\uc5b4\uac04 \ub2e4\uc74c<\/p>\n<!-- \/wp:paragraph --><!-- wp:paragraph -->\n<p>5. \uc6b0\uce21 \ud558\ub2e8 TypeScript \ud074\ub9ad or <code>cmd + shift + p<\/code> \ub97c \ub20c\ub7ec TypeScript \uac80\uc0c9<\/p>\n<!-- \/wp:paragraph --><!-- wp:image {\"align\":\"center\",\"sizeSlug\":\"large\"} -->\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter size-large\"><img src=\"https:\/\/user-images.githubusercontent.com\/35240142\/215242264-c9d267c6-a43f-427e-951d-9d0bdd166f42.png\" alt=\"\" \/><\/figure>\n<\/div>\n<!-- \/wp:image --><!-- wp:paragraph -->\n<p>6. Use Workspace Version \ud074\ub9ad<\/p>\n<!-- \/wp:paragraph --><!-- wp:image {\"align\":\"center\",\"sizeSlug\":\"large\"} -->\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter size-large\"><img src=\"https:\/\/user-images.githubusercontent.com\/35240142\/215242269-6d5640db-1ed4-46f1-9242-d4ae20642188.png\" alt=\"\" \/><\/figure>\n<\/div>\n<!-- \/wp:image --><!-- wp:paragraph -->\n<p><br \/>\uc5ec\uae30\uae4c\uc9c0 \uc9c4\ud589 \ud55c \ub4a4 \ub2e4\uc2dc \ud55c\ubc88 \uc9c4\ud589 \uc0c1\ud669 \uc800\uc7a5\uc744 \uc704\ud574 \ucee4\ubc0b\ud569\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:heading {\"level\":3} -->\n<h3>5) Dockerfile \uc218\uc815<\/h3>\n<!-- \/wp:heading --><!-- wp:paragraph -->\n<p>\uc774\uc0c1 \ub85c\uceec\uc5d0\uc11c \ud544\uc694\ud55c \uc791\uc5c5\ub4e4\uc740 \ubaa8\ub450 \uc644\ub8cc\ub97c \ud574\uc8fc\uc5c8\uc2b5\ub2c8\ub2e4. \ubc30\ud3ec \uc2dc \ub3c4\ucee4\ub97c \uc0ac\uc6a9\ud558\uace0 \uc788\uc73c\ubbc0\ub85c <code>Dockerfile<\/code> \uc5d0\ub3c4 \ud544\uc694\ud55c \uc791\uc5c5\uc744 \ud574\uc90d\ub2c8\ub2e4. \uc544\ub798\uc640 \uac19\uc774 \uc791\uc5c5\uc744 \ud574\uc8fc\uc5c8\uc73c\uba70 \ud544\uc694\ud55c \uc124\uba85\uc740 \ud30c\uc77c \ub0b4 \uc8fc\uc11d\uc73c\ub85c \ucd94\uac00\ud574\ub450\uc5c8\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:paragraph -->\n<p>\uc138 \uac00\uc9c0 \uc815\ub3c4\uc758 \uc8fc\uc758\uc0ac\ud56d\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ud558\ub098\ub294 <code>yarn berry<\/code> \uac00 <code>Node 16.14+<\/code> \ubc84\uc804\uc5d0\uc11c \ub3d9\uc791\ud55c\ub2e4\ub294 \uac83\uc774\uace0, \ub2e4\ub978 \ud558\ub098\ub294 <code>yarn berry<\/code> \uc5d0\uc11c <code>zero install<\/code> \uc744 \uc0ac\uc6a9\ud560 \ub54c <code>yarn install<\/code> \uc2dc <code>--immutable<\/code> \uc635\uc158\uc744 \uc0ac\uc6a9\ud574\uc57c \ud558\uace0, Docker\ub85c \ubc30\ud3ec \uc2dc Dockerfile\uc5d0 \ub2e4\uc74c\uacfc \uac19\uc774 \uc791\uc131\ud558\uc5ec \uad00\ub828 \ud30c\uc77c\ub4e4\uc744 working directory\uc5d0 \ubcf5\uc0ac\ud574\uc918\uc57c \ud569\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:code -->\n<pre class=\"wp-block-code\"><code>COPY package* yarn.lock .pnp*     .\/\nCOPY .yarnrc.yml                  .\/\nCOPY .yarn                        .\/.yarn<\/code><\/pre>\n<!-- \/wp:code --><!-- wp:paragraph -->\n<p>\uc704\uc640 \uac19\uc740 \uacfc\uc815\uc744 \uac70\uce58\uba74 yarn berry\uc758 zero install\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uac8c \ub429\ub2c8\ub2e4. \uac1c\uc120\ub41c \ube4c\ub4dc \uc2dc\uac04\uc740 \ud504\ub85c\uc81d\ud2b8\ub9c8\ub2e4 \ucc28\uc774\uac00 \uc788\uc73c\ub098 \uc9c0\uae08\uae4c\uc9c0 \uc801\uc6a9\ud574\ubcf8 \ucf00\uc774\uc2a4\ub4e4\uc5d0\uc11c\ub294 \uc57d 50\ucd08 ~ 1\ubd84 \uc815\ub3c4\uc758 \uc2dc\uac04 \ub2e8\ucd95\uc774 \uc788\uc5c8\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:heading -->\n<h2>4. \ud2b8\ub7ec\ube14 \uc288\ud305 (with Github issues)<\/h2>\n<!-- \/wp:heading --><!-- wp:paragraph -->\n<p><code>yarn berry<\/code> \uac00 \ucc98\uc74c \ubc1c\ud45c\ub418\uc5c8\uc744 \ub54c\uc5d0 \ube44\ud574 \uad00\ub828 \uc790\ub8cc\ub3c4 \ub9ce\uc544\uc9c0\uace0, <a href=\"https:\/\/yarnpkg.com\/features\/pnp#compatibility-table\" target=\"_blank\" rel=\"noreferrer noopener\">\uc5ec\ub7ec \ub300\uaddc\ubaa8 \ud504\ub85c\uc81d\ud2b8<\/a>\uc5d0\uc11c \uc9c0\uc6d0\ud558\uae30 \uc2dc\uc791\ud558\ub294 \ub4f1 \uafb8\uc900\ud55c \uac1c\uc120\uc774 \uc788\uc5b4\uc654\uc9c0\ub9cc, \uae30\uc874 \ud328\ud0a4\uc9c0 \ub9e4\ub2c8\uc800\uc640\uc758 \uad6c\uc870\uc801\uc778 \ucc28\uc774 \ub54c\ubb38\uc5d0 \ub9de\ub2e5\ub728\ub9ac\uac8c \ub418\ub294 \ub0af\uc120 \uc774\uc288\ub4e4\uc774 \uc5ec\uc804\ud788 \uc874\uc7ac\ud569\ub2c8\ub2e4. \uc774\ubc88 \uc139\uc158\uc5d0\uc11c\ub294 \uadf8\ub7ec\ud55c \ubb38\uc81c\ub4e4\uc744 \ud574\uacb0\ud588\ub358 \uacbd\ud5d8\uc744 \uc774\uc57c\uae30\ud574\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:heading {\"level\":3} -->\n<h3>1) \ucee4\ubc0b\uc5d0 \ud3ec\ud568\ub418\uc9c0 \uc54a\ub294 \uc885\uc18d\uc131 \ubb38\uc81c<\/h3>\n<!-- \/wp:heading --><!-- wp:paragraph -->\n<p><code>yarn install<\/code> \uc2dc \ucee4\ubc0b\uc5d0 \ud3ec\ud568\ub418\uc9c0 \uc54a\ub294 \ud30c\uc77c\ub4e4\uc774 \uc788\uc2b5\ub2c8\ub2e4. <code>.yarn\/install-state.gz<\/code> \uac19\uc740 \uacbd\uc6b0 \ucd5c\uc801\ud654 \uad00\ub828 \ud30c\uc77c\uc774\uae30 \ub54c\ubb38\uc5d0 \uc560\ucd08\uc5d0 \ucee4\ubc0b\ud560 \ud544\uc694 \uc5c6\ub2e4\uace0 \uacf5\uc2dd \ubb38\uc11c\uc5d0\uc11c \uc548\ub0b4\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:paragraph -->\n<p>\ud55c\ud3b8 \uc608\uc0c1\uce58 \ubabb\ud55c \uc608\uc678 \ucf00\uc774\uc2a4\ub3c4 \uc788\uc5c8\uc2b5\ub2c8\ub2e4. Next.js \ub4f1\uc5d0 \ud3ec\ud568\ub418\ub294 `swc`\uc758 \uacbd\uc6b0 \uc6b4\uc601\uccb4\uc81c\uc5d0 \uc885\uc18d\ub418\ub294 \ubd80\ubd84\uc774 \uc788\ub2e4\ubcf4\ub2c8 \ucee4\ubc0b\uc5d0 \ud3ec\ud568\uc2dc\ud0ac \uacbd\uc6b0 \uc2e4\ud589\ud658\uacbd\uc5d0 \ub530\ub77c \ubb38\uc81c\ub97c \uc77c\uc73c\ud0ac \uc218 \uc788\uc5b4 \ucee4\ubc0b\uc5d0\uc11c \uc81c\uc678\ub418\uace0 \uc788\uc2b5\ub2c8\ub2e4. \ub530\ub77c\uc11c swc\ub97c \uc0ac\uc6a9\ud55c\ub2e4\uba74 \uc815\uc0c1\uc801\uc778 \ube4c\ub4dc\ub97c \uc704\ud574 \ucd5c\ucd08 1\ud68c \uc124\uce58 \uba85\ub839\uc5b4\uac00 \ud544\uc694\ud569\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:paragraph -->\n<p>\ub9cc\uc57d \uc124\uce58\ub97c \uc2e4\ud589\ud558\uc9c0 \uc54a\uc73c\uba74 \uc544\ub798\uc640 \uac19\uc740 \uc624\ub958\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:image {\"align\":\"center\",\"sizeSlug\":\"large\"} -->\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter size-large\"><img src=\"https:\/\/user-images.githubusercontent.com\/35240142\/215242557-6ceaf60b-7044-42e1-99ac-e975823d0088.png\" alt=\"\" \/><\/figure>\n<\/div>\n<!-- \/wp:image --><!-- wp:image {\"align\":\"center\",\"sizeSlug\":\"large\"} -->\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter size-large\"><img src=\"https:\/\/user-images.githubusercontent.com\/35240142\/215242563-29edb728-b040-402d-bcdb-dcf90a104a80.png\" alt=\"\" \/><\/figure>\n<\/div>\n<!-- \/wp:image --><!-- wp:paragraph -->\n<p>\uc124\uce58 \ud6c4 \ucd94\uac00\ub41c \ud30c\uc77c\ub4e4\uc774 .gitignore\uc5d0 \ub4f1\ub85d\ub418\uc5b4 \uc788\uc73c\uba70, \uc124\uce58\ub41c \uc885\uc18d\uc131\uc758 \ud3f4\ub354\uba85\uc73c\ub85c\ubd80\ud130 \ud50c\ub7ab\ud3fc \uc885\uc18d\uc801\uc774\ub77c\ub294 \uc0ac\uc2e4\uc744 \ucd94\uce21\ud574\ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucc38\uace0\ub85c <code>.yarn\/unplugged<\/code> \ub294 zip\uc73c\ub85c \ubb36\uc774\uc9c0 \uc54a\uace0 \uc555\ucd95\ud574\uc81c \ub41c \uc885\uc18d\uc131\ub4e4\uc774 \uc124\uce58\ub418\ub294 \uacbd\ub85c\uc785\ub2c8\ub2e4. <code>yarn unplug<\/code> \ub4f1\uc758 \uba85\ub839\uc5b4\ub97c \uc0ac\uc6a9\ud558\uba74 \uc555\ucd95\ub41c \uc885\uc18d\uc131 \ub4e4\uc744 \ud480\uc5b4\uc11c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:heading {\"level\":3} -->\n<h3>2) ESLint import\/order \uad00\ub828 \uc774\uc288<\/h3>\n<!-- \/wp:heading --><!-- wp:paragraph -->\n<p><code>eslint<\/code> \uc5d0\uc11c import \uad00\ub828 \ub8f0\uc744 \uc0ac\uc6a9\ud558\uace0 \uc788\ub2e4\uba74 \ucd94\uac00 \uc138\ud305\uc774 \ud544\uc694\ud569\ub2c8\ub2e4. <code>eslint-plugin-import<\/code> \uc5d0\uc11c \uc81c\uacf5\ud558\ub294 <code>import\/order<\/code> \uc635\uc158\uc744 \ud65c\uc6a9\ud574 \ub2e4\uc74c\uacfc \uac19\uc774 \uc678\ubd80 \uc758\uc874\uc131\uacfc \ub0b4\ubd80 \uc758\uc874\uc131\uc744 \uad6c\ubd84\uc9c0\uc5b4 \uc904\ubc14\uafc8 \ud574\uc8fc\uace0 \uc788\uc5c8\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:image {\"align\":\"center\",\"sizeSlug\":\"large\"} -->\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter size-large\"><img src=\"https:\/\/user-images.githubusercontent.com\/35240142\/215242568-de643261-f829-4f7a-a5c3-ebff19da0a53.png\" alt=\"\" \/><\/figure>\n<\/div>\n<!-- \/wp:image --><!-- wp:paragraph -->\n<p>\uc774 Lint \uaddc\uce59\uc774 yarn berry \uc801\uc6a9 \ud6c4 \uc81c\ub300\ub85c \uc791\ub3d9\ud558\uc9c0 \uc54a\ub294 \uac83\uc744 \ubc1c\uacac\ud558\uc600\uc2b5\ub2c8\ub2e4. \ud504\ub85c\uc81d\ud2b8 \ub0b4\ubd80\uc5d0\uc11c \uac00\uc838\uc628 \ubaa8\ub4c8\uacfc, \uc678\ubd80 \ub77c\uc774\ube0c\ub7ec\ub9ac\uc5d0\uc11c \uac00\uc838\uc624\ub294 \ubaa8\ub4c8\uc744 \uad6c\ubd84\ud558\ub294 \uae30\uc900\uc774 node_modules\uac00 \uacbd\ub85c\uc5d0 \ud3ec\ud568\ub418\uc5b4 \uc788\ub294\uc9c0 \uc5ec\ubd80\uc600\uc744 \uac83\uc774\ub77c \uc0dd\uac01\ud558\uc5ec \uac80\uc0c9\ud574\ubcf4\uc558\uc2b5\ub2c8\ub2e4. <a href=\"https:\/\/github.com\/import-js\/eslint-plugin-import\/issues\/2164\" target=\"_blank\" rel=\"noreferrer noopener\">\uad00\ub828 \uc774\uc288<\/a>\ub85c\ubd80\ud130 \ud78c\ud2b8\ub97c \uc5bb\uc5b4 <a href=\"https:\/\/github.com\/import-js\/eslint-plugin-import#importexternal-module-folders\" target=\"_blank\" rel=\"noreferrer noopener\">README<\/a> \ub0b4\uc5d0 \uc5b8\uae09\ub41c \ud574\uacb0\ucc45\uc744 \ucc3e\uc744 \uc218 \uc788\uc5c8\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:quote -->\n<blockquote class=\"wp-block-quote\">\n<p><em>If you are using yarn PnP as your package manager, add the .yarn folder and all your installed dependencies will be considered as external, instead of internal.<\/em><\/p>\n<\/blockquote>\n<!-- \/wp:quote --><!-- wp:paragraph -->\n<p>\uc774 \ubb38\uc81c\ub97c \ud574\uacb0\ud558\ub824\uba74 <code>.eslintrc.js<\/code> \uc5d0 \ub2e4\uc74c\uacfc \uac19\uc774 \uc635\uc158\uc744 \ucd94\uac00\ud558\uc5ec <code>.yarn<\/code> \uacbd\ub85c\ub97c \uc678\ubd80 \uc758\uc874\uc131\uc73c\ub85c \uc778\uc2dd\uc2dc\ucf1c\uc8fc\uba74 \ub429\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:enlighter\/codeblock {\"language\":\"js\"} -->\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">\/\/ .eslintrc.js\n\/\/ ...\n  settings: {\n    'import\/external-module-folders': ['.yarn'],\n\/\/ ...<\/pre>\n<!-- \/wp:enlighter\/codeblock --><!-- wp:heading {\"level\":3} -->\n<h3>3) yarn berry\uc5d0\uc11c pre-hook \uc9c0\uc6d0\ud558\uc9c0 \uc54a\uc74c<\/h3>\n<!-- \/wp:heading --><!-- wp:paragraph -->\n<p>yarn 2.x \ubc84\uc804 \ubd80\ud130\ub294 pre-hook(ex. <code>preinstall<\/code> , <code>prepare<\/code> \ub4f1) \uc744 \uc9c0\uc6d0\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. <a href=\"https:\/\/yarnpkg.com\/advanced\/lifecycle-scripts#gatsby-focus-wrapper\" target=\"_blank\" rel=\"noreferrer noopener\">\ubb38\uc11c<\/a>\uc5d0 \ub530\ub974\uba74 \uc774\ub294 \uc0ac\uc774\ub4dc \uc774\ud399\ud2b8\ub97c \uc904\uc774\uae30 \uc704\ud55c \uc758\ub3c4\uc801\uc778 \ubcc0\uacbd\uc774\ub77c\uace0 \ud558\uba70, \ud638\ud658\uc131\uc744 \uc704\ud574\uc11c <code>preinstall<\/code> \uacfc <code>install<\/code> \uc740 <code>postinstall<\/code>\uc758 \uc77c\ubd80\ub85c\uc11c \uc2e4\ud589\ub429\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:paragraph -->\n<p>\uae30\uc874\uc5d0 husky \ub4f1\uc744 \uc0ac\uc6a9\ud558\uae30 \uc704\ud574 \uac78\uc5b4\ub454 pre-hook\uc774 \uc788\uc5c8\ub2e4\uba74 yarn berry \uc5c5\uadf8\ub808\uc774\ub4dc \ud6c4 \uc791\ub3d9\ud558\uc9c0 \uc54a\uc744 \uac83\uc774\ubbc0\ub85c \uc774\uc5d0 \ub300\ud55c \ucc98\ub9ac\uac00 \ud544\uc694\ud569\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:code -->\n<pre class=\"wp-block-code\"><code>\"postinstall\": \"husky install\"<\/code><\/pre>\n<!-- \/wp:code --><!-- wp:heading {\"level\":3} -->\n<h3>4) yarn berry\uc640 vite\ub97c \ud568\uaed8 \uc0ac\uc6a9\ud560 \ub54c storybook\uc774 \uc2e4\ud589\ub418\uc9c0 \uc54a\ub294 \ubb38\uc81c<\/h3>\n<!-- \/wp:heading --><!-- wp:image {\"align\":\"center\",\"sizeSlug\":\"large\"} -->\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter size-large\"><img src=\"https:\/\/user-images.githubusercontent.com\/35240142\/215242682-106bffb8-6eb7-452a-86f1-869726aa4b17.png\" alt=\"\" \/><\/figure>\n<\/div>\n<!-- \/wp:image --><!-- wp:paragraph -->\n<p>\uc774 \uacbd\uc6b0\ub294 \ub204\ub77d\ub41c devDependencies\ub97c \ub2e4 \uae54\uc544\uc8fc\uba74 \ub418\ub294 \ubb38\uc81c\ub85c \uac04\ub2e8\ud558\uac8c \ud574\uacb0\ud560 \uc218 \uc788\uc5c8\uc2b5\ub2c8\ub2e4. \uad00\ub828 \uc774\uc288\ub294 <a href=\"https:\/\/github.com\/storybookjs\/builder-vite\/issues\/141\" target=\"_blank\" rel=\"noreferrer noopener\">\uc5ec\uae30<\/a>\uc5d0\uc11c \ucc3e\uc544\ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:paragraph -->\n<p>\ud558\uc9c0\ub9cc \uc774 \uc885\uc18d\uc131\ub4e4\uc744 \uc124\uce58\ud558\uace0 \ub098\uc11c\ub3c4 storybook\uc774 \uc815\uc0c1\uc801\uc73c\ub85c \uc2e4\ud589\ub418\uc9c0\ub294 \uc54a\uc558\ub294\ub370, \uc2a4\ud1a0\ub9ac\ubd81\uc73c\ub85c \ub744\uc6b4 \ud654\uba74 \uc0c1\uc758 \ucf58\uc194\uc5d0 `\"Cannot access \".\/util.inspect.custom\" in client code.\"` \ub77c\ub294 \uc5d0\ub7ec\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4. pnp\uc640 vite \uc0ac\uc774\uc5d0\uc11c\ub9cc \ubc1c\uc0dd\ud558\ub294 \ubb38\uc81c\ub85c build \uacfc\uc815\uc5d0\uc11c \uc11c\ubc84 \/ \ud074\ub77c\uc774\uc5b8\ud2b8 \ud658\uacbd\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \ucf54\ub4dc\ub4e4\uc774 \uc801\uc808\ud788 \ucc98\ub9ac\ub418\uc9c0 \uc54a\uc544\uc11c \uc0dd\uae30\ub294 \ubb38\uc81c\ub85c \uc774\ud574\ud588\uc2b5\ub2c8\ub2e4. vite \uce21\uc5d0\uc11c \ud3f4\ub9ac\ud544\uc744 \ucd94\uac00\ud558\uc5ec \ud574\uacb0\ud55c \uac83\uc73c\ub85c \ubcf4\uc774\uba70, \uad00\ub828 \uc774\uc288\ub294 <a href=\"https:\/\/github.com\/vitejs\/vite\/issues\/9238\" target=\"_blank\" rel=\"noreferrer noopener\">\uc5ec\uae30<\/a>, <a href=\"https:\/\/github.com\/vitejs\/vite\/issues\/7576\" target=\"_blank\" rel=\"noreferrer noopener\">\uc5ec\uae302<\/a>\uc5d0\uc11c \ucc3e\uc544\ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:image {\"align\":\"center\",\"sizeSlug\":\"large\"} -->\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter size-large\"><img src=\"https:\/\/user-images.githubusercontent.com\/35240142\/215242692-31961169-1beb-4de4-9d3a-a564b61c0ed4.png\" alt=\"\" \/><\/figure>\n<\/div>\n<!-- \/wp:image --><!-- wp:paragraph -->\n<p>\uc774 \uc678\uc5d0\ub3c4 vite\uc640\uc758 \uc870\ud569\uc5d0\uc11c \uc0dd\uae30\ub294 \ubb38\uc81c\ub294 \ub610 \uc788\uc5c8\ub294\ub370\uc694. build\ub97c \uc2e4\ud589\ud588\uc744 \uc2dc \uc885\uc18d\uc131\uc744 \uc81c\ub300\ub85c \ucc3e\uc9c0 \ubabb\ud558\ub294 \ubb38\uc81c\uc600\uc2b5\ub2c8\ub2e4. \uc774 \ubb38\uc81c\ub294 yarn berry\ub97c 3.3.0\uc73c\ub85c \uc62c\ub9ac\uace0 vscode sdk\ub97c \uc7ac\uc124\uce58\ud55c \ub4a4, vite\ub97c 3.2.0 \ubc84\uc804\uc73c\ub85c \uc5c5\ub370\uc774\ud2b8 \ud558\uc5ec \ud574\uacb0\ud588\uc2b5\ub2c8\ub2e4. \uad00\ub828 \uc774\uc288\ub294 <a href=\"https:\/\/github.com\/yarnpkg\/berry\/issues\/4872#issuecomment-1284318301\" target=\"_blank\" rel=\"noreferrer noopener\">\uc5ec\uae30<\/a>\uc5d0\uc11c \ucc3e\uc544\ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:heading -->\n<h2>5. \uac1c\uc120 \uacb0\uacfc<\/h2>\n<!-- \/wp:heading --><!-- wp:paragraph -->\n<p>\uacb0\uacfc\uc801\uc73c\ub85c \uac1c\uc120\ub41c \ube4c\ub4dc \uc2dc\uac04\uc740 \ud504\ub85c\uc81d\ud2b8\ub9c8\ub2e4 \ucc28\uc774\uac00 \uc788\uc73c\ub098 \uc9c0\uae08\uae4c\uc9c0 \uc801\uc6a9\ud574\ubcf8 \ucf00\uc774\uc2a4\ub4e4\uc5d0\uc11c\ub294 yarn berry \ub2e8\ub3c5\uc73c\ub85c\ub9cc \ub530\uc84c\uc744 \ub54c \ud3c9\uade0\uc801\uc73c\ub85c \uc57d 50\ucd08 ~ 1\ubd84 \uc815\ub3c4\uc758 \uc2dc\uac04 \ub2e8\ucd95\uc774 \uc788\uc5c8\uc2b5\ub2c8\ub2e4. \ub9cc\uc57d \uc55e\uc11c \uc5b8\uae09\ud55c swc \uad00\ub828 \uc124\uce58 \uc2dc\uac04\uc744 \uc0dd\ub7b5\ud560 \uc218 \uc788\ub2e4\uba74 20\ucd08 \uc815\ub3c4\ub97c \ucd94\uac00\ub85c \ub2e8\ucd95\ud560 \uc5ec\uc9c0\uac00 \uc788\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:image -->\n<figure class=\"wp-block-image\"><img src=\"https:\/\/user-images.githubusercontent.com\/35240142\/220504822-90f3f3a5-4142-4bdb-bd5e-32e8b682f2c8.png\" alt=\"image\" \/>\n<figcaption>swc \uc124\uce58\uc5d0 \uc18c\uc694\ub418\ub294 \uc2dc\uac04<\/figcaption>\n<\/figure>\n<!-- \/wp:image --><!-- wp:paragraph -->\n<p>\ube4c\ub4dc \uc2dc\uac04 \ub2e8\ucd95 \uc774\uc678\uc5d0\ub3c4 \uc2e4\uc81c \ub3c4\uc785\ud574\ubcf4\uace0 \ub098\uc11c \uccb4\uac10\ud560 \uc218 \uc788\uc5c8\ub358 \uc7a5\uc810\ub4e4\uc774 \ub9ce\uc558\uc2b5\ub2c8\ub2e4. \ub808\ud3ec\uc9c0\ud1a0\ub9ac \uc124\uce58 \uc2dc \uc885\uc18d\uc131 \ud06c\uae30 \uac10\uc18c, \ub85c\uceec\uacfc \ub9ac\ubaa8\ud2b8 \ud658\uacbd\uc5d0\uc11c\uc758 \ube4c\ub4dc \uacb0\uacfc\ubb3c\uc758 \ub3d9\uc77c\uc131 \ubcf4\uc7a5, \uc5c4\uaca9\ud55c \uc885\uc18d\uc131 \ud2b8\ub9ac \uad00\ub9ac\ub85c \uc778\ud55c \uc548\uc815\uc131 \ud5a5\uc0c1 \ub4f1\uc758 \uc774\uc810\uc774 \uae30\uc874 \ubc84\uc804 \ub300\ube44 \ubc29\ubc95\ub860\uc801\uc778 \uac1c\uc120\uc744 \uc774\ub8f0 \uc218 \uc788\uc5c8\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:paragraph -->\n<p>\uac1c\ubc1c \ub2e8\uacc4\uc5d0\uc11c git branch \ubcc0\uacbd \uc2dc \ubc18\ubcf5\uc801\uc73c\ub85c install \uc2a4\ud06c\ub9bd\ud2b8\ub97c \uc2e4\ud589\ud558\uc5ec node_modules\ub97c \uc5c5\ub370\uc774\ud2b8 \ud574\uc918\uc57c \ud558\uac70\ub098, \uc885\uc885 \uc798\ubabb \uc124\uce58\ub41c \uc885\uc18d\uc131 \ub54c\ubb38\uc5d0 \ud55c\ucc38 \ub514\ubc84\uae45\uc744 \ud558\ub2e4 \uacb0\uad6d node_modules\ub97c \uc9c0\uc6b0\uace0 \uc7ac\uc124\uce58 \ud574\uc57c \ud558\ub294 \ubc88\uac70\ub85c\uc6c0\uc774 \uc904\uc5b4\ub4e0 \uac83\ub3c4 \uccb4\uac10\ub418\ub294 \ubd80\ubd84\uc774\uc5c8\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:paragraph -->\n<p>\ucd94\uac00\ub85c Dockerfile\uc5d0 \ub4e4\uc5b4\uc788\ub358 \uc138\ud305\uc5d0\uc11c \ubd88\ud544\uc694\ud55c \ubd80\ubd84\uc744 \uac77\uc5b4\ub0b4\uace0, <a href=\"https:\/\/docs.aws.amazon.com\/ko_kr\/codebuild\/latest\/userguide\/build-caching.html#caching-local\">AWS Codebuild\uc5d0\uc11c Docker Layer\uac00 \ub85c\uceec \uce90\uc2f1<\/a>\ub420 \uc218 \uc788\ub294 \ubc29\ubc95\uc744 \ucc3e\uc544 \uc801\uc6a9\ud558\uc600\uc2b5\ub2c8\ub2e4. yarn berry\uc640\ub294 \uc9c1\uc811\uc801\uc73c\ub85c \uad00\ub828\uc740 \uc5c6\uc9c0\ub9cc \ubc30\ud3ec \uc131\ub2a5\uc744 \uac1c\uc120\ud558\ub294 \ub3c4\uc911\uc5d0 \uc9c4\ud589\ud588\ub358 \ubcc0\uacbd\uc774\ub77c \ud568\uaed8 \uc5b8\uae09\ud574\ub450\uaca0\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:paragraph -->\n<p>\ub3c4\ucee4 \ud30c\uc77c \ub0b4 \uac01 \ub808\uc774\uc5b4\ub294 \ubcc0\uacbd\uc0ac\ud56d\uc774 \uc0dd\uae30\uc9c0 \uc54a\ub294 \uc774\uc0c1 \uc0c8\ub86d\uac8c \uc0dd\uc131\ub420 \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4. \ubcc0\uacbd\uc774 \uc0ac\ud56d \uc5c6\uc744 \uc2dc CodeBuild\uc758 \ube4c\ub4dc \ud638\uc2a4\ud2b8\uac00 \uc790\uc5f0\uc2a4\ub7fd\uac8c Docker Layer \uce90\uc2f1\uc744 \uc774\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \uc138\ud305\uc744 \ubcc0\uacbd\ud574\uc8fc\uc5c8\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:paragraph -->\n<p>\ud604\uc7ac AWS CodePipeline\uc744 \uc0ac\uc6a9\ud558\uc5ec \ubc30\ud3ec\ud558\uace0 \uc788\uc73c\uba70, \ube4c\ub4dc\ub294 AWS Codebuild\ub97c \uc0ac\uc6a9\ud558\uace0 \uc788\uc73c\ubbc0\ub85c, \ud574\ub2f9 \ub2e8\uacc4\uc5d0\uc11c \uc0dd\uc131\ub41c \ube4c\ub4dc \uacb0\uacfc\ubb3c\uc744 \uce90\uc2f1\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \uc544\ub798\uc640 \uac19\uc774 \uccb4\ud06c\ud574\uc90d\ub2c8\ub2e4. \ub2e4\ub9cc \uc774 \ub85c\uceec \uce90\uc2dc\uc758 \uc815\ud655\ud55c \uc720\ud6a8 \uc2dc\uac04(\uc57d 5 ~ 15\ubd84)\uc774\ub098 \ud788\ud2b8 \uc870\uac74\uc5d0 \ub300\ud574\uc11c\ub294 \uc870\uae08 \ub354 \ud655\uc778\uc774 \ud544\uc694\ud569\ub2c8\ub2e4. (<a href=\"https:\/\/stackoverflow.com\/questions\/58793704\/aws-codebuild-local-cache-failing-to-actually-cache\">\ub9c1\ud06c<\/a>)<\/p>\n<!-- \/wp:paragraph --><!-- wp:image {\"align\":\"center\",\"sizeSlug\":\"large\"} -->\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter size-large\"><img src=\"https:\/\/user-images.githubusercontent.com\/35240142\/215242409-a7761e7b-6c11-44e1-9371-c22e10085819.png\" alt=\"\" \/>\n<figcaption>AWS Codebuild - \ud3b8\uc9d1 - \uc544\ud2f0\ud329\ud2b8 - \uce90\uc2f1 \uba54\ub274 \ud558\ub2e8<\/figcaption>\n<\/figure>\n<\/div>\n<!-- \/wp:image --><!-- wp:paragraph -->\n<p>\uc774 \uacfc\uc815\uc5d0\uc11c \uae30\uc874\uc5d0 \uc798\ubabb \uc138\ud305\ub418\uc5b4 \uc788\ub358 Codebuild\uc758 Buildspec\uc744 \ubc14\ub85c \uc7a1\uace0 \ub85c\uceec \uce90\uc2f1\uc774 \uc791\ub3d9\ud558\ub3c4\ub85d \ud568\uc73c\ub85c\uc11c \ucd94\uac00\uc801\uc73c\ub85c \ube4c\ub4dc \uc2dc\uac04\uc744 \ub2e8\ucd95\ud558\uc600\uc2b5\ub2c8\ub2e4. Next.js \uae30\ubc18\uc758 \uc5b4\ub4dc\ubbfc \ud504\ub85c\uc81d\ud2b8 \uae30\uc900 \ucd5c\ub300 2\ubd84 \uac00\ub7c9 \ucd94\uac00 \ub2e8\ucd95\ud55c \uac83\uc73c\ub85c \ucd94\uc815\ub429\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:image {\"align\":\"center\"} -->\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter\"><img src=\"https:\/\/user-images.githubusercontent.com\/35240142\/220504970-ba4c5fb9-d6ad-4510-85ec-6785ac8b7132.png\" alt=\"image\" \/>\n<figcaption>\uce90\uc2dc \ud788\ud2b8 \uc2dc \ube4c\ub4dc \uc18c\uc694 \uc2dc\uac04 2\ubd84 37\ucd08 (\uc9c1\uc804 \ube4c\ub4dc 4\ubd84 28\ucd08 - yarn berry \uc801\uc6a9 \ubd84 \ud3ec\ud568)<\/figcaption>\n<\/figure>\n<\/div>\n<!-- \/wp:image --><!-- wp:image {\"align\":\"center\"} -->\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter\"><img src=\"https:\/\/user-images.githubusercontent.com\/35240142\/220504796-2f977328-8a9b-4eaa-884c-b1ae19347246.png\" alt=\"image\" \/>\n<figcaption>\ub3c4\ucee4 \ub808\uc774\uc5b4 \ub808\ubca8\uc5d0\uc11c \uce90\uc2f1\uc774 \uc77c\uc5b4\ub0ac\uc744 \ub54c\uc758 \ube4c\ub4dc \ub85c\uadf8<\/figcaption>\n<\/figure>\n<\/div>\n<!-- \/wp:image --><!-- wp:paragraph -->\n<p>\ud55c \ud504\ub85c\uc81d\ud2b8\ub294 \uc5b8\uae09\ub4dc\ub9b0 \ub450 \uac00\uc9c0 \uc870\uce58\ub97c \ud1b5\ud558\uc5ec \ud504\ub85c\uc81d\ud2b8\uc5d0 \ub530\ub77c \ube4c\ub4dc \uc2dc\uac04\uc774 5\ubd84 30\ucd08 \u2192 1\ubd84 50\ucd08\ub85c \ub4dc\ub77c\ub9c8\ud2f1\ud558\uac8c \uac10\uc18c\ud558\uae30\ub3c4 \ud588\ub294\ub370, \ud504\ub85c\uc81d\ud2b8\ubcc4 \uc778\uc2a4\ud134\uc2a4 \uc138\ud305\uacfc \ube4c\ub4dc \uc2dc\uc810, \uce90\uc2dc \uc5ec\ubd80\uc5d0 \ub530\ub77c \uac1c\uc120\ub418\ub294 \ud3ed\uc740 \uc0c1\uc774\ud560 \uac83\uc73c\ub85c \uc0dd\uac01\ub418\uc5b4 \uc808\ub300\uc801\uc778 \uc218\uce58\ub85c\ub294 \ucc38\uace0\ud558\uc9c0 \ub9d0\uc544\uc8fc\uc2dc\uace0 \ub300\ub7b5\uc801\uc778 \uc218\uce58\ub85c\ub9cc \ubd10\uc8fc\uc2dc\uba74 \uc88b\uc744 \uac83 \uac19\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:heading -->\n<h2>6. \ub9c8\uce58\uba70<\/h2>\n<!-- \/wp:heading --><!-- wp:paragraph -->\n<p>\ud55c \uba85\uc758 \uc544\uc774\ub97c \uae30\ub974\uae30 \uc704\ud574 \uc628 \ub9c8\uc744\uc774 \ud544\uc694\ud558\ub2e4\ub294 \ub9d0 \ucc98\ub7fc, \ud558\ub098\uc758 \uc6f9 \uc11c\ube44\uc2a4\uac00 \ub9cc\ub4e4\uc5b4\uc9c0\uae30 \uc704\ud574\uc11c\ub294 \uc815\ub9d0 \ub2e4\uc591\ud55c \uae30\uc220\uc774 \ud544\uc694\ud569\ub2c8\ub2e4. \uc5b4\ub290 \uac1c\ubc1c\uc774\ub098 \uadf8\ub807\uaca0\uc9c0\ub9cc \ud2b9\ud788 \ucd5c\uadfc \uc790\ubc14\uc2a4\ud06c\ub9bd\ud2b8 \uc0dd\ud0dc\uacc4\ub294 \ud2b9\ud788 \uc774\ub7f0 <code>\ud234\uccb4\uc778(Toolchain)<\/code> \uc758 \uc870\ud569\uc744 \uc5ec\ub7ec \ubc29\ud5a5\uc73c\ub85c \uc2e4\ud5d8\ud574\ubcf4\ub294 \ud65c\ubc1c\ud55c \ubd84\uc704\uae30\uac00 \ub290\uaef4\uc9d1\ub2c8\ub2e4. <code>npm<\/code> \uacfc \ud568\uaed8 \uc624\ub7ab\ub3d9\uc548 \uc0ac\ub791 \ubc1b\uc544\uc628 \ud328\ud0a4\uc9c0 \ub9e4\ub2c8\uc800 <code>yarn<\/code> \ub610\ud55c \uac1c\ubc1c\uc5d0 \ud544\uc694\ud55c \ub77c\uc774\ube0c\ub7ec\ub9ac\ub4e4\uc758 \uc124\uce58\uc640 \uc885\uc18d\uc131\uc744 \ub2f4\ub2f9\ud558\ub294 \uc810\uc5d0\uc11c \ud234\uccb4\uc778\uc758 \uc911\uc694\ud55c \uc77c\ubd80\ub97c \ub2f4\ub2f9\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:paragraph -->\n<p>\uadf8 \uc911\uc5d0\uc11c\ub3c4 yarn berry\uc640 pnp\ub294 \uacfc\uac10\ud558\uba74\uc11c\ub3c4 \uba4b\uc9c4 \uc9c4\uc804\uc774\ub77c\uace0 \uc0dd\uac01\ud569\ub2c8\ub2e4. \ubb3c\ub860 \uc704\uc5d0 \ub9d0\uc500\ub4dc\ub9b0 \uc774\uc288\ub4e4\ucc98\ub7fc \uc544\uc9c1 \uc0ac\uc6a9\uc790\ub4e4\uc774 \uc9c1\uc811 \ubd80\ub52a\ud600\uc57c \ud558\ub294 \ubb38\uc81c\ub4e4\uc774 \uc0b0\uc7ac\ud574\uc788\uc9c0\ub9cc, \uae30\uc220\uc774 \ucc98\uc74c \uacf5\uac1c\ub418\uc5c8\uc744 \ub54c\uc640 \ube44\uad50\ud558\uba74 \ud604\uc7ac \uc774 \ub9ac\uc2a4\ud06c\ub4e4\uc740 \uac10\ub0b4\ud560 \uc218 \uc788\ub294 \uc218\uc900\uc774\ub77c\uace0 \uc0dd\uac01\ud569\ub2c8\ub2e4. <code>yarn unplug<\/code> , <code>yarn why<\/code> , <code>yarn patch<\/code> \ub4f1\uc758 \uae30\ub2a5\uc744 \ud65c\uc6a9\ud558\uc5ec \ub514\ubc84\uae45\ud558\uace0, \uae34\uae09\ud55c \uc0c1\ud669\uc5d0\uc11c\ub294 <code>nodeLinker: node-modules<\/code> \ub85c \ub418\ub3cc\ub9ac\uac70\ub098 <code>pnpMode: loose<\/code> \ub4f1\uc758 \uc808\ucda9\uc810\uc774 \uc874\uc7ac\ud558\ubbc0\ub85c \uc790\uc2e0 \uc788\uac8c \ub3c4\uc785\ud574\ubcfc \uc218 \uc788\uc744 \uac83 \uac19\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:paragraph -->\n<p>\uc0ac\uc2e4 <code>yarn berry<\/code> \ub97c \ub3c4\uc785\ud558\ub294 \uacfc\uc815\uc5d0\uc11c \uac00\uc7a5 \uc88b\uc558\ub358 \uc810\uc740 \uc131\ub2a5\uc0c1\uc758 \uc774\uc810\ubcf4\ub2e4\ub3c4, yarn\uc774\ub098 \uc5ec\ub7ec \ud328\ud0a4\uc9c0 \ub0b4\ubd80\uc758 \ucf54\ub4dc\ub97c \uc0b4\ud3b4\ubcf4\uba70 \ub3d9\uc791 \uc6d0\ub9ac\ub97c \uac00\ub2a0\ud558\uac70\ub098, Github\uc5d0 \uc62c\ub77c\uc628 issue\ub4e4\uc744 \uc2f9\uc2f9 \uae01\uc5b4\uac00\uba70 \uc77d\uace0, peerDependencies \ub4f1 \uc885\uc18d\uc131\ub4e4 \uac04\uc758 \uad00\uacc4\ub97c \uc0dd\uac01\ud558\uba70 \ud328\ud0a4\uc9c0\ub97c \uc774\ub9ac\uc800\ub9ac \uc124\uce58\ud574\ubcf4\ub358 \uc2dc\uac04\ub4e4\uc774\uc5c8\uc2b5\ub2c8\ub2e4. \uac00\ubcbc\uc6b4 \ub9c8\uc74c\uc73c\ub85c \uc2dc\uc791\ud588\uc9c0\ub9cc \uc5ed\uc2dc \uc5b4\ub5a4 \uae30\uc220\uc774\ub4e0 \uc9c1\uc811 \ub9cc\uc838\ubcf4\uace0 \uad74\ub824\ubcfc \ub54c \uc774\ud574\ub3c4\uac00 \ub354 \ub192\uc544\uc9c4\ub2e4\ub294 \uc0ac\uc2e4\uc744 \uc0c8\uc0bc\uc2a4\ub808 \uacf1\uc539\uc5b4\ubcf4\uac8c \ub410\ub358 \uac83 \uac19\ub124\uc694.<\/p>\n<!-- \/wp:paragraph --><!-- wp:paragraph -->\n<p>\uc11c\ub450\uc5d0\uc11c \ub9d0\uc500\ub4dc\ub838\ub4ef \uacb0\uad6d \uc800\ud76c \ud300\uc5d0\uc11c\ub294 \ube44\ub85d <code>Turborepo<\/code> \uc640\uc758 \ud638\ud658 \uc774\uc288\ub85c <code>pnpm<\/code> \uc744 \uc120\ud0dd\ud558\uac8c \ub418\uc5c8\uc9c0\ub9cc yarn berry\ub294 \ucda9\ubd84\ud788 \ub9e4\ub825\uc801\uc778 \uae30\uc220\uc778\ub9cc\ud07c \uac80\ud1a0\ud574\ubcf4\uc2dc\uace0 \ub3c4\uc785\uc744 \uc801\uadf9 \uace0\ub824\ud574\ubcf4\uc168\uc73c\uba74 \uc88b\uaca0\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:paragraph -->\n<p>\uc774\uc81c \uc800\ud76c \ud300\uc758 \ucc44\uc6a9 \ud64d\ubcf4\ub85c \uae00\uc744 \ub9c8\ubb34\ub9ac \uc9d3\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4. <strong>\ub9ac\uba64\ubc84 \uc6f9 \ud30c\ud2b8\uc5d0\uc11c\ub294 \uc774\ub7ec\ud55c \uae30\uc220\uc801\uc778 \uace0\ubbfc\uc744 \ud568\uaed8 \ub098\ub204\uba70 \uc131\uc7a5\ud558\uc2e4 \ub3d9\ub8cc\ubd84\uc744 \ubaa8\uc2dc\uace0 \uc788\uc2b5\ub2c8\ub2e4.<\/strong> \uc11c\ub958 \uac80\ud1a0, \uae30\uc220 \uba74\uc811, \uceec\ucc98\ud54f \uba74\uc811 \uc808\ucc28 \uc138 \ub2e8\uacc4\ub85c \uac04\uc18c\ud558\uac8c \ud504\ub85c\uc138\uc2a4\ub97c \uc9c4\ud589\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \ubcf4\ub2e4 \uc0c1\uc138\ud55c \ub0b4\uc6a9\uc740 <a href=\"https:\/\/hello.remember.co.kr\/recruit\/web\">\ucc44\uc6a9 \uacf5\uace0<\/a>\ub97c \ud655\uc778 \ubd80\ud0c1\ub4dc\ub9ac\uba70, \ub9ce\uc740 \uad00\uc2ec\uacfc \uc9c0\uc6d0 \ubd80\ud0c1\ub4dc\ub9ac\uaca0\uc2b5\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:paragraph -->\n<p>\uc9c0\uae08\uae4c\uc9c0 \uae34 \uae00 \uc77d\uc5b4\uc8fc\uc154\uc11c \uac10\uc0ac\ud569\ub2c8\ub2e4.<\/p>\n<!-- \/wp:paragraph --><!-- wp:image {\"align\":\"center\",\"id\":3548,\"sizeSlug\":\"large\",\"linkDestination\":\"media\"} -->\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter size-large\"><a href=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2023\/02\/image.png\"><img class=\"wp-image-3548\" src=\"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2023\/02\/image-1024x275.png\" alt=\"\" \/><\/a>\n<figcaption>\ub3c4\uc785 \ucd08\uae30\uc5d0\ub294 \ubaa8\ub4e0 \uc5d0\ub7ec\ub85c\ubd80\ud130 Yarn Berry\uac00 \uc758\uc2ec\uc758 \ub208\ucd08\ub9ac\ub97c \ubc1b\uc744 \uc218 \uc788\uc73c\ub2c8 \uc8fc\uc758 \uc694\ub9dd<\/figcaption>\n<\/figure>\n<\/div>\n<!-- \/wp:image --><!-- wp:heading -->\n<h2>6. \ucc38\uace0 \uc790\ub8cc<\/h2>\n<!-- \/wp:heading --><!-- wp:list -->\n<ul>\n<li><a href=\"https:\/\/yarnpkg.com\/\" target=\"_blank\" rel=\"noreferrer noopener\">https:\/\/yarnpkg.com\/<\/a><\/li>\n<li><a href=\"https:\/\/toss.tech\/article\/node-modules-and-yarn-berry\" target=\"_blank\" rel=\"noreferrer noopener\">node_modules\ub85c\ubd80\ud130 \uc6b0\ub9ac\ub97c \uad6c\uc6d0\ud574 \uc904 Yarn Berry<\/a><\/li>\n<li><a href=\"https:\/\/medium.com\/wantedjobs\/yarn-berry-%EC%A0%81%EC%9A%A9%EA%B8%B0-1-e4347be5987\" target=\"_blank\" rel=\"noreferrer noopener\">yarn berry \uc801\uc6a9\uae30(1)<\/a><\/li>\n<li><a href=\"https:\/\/medium.com\/teamo2\/yarn-berry-%EA%B5%B3%EC%9D%B4-%EB%8F%84%EC%9E%85%ED%95%B4%EC%95%BC-%ED%95%A0%EA%B9%8C-d6221b9beca6\" target=\"_blank\" rel=\"noreferrer noopener\">Yarn Berry, \uad73\uc774 \ub3c4\uc785\ud574\uc57c \ud560\uae4c?<\/a><\/li>\n<li><a href=\"https:\/\/yceffort.kr\/2022\/05\/npm-vs-yarn-vs-pnpm\" target=\"_blank\" rel=\"noreferrer noopener\">npm, yarn, pnpm \ube44\uad50\ud574\ubcf4\uae30<\/a><\/li>\n<\/ul>\n<!-- \/wp:list -->"},"elements":[],"widgetType":"text-editor"}],"isInner":false}],"isInner":false}]]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_page_assets]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_post_was_ever_published]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[3562]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_opengraph-image]]></wp:meta_key>
		<wp:meta_value><![CDATA[https://blog.dramancompany.com/wp-content/uploads/2023/02/4db22600-9dab-11e9-8018-e818f6820760-1024x512.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_opengraph-image-id]]></wp:meta_key>
		<wp:meta_value><![CDATA[3560]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>12744</wp:comment_id>
			<wp:comment_author><![CDATA[결명자]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[yongsk0066@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.15.99]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-02-22 14:58:58]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-02-22 05:58:58]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[yarn berry를 프로덕션에 적용한 사례 찾기 정말 힘들었는데 유익한 경험공유  감사합니다!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1677045538.286085;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1677071521.114472;s:5:"event";s:15:"status-approved";s:4:"user";s:11:"jongtaek.oh";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>12745</wp:comment_id>
			<wp:comment_author><![CDATA[텔미텔미]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[starrybleu@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.28.112]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-02-22 17:25:17]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-02-22 08:25:17]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[흥미진진하게 잘 읽었습니다! 좋은 글 작성해주셔서 감사합니다.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1677054317.261508;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1677071521.063661;s:5:"event";s:15:"status-approved";s:4:"user";s:11:"jongtaek.oh";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>12752</wp:comment_id>
			<wp:comment_author><![CDATA[feature/sorry]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[qkr0454@icloud.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.8.142]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-03-07 17:04:38]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-03-07 08:04:38]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[역시 갓종택입니다😉
yarn berry 도입에 관해 고민이였는데 좋은 글 감사합니다.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1678176278.287372;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1678295783.279631;s:5:"event";s:15:"status-approved";s:4:"user";s:11:"jongtaek.oh";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>12774</wp:comment_id>
			<wp:comment_author><![CDATA[juunzzi]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[jjh01027717502@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.9.160]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-04-12 01:16:56]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-04-11 16:16:56]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[ㅋㅋㅋ 저도 작은 프로젝트를 진행할 때 yarn berry 환경에서 진행했었는데, 개발 초기에 모든 이슈의 범인을 yarn berry로 지목했었던.. 적이 있네요... (실은 무죄였으나....) 재미있게 잘 읽고 갑니닷]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1681229816.377641;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1683618547.400784;s:5:"event";s:15:"status-approved";s:4:"user";s:11:"jongtaek.oh";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>12840</wp:comment_id>
			<wp:comment_author><![CDATA[adsdasasddasadssadsdas]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[dadsasd@asdads.sad]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.26.125]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-08-04 10:59:14]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-08-04 01:59:14]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[므찌다]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1691114354.455228;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1692941658.827624;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"hb.lee";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>14962</wp:comment_id>
			<wp:comment_author><![CDATA[jaj]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[ajs@nas.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.16.127]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-06-18 15:49:14]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-06-18 06:49:14]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[우왕 감사합니다]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1718693354.952493;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[AI 명함촬영인식 '리오(RIO)' 적용기 2부 - ML Model Converter와 안드로이드 앱 적용기]]></title>
		<link>https://blog.dramancompany.com/2022/11/ai-%eb%aa%85%ed%95%a8%ec%b4%ac%ec%98%81%ec%9d%b8%ec%8b%9d-%eb%a6%ac%ec%98%a4-%ec%a0%81%ec%9a%a9%ea%b8%b0-2%eb%b6%80-ml-model-converter%ec%99%80-%ec%95%88%eb%93%9c%eb%a1%9c%ec%9d%b4%eb%93%9c/</link>
		<pubDate>Wed, 23 Nov 2022 01:16:40 +0000</pubDate>
		<dc:creator><![CDATA[minseokkang]]></dc:creator>
		<guid isPermaLink="false">https://blog.dramancompany.com/?p=3447</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">안녕하세요. 빅데이터센터 AI Lab 강민석입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">이번 <strong>AI 명함 촬영 인식 ‘리오(RIO)’ </strong>적용기 2부에서는 리멤버 앱에 AI 명함 촬영 인식 ‘리오(RIO)’의 모델을 Client-Side Computing로 적용하기 위한 다양한 시행착오들을 공유하고자 합니다. 학습된 PyTorch Model을 ONNX와 Tensorflow 모델을 거쳐 TF Lite Model로의 변환과정과 모델 추론 안드로이드 샘플 환경에서의 테스트까지 내용을 소개 하고자 합니다. 이 글에서 AI 명함 촬영 인식 ‘리오(RIO)’ 적용을 위해 최종적으로 진행된 <strong>ML 모델의 변환 방법</strong>과 <strong>모델 추론을 위한 안드로이드 테스트 환경</strong>에 대해 설명 드리고자 합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">이 AI 명함 촬영 인식 ‘리오’ 적용기 포스팅은 1부와 2부로 나누어 포스팅 되어 있습니다. 이번 AI 명함 촬영 인식 ‘리오’ 적용기 2부에서는 ML Model Converter와 안드로이드 앱 적용기에 대해 작성 되어있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:list {"fontSize":"medium"} -->
<ul class="has-medium-font-size"><li><strong>AI 명함 촬영 인식 ‘리오(RIO)’ 적용기 1부 - 명함 촬영 인식 위한 Instance Segmentation &amp; Computer Vision</strong></li></ul>
<!-- /wp:list -->

<!-- wp:list {"fontSize":"medium"} -->
<ul class="has-medium-font-size"><li><strong>AI 명함 촬영 인식 ‘리오(RIO)’ 적용기 2부 - ML Model Converter와 안드로이드 앱 적용기</strong></li></ul>
<!-- /wp:list -->

<!-- wp:spacer {"height":"41px"} -->
<div style="height:41px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading -->
<h2><strong>Client-Side Computing (또는 Edge Computing)</strong></h2>
<!-- /wp:heading -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size"><strong>Client-Side Computing</strong>은 데이터를 클라우드 서버로 보내는 대신 로컬 기기에서 처리하는 것입니다. 기계 학습과 관련하여 Client-Side Computing은 장치에서 추론이 직접 수행하는 것을 의미합니다. AI 명함 촬영 인식 ‘리오(RIO)’가 Client-Side Computing 사용 해야 하는 데에는 4가지 주된 이유가 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true,"fontSize":"medium"} -->
<ol class="has-medium-font-size"><li><strong>실시간 추론</strong> : 리멤버 앱이 동작하는 모바일 장치의 ML 모델 추론 계산은 네트워크를 통해 API 결과를 기다리는 것보다 빠릅니다. 실시간으로 사용자에게 명함의 위치를 보여주고 명함의 영역을 잘라내 제공합니다.</li><li><strong>오프라인 기능</strong> : Client-Side Computing은 인터넷 연결 없이도 명함이 촬영되는 순간부터 명함의 위치와 명함의 영역 잘라서 명함의 이미지만을 제공하게 됩니다.</li><li><strong>데이터 프라이버시</strong> : 인터넷을 통해 전송되거나 클라우드 데이터베이스에 추가로 저장되는 위험을 낮춰 줍니다.</li><li><strong>비용 절감</strong> : ML 서버가 필요하지 않으므로 서버 비용이 절감됩니다. 이 외에도 명함 이미지가 서버로 전송되지 않기 때문에 데이터 전송 네트워크 비용이 절감됩니다.</li></ol>
<!-- /wp:list -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">Client-Side Computing의 경우 큰 장점들이 있지만 다양한 제약 사항들이 생기게 됩니다. 모바일 기기의 처리능력의 제한, 모델 크기(용량)에 대한 제한, 모바일 적용을 위한 ML 프레임워크의 의존성에 대한 제약 사항들이 생기게 되고 이를 해결 하려는 다양한 리서치를 진행 하게 되었습니다. 이 과정에서 생긴 시행착오와 다양한 고민을 공유하여 관련 연구자 또는 개발자들의 시간을 절약하게 되었으면 좋겠습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":"73px"} -->
<div style="height:73px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading {"level":1} -->
<h1><strong>ML Model Converter</strong></h1>
<!-- /wp:heading -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">학습된 ML 모델을 모바일과 같은 사용자의 장치에서 적용하기 위해서는 지연 시간, 개인 정보 보호, 다양한 기기와의 연결성, 모델의 크기, 전력 소비 등을 고려해야 한다는 문제가 존재합니다. 저희는 Pytorch Model을 TF Lite Model로 최종 모델로 변환하기로 하였는데, 그 이유는 산업과 관련된 제한 사항과 요구 사항에 대해 오랜 기간 긴밀히 발전해오고 있는 Tensorflow Lite의 안정성과 Arm CPU 연산에 최적화된 더 많은 사례가 있으므로 타 프레임워크 환경들과 비교하여 더 나은 성능을 쉽고 빠르게 적용 가능 하다고 판단했습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">아래의 글에서 Pytorch Model을 TF Lite Model로 변환하는 과정을 설명하고자 합니다. 변환 과정은 <strong>PyTorch Model → ONNX Graph(+TorchScript)→ Tensorflow Model → TF Lite Model</strong> 순으로 진행하였습니다. 관련 기술을 소개하고 변환하는 방법에 대해 설명해 드리도록 하겠습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":"41px"} -->
<div style="height:41px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading -->
<h2><strong>PyTorch Model을 ONNX Graph(+TorchScript)로의 변환</strong></h2>
<!-- /wp:heading -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">최종 모델인 Tensorflow Lite 모델로 변환하기 위해서는 중간 과정에 Tensorflow 모델로 변환이 필요한데, Pytorch Model을 직접 Tensorflow 모델로 변환하는 기능이 제공되어 있지 않습니다. 그래서 먼저 상호 운용가능한 ONNX 그래프로 변환을 하게 됩니다. PyTorch에서 제공되는 ONNX 그래프로 변환하는 <strong><code>torch.onnx.export()</code> </strong>함수를 통해 PyTorch 모델을 ONNX*로 변환하였습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:pullquote -->
<figure class="wp-block-pullquote"><blockquote><p><strong>ONNX</strong>는 Open Neural Network Exchange의 줄인 말로서 이름과 같이 다른 ML 프레임워크 환경(Tensorflow, PyTorch 등)에서 만들어진 모델들을 서로 호환될 수 있도록 만들어진 공유 플랫폼입니다.</p></blockquote></figure>
<!-- /wp:pullquote -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-3436" style="width: 1300px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/11/그림-1.-TorchScript의-Script-Mode-변환.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center">그림 1. TorchScript의 Script Mode 변환[1]</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size"><code><strong>torch.onnx.export()</strong></code> 함수의 실제 동작은 내부적으로 TorchScript를 통해 코드를 Eager Mode에서 Script Mode로 변환하여 중간 표현(Intermediate Representation, IR)* 그래프를 ONNX 그래프로 변환하기 전에 생성하게 됩니다. 그 이후에 Pytorch의 Script Mode의 중간 표현(IR)*을 ONNX 그래프로 변환하여 반환하게 됩니다.</p>
<!-- /wp:paragraph -->

<!-- wp:pullquote {"textAlign":"center"} -->
<figure class="wp-block-pullquote has-text-align-center"><blockquote><p><strong>중간표현(Intermediate Representation, IR)</strong>은 소스 코드를 나타내기 위해 컴파일러 또는 가상 머신에서 내부적으로 사용하는 데이터 구조 또는 코드입니다. IR은 최적화 및 모델 변환과 같은 추가적인 처리 과정에 도움이 되도록 설계되어 있습니다.</p></blockquote></figure>
<!-- /wp:pullquote -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-3437" style="width: 700px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/11/그림-2.-ONNX의-상호-운용성-2.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center">그림 2. ONNX의 상호 운용성 [2]</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">ONNX 그래프로 모델 표현 하게 되면 다른 프레임 워크로 모델 표현(Framework Interoperability)이 가능한 것 뿐만 아니라, 이 과정에서 ONNX에서 제공되는 것 이외에도 최적화된 구조의 그래프 표현이 유지된 상태(Shared Optimization)로 변환될 수 있다는 이점이 있습니다. 이 과정에서 산업영역의 여러 하드웨어와 ML 컴파일러에 대한 다양한 선택지를 제공 받았던 것 같습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":"41px"} -->
<div style="height:41px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading -->
<h2><strong>ONNX Graph를 Tensorflow Lite model로의 변환</strong></h2>
<!-- /wp:heading -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">ONNX Graph를 Tensorflow Lite model(.tflite 파일 확장자로 식별되는 최적화된 FlatBuffer 형식)로 변환하기 위해서는 중간 과정으로 Tensorflow Model로의 변환이 필요합니다. 이를 위해서 ONNX를 위한 Tensorflow 백엔드 onnx-tensorflow[3]에서 제공되는 <code><strong>onnx_tf.backend.prepare(onnx_model)</strong></code> 함수를 사용하여 ONNX Graph를 Tensorflow 모델로 변환해줍니다. 그 이후에 TensorFlow Lite*[4]에서 제공되는 <code><strong>tf.lite.TFLiteConverter.from_saved_model(tf_model_path)</strong></code> 함수를 사용하여 Tensorflow 모델을 Tensorflow Lite model로 변환해주는 작업을 진행합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:pullquote {"textAlign":"center"} -->
<figure class="wp-block-pullquote has-text-align-center"><blockquote><p><strong>TensorFlow Lite</strong>는 Android&nbsp;및&nbsp;iOS, 내장형 Linux&nbsp;및&nbsp;마이크로 컨트롤러&nbsp;등의 기기에서 모델을 실행할 수 있는 기능을 제공하기 위해 On-device에서 ML을 위한 해석기(Interpreter)와 라이브러리를 지원하는 프레임워크 입니다.</p></blockquote></figure>
<!-- /wp:pullquote -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-3438" style="width: 600px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/11/그림-3.-모델-변환을-위한-high-level-workflow4.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center">그림 3. 모델 변환을 위한 high-level workflow[4]</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">Pytorch Model을 TF Lite Model로의 변환 과정을 코드로 보면 20줄 내외의 간단한 API 호출 몇 줄로 표현되지만, 내부적인 동작에 대해 상세하게 설명해 보았습니다. Quantization을 추가로 실험하였지만 정확도가 다소 떨어지는 경향이 있었습니다. 아래의 표에서는 모델의 크기를 단순 비교한 테이블입니다. 각 모델에 대한 속도에 대한 비교는 각각 목표 하드웨어에 따라 최적화 방법이 달라 비교하지 않고 Quantization을 제외한 모든 비교 모델에서의 정확도 차이가 크게 나타나지 않아 표기하지 않았습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-3440" style="width: 1300px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/11/표1.-모델-표현-방법에-따른-모델-사이즈-비교.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center">표 1. 모델 표현 방법에 따른 모델 사이즈 비교</p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":"73px"} -->
<div style="height:73px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading {"level":1} -->
<h1><strong>모델 추론을 위한 안드로이드 테스트</strong> <strong>데모</strong> <strong>앱</strong></h1>
<!-- /wp:heading -->

<!-- wp:heading -->
<h2><strong>On-deivce 모델 추론을 위한 Tensorflow Lite Interpreter</strong></h2>
<!-- /wp:heading -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-3441" style="width: 800px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/11/그림-4.-On-device에서의-TensorFlow-Lite를-사용하여-모델-배포-5.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center">그림 4. On-device에서의 TensorFlow Lite를 사용하여 모델 배포 [5]</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">위의 내용에서 AI 명함 촬영 인식 ‘리오(RIO)’를 Client-Side Computing에서 사용하기 위해 ML Model Converter에 관해 소개했습니다. 실제 모바일 기기에서 ‘리오(RIO)’ 모델의 추론을 진행하기 위해 Tensorflow Lite Interpreter를 활용하게 되는데 위의 그림 4와 같이 모바일 기기의 하드웨어를 사용하게 됩니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-3442" style="width: 700px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/11/그림-5.-TensorFlow-Lite의-아키텍처-디자인-6.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center">그림 5. TensorFlow Lite의 아키텍처 디자인 [6]</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">앱 내에서는 그림 5와 같이 Tensorflow Lite는 앱 내에서 추론 모델을 로드하고 인터프리터를 호출하는 C++ API , 주변의 Convenience Wrapper 역할을 하는 Android 앱용 Java API가 제공됩니다. Java API를 통해 모델을 호출하고 Tensorflow Lite 인터프리터를 사용하여 Tensorflow Lite 모델의 앱내 추론을 진행하게 됩니다.</p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":"41px"} -->
<div style="height:41px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading -->
<h2><strong>JNI과 OpenCV를 활용한 Post Processing</strong></h2>
<!-- /wp:heading -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">Tensorflow Lite Interpreter 모델 추론을 통해 얻게 된 결과는 아웃풋 차원 변환, NMS(Non-maximum Suppression), 다양한 후처리가 필요한 이전의 저차원의 피처 값들로 반환하게 되어 있습니다. 이를 처리하기 위해서는 Python 인터프리터의 사용 없이 자바에서 구현이 되어야 하는데 자바보다는 속도 측면의 이점이 있고 OpenCV 활용이 수월한 C++로 구현한 다음 JNI 통해 호출하도록 구현하였습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">다양한 차원 변환 함수와 NMS(Non-maximum Suppression)는 직접 구현하여 호출하도록 설계 하였고 AI 명함 촬영 인식 ‘리오(RIO)’ 적용기 1부에서 설명된 Post Processing의 여러 함수는 OpenCV를 활용하여 구현하게 되었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":"41px"} -->
<div style="height:41px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading -->
<h2><strong>AI 명함 촬영 인식 ‘리오(RIO)’ 테스트용 데모 앱</strong></h2>
<!-- /wp:heading -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-3456" style="width: 700px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/11/스크린샷-2022-11-17-오후-3.44.04.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center">그림 6. AI 명함 촬영 인식 ‘리오(RIO)’ 테스트용 데모앱 그림</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-3391" style="width: 1300px;" src="https://blog.dramancompany.com/wp-content/uploads/2022/11/RIO-리멤버-앱-회전.gif" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center">그림 7. AI 명함 촬영 인식 ‘리오(RIO)’ 배포 버전</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">AI 명함 촬영 인식 ‘리오(RIO)’를 안드로이드 앱에서 실험하기 위해 그림 6과 같이 테스트용 앱을 제작해 다양한 실험을 진행했습니다. 주로 안드로이드 앱에서의 모델 로드, 모델 추론, 다양한 후처리에 대한 동작 테스트를 진행하고 보다 다양한 환경에서 촬영해가며 리멤버 앱 사용자가 촬영할만한 상황을 연출하여 테스트를 진행했습니다. 이 과정에서 안드로이드 테스트용 앱 제작부터 실험 작업까지 동료분들의 많은 도움을 받아 진행하게 되었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":"73px"} -->
<div style="height:73px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading {"level":1} -->
<h1><strong>AI 명함 촬영 인식 ‘리오(RIO)’ 적용기 1부~2부를 마치며</strong></h1>
<!-- /wp:heading -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">AI 명함 촬영 인식 ‘리오(RIO)’ 적용기 1부 - 명함 촬영 인식 위한 Instance Segmentation &amp; Computer Vision을 거쳐, 2부 - ML Model Converter와 안드로이드 앱 적용기까지 내용을 설명해 드렸습니다. AI 명함 촬영 인식 ‘리오(RIO)’ 를 개발하면서 다양한 기술을 실험하고 테스트해나가면서 많은 시행착오를 겪었던 것 같습니다. 일련의 과정을 해결해 나가는 데 있어서 리멤버의 동료가 지니고 있는 “고객 WOW를 위한 빠른 실행을 팀웍으로”의 리멤버 Way를 직접 느꼈던 프로젝트였습니다. 프로젝트 관련해 도움을 주신 많은 분들께 다시 한번 감사드립니다.</p>
<!-- /wp:paragraph -->

<!-- wp:spacer {"height":"73px"} -->
<div style="height:73px" aria-hidden="true" class="wp-block-spacer"></div>
<!-- /wp:spacer -->

<!-- wp:heading {"level":1} -->
<h1><strong>Reference</strong></h1>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>[1] TorchScript — PyTorch documentation</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>[2] ONNX: Preventing Framework Lock in | Fernando López | Medium</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>[3] onnx/onnx-tensorflow: Tensorflow Backend for ONNX | github.com</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>[4] 모바일 및 에지 장치용 ML&nbsp;|&nbsp;TensorFlow Lite</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>[4] Convert TensorFlow models | TensorFlow Lite</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>[5]Tensorflow Lite- machine learning at the edge!! | by Maheshwar Ligade | techwasti | Medium</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>[6] Google Developers Blog: Announcing TensorFlow Lite | googleblog.com</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[AI 명함 촬영 인식 ‘리오(RIO)’의 모델을 Client-Side Computing로 적용하기 위한 다양한 시행착오들을 공유하고자 합니다. 학습된 PyTorch Model을 ONNX와 Tensorflow 모델을 거쳐 TF Lite Model로의 변환과정과 모델 추론 안드로이드 샘플 환경에서의 테스트까지 내용을 소개 하고자 합니다.]]></excerpt:encoded>
		<wp:post_id>3447</wp:post_id>
		<wp:post_date><![CDATA[2022-11-23 10:16:40]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-11-23 01:16:40]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-11-25 15:04:55]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-11-25 06:04:55]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[ai-%eb%aa%85%ed%95%a8%ec%b4%ac%ec%98%81%ec%9d%b8%ec%8b%9d-%eb%a6%ac%ec%98%a4-%ec%a0%81%ec%9a%a9%ea%b8%b0-2%eb%b6%80-ml-model-converter%ec%99%80-%ec%95%88%eb%93%9c%eb%a1%9c%ec%9d%b4%eb%93%9c]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="ailab"><![CDATA[AI Lab.]]></category>
		<category domain="post_tag" nicename="ai-%eb%aa%85%ed%95%a8-%ec%b4%ac%ec%98%81-%ec%9d%b8%ec%8b%9d"><![CDATA[AI 명함 촬영 인식]]></category>
		<category domain="post_tag" nicename="client-side-computing"><![CDATA[Client-Side Computing]]></category>
		<category domain="post_tag" nicename="edge-computing"><![CDATA[Edge Computing]]></category>
		<category domain="post_tag" nicename="intermediate-representation"><![CDATA[Intermediate Representation]]></category>
		<category domain="post_tag" nicename="ml-model-converter"><![CDATA[ML Model Converter]]></category>
		<category domain="post_tag" nicename="rio"><![CDATA[rio]]></category>
		<category domain="post_tag" nicename="tensorflow-lite"><![CDATA[Tensorflow Lite]]></category>
		<category domain="post_tag" nicename="%eb%a6%ac%ec%98%a4"><![CDATA[리오]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle_flag]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:2:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729518014;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:3374;}i:1;a:1:{s:2:"id";i:3398;}i:2;a:1:{s:2:"id";i:2629;}}}s:32:"98b5c34344bde021ef021cd042daa696";a:2:{s:7:"expires";i:1729519006;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:3398;}i:1;a:1:{s:2:"id";i:2629;}i:2;a:1:{s:2:"id";i:2847;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[52]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_single_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:23:{s:8:"subtitle";s:0:"";s:6:"format";s:8:"standard";s:5:"video";s:0:"";s:7:"gallery";s:0:"";s:11:"source_name";s:0:"";s:10:"source_url";s:0:"";s:8:"via_name";s:0:"";s:7:"via_url";s:0:"";s:17:"override_template";s:1:"0";s:8:"override";a:1:{i:0;a:32:{s:8:"template";s:1:"1";s:18:"single_blog_custom";s:0:"";s:8:"parallax";s:1:"1";s:10:"fullscreen";s:1:"1";s:6:"layout";s:13:"right-sidebar";s:7:"sidebar";s:15:"default-sidebar";s:14:"second_sidebar";s:15:"default-sidebar";s:14:"sticky_sidebar";s:1:"1";s:14:"share_position";s:3:"top";s:17:"share_float_style";s:16:"share-monocrhome";s:18:"show_share_counter";s:1:"1";s:17:"show_view_counter";s:1:"1";s:13:"show_featured";s:1:"1";s:14:"show_post_meta";s:1:"1";s:16:"show_post_author";s:1:"1";s:22:"show_post_author_image";s:1:"1";s:14:"show_post_date";s:1:"1";s:16:"post_date_format";s:7:"default";s:23:"post_date_format_custom";s:5:"Y/m/d";s:18:"show_post_category";s:1:"1";s:22:"show_post_reading_time";s:1:"0";s:21:"post_reading_time_wpm";s:3:"300";s:16:"show_zoom_button";s:1:"0";s:20:"zoom_button_out_step";s:1:"2";s:19:"zoom_button_in_step";s:1:"3";s:13:"show_post_tag";s:1:"1";s:19:"show_prev_next_post";s:1:"1";s:15:"show_popup_post";s:1:"1";s:17:"number_popup_post";s:1:"1";s:15:"show_author_box";s:1:"0";s:17:"show_post_related";s:1:"0";s:24:"show_inline_post_related";s:1:"0";}}s:19:"override_image_size";s:1:"0";s:14:"image_override";a:1:{i:0;a:2:{s:26:"single_post_thumbnail_size";s:8:"crop-500";s:24:"single_post_gallery_size";s:8:"crop-500";}}s:13:"trending_post";s:1:"0";s:22:"trending_post_position";s:4:"meta";s:19:"trending_post_label";s:8:"Trending";s:14:"sponsored_post";s:1:"0";s:20:"sponsored_post_label";s:12:"Sponsored by";s:19:"sponsored_post_name";s:0:"";s:18:"sponsored_post_url";s:0:"";s:26:"sponsored_post_logo_enable";s:1:"0";s:19:"sponsored_post_logo";s:0:"";s:19:"sponsored_post_desc";s:0:"";s:10:"disable_ad";s:1:"0";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:2:"id";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_estimated-reading-time-minutes]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_wordproof_timestamp]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[114]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_template_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[wp-post]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_version]]></wp:meta_key>
		<wp:meta_value><![CDATA[3.8.0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[3391]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[AI 명함 촬영 인식 ‘리오(RIO)’의 모델을 Client-Side Computing로 적용하기 위한 다양한 시행착오들을 공유하고자 합니다. 학습된 PyTorch Model을 ONNX와 Tensorflow 모델을 거쳐 TF Lite Model로의 변환과정과 모델 추론 안드로이드 샘플 환경에서의 테스트까지 내용을 소개 하고자 합니다.]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
		<wp:meta_value><![CDATA[AI 명함 촬영 인식 ‘리오(RIO)’의 모델을 Client-Side Computing로 적용하기 위한 다양한 시행착오들을 공유하고자 합니다. 학습된 PyTorch Model을 ONNX와 Tensorflow 모델을 거쳐 TF Lite Model로의 ML Model Converter와 모델 추론 안드로이드 샘플 환경에서의 테스트까지 내용을 소개 하고자 합니다.]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[48]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>12700</wp:comment_id>
			<wp:comment_author><![CDATA[박현순]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[hpark@healthport.co.kr]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.13.150]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2022-12-14 11:31:23]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2022-12-14 02:31:23]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[안녕하세요.
혹시 리오 솔루션은 구매가 가능한지 궁금합니다]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1670985083.506161;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1675250159.637868;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"hb.lee";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[리멤버에서 UT(사용자 테스트)는 어떻게 진행하나요?]]></title>
		<link>https://blog.dramancompany.com/2023/09/how-to-ux-research/</link>
		<pubDate>Thu, 14 Sep 2023 09:20:12 +0000</pubDate>
		<dc:creator><![CDATA[heekk]]></dc:creator>
		<guid isPermaLink="false">https://blog.dramancompany.com/?p=3594</guid>
		<description></description>
		<content:encoded><![CDATA[<img width="1920" height="1080" src="https://blog.dramancompany.com/wp-content/uploads/2023/09/How-to-ux.png" alt="" loading="lazy" srcset="https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2023/09/How-to-ux.png?w=1920&amp;ssl=1 1920w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2023/09/How-to-ux.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2023/09/How-to-ux.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2023/09/How-to-ux.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2023/09/How-to-ux.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2023/09/How-to-ux.png?resize=750%2C422&amp;ssl=1 750w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2023/09/How-to-ux.png?resize=1140%2C641&amp;ssl=1 1140w" sizes="(max-width: 1920px) 100vw, 1920px" /><br />
        안녕하세요. 리멤버 프로덕트 디자이너 김희경입니다.

명함관리 서비스로 시작해 구인구직 서비스와 직장인 커뮤니티 서비스, 데일리 뉴스 콘텐츠까지 직장인을 위한 다양한 서비스를 리멤버에서 제공해왔는데요. 이 모든 서비스를 한 화면에서 경험할 수 있는 새로운 화면을 신설하기에 앞서 사용성 테스트(Usability Test)를 진행했었어요. 새로운 피쳐가 배포되기 이전에 사용성 테스트를 진행하며 경험한 UT 설계와 모더레이팅 과정에서 느낀 인사이트를 공유드릴게요.</p><br />
            <h2>UT(사용성 테스트)는 언제 진행하나요?</h2><br />
        <p>UT 즉 사용성 테스트는 신규 기능을 기획하는 단계 또는 신규 기능을 론칭하기 전 실제 리멤버 사용자에게 보여드리면서 우리 생각대로 사용하시는지, 문제점은 없는지 검증하기 위해 진행합니다.

특히 이번처럼 첫 화면을 신규로 만드는 경우는, 기존 대비 사용자가 불편하게 느끼시는 부분은 없는지 사전에 확인하는 것이 매우 중요했어요.</p><br />
            <h2>UT 설계</h2><br />
        <p>UT는 ‘설계가 80%다.’라는 생각이 들 정도로 설계 과정이 매우 중요하다고 생각해요.

UT 대상자는 누구를 어떤 과정으로 모집할 것인지, 인터뷰는 온라인으로 할 것인지, 오프라인으로 할 것인지, 인터뷰 관찰자는 어떤 방식으로 참여할지 등등 준비할 것이 생각보다 많았습니다.

그럼 어떤 순서와 과정을 거쳐 UT 설계를 했었는지 알려드릴게요.</p><br />
            <h3>01. 인터뷰 대상자 선정</h3><br />
        <p>사용자 행위에 영향을 미치는 조건을 리스트업 합니다.</p><ul><li>우리 서비스를 사용한 기간이 얼마나 되었는지</li><li>그중 어떤 서비스를 중점적으로 사용하는지</li><li>우리 서비스를 방문하는 주기는 어떻게 되는지</li><li>IT 기기 조작이 익숙한 사람인지</li></ul><p>조건에 따라 사용자군을 나누기도 하고 하나의 사용자군을 대상으로 인터뷰를 진행할 수 있습니다.

이번 인터뷰에서는 사용자 행위에 따라 군을 나누어, 총 4개의 사용자군을 대상으로 인터뷰를 진행했어요.</p><br />
            <h3>02. 인터뷰 대상 리크루팅</h3><br />
        <p>우리가 선정한 대상자들에게 인터뷰 정보를 안내하고 모집합니다.</p><br />
                                    <figure>
                                        <img width="1920" height="1080" src="https://blog.dramancompany.com/wp-content/uploads/2023/09/리크루팅.png" alt="" loading="lazy" srcset="https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2023/09/리크루팅.png?w=1920&amp;ssl=1 1920w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2023/09/리크루팅.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2023/09/리크루팅.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2023/09/리크루팅.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2023/09/리크루팅.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2023/09/리크루팅.png?resize=750%2C422&amp;ssl=1 750w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2023/09/리크루팅.png?resize=1140%2C641&amp;ssl=1 1140w" sizes="(max-width: 1920px) 100vw, 1920px" />                                          <figcaption>Tally를 활용해서 인터뷰 대상자에게 사용성 테스트 요청을 진행</figcaption>
                                        </figure>
        <ul><li>인터뷰 환경 안내 : 온라인인지 오프라인인지</li><li>일정 스케줄링 : 가능한 날짜와 시간을 모두 받은 뒤 스케줄 조정 후 안내</li><li>인터뷰 동의 항목 안내 및 동의 받기</li><li>인터뷰 사례금 안내</li></ul><p>인터뷰 모집에 응답을 주신 분들 중에서 직무나 추가 조건 및 다양성을 고려하여 인터뷰 대상자를 선정했습니다.</p><br />
            <h3>03. 역할 분담</h3><br />
        <p>이번 인터뷰는 신규 피처를 함께 기획했던 PO와 PD가 협업하여 진행했으며 아래의 역할을 나눠 UT를 준비했습니다.</p><ul><li>인터뷰 설계 및 모더레이팅</li><li>인터뷰 대상자 리쿠르팅 및 사례금 지급 담당자</li><li>서기, 관찰자</li></ul><br />
            <h3>04. Task 작성</h3><br />
                                    <figure>
                                        <img width="1920" height="1080" src="https://blog.dramancompany.com/wp-content/uploads/2023/09/Task.png" alt="" loading="lazy" srcset="https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2023/09/Task.png?w=1920&amp;ssl=1 1920w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2023/09/Task.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2023/09/Task.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2023/09/Task.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2023/09/Task.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2023/09/Task.png?resize=750%2C422&amp;ssl=1 750w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2023/09/Task.png?resize=1140%2C641&amp;ssl=1 1140w" sizes="(max-width: 1920px) 100vw, 1920px" />                                          <figcaption>사용자 인터뷰 진행에 사용되었던 Task 초안</figcaption>
                                        </figure>
        <p>사용성 테스트를 통해 확인하고 싶은 내용을 중심으로 Task를 설계하고 성공 기준과 실패 기준을 정합니다.

신규 화면에서도 기존에 자주 사용하던 기능을 빠르게 찾을 수 있는지, 몰랐던 기능들을 어떻게 인지하고 사용하게 되는지 등 검증하고 싶은 내용을 플로우 별로 나누고 Task와 질문을 작성했습니다.

실제 인터뷰에서는 사용자군에 따라 Task의 순서를 변경하고 자연스러운 진행을 위해 사용자에게 몰입할 수 있는 시나리오와 함께 Task를 안내했습니다.</p><br />
            <h3>05. 프로토타입 준비</h3><br />
        <p>인터뷰에서 검증하고 싶은 가설을 확인할 수 있는 형태로 프로토타입을 준비합니다. 참고로 모든 기능이 동작하지 않아도 됩니다. 이번에는 인터뷰 대상 사용자군 별로 Task를 진행할 수 있는 프로토타입을 준비하고, Task 내용에 따라 프로토타입 접속 계정도 다르게 세팅하여 인터뷰 대상자에게 제공했습니다.</p><br />
            <h3>06. 리허설 진행</h3><br />
        <p>실제 환경과 동일한 환경을 조성하고 사내에서 인터뷰 대상자를 1명을 선정하여 진행했습니다.

이때 관찰자로 디자인팀 동료들을 초대하여 인터뷰 과정을 지켜보고 이후 피드백을 받았습니다. 피드백을 바탕으로 인터뷰 대본 수정과 Task의 추가 질문들을 수정하여 실제 인터뷰를 진행하게 되었습니다.

실제 인터뷰를 진행하기 전 리허설 인터뷰는 필수로 진행하는 것을 추천해요. 예상하지 못한 현장에서의 변수들을 확인할 수 있고, 제3자의 입장에서 인터뷰 질문에 대한 피드백을 받을 수 있어 현장에서 당황하지 않을 수 있었습니다.</p><br />
            <h3>07. 인터뷰 환경 세팅</h3><br />
        <p>이번 UT는 사용자가 직접 인터뷰 장소로 방문하는 오프라인 대면 인터뷰로 진행했어요. 오프라인 대면 인터뷰를 위한 환경 세팅은 다음과 같았습니다.</p><ul><li>미팅룸 세팅</li><li>인터뷰 대상자의 행동을 관찰할 수 있도록 촬영용 카메라 세팅</li><li>인터뷰 대상자가 어떤 플로우로 Task를 진행하는지 확인할 수 있도록 테스트 기기의 화면 공유 세팅</li><li>진행자가 질문을 볼 수 있고, 서기가 답변을 작성할 수 있으며 관찰자가 메모를 할 수 있는 인터뷰 대상자의 정보가 포함된 질문지 준비</li></ul><p>인터뷰를 진행하는 모더레이터와 서기는 오프라인 미팅룸에 인터뷰 대상자와 직접 대면하여 질문을 하며 메모를 작성하고, 관찰자는 구글 밋을 통해 공유되는 화면으로 인터뷰 과정을 관찰했습니다. 관찰자 입장에서도 중간중간 궁금한 점이 있으면 공유된 시트에 추가 질문을 작성할 수 있도록 해서 모더레이터가 질문들을 확인 할 수 있도록 준비했습니다.</p><br />
            <h2>UT 진행</h2><br />
        <p>저는 이번 사용성 테스트에서 UT 설계와 모더레이팅을 담당했어요. UT를 진행하는 모더레이터 입장에서 인터뷰를 어떻게 진행하고 이 과정에서 유의해야 할 부분들을 알려드릴게요.</p><br />
            <h3>01. 인터뷰 안내 및 사전 질문</h3><br />
        <p>사전에 미리 인터뷰 방식에 대해 안내하지만 인터뷰를 시작 전 대상자에게 인터뷰 과정에 대해 한번 더 안내합니다. 또한 현장에서 궁금해하실 수 있는 촬영에 대한 부분과 관찰자가 어떤 방식으로 어떻게 참여하는지에 대해서도 안내를 합니다.</p><ul><li>지금 진행되는 인터뷰가 어떤 방식으로 진행되는지</li><li>촬영 동의 받기 및 관찰자 존재 안내</li><li>인터뷰 시작 전 스몰토크를 진행하여, 인터뷰 대상자의 배경과 상황을 파악하고 라포(rapport)를 형성</li></ul><p>인터뷰 시작 전 스몰토크를 하며 어떻게 인터뷰에 참여하게 되었는지 우리 서비스에 대해 평소에 어떻게 생각하고 사용하셨는지 대해 이야기를 나누기도 했습니다. 짧은 대화지만 우리가 의도한 리크루팅 대상자가 맞는지 스크리닝이 가능하고, 미리 준비해둔 Task와 질문을 가감하는 판단을 할 수 있습니다.</p><br />
            <h3>02. 인터뷰 진행</h3><br />
                                    <figure>
                                        <img width="1920" height="1080" src="https://blog.dramancompany.com/wp-content/uploads/2023/09/interview.png" alt="" loading="lazy" srcset="https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2023/09/interview.png?w=1920&amp;ssl=1 1920w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2023/09/interview.png?resize=300%2C169&amp;ssl=1 300w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2023/09/interview.png?resize=1024%2C576&amp;ssl=1 1024w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2023/09/interview.png?resize=768%2C432&amp;ssl=1 768w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2023/09/interview.png?resize=1536%2C864&amp;ssl=1 1536w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2023/09/interview.png?resize=750%2C422&amp;ssl=1 750w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2023/09/interview.png?resize=1140%2C641&amp;ssl=1 1140w" sizes="(max-width: 1920px) 100vw, 1920px" />                                          <figcaption>실제 인터뷰 당시 모더레이터 화면에 띄워두었던 화면 세팅</figcaption>
                                        </figure>
        <ul><li><p>충분히 관찰하기

참여자마다 Task를 수행하는 시간이 다를 수 있기 때문에 모더레이터는 충분히 인터뷰 대상자가 Task를 수행하도록 기다립니다. 이 과정에서 서기는 사용자가 Task를 수행하는데 시간이 얼마나 걸렸는지, 어떤 부분에서 머뭇거리는지 어떤 과정을 거쳐 Task를 수행하는지 수행하는 과정에서 어떤 질문을 하는지 등등 모든 과정을 꼼꼼하게 관찰하고 기록합니다. 모더레이터는 실시간으로 서기가 기록하는 내용을 보면서 다음에 어떤 질문을 할지 미리 준비합니다.</p></li><li>

질문하기

수행 과정에서 발견된 부분을 중심으로 행동에 대한 이유를 묻습니다. 이때 유도 질문을 하지 않도록 주의합니다. 실제 인터뷰를 진행할 때는 이 점에 유의해서 사용자가 직접 자신의 행동 이유나 감정 느낀 점을 설명할 수 있는 질문을 중점적으로 했습니다.

이때 준비된 질문 외에도 관찰자가 추가로 요청하는 질문을 물어보기도 합니다.

</li><li>

대답하기

인터뷰를 진행하다 보면 인터뷰 참가자가 제품에 대한 질문을 하기도 합니다. 이때는 바로 답변을 하기보다 ‘왜’ 그런 질문을 하게 되었는지 역으로 질문하여 사용자가 진짜 하고 싶은 이야기가 무엇인지 파악하려 했습니다. 충분히 의중을 파악한 후에 사용자가 궁금해했던 질문에 답변을 하거나 인터뷰가 완전히 끝난 뒤에 답변을 드리기도 했습니다.

</li></ul><br />
            <h3>03. 인터뷰 종료</h3><br />
        <p>준비된 Task를 진행하며 인터뷰가 충분히 진행이 되었다고 판단되면 인터뷰 대상자에게 종료 안내를 합니다. 이때 인터뷰 내용은 어떻게 보관되고 관리되는지, 사례금은 어떤 방식으로 전달되는지 한 번 더 안내를 드립니다.</p><br />
            <h3>04. 인터뷰 종료 후</h3><br />
        <p>인터뷰 종료 직후 모더레이터와 서기는 방금 진행된 인터뷰에 대해 정리하는 시간을 가집니다. 인터뷰 과정에서 부족한 부분이나 개선점은 없었는지 이야기하고 이후 진행되는 인터뷰에서 참고할 부분들을 확인합니다. 시간 여유가 있다면 실시간으로 작성했던 인터뷰 내용을 정리하기도 합니다.</p><br />
            <h2>UT 분석 및 인사이트 도출</h2><br />
        <p>인터뷰 종료 후 녹화본과 작성했던 관찰 문서를 토대로 UT 내용을 분석합니다.</p><ul><li><p>Task 달성 결과 지표 분석

각 Task 별로 사전에 정의한 성공 지표를 기준으로 인터뷰 대상자들이 얼마나 성공했는지, 공통적으로 보인 행동은 어떠했는지 내용을 작성하고 분석합니다.</p></li><li>

Key Findings

관찰 문서를 토대로 공통적으로 발견된 현상들을 정리합니다.

</li><li>

인사이트 도출

위의 내용들을 조합하여 현재 피처에서 유지하는 부분과 개선이 필요한 부분들을 파악합니다.

</li></ul><br />
            <h2>UT 이후 어떤 부분이 개선되었을까요?</h2><br />
                                                <img width="1920" height="1299" src="https://blog.dramancompany.com/wp-content/uploads/2023/09/solution.png" alt="" loading="lazy" srcset="https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2023/09/solution.png?w=1920&amp;ssl=1 1920w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2023/09/solution.png?resize=300%2C203&amp;ssl=1 300w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2023/09/solution.png?resize=1024%2C693&amp;ssl=1 1024w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2023/09/solution.png?resize=768%2C520&amp;ssl=1 768w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2023/09/solution.png?resize=1536%2C1039&amp;ssl=1 1536w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2023/09/solution.png?resize=750%2C507&amp;ssl=1 750w, https://i0.wp.com/blog.dramancompany.com/wp-content/uploads/2023/09/solution.png?resize=1140%2C771&amp;ssl=1 1140w" sizes="(max-width: 1920px) 100vw, 1920px" /><br />
        <p>UT를 통해 변경된 대표적인 예는 '오늘의 소식' 영역입니다.

저희는 매일 사용자가 가장 먼저 확인해야 할 소식을 가장 잘 보이는 곳에 안내함으로써 빠르게 소식을 확인하고 상세 내용에 접근할 수 있도록 의도했지만 실제 UT에서는 사용자가 해당 영역 자체를 인지하지 못하거나 광고로 인지하는 경우가 많았습니다.

이후 기존안과 해당 영역을 다른 콘텐츠와 동일한 형태로 제공하는 안을 비교하는 A/B 테스트를 진행했습니다. 기존의 상단 영역에서 안내할 때보다 콘텐츠 형태로 제공했을 때 60% 더 많은 전환율(노출 고객 대비 클릭 률)이 일어나는 것을 확인하고 개선안을 100% 배포하는 결정을 할 수 있었습니다.</p><br />
            <h2>글을 마치며</h2><br />
        <p>UX리서처없이 리멤버 프로덕트 디자이너는 어떻게 사용자 테스트를 하는지 소개했어요. 리멤버에서는 UT뿐만 아니라 설문조사, 인터뷰, A/B 테스트 등 다양한 리서치를 진행하며 사용자를 좀 더 이해하고 사용자를 위한 의사결정을 하기 위한 노력들을 하고 있어요. 앞으로도 더 많은 사용자의 피드백을 통해 발전하는 리멤버를 기대해 주세요.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3594</wp:post_id>
		<wp:post_date><![CDATA[2023-09-14 18:20:12]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2023-09-14 09:20:12]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2023-09-14 18:55:32]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2023-09-14 09:55:32]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[how-to-ux-research]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="design"><![CDATA[Design]]></category>
		<category domain="post_tag" nicename="remember"><![CDATA[remember]]></category>
		<category domain="post_tag" nicename="research"><![CDATA[research]]></category>
		<category domain="post_tag" nicename="ux"><![CDATA[ux]]></category>
		<category domain="post_tag" nicename="uxdesign"><![CDATA[uxdesign]]></category>
		<category domain="post_tag" nicename="ux%eb%94%94%ec%9e%90%ec%9d%b8"><![CDATA[ux디자인]]></category>
		<category domain="post_tag" nicename="ux%eb%a6%ac%ec%84%9c%ec%b9%98"><![CDATA[ux리서치]]></category>
		<category domain="post_tag" nicename="%eb%94%94%ec%9e%90%ec%9d%b8%ed%8c%80"><![CDATA[디자인팀]]></category>
		<category domain="post_tag" nicename="%eb%a6%ac%eb%a9%a4%eb%b2%84"><![CDATA[리멤버]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle_flag]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729528068;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:974;}i:1;a:1:{s:2:"id";i:2330;}i:2;a:1:{s:2:"id";i:2603;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[67]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_single_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:23:{s:8:"subtitle";s:0:"";s:6:"format";s:8:"standard";s:5:"video";s:0:"";s:7:"gallery";s:0:"";s:11:"source_name";s:0:"";s:10:"source_url";s:0:"";s:8:"via_name";s:0:"";s:7:"via_url";s:0:"";s:17:"override_template";s:1:"0";s:8:"override";a:1:{i:0;a:32:{s:8:"template";s:1:"1";s:18:"single_blog_custom";s:0:"";s:8:"parallax";s:1:"1";s:10:"fullscreen";s:1:"1";s:6:"layout";s:13:"right-sidebar";s:7:"sidebar";s:15:"default-sidebar";s:14:"second_sidebar";s:15:"default-sidebar";s:14:"sticky_sidebar";s:1:"1";s:14:"share_position";s:3:"top";s:17:"share_float_style";s:16:"share-monocrhome";s:18:"show_share_counter";s:1:"1";s:17:"show_view_counter";s:1:"1";s:13:"show_featured";s:1:"1";s:14:"show_post_meta";s:1:"1";s:16:"show_post_author";s:1:"1";s:22:"show_post_author_image";s:1:"1";s:14:"show_post_date";s:1:"1";s:16:"post_date_format";s:7:"default";s:23:"post_date_format_custom";s:5:"Y/m/d";s:18:"show_post_category";s:1:"1";s:22:"show_post_reading_time";s:1:"0";s:21:"post_reading_time_wpm";s:3:"300";s:16:"show_zoom_button";s:1:"0";s:20:"zoom_button_out_step";s:1:"2";s:19:"zoom_button_in_step";s:1:"3";s:13:"show_post_tag";s:1:"1";s:19:"show_prev_next_post";s:1:"1";s:15:"show_popup_post";s:1:"1";s:17:"number_popup_post";s:1:"1";s:15:"show_author_box";s:1:"0";s:17:"show_post_related";s:1:"0";s:24:"show_inline_post_related";s:1:"0";}}s:19:"override_image_size";s:1:"0";s:14:"image_override";a:1:{i:0;a:2:{s:26:"single_post_thumbnail_size";s:8:"crop-500";s:24:"single_post_gallery_size";s:8:"crop-500";}}s:13:"trending_post";s:1:"0";s:22:"trending_post_position";s:4:"meta";s:19:"trending_post_label";s:8:"Trending";s:14:"sponsored_post";s:1:"0";s:20:"sponsored_post_label";s:12:"Sponsored by";s:19:"sponsored_post_name";s:0:"";s:18:"sponsored_post_url";s:0:"";s:26:"sponsored_post_logo_enable";s:1:"0";s:19:"sponsored_post_logo";s:0:"";s:19:"sponsored_post_desc";s:0:"";s:10:"disable_ad";s:1:"0";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:2:"id";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[93]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_estimated-reading-time-minutes]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_wordproof_timestamp]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_edit_mode]]></wp:meta_key>
		<wp:meta_value><![CDATA[builder]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_template_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[wp-post]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_version]]></wp:meta_key>
		<wp:meta_value><![CDATA[3.8.0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_data]]></wp:meta_key>
		<wp:meta_value><![CDATA[[{"id":"d3a21b1","elType":"section","settings":[],"elements":[{"id":"42ac4f8","elType":"column","settings":{"_column_size":100,"_inline_size":null},"elements":[{"id":"78681f9","elType":"widget","settings":{"image":{"url":"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2023\/09\/How-to-ux.png","id":3602,"alt":"","source":"library"},"image_size":"full","image_border_radius":{"unit":"px","top":"16","right":"16","bottom":"16","left":"16","isLinked":true}},"elements":[],"widgetType":"image"}],"isInner":false}],"isInner":false},{"id":"d7b2a70","elType":"section","settings":[],"elements":[{"id":"16b857e","elType":"column","settings":{"_column_size":100,"_inline_size":null},"elements":[{"id":"896b00a","elType":"widget","settings":{"editor":"<p>\uc548\ub155\ud558\uc138\uc694. \ub9ac\uba64\ubc84 \ud504\ub85c\ub355\ud2b8 \ub514\uc790\uc774\ub108 \uae40\ud76c\uacbd\uc785\ub2c8\ub2e4.<\/p><p>\uba85\ud568\uad00\ub9ac \uc11c\ube44\uc2a4\ub85c \uc2dc\uc791\ud574 \uad6c\uc778\uad6c\uc9c1 \uc11c\ube44\uc2a4\uc640 \uc9c1\uc7a5\uc778 \ucee4\ubba4\ub2c8\ud2f0 \uc11c\ube44\uc2a4, \ub370\uc77c\ub9ac \ub274\uc2a4 \ucf58\ud150\uce20\uae4c\uc9c0 \uc9c1\uc7a5\uc778\uc744 \uc704\ud55c \ub2e4\uc591\ud55c \uc11c\ube44\uc2a4\ub97c \ub9ac\uba64\ubc84\uc5d0\uc11c \uc81c\uacf5\ud574\uc654\ub294\ub370\uc694. \uc774 \ubaa8\ub4e0 \uc11c\ube44\uc2a4\ub97c \ud55c \ud654\uba74\uc5d0\uc11c \uacbd\ud5d8\ud560 \uc218 \uc788\ub294 \uc0c8\ub85c\uc6b4 \ud654\uba74\uc744 \uc2e0\uc124\ud558\uae30\uc5d0 \uc55e\uc11c \uc0ac\uc6a9\uc131 \ud14c\uc2a4\ud2b8(Usability Test)\ub97c \uc9c4\ud589\ud588\uc5c8\uc5b4\uc694. \uc0c8\ub85c\uc6b4 \ud53c\uccd0\uac00 \ubc30\ud3ec\ub418\uae30 \uc774\uc804\uc5d0 \uc0ac\uc6a9\uc131 \ud14c\uc2a4\ud2b8\ub97c \uc9c4\ud589\ud558\uba70 \uacbd\ud5d8\ud55c UT \uc124\uacc4\uc640 \ubaa8\ub354\ub808\uc774\ud305 \uacfc\uc815\uc5d0\uc11c \ub290\ub080 \uc778\uc0ac\uc774\ud2b8\ub97c \uacf5\uc720\ub4dc\ub9b4\uac8c\uc694.<\/p>","_padding":{"unit":"%","top":"0","right":"20","bottom":"0","left":"20","isLinked":false},"_padding_tablet":{"unit":"%","top":"","right":"","bottom":"","left":"","isLinked":true},"_padding_mobile":{"unit":"%","top":"0","right":"0","bottom":"0","left":"0","isLinked":false},"_element_custom_width":{"unit":"px","size":"","sizes":[]},"_element_vertical_align":"flex-start","_element_width_mobile":"inherit"},"elements":[],"widgetType":"text-editor"}],"isInner":false}],"isInner":false},{"id":"48d1768","elType":"section","settings":[],"elements":[{"id":"6e34805","elType":"column","settings":{"_column_size":100,"_inline_size":null},"elements":[{"id":"1d3b1be","elType":"widget","settings":{"title":"UT(\uc0ac\uc6a9\uc131 \ud14c\uc2a4\ud2b8)\ub294 \uc5b8\uc81c \uc9c4\ud589\ud558\ub098\uc694?","title_color":"#FF5414","typography_typography":"custom","typography_font_family":"Roboto","typography_font_weight":"600","_padding":{"unit":"%","top":"0","right":"20","bottom":"0","left":"20","isLinked":false},"_padding_tablet":{"unit":"%","top":"","right":"","bottom":"","left":"","isLinked":true},"_padding_mobile":{"unit":"%","top":"0","right":"0","bottom":"0","left":"0","isLinked":false}},"elements":[],"widgetType":"heading"}],"isInner":false}],"isInner":false},{"id":"cc3b6c1","elType":"section","settings":[],"elements":[{"id":"c35e035","elType":"column","settings":{"_column_size":100,"_inline_size":null},"elements":[{"id":"b80455a","elType":"widget","settings":{"editor":"<p>UT \uc989 \uc0ac\uc6a9\uc131 \ud14c\uc2a4\ud2b8\ub294 \uc2e0\uaddc \uae30\ub2a5\uc744 \uae30\ud68d\ud558\ub294 \ub2e8\uacc4 \ub610\ub294 \uc2e0\uaddc \uae30\ub2a5\uc744 \ub860\uce6d\ud558\uae30 \uc804 \uc2e4\uc81c \ub9ac\uba64\ubc84 \uc0ac\uc6a9\uc790\uc5d0\uac8c \ubcf4\uc5ec\ub4dc\ub9ac\uba74\uc11c \uc6b0\ub9ac \uc0dd\uac01\ub300\ub85c \uc0ac\uc6a9\ud558\uc2dc\ub294\uc9c0, \ubb38\uc81c\uc810\uc740 \uc5c6\ub294\uc9c0 \uac80\uc99d\ud558\uae30 \uc704\ud574 \uc9c4\ud589\ud569\ub2c8\ub2e4.<\/p><p>\ud2b9\ud788 \uc774\ubc88\ucc98\ub7fc \uccab \ud654\uba74\uc744 \uc2e0\uaddc\ub85c \ub9cc\ub4dc\ub294 \uacbd\uc6b0\ub294, \uae30\uc874 \ub300\ube44 \uc0ac\uc6a9\uc790\uac00 \ubd88\ud3b8\ud558\uac8c \ub290\ub07c\uc2dc\ub294 \ubd80\ubd84\uc740 \uc5c6\ub294\uc9c0 \uc0ac\uc804\uc5d0 \ud655\uc778\ud558\ub294 \uac83\uc774 \ub9e4\uc6b0 \uc911\uc694\ud588\uc5b4\uc694.<\/p>","_padding":{"unit":"%","top":"0","right":"20","bottom":"0","left":"20","isLinked":false},"_padding_tablet":{"unit":"%","top":"","right":"","bottom":"","left":"","isLinked":true},"_padding_mobile":{"unit":"%","top":"0","right":"0","bottom":"0","left":"0","isLinked":false},"_element_custom_width":{"unit":"%","size":88,"sizes":[]}},"elements":[],"widgetType":"text-editor"}],"isInner":false}],"isInner":false},{"id":"980d96d","elType":"section","settings":[],"elements":[{"id":"60f8e97","elType":"column","settings":{"_column_size":100,"_inline_size":null},"elements":[{"id":"b907605","elType":"widget","settings":{"title":"UT \uc124\uacc4","title_color":"#FF5414","_padding":{"unit":"%","top":"0","right":"20","bottom":"0","left":"20","isLinked":false},"_padding_tablet":{"unit":"%","top":"","right":"","bottom":"","left":"","isLinked":true},"_padding_mobile":{"unit":"%","top":"0","right":"0","bottom":"0","left":"0","isLinked":false}},"elements":[],"widgetType":"heading"}],"isInner":false}],"isInner":false},{"id":"4d5cfc4","elType":"section","settings":[],"elements":[{"id":"282a6c2","elType":"column","settings":{"_column_size":100,"_inline_size":null},"elements":[{"id":"e45fd7e","elType":"widget","settings":{"editor":"<p>UT\ub294 \u2018\uc124\uacc4\uac00 80%\ub2e4.\u2019\ub77c\ub294 \uc0dd\uac01\uc774 \ub4e4 \uc815\ub3c4\ub85c \uc124\uacc4 \uacfc\uc815\uc774 \ub9e4\uc6b0 \uc911\uc694\ud558\ub2e4\uace0 \uc0dd\uac01\ud574\uc694.<\/p><p>UT \ub300\uc0c1\uc790\ub294 \ub204\uad6c\ub97c \uc5b4\ub5a4 \uacfc\uc815\uc73c\ub85c \ubaa8\uc9d1\ud560 \uac83\uc778\uc9c0, \uc778\ud130\ubdf0\ub294 \uc628\ub77c\uc778\uc73c\ub85c \ud560 \uac83\uc778\uc9c0, \uc624\ud504\ub77c\uc778\uc73c\ub85c \ud560 \uac83\uc778\uc9c0, \uc778\ud130\ubdf0 \uad00\ucc30\uc790\ub294 \uc5b4\ub5a4 \ubc29\uc2dd\uc73c\ub85c \ucc38\uc5ec\ud560\uc9c0 \ub4f1\ub4f1 \uc900\ube44\ud560 \uac83\uc774 \uc0dd\uac01\ubcf4\ub2e4 \ub9ce\uc558\uc2b5\ub2c8\ub2e4.<\/p><p>\uadf8\ub7fc \uc5b4\ub5a4 \uc21c\uc11c\uc640 \uacfc\uc815\uc744 \uac70\uccd0 UT \uc124\uacc4\ub97c \ud588\uc5c8\ub294\uc9c0 \uc54c\ub824\ub4dc\ub9b4\uac8c\uc694.<\/p>","_padding":{"unit":"%","top":"0","right":"20","bottom":"0","left":"20","isLinked":false},"_padding_tablet":{"unit":"%","top":"","right":"","bottom":"","left":"","isLinked":true},"_padding_mobile":{"unit":"%","top":"0","right":"0","bottom":"0","left":"0","isLinked":false}},"elements":[],"widgetType":"text-editor"}],"isInner":false}],"isInner":false},{"id":"2294ef1","elType":"section","settings":[],"elements":[{"id":"9d16221","elType":"column","settings":{"_column_size":100,"_inline_size":null},"elements":[{"id":"4e5daf6","elType":"widget","settings":{"title":"01. \uc778\ud130\ubdf0 \ub300\uc0c1\uc790 \uc120\uc815","header_size":"h3","title_color":"#000000","_padding":{"unit":"%","top":"0","right":"20","bottom":"0","left":"20","isLinked":false},"_padding_tablet":{"unit":"%","top":"","right":"","bottom":"","left":"","isLinked":true},"_padding_mobile":{"unit":"%","top":"0","right":"0","bottom":"0","left":"0","isLinked":false}},"elements":[],"widgetType":"heading"}],"isInner":false}],"isInner":false},{"id":"ad89b67","elType":"section","settings":[],"elements":[{"id":"be419c7","elType":"column","settings":{"_column_size":100,"_inline_size":null},"elements":[{"id":"f003826","elType":"widget","settings":{"editor":"<p>\uc0ac\uc6a9\uc790 \ud589\uc704\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce58\ub294 \uc870\uac74\uc744 \ub9ac\uc2a4\ud2b8\uc5c5 \ud569\ub2c8\ub2e4.<\/p><ul><li>\uc6b0\ub9ac \uc11c\ube44\uc2a4\ub97c \uc0ac\uc6a9\ud55c \uae30\uac04\uc774 \uc5bc\ub9c8\ub098 \ub418\uc5c8\ub294\uc9c0<\/li><li>\uadf8\uc911 \uc5b4\ub5a4 \uc11c\ube44\uc2a4\ub97c \uc911\uc810\uc801\uc73c\ub85c \uc0ac\uc6a9\ud558\ub294\uc9c0<\/li><li>\uc6b0\ub9ac \uc11c\ube44\uc2a4\ub97c \ubc29\ubb38\ud558\ub294 \uc8fc\uae30\ub294 \uc5b4\ub5bb\uac8c \ub418\ub294\uc9c0<\/li><li>IT \uae30\uae30 \uc870\uc791\uc774 \uc775\uc219\ud55c \uc0ac\ub78c\uc778\uc9c0<\/li><\/ul><p>\uc870\uac74\uc5d0 \ub530\ub77c \uc0ac\uc6a9\uc790\uad70\uc744 \ub098\ub204\uae30\ub3c4 \ud558\uace0 \ud558\ub098\uc758 \uc0ac\uc6a9\uc790\uad70\uc744 \ub300\uc0c1\uc73c\ub85c \uc778\ud130\ubdf0\ub97c \uc9c4\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.<\/p><p>\uc774\ubc88 \uc778\ud130\ubdf0\uc5d0\uc11c\ub294 \uc0ac\uc6a9\uc790 \ud589\uc704\uc5d0 \ub530\ub77c \uad70\uc744 \ub098\ub204\uc5b4, \ucd1d 4\uac1c\uc758 \uc0ac\uc6a9\uc790\uad70\uc744 \ub300\uc0c1\uc73c\ub85c \uc778\ud130\ubdf0\ub97c \uc9c4\ud589\ud588\uc5b4\uc694.<\/p>","_padding":{"unit":"%","top":"0","right":"20","bottom":"0","left":"20","isLinked":false},"_padding_tablet":{"unit":"%","top":"","right":"","bottom":"","left":"","isLinked":true},"_padding_mobile":{"unit":"%","top":"0","right":"0","bottom":"0","left":"0","isLinked":false}},"elements":[],"widgetType":"text-editor"}],"isInner":false}],"isInner":false},{"id":"a5dd014","elType":"section","settings":[],"elements":[{"id":"4ee3d90","elType":"column","settings":{"_column_size":100,"_inline_size":null},"elements":[{"id":"2a949ba","elType":"widget","settings":{"title":"02. \uc778\ud130\ubdf0 \ub300\uc0c1 \ub9ac\ud06c\ub8e8\ud305","header_size":"h3","title_color":"#000000","_padding":{"unit":"%","top":"0","right":"20","bottom":"0","left":"20","isLinked":false},"_padding_tablet":{"unit":"%","top":"","right":"","bottom":"","left":"","isLinked":true},"_padding_mobile":{"unit":"%","top":"0","right":"0","bottom":"0","left":"0","isLinked":false}},"elements":[],"widgetType":"heading"}],"isInner":false}],"isInner":false},{"id":"d21f029","elType":"section","settings":[],"elements":[{"id":"b01749e","elType":"column","settings":{"_column_size":100,"_inline_size":null},"elements":[{"id":"fe4260f","elType":"widget","settings":{"editor":"<p>\uc6b0\ub9ac\uac00 \uc120\uc815\ud55c \ub300\uc0c1\uc790\ub4e4\uc5d0\uac8c \uc778\ud130\ubdf0 \uc815\ubcf4\ub97c \uc548\ub0b4\ud558\uace0 \ubaa8\uc9d1\ud569\ub2c8\ub2e4.<\/p>","_padding":{"unit":"%","top":"0","right":"20","bottom":"0","left":"20","isLinked":false},"_padding_tablet":{"unit":"%","top":"","right":"","bottom":"","left":"","isLinked":true},"_padding_mobile":{"unit":"%","top":"0","right":"0","bottom":"0","left":"0","isLinked":false}},"elements":[],"widgetType":"text-editor"}],"isInner":false}],"isInner":false},{"id":"0c198a9","elType":"section","settings":[],"elements":[{"id":"316a1d2","elType":"column","settings":{"_column_size":100,"_inline_size":null},"elements":[{"id":"1ec61ee","elType":"widget","settings":{"image":{"url":"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2023\/09\/\u1105\u1175\u110f\u1173\u1105\u116e\u1110\u1175\u11bc.png","id":3606,"alt":"","source":"library"},"image_size":"full","caption_source":"custom","caption":"Tally\ub97c \ud65c\uc6a9\ud574\uc11c \uc778\ud130\ubdf0 \ub300\uc0c1\uc790\uc5d0\uac8c \uc0ac\uc6a9\uc131 \ud14c\uc2a4\ud2b8 \uc694\uccad\uc744 \uc9c4\ud589","space":{"unit":"px","size":700,"sizes":[]},"space_tablet":{"unit":"px","size":"","sizes":[]},"space_mobile":{"unit":"px","size":"","sizes":[]},"image_border_radius":{"unit":"px","top":"16","right":"16","bottom":"16","left":"16","isLinked":true},"width_mobile":{"unit":"%","size":100,"sizes":[]}},"elements":[],"widgetType":"image"}],"isInner":false}],"isInner":false},{"id":"368cafb","elType":"section","settings":[],"elements":[{"id":"5bdedf8","elType":"column","settings":{"_column_size":100,"_inline_size":null},"elements":[{"id":"12d5c56","elType":"widget","settings":{"editor":"<ul><li>\uc778\ud130\ubdf0 \ud658\uacbd \uc548\ub0b4 : \uc628\ub77c\uc778\uc778\uc9c0 \uc624\ud504\ub77c\uc778\uc778\uc9c0<\/li><li>\uc77c\uc815 \uc2a4\ucf00\uc904\ub9c1 : \uac00\ub2a5\ud55c \ub0a0\uc9dc\uc640 \uc2dc\uac04\uc744 \ubaa8\ub450 \ubc1b\uc740 \ub4a4 \uc2a4\ucf00\uc904 \uc870\uc815 \ud6c4 \uc548\ub0b4<\/li><li>\uc778\ud130\ubdf0 \ub3d9\uc758 \ud56d\ubaa9 \uc548\ub0b4 \ubc0f \ub3d9\uc758 \ubc1b\uae30<\/li><li>\uc778\ud130\ubdf0 \uc0ac\ub840\uae08 \uc548\ub0b4<\/li><\/ul><p>\uc778\ud130\ubdf0 \ubaa8\uc9d1\uc5d0 \uc751\ub2f5\uc744 \uc8fc\uc2e0 \ubd84\ub4e4 \uc911\uc5d0\uc11c \uc9c1\ubb34\ub098 \ucd94\uac00 \uc870\uac74 \ubc0f \ub2e4\uc591\uc131\uc744 \uace0\ub824\ud558\uc5ec \uc778\ud130\ubdf0 \ub300\uc0c1\uc790\ub97c \uc120\uc815\ud588\uc2b5\ub2c8\ub2e4.<\/p>","_padding":{"unit":"%","top":"0","right":"20","bottom":"0","left":"20","isLinked":false},"_padding_tablet":{"unit":"%","top":"","right":"","bottom":"","left":"","isLinked":true},"_padding_mobile":{"unit":"%","top":"0","right":"0","bottom":"0","left":"0","isLinked":false}},"elements":[],"widgetType":"text-editor"}],"isInner":false}],"isInner":false},{"id":"e435274","elType":"section","settings":[],"elements":[{"id":"7a7405b","elType":"column","settings":{"_column_size":100,"_inline_size":null},"elements":[{"id":"bae66db","elType":"widget","settings":{"title":"03. \uc5ed\ud560 \ubd84\ub2f4","header_size":"h3","title_color":"#000000","_padding":{"unit":"%","top":"0","right":"20","bottom":"0","left":"20","isLinked":false},"_padding_tablet":{"unit":"%","top":"","right":"","bottom":"","left":"","isLinked":true},"_padding_mobile":{"unit":"%","top":"0","right":"0","bottom":"0","left":"0","isLinked":false}},"elements":[],"widgetType":"heading"}],"isInner":false}],"isInner":false},{"id":"82200a1","elType":"section","settings":[],"elements":[{"id":"301cfaf","elType":"column","settings":{"_column_size":100,"_inline_size":null},"elements":[{"id":"9850083","elType":"widget","settings":{"editor":"<p>\uc774\ubc88 \uc778\ud130\ubdf0\ub294 \uc2e0\uaddc \ud53c\ucc98\ub97c \ud568\uaed8 \uae30\ud68d\ud588\ub358 PO\uc640 PD\uac00 \ud611\uc5c5\ud558\uc5ec \uc9c4\ud589\ud588\uc73c\uba70 \uc544\ub798\uc758 \uc5ed\ud560\uc744 \ub098\ub220 UT\ub97c \uc900\ube44\ud588\uc2b5\ub2c8\ub2e4.<\/p><ul><li>\uc778\ud130\ubdf0 \uc124\uacc4 \ubc0f \ubaa8\ub354\ub808\uc774\ud305<\/li><li>\uc778\ud130\ubdf0 \ub300\uc0c1\uc790 \ub9ac\ucfe0\ub974\ud305 \ubc0f \uc0ac\ub840\uae08 \uc9c0\uae09 \ub2f4\ub2f9\uc790<\/li><li>\uc11c\uae30, \uad00\ucc30\uc790<\/li><\/ul>","_padding":{"unit":"%","top":"0","right":"20","bottom":"0","left":"20","isLinked":false},"_padding_tablet":{"unit":"%","top":"","right":"","bottom":"","left":"","isLinked":true},"_padding_mobile":{"unit":"%","top":"0","right":"0","bottom":"0","left":"0","isLinked":false}},"elements":[],"widgetType":"text-editor"}],"isInner":false}],"isInner":false},{"id":"da72949","elType":"section","settings":[],"elements":[{"id":"e342e22","elType":"column","settings":{"_column_size":100,"_inline_size":null},"elements":[{"id":"1e46744","elType":"widget","settings":{"title":"04. Task \uc791\uc131","header_size":"h3","title_color":"#000000","_padding":{"unit":"%","top":"0","right":"20","bottom":"0","left":"20","isLinked":false},"_padding_tablet":{"unit":"%","top":"","right":"","bottom":"","left":"","isLinked":true},"_padding_mobile":{"unit":"%","top":"0","right":"0","bottom":"0","left":"0","isLinked":false}},"elements":[],"widgetType":"heading"}],"isInner":false}],"isInner":false},{"id":"2409af8","elType":"section","settings":[],"elements":[{"id":"106ecc6","elType":"column","settings":{"_column_size":100,"_inline_size":null},"elements":[{"id":"563a8b4","elType":"widget","settings":{"image":{"url":"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2023\/09\/Task.png","id":3605,"alt":"","source":"library"},"image_size":"full","caption_source":"custom","caption":"\uc0ac\uc6a9\uc790 \uc778\ud130\ubdf0 \uc9c4\ud589\uc5d0 \uc0ac\uc6a9\ub418\uc5c8\ub358 Task \ucd08\uc548","space":{"unit":"px","size":700,"sizes":[]},"space_tablet":{"unit":"px","size":"","sizes":[]},"space_mobile":{"unit":"px","size":"","sizes":[]},"image_border_radius":{"unit":"px","top":"16","right":"16","bottom":"16","left":"16","isLinked":true},"width_mobile":{"unit":"%","size":100,"sizes":[]},"_margin_mobile":{"unit":"%","top":"","right":"","bottom":"","left":"","isLinked":true}},"elements":[],"widgetType":"image"}],"isInner":false}],"isInner":false},{"id":"2d925d2","elType":"section","settings":[],"elements":[{"id":"0fae8b8","elType":"column","settings":{"_column_size":100,"_inline_size":null},"elements":[{"id":"894cb6d","elType":"widget","settings":{"editor":"<p>\uc0ac\uc6a9\uc131 \ud14c\uc2a4\ud2b8\ub97c \ud1b5\ud574 \ud655\uc778\ud558\uace0 \uc2f6\uc740 \ub0b4\uc6a9\uc744 \uc911\uc2ec\uc73c\ub85c Task\ub97c \uc124\uacc4\ud558\uace0 \uc131\uacf5 \uae30\uc900\uacfc \uc2e4\ud328 \uae30\uc900\uc744 \uc815\ud569\ub2c8\ub2e4.<\/p><p>\uc2e0\uaddc \ud654\uba74\uc5d0\uc11c\ub3c4 \uae30\uc874\uc5d0 \uc790\uc8fc \uc0ac\uc6a9\ud558\ub358 \uae30\ub2a5\uc744 \ube60\ub974\uac8c \ucc3e\uc744 \uc218 \uc788\ub294\uc9c0, \ubab0\ub790\ub358 \uae30\ub2a5\ub4e4\uc744 \uc5b4\ub5bb\uac8c \uc778\uc9c0\ud558\uace0 \uc0ac\uc6a9\ud558\uac8c \ub418\ub294\uc9c0 \ub4f1 \uac80\uc99d\ud558\uace0 \uc2f6\uc740 \ub0b4\uc6a9\uc744 \ud50c\ub85c\uc6b0 \ubcc4\ub85c \ub098\ub204\uace0 Task\uc640 \uc9c8\ubb38\uc744 \uc791\uc131\ud588\uc2b5\ub2c8\ub2e4.<\/p><p>\uc2e4\uc81c \uc778\ud130\ubdf0\uc5d0\uc11c\ub294 \uc0ac\uc6a9\uc790\uad70\uc5d0 \ub530\ub77c Task\uc758 \uc21c\uc11c\ub97c \ubcc0\uacbd\ud558\uace0 \uc790\uc5f0\uc2a4\ub7ec\uc6b4 \uc9c4\ud589\uc744 \uc704\ud574 \uc0ac\uc6a9\uc790\uc5d0\uac8c \ubab0\uc785\ud560 \uc218 \uc788\ub294 \uc2dc\ub098\ub9ac\uc624\uc640 \ud568\uaed8 Task\ub97c \uc548\ub0b4\ud588\uc2b5\ub2c8\ub2e4.<\/p>","_padding":{"unit":"%","top":"0","right":"20","bottom":"0","left":"20","isLinked":false},"_padding_tablet":{"unit":"%","top":"","right":"","bottom":"","left":"","isLinked":true},"_padding_mobile":{"unit":"%","top":"0","right":"0","bottom":"0","left":"0","isLinked":false}},"elements":[],"widgetType":"text-editor"}],"isInner":false}],"isInner":false},{"id":"20a694e","elType":"section","settings":[],"elements":[{"id":"849010f","elType":"column","settings":{"_column_size":100,"_inline_size":null},"elements":[{"id":"40a23a6","elType":"widget","settings":{"title":"05. \ud504\ub85c\ud1a0\ud0c0\uc785 \uc900\ube44","header_size":"h3","title_color":"#000000","_padding":{"unit":"%","top":"0","right":"20","bottom":"0","left":"20","isLinked":false},"_padding_tablet":{"unit":"%","top":"","right":"","bottom":"","left":"","isLinked":true},"_padding_mobile":{"unit":"%","top":"0","right":"0","bottom":"0","left":"0","isLinked":false}},"elements":[],"widgetType":"heading"}],"isInner":false}],"isInner":false},{"id":"9343c00","elType":"section","settings":[],"elements":[{"id":"f5a3192","elType":"column","settings":{"_column_size":100,"_inline_size":null},"elements":[{"id":"d46c3bf","elType":"widget","settings":{"editor":"<p>\uc778\ud130\ubdf0\uc5d0\uc11c \uac80\uc99d\ud558\uace0 \uc2f6\uc740 \uac00\uc124\uc744 \ud655\uc778\ud560 \uc218 \uc788\ub294 \ud615\ud0dc\ub85c \ud504\ub85c\ud1a0\ud0c0\uc785\uc744 \uc900\ube44\ud569\ub2c8\ub2e4. \ucc38\uace0\ub85c \ubaa8\ub4e0 \uae30\ub2a5\uc774 \ub3d9\uc791\ud558\uc9c0 \uc54a\uc544\ub3c4 \ub429\ub2c8\ub2e4. \uc774\ubc88\uc5d0\ub294 \uc778\ud130\ubdf0 \ub300\uc0c1 \uc0ac\uc6a9\uc790\uad70 \ubcc4\ub85c Task\ub97c \uc9c4\ud589\ud560 \uc218 \uc788\ub294 \ud504\ub85c\ud1a0\ud0c0\uc785\uc744 \uc900\ube44\ud558\uace0, Task \ub0b4\uc6a9\uc5d0 \ub530\ub77c \ud504\ub85c\ud1a0\ud0c0\uc785 \uc811\uc18d \uacc4\uc815\ub3c4 \ub2e4\ub974\uac8c \uc138\ud305\ud558\uc5ec \uc778\ud130\ubdf0 \ub300\uc0c1\uc790\uc5d0\uac8c \uc81c\uacf5\ud588\uc2b5\ub2c8\ub2e4.<\/p>","_padding":{"unit":"%","top":"0","right":"20","bottom":"0","left":"20","isLinked":false},"_padding_tablet":{"unit":"%","top":"","right":"","bottom":"","left":"","isLinked":true},"_padding_mobile":{"unit":"%","top":"0","right":"0","bottom":"0","left":"0","isLinked":false}},"elements":[],"widgetType":"text-editor"}],"isInner":false}],"isInner":false},{"id":"5186ebf","elType":"section","settings":[],"elements":[{"id":"06a8860","elType":"column","settings":{"_column_size":100,"_inline_size":null},"elements":[{"id":"34145fb","elType":"widget","settings":{"title":"06. \ub9ac\ud5c8\uc124 \uc9c4\ud589","header_size":"h3","title_color":"#000000","_padding":{"unit":"%","top":"0","right":"20","bottom":"0","left":"20","isLinked":false},"_padding_tablet":{"unit":"%","top":"","right":"","bottom":"","left":"","isLinked":true},"_padding_mobile":{"unit":"%","top":"0","right":"0","bottom":"0","left":"0","isLinked":false}},"elements":[],"widgetType":"heading"}],"isInner":false}],"isInner":false},{"id":"6edf12b","elType":"section","settings":[],"elements":[{"id":"6afafcb","elType":"column","settings":{"_column_size":100,"_inline_size":null},"elements":[{"id":"ff888c8","elType":"widget","settings":{"editor":"<p>\uc2e4\uc81c \ud658\uacbd\uacfc \ub3d9\uc77c\ud55c \ud658\uacbd\uc744 \uc870\uc131\ud558\uace0 \uc0ac\ub0b4\uc5d0\uc11c \uc778\ud130\ubdf0 \ub300\uc0c1\uc790\ub97c 1\uba85\uc744 \uc120\uc815\ud558\uc5ec \uc9c4\ud589\ud588\uc2b5\ub2c8\ub2e4.<\/p><p>\uc774\ub54c \uad00\ucc30\uc790\ub85c \ub514\uc790\uc778\ud300 \ub3d9\ub8cc\ub4e4\uc744 \ucd08\ub300\ud558\uc5ec \uc778\ud130\ubdf0 \uacfc\uc815\uc744 \uc9c0\ucf1c\ubcf4\uace0 \uc774\ud6c4 \ud53c\ub4dc\ubc31\uc744 \ubc1b\uc558\uc2b5\ub2c8\ub2e4. \ud53c\ub4dc\ubc31\uc744 \ubc14\ud0d5\uc73c\ub85c \uc778\ud130\ubdf0 \ub300\ubcf8 \uc218\uc815\uacfc Task\uc758 \ucd94\uac00 \uc9c8\ubb38\ub4e4\uc744 \uc218\uc815\ud558\uc5ec \uc2e4\uc81c \uc778\ud130\ubdf0\ub97c \uc9c4\ud589\ud558\uac8c \ub418\uc5c8\uc2b5\ub2c8\ub2e4.<\/p><p>\uc2e4\uc81c \uc778\ud130\ubdf0\ub97c \uc9c4\ud589\ud558\uae30 \uc804 \ub9ac\ud5c8\uc124 \uc778\ud130\ubdf0\ub294 \ud544\uc218\ub85c \uc9c4\ud589\ud558\ub294 \uac83\uc744 \ucd94\ucc9c\ud574\uc694. \uc608\uc0c1\ud558\uc9c0 \ubabb\ud55c \ud604\uc7a5\uc5d0\uc11c\uc758 \ubcc0\uc218\ub4e4\uc744 \ud655\uc778\ud560 \uc218 \uc788\uace0, \uc81c3\uc790\uc758 \uc785\uc7a5\uc5d0\uc11c \uc778\ud130\ubdf0 \uc9c8\ubb38\uc5d0 \ub300\ud55c \ud53c\ub4dc\ubc31\uc744 \ubc1b\uc744 \uc218 \uc788\uc5b4 \ud604\uc7a5\uc5d0\uc11c \ub2f9\ud669\ud558\uc9c0 \uc54a\uc744 \uc218 \uc788\uc5c8\uc2b5\ub2c8\ub2e4.<\/p>","_padding":{"unit":"%","top":"0","right":"20","bottom":"0","left":"20","isLinked":false},"_padding_tablet":{"unit":"%","top":"","right":"","bottom":"","left":"","isLinked":true},"_padding_mobile":{"unit":"%","top":"0","right":"0","bottom":"0","left":"0","isLinked":false}},"elements":[],"widgetType":"text-editor"}],"isInner":false}],"isInner":false},{"id":"3c3da3f","elType":"section","settings":[],"elements":[{"id":"13a5877","elType":"column","settings":{"_column_size":100,"_inline_size":null},"elements":[{"id":"10a483a","elType":"widget","settings":{"title":"07. \uc778\ud130\ubdf0 \ud658\uacbd \uc138\ud305","header_size":"h3","title_color":"#000000","_padding":{"unit":"%","top":"0","right":"20","bottom":"0","left":"20","isLinked":false},"_padding_tablet":{"unit":"%","top":"","right":"","bottom":"","left":"","isLinked":true},"_padding_mobile":{"unit":"%","top":"0","right":"0","bottom":"0","left":"0","isLinked":false}},"elements":[],"widgetType":"heading"}],"isInner":false}],"isInner":false},{"id":"8f1e2a4","elType":"section","settings":[],"elements":[{"id":"47ced4e","elType":"column","settings":{"_column_size":100,"_inline_size":null},"elements":[{"id":"80f6cf1","elType":"widget","settings":{"editor":"<p>\uc774\ubc88 UT\ub294 \uc0ac\uc6a9\uc790\uac00 \uc9c1\uc811 \uc778\ud130\ubdf0 \uc7a5\uc18c\ub85c \ubc29\ubb38\ud558\ub294 \uc624\ud504\ub77c\uc778 \ub300\uba74 \uc778\ud130\ubdf0\ub85c \uc9c4\ud589\ud588\uc5b4\uc694. \uc624\ud504\ub77c\uc778 \ub300\uba74 \uc778\ud130\ubdf0\ub97c \uc704\ud55c \ud658\uacbd \uc138\ud305\uc740 \ub2e4\uc74c\uacfc \uac19\uc558\uc2b5\ub2c8\ub2e4.<\/p><ul><li>\ubbf8\ud305\ub8f8 \uc138\ud305<\/li><li>\uc778\ud130\ubdf0 \ub300\uc0c1\uc790\uc758 \ud589\ub3d9\uc744 \uad00\ucc30\ud560 \uc218 \uc788\ub3c4\ub85d \ucd2c\uc601\uc6a9 \uce74\uba54\ub77c \uc138\ud305<\/li><li>\uc778\ud130\ubdf0 \ub300\uc0c1\uc790\uac00 \uc5b4\ub5a4 \ud50c\ub85c\uc6b0\ub85c Task\ub97c \uc9c4\ud589\ud558\ub294\uc9c0 \ud655\uc778\ud560 \uc218 \uc788\ub3c4\ub85d \ud14c\uc2a4\ud2b8 \uae30\uae30\uc758 \ud654\uba74 \uacf5\uc720 \uc138\ud305<\/li><li>\uc9c4\ud589\uc790\uac00 \uc9c8\ubb38\uc744 \ubcfc \uc218 \uc788\uace0, \uc11c\uae30\uac00 \ub2f5\ubcc0\uc744 \uc791\uc131\ud560 \uc218 \uc788\uc73c\uba70 \uad00\ucc30\uc790\uac00 \uba54\ubaa8\ub97c \ud560 \uc218 \uc788\ub294 \uc778\ud130\ubdf0 \ub300\uc0c1\uc790\uc758 \uc815\ubcf4\uac00 \ud3ec\ud568\ub41c \uc9c8\ubb38\uc9c0 \uc900\ube44<\/li><\/ul><p>\uc778\ud130\ubdf0\ub97c \uc9c4\ud589\ud558\ub294 \ubaa8\ub354\ub808\uc774\ud130\uc640 \uc11c\uae30\ub294 \uc624\ud504\ub77c\uc778 \ubbf8\ud305\ub8f8\uc5d0 \uc778\ud130\ubdf0 \ub300\uc0c1\uc790\uc640 \uc9c1\uc811 \ub300\uba74\ud558\uc5ec \uc9c8\ubb38\uc744 \ud558\uba70 \uba54\ubaa8\ub97c \uc791\uc131\ud558\uace0, \uad00\ucc30\uc790\ub294 \uad6c\uae00 \ubc0b\uc744 \ud1b5\ud574 \uacf5\uc720\ub418\ub294 \ud654\uba74\uc73c\ub85c \uc778\ud130\ubdf0 \uacfc\uc815\uc744 \uad00\ucc30\ud588\uc2b5\ub2c8\ub2e4. \uad00\ucc30\uc790 \uc785\uc7a5\uc5d0\uc11c\ub3c4 \uc911\uac04\uc911\uac04 \uad81\uae08\ud55c \uc810\uc774 \uc788\uc73c\uba74 \uacf5\uc720\ub41c \uc2dc\ud2b8\uc5d0 \ucd94\uac00 \uc9c8\ubb38\uc744 \uc791\uc131\ud560 \uc218 \uc788\ub3c4\ub85d \ud574\uc11c \ubaa8\ub354\ub808\uc774\ud130\uac00 \uc9c8\ubb38\ub4e4\uc744 \ud655\uc778 \ud560 \uc218 \uc788\ub3c4\ub85d \uc900\ube44\ud588\uc2b5\ub2c8\ub2e4.<\/p>","_padding":{"unit":"%","top":"0","right":"20","bottom":"0","left":"20","isLinked":false},"_padding_tablet":{"unit":"%","top":"","right":"","bottom":"","left":"","isLinked":true},"_padding_mobile":{"unit":"%","top":"0","right":"0","bottom":"0","left":"0","isLinked":false}},"elements":[],"widgetType":"text-editor"},{"id":"a0b9e0c","elType":"widget","settings":[],"elements":[],"widgetType":"spacer"}],"isInner":false}],"isInner":false},{"id":"1e90344","elType":"section","settings":[],"elements":[{"id":"1abfe64","elType":"column","settings":{"_column_size":100,"_inline_size":null},"elements":[{"id":"25f423c","elType":"widget","settings":{"title":"UT \uc9c4\ud589","title_color":"#FF5414","_padding":{"unit":"%","top":"0","right":"20","bottom":"0","left":"20","isLinked":false},"_padding_tablet":{"unit":"%","top":"","right":"","bottom":"","left":"","isLinked":true},"_padding_mobile":{"unit":"%","top":"0","right":"0","bottom":"0","left":"0","isLinked":false}},"elements":[],"widgetType":"heading"}],"isInner":false}],"isInner":false},{"id":"322a343","elType":"section","settings":[],"elements":[{"id":"85e5457","elType":"column","settings":{"_column_size":100,"_inline_size":null},"elements":[{"id":"36fc691","elType":"widget","settings":{"editor":"<p>\uc800\ub294 \uc774\ubc88 \uc0ac\uc6a9\uc131 \ud14c\uc2a4\ud2b8\uc5d0\uc11c UT \uc124\uacc4\uc640 \ubaa8\ub354\ub808\uc774\ud305\uc744 \ub2f4\ub2f9\ud588\uc5b4\uc694. UT\ub97c \uc9c4\ud589\ud558\ub294 \ubaa8\ub354\ub808\uc774\ud130 \uc785\uc7a5\uc5d0\uc11c \uc778\ud130\ubdf0\ub97c \uc5b4\ub5bb\uac8c \uc9c4\ud589\ud558\uace0 \uc774 \uacfc\uc815\uc5d0\uc11c \uc720\uc758\ud574\uc57c \ud560 \ubd80\ubd84\ub4e4\uc744 \uc54c\ub824\ub4dc\ub9b4\uac8c\uc694.<\/p>","_padding":{"unit":"%","top":"0","right":"20","bottom":"0","left":"20","isLinked":false},"_padding_tablet":{"unit":"%","top":"","right":"","bottom":"","left":"","isLinked":true},"_padding_mobile":{"unit":"%","top":"0","right":"0","bottom":"0","left":"0","isLinked":false}},"elements":[],"widgetType":"text-editor"}],"isInner":false}],"isInner":false},{"id":"9f3060c","elType":"section","settings":[],"elements":[{"id":"508c913","elType":"column","settings":{"_column_size":100,"_inline_size":null},"elements":[{"id":"2ce2347","elType":"widget","settings":{"title":"01. \uc778\ud130\ubdf0 \uc548\ub0b4 \ubc0f \uc0ac\uc804 \uc9c8\ubb38","header_size":"h3","title_color":"#000000","_padding":{"unit":"%","top":"0","right":"20","bottom":"0","left":"20","isLinked":false},"_padding_tablet":{"unit":"%","top":"","right":"","bottom":"","left":"","isLinked":true},"_padding_mobile":{"unit":"%","top":"0","right":"0","bottom":"0","left":"0","isLinked":false}},"elements":[],"widgetType":"heading"}],"isInner":false}],"isInner":false},{"id":"7bf7007","elType":"section","settings":[],"elements":[{"id":"29f0af8","elType":"column","settings":{"_column_size":100,"_inline_size":null},"elements":[{"id":"e27f1ed","elType":"widget","settings":{"editor":"<p>\uc0ac\uc804\uc5d0 \ubbf8\ub9ac \uc778\ud130\ubdf0 \ubc29\uc2dd\uc5d0 \ub300\ud574 \uc548\ub0b4\ud558\uc9c0\ub9cc \uc778\ud130\ubdf0\ub97c \uc2dc\uc791 \uc804 \ub300\uc0c1\uc790\uc5d0\uac8c \uc778\ud130\ubdf0 \uacfc\uc815\uc5d0 \ub300\ud574 \ud55c\ubc88 \ub354 \uc548\ub0b4\ud569\ub2c8\ub2e4. \ub610\ud55c \ud604\uc7a5\uc5d0\uc11c \uad81\uae08\ud574\ud558\uc2e4 \uc218 \uc788\ub294 \ucd2c\uc601\uc5d0 \ub300\ud55c \ubd80\ubd84\uacfc \uad00\ucc30\uc790\uac00 \uc5b4\ub5a4 \ubc29\uc2dd\uc73c\ub85c \uc5b4\ub5bb\uac8c \ucc38\uc5ec\ud558\ub294\uc9c0\uc5d0 \ub300\ud574\uc11c\ub3c4 \uc548\ub0b4\ub97c \ud569\ub2c8\ub2e4.<\/p><ul><li>\uc9c0\uae08 \uc9c4\ud589\ub418\ub294 \uc778\ud130\ubdf0\uac00 \uc5b4\ub5a4 \ubc29\uc2dd\uc73c\ub85c \uc9c4\ud589\ub418\ub294\uc9c0<\/li><li>\ucd2c\uc601 \ub3d9\uc758 \ubc1b\uae30 \ubc0f \uad00\ucc30\uc790 \uc874\uc7ac \uc548\ub0b4<\/li><li>\uc778\ud130\ubdf0 \uc2dc\uc791 \uc804 \uc2a4\ubab0\ud1a0\ud06c\ub97c \uc9c4\ud589\ud558\uc5ec, \uc778\ud130\ubdf0 \ub300\uc0c1\uc790\uc758 \ubc30\uacbd\uacfc \uc0c1\ud669\uc744 \ud30c\uc545\ud558\uace0 \ub77c\ud3ec(rapport)\ub97c \ud615\uc131<\/li><\/ul><p>\uc778\ud130\ubdf0 \uc2dc\uc791 \uc804 \uc2a4\ubab0\ud1a0\ud06c\ub97c \ud558\uba70 \uc5b4\ub5bb\uac8c \uc778\ud130\ubdf0\uc5d0 \ucc38\uc5ec\ud558\uac8c \ub418\uc5c8\ub294\uc9c0 \uc6b0\ub9ac \uc11c\ube44\uc2a4\uc5d0 \ub300\ud574 \ud3c9\uc18c\uc5d0 \uc5b4\ub5bb\uac8c \uc0dd\uac01\ud558\uace0 \uc0ac\uc6a9\ud558\uc168\ub294\uc9c0 \ub300\ud574 \uc774\uc57c\uae30\ub97c \ub098\ub204\uae30\ub3c4 \ud588\uc2b5\ub2c8\ub2e4. \uc9e7\uc740 \ub300\ud654\uc9c0\ub9cc \uc6b0\ub9ac\uac00 \uc758\ub3c4\ud55c \ub9ac\ud06c\ub8e8\ud305 \ub300\uc0c1\uc790\uac00 \ub9de\ub294\uc9c0 \uc2a4\ud06c\ub9ac\ub2dd\uc774 \uac00\ub2a5\ud558\uace0, \ubbf8\ub9ac \uc900\ube44\ud574\ub454 Task\uc640 \uc9c8\ubb38\uc744 \uac00\uac10\ud558\ub294 \ud310\ub2e8\uc744 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.<\/p>","_padding":{"unit":"%","top":"0","right":"20","bottom":"0","left":"20","isLinked":false},"_padding_tablet":{"unit":"%","top":"","right":"","bottom":"","left":"","isLinked":true},"_padding_mobile":{"unit":"%","top":"0","right":"0","bottom":"0","left":"0","isLinked":false}},"elements":[],"widgetType":"text-editor"}],"isInner":false}],"isInner":false},{"id":"d5de48c","elType":"section","settings":[],"elements":[{"id":"4419491","elType":"column","settings":{"_column_size":100,"_inline_size":null},"elements":[{"id":"f770baf","elType":"widget","settings":{"title":"02. \uc778\ud130\ubdf0 \uc9c4\ud589","header_size":"h3","title_color":"#000000","_padding":{"unit":"%","top":"0","right":"20","bottom":"0","left":"20","isLinked":false},"_padding_tablet":{"unit":"%","top":"","right":"","bottom":"","left":"","isLinked":true},"_padding_mobile":{"unit":"%","top":"0","right":"0","bottom":"0","left":"0","isLinked":false}},"elements":[],"widgetType":"heading"}],"isInner":false}],"isInner":false},{"id":"d5564b5","elType":"section","settings":[],"elements":[{"id":"3be72ac","elType":"column","settings":{"_column_size":100,"_inline_size":null},"elements":[{"id":"67f9621","elType":"widget","settings":{"image":{"url":"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2023\/09\/interview.png","id":3603,"alt":"","source":"library"},"image_size":"full","caption_source":"custom","caption":"\uc2e4\uc81c \uc778\ud130\ubdf0 \ub2f9\uc2dc \ubaa8\ub354\ub808\uc774\ud130 \ud654\uba74\uc5d0 \ub744\uc6cc\ub450\uc5c8\ub358 \ud654\uba74 \uc138\ud305","space":{"unit":"px","size":700,"sizes":[]},"space_tablet":{"unit":"px","size":"","sizes":[]},"space_mobile":{"unit":"px","size":"","sizes":[]},"image_border_radius":{"unit":"px","top":"16","right":"16","bottom":"16","left":"16","isLinked":true},"width_mobile":{"unit":"%","size":100,"sizes":[]}},"elements":[],"widgetType":"image"}],"isInner":false}],"isInner":false},{"id":"c81e33b","elType":"section","settings":[],"elements":[{"id":"abccb26","elType":"column","settings":{"_column_size":100,"_inline_size":null},"elements":[{"id":"c459b51","elType":"widget","settings":{"editor":"<ul><li><p>\ucda9\ubd84\ud788 \uad00\ucc30\ud558\uae30<\/p><p>\ucc38\uc5ec\uc790\ub9c8\ub2e4 Task\ub97c \uc218\ud589\ud558\ub294 \uc2dc\uac04\uc774 \ub2e4\ub97c \uc218 \uc788\uae30 \ub54c\ubb38\uc5d0 \ubaa8\ub354\ub808\uc774\ud130\ub294 \ucda9\ubd84\ud788 \uc778\ud130\ubdf0 \ub300\uc0c1\uc790\uac00 Task\ub97c \uc218\ud589\ud558\ub3c4\ub85d \uae30\ub2e4\ub9bd\ub2c8\ub2e4. \uc774 \uacfc\uc815\uc5d0\uc11c \uc11c\uae30\ub294 \uc0ac\uc6a9\uc790\uac00 Task\ub97c \uc218\ud589\ud558\ub294\ub370 \uc2dc\uac04\uc774 \uc5bc\ub9c8\ub098 \uac78\ub838\ub294\uc9c0, \uc5b4\ub5a4 \ubd80\ubd84\uc5d0\uc11c \uba38\ubb47\uac70\ub9ac\ub294\uc9c0 \uc5b4\ub5a4 \uacfc\uc815\uc744 \uac70\uccd0 Task\ub97c \uc218\ud589\ud558\ub294\uc9c0 \uc218\ud589\ud558\ub294 \uacfc\uc815\uc5d0\uc11c \uc5b4\ub5a4 \uc9c8\ubb38\uc744 \ud558\ub294\uc9c0 \ub4f1\ub4f1 \ubaa8\ub4e0 \uacfc\uc815\uc744 \uaf3c\uaf3c\ud558\uac8c \uad00\ucc30\ud558\uace0 \uae30\ub85d\ud569\ub2c8\ub2e4. \ubaa8\ub354\ub808\uc774\ud130\ub294 \uc2e4\uc2dc\uac04\uc73c\ub85c \uc11c\uae30\uac00 \uae30\ub85d\ud558\ub294 \ub0b4\uc6a9\uc744 \ubcf4\uba74\uc11c \ub2e4\uc74c\uc5d0 \uc5b4\ub5a4 \uc9c8\ubb38\uc744 \ud560\uc9c0 \ubbf8\ub9ac \uc900\ube44\ud569\ub2c8\ub2e4.<\/p><\/li><li><p>\uc9c8\ubb38\ud558\uae30<\/p><p>\uc218\ud589 \uacfc\uc815\uc5d0\uc11c \ubc1c\uacac\ub41c \ubd80\ubd84\uc744 \uc911\uc2ec\uc73c\ub85c \ud589\ub3d9\uc5d0 \ub300\ud55c \uc774\uc720\ub97c \ubb3b\uc2b5\ub2c8\ub2e4. \uc774\ub54c \uc720\ub3c4 \uc9c8\ubb38\uc744 \ud558\uc9c0 \uc54a\ub3c4\ub85d \uc8fc\uc758\ud569\ub2c8\ub2e4. \uc2e4\uc81c \uc778\ud130\ubdf0\ub97c \uc9c4\ud589\ud560 \ub54c\ub294 \uc774 \uc810\uc5d0 \uc720\uc758\ud574\uc11c \uc0ac\uc6a9\uc790\uac00 \uc9c1\uc811 \uc790\uc2e0\uc758 \ud589\ub3d9 \uc774\uc720\ub098 \uac10\uc815 \ub290\ub080 \uc810\uc744 \uc124\uba85\ud560 \uc218 \uc788\ub294 \uc9c8\ubb38\uc744 \uc911\uc810\uc801\uc73c\ub85c \ud588\uc2b5\ub2c8\ub2e4.<\/p><p>\uc774\ub54c \uc900\ube44\ub41c \uc9c8\ubb38 \uc678\uc5d0\ub3c4 \uad00\ucc30\uc790\uac00 \ucd94\uac00\ub85c \uc694\uccad\ud558\ub294 \uc9c8\ubb38\uc744 \ubb3c\uc5b4\ubcf4\uae30\ub3c4 \ud569\ub2c8\ub2e4.<\/p><\/li><li><p>\ub300\ub2f5\ud558\uae30<\/p><p>\uc778\ud130\ubdf0\ub97c \uc9c4\ud589\ud558\ub2e4 \ubcf4\uba74 \uc778\ud130\ubdf0 \ucc38\uac00\uc790\uac00 \uc81c\ud488\uc5d0 \ub300\ud55c \uc9c8\ubb38\uc744 \ud558\uae30\ub3c4 \ud569\ub2c8\ub2e4. \uc774\ub54c\ub294 \ubc14\ub85c \ub2f5\ubcc0\uc744 \ud558\uae30\ubcf4\ub2e4 \u2018\uc65c\u2019 \uadf8\ub7f0 \uc9c8\ubb38\uc744 \ud558\uac8c \ub418\uc5c8\ub294\uc9c0 \uc5ed\uc73c\ub85c \uc9c8\ubb38\ud558\uc5ec \uc0ac\uc6a9\uc790\uac00 \uc9c4\uc9dc \ud558\uace0 \uc2f6\uc740 \uc774\uc57c\uae30\uac00 \ubb34\uc5c7\uc778\uc9c0 \ud30c\uc545\ud558\ub824 \ud588\uc2b5\ub2c8\ub2e4. \ucda9\ubd84\ud788 \uc758\uc911\uc744 \ud30c\uc545\ud55c \ud6c4\uc5d0 \uc0ac\uc6a9\uc790\uac00 \uad81\uae08\ud574\ud588\ub358 \uc9c8\ubb38\uc5d0 \ub2f5\ubcc0\uc744 \ud558\uac70\ub098 \uc778\ud130\ubdf0\uac00 \uc644\uc804\ud788 \ub05d\ub09c \ub4a4\uc5d0 \ub2f5\ubcc0\uc744 \ub4dc\ub9ac\uae30\ub3c4 \ud588\uc2b5\ub2c8\ub2e4.<\/p><\/li><\/ul>","_padding":{"unit":"%","top":"0","right":"20","bottom":"0","left":"20","isLinked":false},"_padding_tablet":{"unit":"%","top":"","right":"","bottom":"","left":"","isLinked":true},"_padding_mobile":{"unit":"%","top":"0","right":"0","bottom":"0","left":"0","isLinked":false}},"elements":[],"widgetType":"text-editor"}],"isInner":false}],"isInner":false},{"id":"52d5a00","elType":"section","settings":[],"elements":[{"id":"f977a6a","elType":"column","settings":{"_column_size":100,"_inline_size":null},"elements":[{"id":"a7e201e","elType":"widget","settings":{"title":"03. \uc778\ud130\ubdf0 \uc885\ub8cc","header_size":"h3","title_color":"#000000","_padding":{"unit":"%","top":"0","right":"20","bottom":"0","left":"20","isLinked":false},"_padding_tablet":{"unit":"%","top":"","right":"","bottom":"","left":"","isLinked":true},"_padding_mobile":{"unit":"%","top":"0","right":"0","bottom":"0","left":"0","isLinked":false}},"elements":[],"widgetType":"heading"}],"isInner":false}],"isInner":false},{"id":"fbb65a9","elType":"section","settings":[],"elements":[{"id":"22013be","elType":"column","settings":{"_column_size":100,"_inline_size":null},"elements":[{"id":"bbf236b","elType":"widget","settings":{"editor":"<p>\uc900\ube44\ub41c Task\ub97c \uc9c4\ud589\ud558\uba70 \uc778\ud130\ubdf0\uac00 \ucda9\ubd84\ud788 \uc9c4\ud589\uc774 \ub418\uc5c8\ub2e4\uace0 \ud310\ub2e8\ub418\uba74 \uc778\ud130\ubdf0 \ub300\uc0c1\uc790\uc5d0\uac8c \uc885\ub8cc \uc548\ub0b4\ub97c \ud569\ub2c8\ub2e4. \uc774\ub54c \uc778\ud130\ubdf0 \ub0b4\uc6a9\uc740 \uc5b4\ub5bb\uac8c \ubcf4\uad00\ub418\uace0 \uad00\ub9ac\ub418\ub294\uc9c0, \uc0ac\ub840\uae08\uc740 \uc5b4\ub5a4 \ubc29\uc2dd\uc73c\ub85c \uc804\ub2ec\ub418\ub294\uc9c0 \ud55c \ubc88 \ub354 \uc548\ub0b4\ub97c \ub4dc\ub9bd\ub2c8\ub2e4.<\/p>","_padding":{"unit":"%","top":"0","right":"20","bottom":"0","left":"20","isLinked":false},"_padding_tablet":{"unit":"%","top":"","right":"","bottom":"","left":"","isLinked":true},"_padding_mobile":{"unit":"%","top":"0","right":"0","bottom":"0","left":"0","isLinked":false}},"elements":[],"widgetType":"text-editor"}],"isInner":false}],"isInner":false},{"id":"122c785","elType":"section","settings":[],"elements":[{"id":"dbcffe9","elType":"column","settings":{"_column_size":100,"_inline_size":null},"elements":[{"id":"2c4ba69","elType":"widget","settings":{"title":"04. \uc778\ud130\ubdf0 \uc885\ub8cc \ud6c4","header_size":"h3","title_color":"#000000","_padding":{"unit":"%","top":"0","right":"20","bottom":"0","left":"20","isLinked":false},"_padding_tablet":{"unit":"%","top":"","right":"","bottom":"","left":"","isLinked":true},"_padding_mobile":{"unit":"%","top":"0","right":"0","bottom":"0","left":"0","isLinked":false}},"elements":[],"widgetType":"heading"}],"isInner":false}],"isInner":false},{"id":"5053b18","elType":"section","settings":[],"elements":[{"id":"099e7dc","elType":"column","settings":{"_column_size":100,"_inline_size":null},"elements":[{"id":"43bfdf9","elType":"widget","settings":{"editor":"<p>\uc778\ud130\ubdf0 \uc885\ub8cc \uc9c1\ud6c4 \ubaa8\ub354\ub808\uc774\ud130\uc640 \uc11c\uae30\ub294 \ubc29\uae08 \uc9c4\ud589\ub41c \uc778\ud130\ubdf0\uc5d0 \ub300\ud574 \uc815\ub9ac\ud558\ub294 \uc2dc\uac04\uc744 \uac00\uc9d1\ub2c8\ub2e4. \uc778\ud130\ubdf0 \uacfc\uc815\uc5d0\uc11c \ubd80\uc871\ud55c \ubd80\ubd84\uc774\ub098 \uac1c\uc120\uc810\uc740 \uc5c6\uc5c8\ub294\uc9c0 \uc774\uc57c\uae30\ud558\uace0 \uc774\ud6c4 \uc9c4\ud589\ub418\ub294 \uc778\ud130\ubdf0\uc5d0\uc11c \ucc38\uace0\ud560 \ubd80\ubd84\ub4e4\uc744 \ud655\uc778\ud569\ub2c8\ub2e4. \uc2dc\uac04 \uc5ec\uc720\uac00 \uc788\ub2e4\uba74 \uc2e4\uc2dc\uac04\uc73c\ub85c \uc791\uc131\ud588\ub358 \uc778\ud130\ubdf0 \ub0b4\uc6a9\uc744 \uc815\ub9ac\ud558\uae30\ub3c4 \ud569\ub2c8\ub2e4.<\/p>","_padding":{"unit":"%","top":"0","right":"20","bottom":"0","left":"20","isLinked":false},"_padding_tablet":{"unit":"%","top":"","right":"","bottom":"","left":"","isLinked":true},"_padding_mobile":{"unit":"%","top":"0","right":"0","bottom":"0","left":"0","isLinked":false}},"elements":[],"widgetType":"text-editor"},{"id":"6078fb3","elType":"widget","settings":[],"elements":[],"widgetType":"spacer"}],"isInner":false}],"isInner":false},{"id":"6e6bc40","elType":"section","settings":[],"elements":[{"id":"81c8bf8","elType":"column","settings":{"_column_size":100,"_inline_size":null},"elements":[{"id":"22104cb","elType":"widget","settings":{"title":"UT \ubd84\uc11d \ubc0f \uc778\uc0ac\uc774\ud2b8 \ub3c4\ucd9c","title_color":"#FF5414","_padding":{"unit":"%","top":"0","right":"20","bottom":"0","left":"20","isLinked":false},"_padding_tablet":{"unit":"%","top":"","right":"","bottom":"","left":"","isLinked":true},"_padding_mobile":{"unit":"%","top":"0","right":"0","bottom":"0","left":"0","isLinked":false}},"elements":[],"widgetType":"heading"}],"isInner":false}],"isInner":false},{"id":"6862edc","elType":"section","settings":[],"elements":[{"id":"436d09e","elType":"column","settings":{"_column_size":100,"_inline_size":null},"elements":[{"id":"c8ad9e8","elType":"widget","settings":{"editor":"<p>\uc778\ud130\ubdf0 \uc885\ub8cc \ud6c4 \ub179\ud654\ubcf8\uacfc \uc791\uc131\ud588\ub358 \uad00\ucc30 \ubb38\uc11c\ub97c \ud1a0\ub300\ub85c UT \ub0b4\uc6a9\uc744 \ubd84\uc11d\ud569\ub2c8\ub2e4.<\/p><ul><li><p>Task \ub2ec\uc131 \uacb0\uacfc \uc9c0\ud45c \ubd84\uc11d<\/p><p>\uac01 Task \ubcc4\ub85c \uc0ac\uc804\uc5d0 \uc815\uc758\ud55c \uc131\uacf5 \uc9c0\ud45c\ub97c \uae30\uc900\uc73c\ub85c \uc778\ud130\ubdf0 \ub300\uc0c1\uc790\ub4e4\uc774 \uc5bc\ub9c8\ub098 \uc131\uacf5\ud588\ub294\uc9c0, \uacf5\ud1b5\uc801\uc73c\ub85c \ubcf4\uc778 \ud589\ub3d9\uc740 \uc5b4\ub5a0\ud588\ub294\uc9c0 \ub0b4\uc6a9\uc744 \uc791\uc131\ud558\uace0 \ubd84\uc11d\ud569\ub2c8\ub2e4.<\/p><\/li><li><p>Key Findings<\/p><p>\uad00\ucc30 \ubb38\uc11c\ub97c \ud1a0\ub300\ub85c \uacf5\ud1b5\uc801\uc73c\ub85c \ubc1c\uacac\ub41c \ud604\uc0c1\ub4e4\uc744 \uc815\ub9ac\ud569\ub2c8\ub2e4.<\/p><\/li><li><p>\uc778\uc0ac\uc774\ud2b8 \ub3c4\ucd9c<\/p><p>\uc704\uc758 \ub0b4\uc6a9\ub4e4\uc744 \uc870\ud569\ud558\uc5ec \ud604\uc7ac \ud53c\ucc98\uc5d0\uc11c \uc720\uc9c0\ud558\ub294 \ubd80\ubd84\uacfc \uac1c\uc120\uc774 \ud544\uc694\ud55c \ubd80\ubd84\ub4e4\uc744 \ud30c\uc545\ud569\ub2c8\ub2e4.<\/p><\/li><\/ul>","_padding":{"unit":"%","top":"0","right":"20","bottom":"0","left":"20","isLinked":false},"_padding_tablet":{"unit":"%","top":"","right":"","bottom":"","left":"","isLinked":true},"_padding_mobile":{"unit":"%","top":"0","right":"0","bottom":"0","left":"0","isLinked":false}},"elements":[],"widgetType":"text-editor"},{"id":"53925b8","elType":"widget","settings":[],"elements":[],"widgetType":"spacer"}],"isInner":false}],"isInner":false},{"id":"1936526","elType":"section","settings":[],"elements":[{"id":"c8b0a4d","elType":"column","settings":{"_column_size":100,"_inline_size":null},"elements":[{"id":"1b45c19","elType":"widget","settings":{"title":"UT \uc774\ud6c4 \uc5b4\ub5a4 \ubd80\ubd84\uc774 \uac1c\uc120\ub418\uc5c8\uc744\uae4c\uc694?","title_color":"#FF5414","_padding":{"unit":"%","top":"0","right":"20","bottom":"0","left":"20","isLinked":false},"_padding_tablet":{"unit":"%","top":"","right":"","bottom":"","left":"","isLinked":true},"_padding_mobile":{"unit":"%","top":"0","right":"0","bottom":"0","left":"0","isLinked":false}},"elements":[],"widgetType":"heading"}],"isInner":false}],"isInner":false},{"id":"a99127c","elType":"section","settings":[],"elements":[{"id":"739e61f","elType":"column","settings":{"_column_size":100,"_inline_size":null},"elements":[{"id":"6e8e95c","elType":"widget","settings":{"image":{"url":"https:\/\/blog.dramancompany.com\/wp-content\/uploads\/2023\/09\/solution.png","id":3604,"alt":"","source":"library"},"image_size":"full","space":{"unit":"px","size":700,"sizes":[]},"space_tablet":{"unit":"px","size":"","sizes":[]},"space_mobile":{"unit":"px","size":"","sizes":[]},"image_border_radius":{"unit":"px","top":"16","right":"16","bottom":"16","left":"16","isLinked":true},"width_mobile":{"unit":"%","size":100,"sizes":[]}},"elements":[],"widgetType":"image"}],"isInner":false}],"isInner":false},{"id":"9d2a130","elType":"section","settings":[],"elements":[{"id":"4ef3507","elType":"column","settings":{"_column_size":100,"_inline_size":null},"elements":[{"id":"3e7c3ee","elType":"widget","settings":{"editor":"<p>UT\ub97c \ud1b5\ud574 \ubcc0\uacbd\ub41c \ub300\ud45c\uc801\uc778 \uc608\ub294 '\uc624\ub298\uc758 \uc18c\uc2dd' \uc601\uc5ed\uc785\ub2c8\ub2e4.<\/p><p>\uc800\ud76c\ub294 \ub9e4\uc77c \uc0ac\uc6a9\uc790\uac00 \uac00\uc7a5 \uba3c\uc800 \ud655\uc778\ud574\uc57c \ud560 \uc18c\uc2dd\uc744 \uac00\uc7a5 \uc798 \ubcf4\uc774\ub294 \uacf3\uc5d0 \uc548\ub0b4\ud568\uc73c\ub85c\uc368 \ube60\ub974\uac8c \uc18c\uc2dd\uc744 \ud655\uc778\ud558\uace0 \uc0c1\uc138 \ub0b4\uc6a9\uc5d0 \uc811\uadfc\ud560 \uc218 \uc788\ub3c4\ub85d \uc758\ub3c4\ud588\uc9c0\ub9cc \uc2e4\uc81c UT\uc5d0\uc11c\ub294 \uc0ac\uc6a9\uc790\uac00 \ud574\ub2f9 \uc601\uc5ed \uc790\uccb4\ub97c \uc778\uc9c0\ud558\uc9c0 \ubabb\ud558\uac70\ub098 \uad11\uace0\ub85c \uc778\uc9c0\ud558\ub294 \uacbd\uc6b0\uac00 \ub9ce\uc558\uc2b5\ub2c8\ub2e4.<\/p><p>\uc774\ud6c4 \uae30\uc874\uc548\uacfc \ud574\ub2f9 \uc601\uc5ed\uc744 \ub2e4\ub978 \ucf58\ud150\uce20\uc640 \ub3d9\uc77c\ud55c \ud615\ud0dc\ub85c \uc81c\uacf5\ud558\ub294 \uc548\uc744 \ube44\uad50\ud558\ub294 A\/B \ud14c\uc2a4\ud2b8\ub97c \uc9c4\ud589\ud588\uc2b5\ub2c8\ub2e4. \uae30\uc874\uc758 \uc0c1\ub2e8 \uc601\uc5ed\uc5d0\uc11c \uc548\ub0b4\ud560 \ub54c\ubcf4\ub2e4 \ucf58\ud150\uce20 \ud615\ud0dc\ub85c \uc81c\uacf5\ud588\uc744 \ub54c 60% \ub354 \ub9ce\uc740 \uc804\ud658\uc728(\ub178\ucd9c \uace0\uac1d \ub300\ube44 \ud074\ub9ad \ub960)\uc774 \uc77c\uc5b4\ub098\ub294 \uac83\uc744 \ud655\uc778\ud558\uace0 \uac1c\uc120\uc548\uc744 100% \ubc30\ud3ec\ud558\ub294 \uacb0\uc815\uc744 \ud560 \uc218 \uc788\uc5c8\uc2b5\ub2c8\ub2e4.<\/p>","_padding":{"unit":"%","top":"0","right":"20","bottom":"0","left":"20","isLinked":false},"_padding_tablet":{"unit":"%","top":"","right":"","bottom":"","left":"","isLinked":true},"_padding_mobile":{"unit":"%","top":"0","right":"0","bottom":"0","left":"0","isLinked":false}},"elements":[],"widgetType":"text-editor"},{"id":"e138166","elType":"widget","settings":[],"elements":[],"widgetType":"spacer"}],"isInner":false}],"isInner":false},{"id":"886372e","elType":"section","settings":[],"elements":[{"id":"82ebe59","elType":"column","settings":{"_column_size":100,"_inline_size":null},"elements":[{"id":"6116c66","elType":"widget","settings":{"title":"\uae00\uc744 \ub9c8\uce58\uba70","title_color":"#FF5414","_padding":{"unit":"%","top":"0","right":"20","bottom":"0","left":"20","isLinked":false},"_padding_tablet":{"unit":"%","top":"","right":"","bottom":"","left":"","isLinked":true},"_padding_mobile":{"unit":"%","top":"0","right":"0","bottom":"0","left":"0","isLinked":false}},"elements":[],"widgetType":"heading"}],"isInner":false}],"isInner":false},{"id":"cd5d2bf","elType":"section","settings":[],"elements":[{"id":"e3e1437","elType":"column","settings":{"_column_size":100,"_inline_size":null},"elements":[{"id":"8006147","elType":"widget","settings":{"editor":"<p>UX\ub9ac\uc11c\ucc98\uc5c6\uc774 \ub9ac\uba64\ubc84 \ud504\ub85c\ub355\ud2b8 \ub514\uc790\uc774\ub108\ub294 \uc5b4\ub5bb\uac8c \uc0ac\uc6a9\uc790 \ud14c\uc2a4\ud2b8\ub97c \ud558\ub294\uc9c0 \uc18c\uac1c\ud588\uc5b4\uc694. \ub9ac\uba64\ubc84\uc5d0\uc11c\ub294 UT\ubfd0\ub9cc \uc544\ub2c8\ub77c \uc124\ubb38\uc870\uc0ac, \uc778\ud130\ubdf0, A\/B \ud14c\uc2a4\ud2b8 \ub4f1 \ub2e4\uc591\ud55c \ub9ac\uc11c\uce58\ub97c \uc9c4\ud589\ud558\uba70 \uc0ac\uc6a9\uc790\ub97c \uc880 \ub354 \uc774\ud574\ud558\uace0 \uc0ac\uc6a9\uc790\ub97c \uc704\ud55c \uc758\uc0ac\uacb0\uc815\uc744 \ud558\uae30 \uc704\ud55c \ub178\ub825\ub4e4\uc744 \ud558\uace0 \uc788\uc5b4\uc694. \uc55e\uc73c\ub85c\ub3c4 \ub354 \ub9ce\uc740 \uc0ac\uc6a9\uc790\uc758 \ud53c\ub4dc\ubc31\uc744 \ud1b5\ud574 \ubc1c\uc804\ud558\ub294 \ub9ac\uba64\ubc84\ub97c \uae30\ub300\ud574 \uc8fc\uc138\uc694.<\/p>","_padding":{"unit":"%","top":"0","right":"20","bottom":"0","left":"20","isLinked":false},"_padding_tablet":{"unit":"%","top":"","right":"","bottom":"","left":"","isLinked":true},"_padding_mobile":{"unit":"%","top":"0","right":"0","bottom":"0","left":"0","isLinked":false}},"elements":[],"widgetType":"text-editor"}],"isInner":false}],"isInner":false},{"id":"b1e7b2c","elType":"section","settings":[],"elements":[{"id":"c7cadc7","elType":"column","settings":{"_column_size":100,"_inline_size":null},"elements":[{"id":"693d68c","elType":"widget","settings":[],"elements":[],"widgetType":"spacer"}],"isInner":false}],"isInner":false}]]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_elementor_page_assets]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[3602]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[%eb%a6%ac%eb%a9%a4%eb%b2%84%ec%97%90%ec%84%9c-ut%ec%82%ac%ec%9a%a9%ec%9e%90-%ed%85%8c%ec%8a%a4%ed%8a%b8%eb%8a%94-%ec%96%b4%eb%96%bb%ea%b2%8c-%ec%a7%84%ed%96%89%ed%95%98%eb%82%98%ec%9a%94]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>12864</wp:comment_id>
			<wp:comment_author><![CDATA[이금춘]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[keumchoon.lee@hanatour.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.8.204]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2023-09-15 07:52:14]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2023-09-14 22:52:14]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[좋은 글 잘 봤습니다.
메일로도 보내주셔서 꽤 집중해서 봤습니다.
감사합니다.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1694731934.813585;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[AWS re:Invent 2023 참관기]]></title>
		<link>https://blog.dramancompany.com/2024/03/aws-reinvent-2023-%ec%b0%b8%ea%b4%80%ea%b8%b0/</link>
		<pubDate>Mon, 04 Mar 2024 02:15:16 +0000</pubDate>
		<dc:creator><![CDATA[mgpark]]></dc:creator>
		<guid isPermaLink="false">https://blog.dramancompany.com/?p=3642</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>안녕하세요? PSE(Platform Server Engineering) 파트 DevOps 이정민, 빅데이터센터 AI Lab ML engineer 박민규입니다. 이렇게 2명은 2023 AWS re:Invent를 다녀왔는데요, event 참관기를 들려 드리려 합니다!</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>목차는 다음과 같습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>1. AWS re:Invent 소개</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>2. AWS re:Invent를 준비하며(Tip 포함)&nbsp;</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>3. 현장 소개</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>4. 인상적이었던 세션 소개</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"large"} -->
<p class="has-large-font-size"></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2><strong>1. AWS re:Invent 소개</strong></h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>AWS는 다양한 크기의 이벤트들을 개최하지만, 그중에서도 주목할 만한 메이저 이벤트는 세 가지입니다. 이 중 re:Inforce는 클라우드 보안, 컴플라이언스, 신원 및 프라이버시에 초점을 맞춘 행사로, 규모는 크지 않지만 매년 그 중요성이 커지고 있습니다. 반면, re:Mars는 Machine Learning (ML), Automation, Robotics, 및 Space (MARS) 분야에 중점을 두고 있어 기술의 최전선을 엿볼 수 있는 장입니다. 그러나 이 모든 것을 아우르는 가장 크고 포괄적인 이벤트는 바로 re:Invent입니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>re:Invent는 AWS가 제공하는 모든 솔루션에 대해 다루며, 그 규모와 다양성에서 독보적입니다. 일반적으로 미국 네바다 주 라스베가스에서 열리는 이 이벤트는, 그 크기만큼이나 화려하고 방대합니다. re:Inforce와 같은 작은 이벤트들이 해마다 장소를 옮기는 것과 달리, re:Invent는 라스베가스의 메인 호텔들의 세미나룸을 전용으로 사용할 정도로 대규모입니다. 특히, 이번 2023년 re:Invent는 AI/ML에 큰 비중을 두었습니다. 다양한 세션들 중에서도 Amazon Bedrock에 관한 내용이 주목을 받았습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"large"} -->
<p class="has-large-font-size"></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2><strong>2. AWS re:Invent를 준비하며(Tip 포함)</strong></h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>저희 드라마앤컴퍼니는 MSP 메가존클라우드와 파트너십을 맺고 있고, 메가존클라우드와 함께 이번 2023 AWS re:Invent를 참석하게 됐습니다. 메가존클라우드에서는 드라마앤컴퍼니 담당 매니저를 배정하여 비행기 예약, 호텔 예약 등 현지에서 필요한 부분들을 지원해주었습니다. 다만 event에서 들을 세션을 예약하는 것은 개인이 해야 하기 때문에 관심있는 세션을 놓치지 않고 예약하는게 중요합니다. re:Invent를 제대로 즐기기 위해서 세션 예약하는 방법과 Tip을 소개합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>1) 세션 예약 날짜와 시간 잘 check하기</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>세션 예약 일시에 대한 정보가 공식 홈페이지에 잘 안 보일 수 있으니 한국 AWS 공식 사이트나 커뮤니티를 잘 확인하고 회원가입 할 때 사용한 이메일도 잘 확인하여 정확한 예약 일시를 확인합니다. 예약이 시작되면 실시간으로 인기있는 세션들은 금방 예약이 완료되니 우선순위에 따라 개인의 전략대로 예약하는 것을 권장드립니다! re:Invent는 미국에서 열리기 때문에 예약 일시도 보통 미국 시간에 맞춰서 정해집니다. 그래서 한국 시간으로는 새벽에 예약해야 한다는 것..! 잊지 말아 주세요.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>2) 동선에 따른 세션 즐겨찾기</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>공식 홈페이지에서 로그인하고 세션 목록을 즐겨찾기 해놓으면 예약할 때 바로 내가 원하는 세션을 골라 예약할 수 있습니다. 그런데 라스 베가스 strip(도시 중심부에 위치한, 세계적으로 유명한 호텔, 카지노, 레스토랑, 쇼핑몰, 엔터테인먼트 장소가 밀집된 지역)에서 세션이 열리는 호텔들이 멀리 떨어진 경우도 있고 호텔도 워낙 커서 세션장을 옮겨 다니는 데도 여유가 필요합니다. AWS에서는 참석자들의 편의를 위해 호텔에서 호텔 간의 셔틀 버스를 제공해줍니다. 그래서 하루 안에 너무 많은 호텔을 이동하는 것은 비효율적이고 1개에서 2개 정도 호텔을 골라 세션을 예약하는 것이 좋습니다. (아래 Figure 1을 보면 베니션, 시저스포럼은 가깝지만 만달레이베이와는 거리가 꽤 됩니다!)</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-3644" style="width: 900px;" src="https://blog.dramancompany.com/wp-content/uploads/2024/03/reinvent-map-2023.png.webp" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><mark style="background-color:rgba(0, 0, 0, 0);color:#656565" class="has-inline-color">Figure 1. AWS re:Invent Campus Map</mark></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>3) 티켓 구매 후 내 사진 등록하기</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>온라인으로 티켓을 구매한 뒤에 자신의 사진을 등록할 수 있습니다. 이 사진은 현장에서 수령받는 뱃지에 이미지로 들어가게 됩니다. 아래는 현장에서 수령한 뱃지를 찍은 사진인데요, 저(민규)는 사전에 사진을 등록하는 것을 깜빡해 현장에서 급하게 사진을 찍었습니다. 사람들의 뱃지를 보면 다들 멋진 사진을 미리 등록했던데 저는 그러지 못해 아쉬웠습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-3647" style="width: 180px;" src="https://blog.dramancompany.com/wp-content/uploads/2024/03/IMG_6603.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><mark style="background-color:rgba(0, 0, 0, 0);color:#666666" class="has-inline-color">Figure 2. 수령한 뱃지</mark></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"large"} -->
<p class="has-large-font-size"></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2><strong>3. 현장 소개</strong></h2>
<!-- /wp:heading -->

<!-- wp:heading {"level":4} -->
<h4>1) 현장 분위기</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>IT 관련 event 중 거의 가장 큰 event인 만큼 현장의 규모는 압도적으로 느껴졌고, 그 규모를 모두 감당하기 위해 이뤄지는 시스템은 상당히 효율적이었습니다. 처음 등록 할 때 뱃지와 후드를 수령하게 되는데 매우 빠르게 진행되다보니 사람들이 많아도 기다리는 시간이 길지 않았습니다. 등록한 사람들 한정으로 제공하는 무료 식사와 간식을 먹는 데도 수월했고 호텔 간 이동도 매우 편리했습니다. 여러번 event를 진행하면서 쌓인 노하우가 느껴졌던 것 같습니다. Event 기간 동안 느낀 불편함은 전혀 없었기에 세션에 집중할 수 있었고 event를 오로지 즐길 수 있었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>AWS re:Invent 기간동안 strip에는 re:Invent에 참여하는 엔지니어들로 가득 차있었습니다. 지나가는 대부분의 사람들이 뱃지를 목에 걸고 있었고 특히 참여자들에게 굿즈로 나눠주는 기모 후드집업을 다들 입고 다녀서 약간의 소속감(?)을 느낄 수도 있었습니다. 물론 화려함으로 유명한 도시 답게 패셔너블한 사람들도 종종 보였지만 전세계의 너드들이 도시를 가득 채우고 있다보니 신기하기도 하고 재밌기도 했습니다. 그렇게 도시에 같은 목적을 가진 사람들이 많이 있다보니 좋았던 점도 있었는데요, 처음 도시를 적응 할 때 도움이 많이 되었습니다. 뱃지를 수령하러 갈 때나 호텔 간의 이동을 할 때 길이 복잡해서 찾기가 어려운 상황이 발생 했는데 후드티를 입은 사람들이 가는 길을 따라가다보면 자연스럽게 제가 원하는 장소에 도착해있기도 했습니다! 저희가 묵었던 호텔은 시저스팰리스라는 호텔이었는데요, 숙소에서 세션장이 모여있는 베니션 호텔이나 시저스포럼은 거리가 가까워서 걸어 다녔습니다. 그런데 가는 길이 어렵다 보니 조금 헤매기도 했습니다. 가는 길이 여러 방법이 있어 가장 짧게 걸리는 길을 미리 파악해 놓는 것도 도움이 되니 현장에 일찍 도착하셨다면 미리 투어를 해보시는 것을 추천해 드립니다!</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-3649" style="width: 400px;" src="https://blog.dramancompany.com/wp-content/uploads/2024/03/IMG_6637.png" alt="">          <img class="wp-image-3650" style="width: 400px;" src="https://blog.dramancompany.com/wp-content/uploads/2024/03/IMG_6640.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><mark style="background-color:rgba(0, 0, 0, 0);color:#666666" class="has-inline-color">Figure 3. 시저스 포럼 내부 통로 / Figure 4. 세션장 내부 분위기</mark></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>2) 세션장 소개</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>세션을 시작하기 전에 AWS 행사장에 도착하면, 예약자와 미예약자로 나누어진 두 줄에 서게 됩니다. 인기 있는 세션의 경우, 일찍 줄을 서지 않으면 서 있을 공간조차 없어 세션에 참여하지 못할 수 있습니다. 실제로 정말 인기 있는 세션에는 사람들이 30분에서 1시간 전부터 줄을 서기 시작합니다. 만약 세션에 들어가지 못한다면, 화면으로 세션을 시청할 수 있는 공간이 마련되어 있으며, 각 의자에 비치된 무선 헤드셋을 통해 스피커의 목소리를 더욱 선명하게 들을 수 있습니다. 그럼에도 현장에서 직접 듣는 경험은 또 다른 매력을 가지고 있어, 이 분위기를 직접 느껴보는 것이 좋습니다. 대부분의 세션은 나중에 유튜브를 통해 들을 수 있지만, 영상 녹화를 하지 않는 세션도 있어, 현장에서 녹음하거나 슬라이드를 사진으로 찍어 기록하는 것도 좋은 방법이 될 수 있습니다. 세션은 호텔마다 주로 다루는 주제가 있어서 관심 있는 주제가 주로 오픈된 호텔에서 집중적으로 세션을 듣는 것도 좋을 것 같습니다. 한 호텔에서 여러 세션을 연이어 듣다 보면 휴식이 필요한데, 로비마다 과자나 커피 등의 다과가 제공되니 이런 휴식공간을 잘 즐기며 체력을 보충하는 것도 좋은 방법입니다!</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>만약 호텔이 아직 익숙하지 않아 세션장을 찾기 어려울 때는 'Ask me'라고 쓰인 노란 티셔츠를 입은 사람을 찾아 질문하면 친절하게 안내해줍니다. 여담으로 노란 티셔츠를 입은 분들은 대부분 라스베이거스 거주민으로 이러한 행사가 있을 때 단기 알바로 지원해 행사를 돕는다고 합니다. 세션의 종류에 따라 분위기가 다양한데, Q&amp;A 시간을 많이 주는 활발한 세션도 있고, 거의 강연식으로 정보만 전달하고 끝나는 세션도 있습니다. 너무 듣기만 하는 세션으로 일정을 구성하면 지루할 수 있으니, 다양한 형식의 세션을 경험해 보는 것을 추천해 드립니다!</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-3648" style="width: 400px;" src="https://blog.dramancompany.com/wp-content/uploads/2024/03/IMG_6588.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><mark style="background-color:rgba(0, 0, 0, 0);color:#656565" class="has-inline-color">Figure 5. Ask me!를 입고있는 안내원</mark></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>3) Expo 소개</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Expo는 AWS의 파트너 및 기술 솔루션 제공 업체들을 직접 만나보고 체험 할 수 있는 공간입니다. 업체들은 부스를 만들어 자신들의 서비스와 솔루션을 전시합니다. 업체마다 부스 규모가 상이한데 어떤 부스에서는 자신들만의 프리젠테이션 타임을 갖고 작은 세션을 진행하기도 합니다. 저는(민규) 특히 AI와 관련된 솔루션에 관심이 있어 LightningAI나 DATASTAX와 같은 업체에서 제공하는 솔루션에 대해 이야기를 나누며 의미있는 시간을 가졌습니다. 원래 Lightning은 AI를 개발할 때 사용하는 라이브러리인데 해당 팀에서 AI 데이터, 학습, 배포 등을 편리하게 하나의 솔루션으로 관리할 수 있도록 LightningAI라는 앱을 만들었습니다. 또한, 드라마앤컴퍼니는 vector search에도 관심이 많은데 DATASTAX가 관련한 솔루션을 제공하고 있어 소개받은 기능들이 흥미롭다고 느꼈습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>또 눈길을 끌었던 것은 DeepRacer의 자율주행 모델 competition이었는데요, 세계 각국의 AI engineer들이 각자가 만든 강화학습 모델을 대회에 등록하고 자신의 알고리즘으로 장난감 자동차를 자율주행하도록 했습니다. 누가 더 빠르게 경기장을 도는지 rap time을 재고 순위가 실시간으로 변경되는 것을 보니 알고리즘을 만든 engineer들이 멋지다는 생각이 들었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>부스를 돌아다니다 보면 각 업체에서 굿즈(Swag)를 주는데요, 보통 티셔츠를 주는 곳이 많고 스티커, 모자 등을 얻을 수 있습니다. Expo는 보통 월~목까지 진행되지만, 수요일이나 목요일 즈음에 가게 되면 제공하는 굿즈들이 품절되어 못 받을 수 있으니 굿즈에 진심이라면 일찍 Expo를 돌아보시는 것을 추천해 드립니다! 굿즈를 받을 때는 목에 걸고 있는 뱃지를 찍게 되는데요, 뱃지를 찍으면 나의 이메일 주소가 해당 업체에 등록되고 업체는 event 이후 등록한 이메일에 cold mail을 보내게 됩니다. 굿즈를 많이 수집하면 그만큼 나의 이메일 주소가 많이 노출되는 것이니 cold mail을 걱정한다면 처음 event 등록 할 때 sub 이메일 주소를 적는 편이 더 나을 것 같습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-3654" style="width: 400px;" src="https://blog.dramancompany.com/wp-content/uploads/2024/03/IMG_6732.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><mark style="background-color:rgba(0, 0, 0, 0);color:#656565" class="has-inline-color">Figure 6. Expo 내부 분위기</mark></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>4) Networking</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>AWS re:Invent는 다양한 나라, 다양한 기업에의 engineer들이 모이는 곳이니 networking도 정말 중요한 부분입니다. Networking을 통해 나누는 대화에서 좋은 insight를 얻을 수도 있고 맺어 놓은 좋은 관계가 나중에 나의 업무에 도움이 될 수도 있기 때문입니다. 첫날에는 AWS 한국인의 밤이 열렸는데요. 많은 한국인이 넓은 bar에 모여 라이브 음악을 들으면서 음식을 즐기고 테이블에 앉아 networking을 했습니다. 서로 명함을 주고받고. 서로가 하는 일을 소개했고, 회사 분위기나 업무에 대한 고충 같은 이야기를 나눴습니다. 또 저희 드라마앤컴퍼니는 벤더사인 메가존클라우드에서 만든 자리에 참석하여 다양한 Engineer들을 만나 흥미로운 대화들을 나눴습니다. 낮에는 세션을 듣고 밤에는 이런 networking 자리에 참여하다 보니 체력관리도 중요하다는 것을 깨달았습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>진행했던 세션 중에 한국어 세션들도 몇개가 있어 참석해봤는데 거기서도 좋은 networking 기회들이 있었습니다. 세션이 마무리되고 speaker를 찾아가 몇가지 질문을 하면서 명함을 주고받고 친분을 쌓을 수 있었습니다. 심지어 비행기에서 만난 인연들도 있었는데요, 돌아가는 첫 비행에서는 AWS에서 일하는 Account Manager와 대화를 나누며 링크드인을 교환하고 두 번째 비행에서는 AI 관련 논문을 읽고 있던 soft engineer와 networking을 했습니다. 먼저 다가가는 것이 어려운 것도 있고 언어의 장벽도 있지만 이렇게 주어진 기회들을 놓치지 않고 networking에 적극적인 자세로 임한다면 돌아봤을 때 후회가 없을 것 같다는 생각이 들었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"large"} -->
<p class="has-large-font-size"></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2><strong>4. 인상적이었던 세션 소개</strong></h2>
<!-- /wp:heading -->

<!-- wp:heading {"level":4} -->
<h4>정민</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>마이그레이션</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>저는 다양한 주제의 세션들에 참가하였는데요. 첫 번째로는 얼마 전 마무리된 AWS 리전 마이그레이션 작업을 대비하기 위해 Multi-region 아키텍처 구성, Mass Migration과 관련된 세션을 여럿 참석했습니다. 다소 뻔한 얘기일 수 있지만 Multi-region 아키텍처를 잘 구성하기 위해서는 ‘모든 인프라 리소스를 코드화’하고, ‘리전 간 인프라 배포에 소요되는 시간(bake time)’에 여유를 두어야 한다는 것을 강조하였는데요. 저희도 리전 마이그레이션을 위해 모든 인프라 리소스를 Terraform으로 관리하고 있었고, 덕분에 지난 1월 무사히 마이그레이션 작업을 마무리할 수 있었습니다. (Figure 7)</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-3659" style="width: 600px;" src="https://blog.dramancompany.com/wp-content/uploads/2024/03/838698B3-A5AB-426E-A25E-A2180BC7BF7D.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><mark style="background-color:rgba(0, 0, 0, 0);color:#656565" class="has-inline-color">Figure 7</mark></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>기조연설</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>re:Invent에서 또 빼놓을 수 없는 것이 바로 기조연설인데요. 매일 아침 진행되는 기조연설은 AWS의 CEO, CTO를 비롯한 임원들이 등장하여 현재 AWS가 집중하고 있는 서비스와 신기능에 대한 Summary를 제공합니다. 올해에도 여러가지 흥미로운 주제가 있었지만, 특히나 LLM과 GenAI 등 AI 기술에 대한 내용이 돋보였는데요. 행사 둘째날 기조연설에서 공개된 Amazon Q는 AWS가 제공하는 GenAI 서비스로, 공개 당일에 프리뷰 버전이 AWS 콘솔에서 사용 가능하도록 바로 배포가 되었습니다. 저도 세션을 듣던 중간에 AWS 콘솔에 임베딩된 Amazon Q와 몇 마디 대화를 나눠보았는데요. 대부분의 질문에 잘 답변하는 모습을 확인할 수 있었습니다. (Figure 8)</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-3660" style="width: 700px;" src="https://blog.dramancompany.com/wp-content/uploads/2024/03/image-2.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><mark style="background-color:rgba(0, 0, 0, 0);color:#656565" class="has-inline-color">Figure 8</mark>. Amazon Q로 네트워크 라우팅 이슈를 디버깅하는 모습(출처: <a href="https://aws.amazon.com/ko/blogs/networking-and-content-delivery/introducing-amazon-q-support-for-network-troubleshooting/" target="_blank" rel="noreferrer noopener">https://aws.amazon.com/ko/blogs/networking-and-content-delivery/introducing-amazon-q-support-for-network-troubleshooting/</a>)</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Amazon Q</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Amazon Q는 나, 혹은 우리 조직의 Private repository나 Wiki 등의 데이터와 연동하여 Personalized된 답변을 받아볼 수도 있고, Amazon Connect와 연동하여 고객센터의 상담이 더 빠르고 정확하게 진행될 수 있도록 연동하는 기능도 제공하고 있습니다. (OpenAI의 ChatGPT또한 비슷한 기능들을 모두 지원하고 있어요. 아쉬운 점은 ChatGPT는 한국어를 지원하지만 Amazon Q는 아직 한국어를 지원하지 않습니다.) 저희 팀에서도 올해 내부 로그 분석과 장애대응 Runbook에 GenAI를 통합하는 테스트를 진행할 계획을 가지고 있는데요. 더 편리한 연동을 위해 Amazon Q의 한국어 지원이 빠르게 릴리즈되기를 희망하고 있습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>마지막으로 리멤버가 엄청난 사용자 데이터와 뛰어난 AI 모델을 가지고 있는 만큼, 저도 자연스럽게 데이터 파이프라인과 ML 워크로드에 대한 관심을 많이 가지게 되었는데요. 이번 re:Invent를 기점으로 AWS Glue, Redshift와 같은 관리형 서비스에서 Apache Iceberg를 지원한다고 하여, Iceberg 기반의 분석 플랫폼을 구성하는 세션에 참석해보았습니다. 기존 Hadoop 시스템의 HDFS와 다르게 설계부터 S3와 같은 Object Storage를 고려하였다는 점이 인상적이었고, 이러한 장점들을 배경으로 Netflix가 Hive에서 Iceberg 생태계로 전환하는 과정 역시 흥미로운 주제였습니다. (Figure 9)</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-3658" style="width: 570px;" src="https://blog.dramancompany.com/wp-content/uploads/2024/03/6FC7F5C7-B6EA-45A3-B8D5-B8539762A663_1_105_c.jpeg" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><mark style="background-color:rgba(0, 0, 0, 0);color:#656565" class="has-inline-color">Figure 9</mark></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Express One Zone</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>또, 새롭게 출시된 S3 Storage Class인 Express One Zone에 관련된 세션에 참석했는데요. Express One Zone Class는 S3 Standard Class와 다르게, 데이터를 1개 AZ에만 저장하는 대신, 훨씬 빠른 Access 속도를 제공하는 스토리지 클래스입니다. 데이터를 1개 AZ에만 저장하기 때문에 같은 AZ에 위치한 컴퓨팅 리소스에서 접근하는 경우 데이터 액세스 속도가 빠르고, GetObject 비용이 Standard class 대비 50%까지 저렴하다는 장점을 가지고 있습니다. 세션에서는 HA가 필요하지 않고, 작은 사이즈의 분석용 데이터(ex. parquet와 같은)를 잠시 올려두는 용도의 사용을 예시로 들어주었는데요. 최근 발표된 S3 MountPoint 기능과 결합하여 어플리케이션 레이어에서도 Temporary한 파일을 로딩하는 용도로 운영하기에 괜찮을 것 같다는 아이디어를 얻었습니다. (Figure 10)</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-3661" style="width: 570px;" src="https://blog.dramancompany.com/wp-content/uploads/2024/03/IMG_0782-scaled.jpg" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><mark style="background-color:rgba(0, 0, 0, 0);color:#656565" class="has-inline-color">Figure 10</mark></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"x-large"} -->
<p class="has-x-large-font-size"></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>민규</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>저는 정민님처럼 여러 세션을 소개하기 보다 한 세션을 집중적으로 소개할까 합니다. 소개 할 세션 제목은 ‘What’s new in Amazon OpenSearch Service’ 입니다. 저는(민규) ML Engineer로서 AI와 관련된 여러 세션을 들었는데 저희 팀에서 사용하고 있는 OpenSearch에 대한 신기능이 있다고 하여 기대감을 가지고 참석했습니다. 해당 세션을 듣기 전까지 AI 관련 세션을 들었지만 AWS Bedrock에 대한 설명이 많고 중복되어 흥미가 떨어진 상태였습니다. 하지만 해당 세션을 듣고 다시 즐겁게 event를 참여할 수 있었고, 들었던 내용을 동료들과 공유하면 어떨까 하고 생각했습니다. 해당 세션은 AWS OpenSearch에서 새롭게 추가된 feature를 소개하는 세션이었습니다. Speaker는 두 명으로 파트를 나눠서 발표했습니다. 세션 도중 질의응답이 서로 오가는 시간도 있어 더욱 풍부하게 세션을 즐길 수 있었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-3672" style="width: 400px;" src="https://blog.dramancompany.com/wp-content/uploads/2024/03/IMG_6815-scaled.jpeg" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><mark style="background-color:rgba(0, 0, 0, 0);color:#656565" class="has-inline-color">Figure 11. What's new in OpenSearch 세션 현장</mark></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>OpenSearch란?</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>OpenSearch에 대해서 간단히 설명하자면, 2021년 오픈 소스 프로젝트로 Elasticsearch의 기능을 더욱 확장한 업그레이드 버전입니다. Elasticsearch는 검색 서비스에서 주로 사용하는 솔루션으로 빠른 검색을 가능하게 해줍니다. 구체적으로 Lucene의 역인덱스(Inverted Index) 기술을 활용하는데요, 역인덱스란 문서를 찾을 때 단어마다 인덱스(단어가 가지는 고유한 번호)를 지정해놓고 단어로 검색했을 때 해당 단어를 가진 문서를 빠르게 찾는 방법을 의미합니다. 역인덱스는 단어 기반으로만 문서를 찾기에 문서와 문서의 의미를 반영하지 못한다는 단점을 갖습니다. 이 단점을 극복한 방법이 바로 semantic search입니다. Semantic search는 검색 쿼리와 찾고자 하는 문서의 의미를 임베딩 벡터로 표현하고 벡터의 유사도 점수를 구해 점수가 높은 문서를 상위에 큐레이션 해주는 방법입니다. 보통 모든 문서 임베딩 벡터를 OpenSearch DB에 미리 저장하고, 검색 요청이 들어왔을 때 검색 쿼리 임베딩 벡터를 OpenSearch에 던져서 저장된 문서 임베딩 벡터와 계산하여 문서 목록을 뽑아주게 됩니다. 저희도 해당 기술을 활용해 공고(쿼리)에 적합한 프로필(문서)을 기업에 추천해주거나, 반대로 프로필(쿼리)에 적합한 공고(문서)를 추천해주고 있습니다. 이번 세션에서는 OpenSearch에서 제공하는 Data Engineering에 관한 부분과 Semantic Search(Search Engineering)에 관한 부분을 주로 다뤘습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Data Engineering</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>새롭게 소개되는 Amazon OpenSearch Ingestion은 Amazon Web Services(AWS)에서 제공하는 특별한 기능으로, 사용자가 실시간 로그, 지표, 추적 데이터 등을 Amazon OpenSearch Service 도메인과 서버리스 컬렉션에 쉽게 제공할 수 있게 해주는 완전 관리형 서버리스 데이터 수집기입니다. 이 기능을 사용하면 Logstash나 Jaeger와 같은 타사 솔루션에 의존하지 않고도 데이터를 수집하고 처리할 수 있습니다. Amazon OpenSearch Ingestion은 오픈소스 DataPrepper를 사용하여 구현되며, 이는 데이터를 추적, 변환, 병합, 샘플링하는 등의 다양한 데이터 파이프라인 작업을 가능하게 합니다. 특히 DynamoDB와의 zero-ETL(integration) 통합을 통해, 사용자는 DynamoDB 테이블을 데이터 수집을 위해 직접 사용할 수 있게 되어, 데이터 처리 과정이 대폭 간소화됩니다. DynamoDB는 AWS가 제공하는 완전 관리형 NoSQL 데이터베이스 서비스로, 이를 통한 데이터 수집은 AWS Management Console에서 쉽게 설정할 수 있으며, 이는 데이터 관리와 분석 작업을 더욱 효율적이고 간편하게 만들어 줍니다. Amazon OpenSearch Ingestion을 사용함으로써, 기술적인 복잡성을 크게 줄이면서도 강력한 데이터 분석 및 검색 기능을 활용할 수 있게 됩니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>그리고 OpenSearch에 대한 Migration Assistant에 대한 기능도 소개되었는데요, 자체 관리형 ES(Elasticsearch)나 OS(OpenSearch) 클러스터를 Amazon OpenSearch Service의 관리형 클러스터나 serverless collection으로 migration하는 데 도와주는 솔루션입니다. 기존 데이터 및 실시간 데이터를 자동으로 migration 할 수 있게 해줍니다. 특히 기존 클러스터에 방해되지 않게 migration 가능하기에 migration을 생각하고 있다면 좋은 feature가 될 것 같습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Search Engineering</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>앞서 설명한 것처럼 OpenSearch에서는 역인덱스를 사용하는 Text Search를 넘어서 Semantic Search 기능을 제공합니다. 각 검색 쿼리와 문서는 텍스트 뿐만 아니라 이미지, 영상, 음성 등의 데이터로 이뤄질 수도 있는데요, 핵심은 semantic(의미론적) 유사성을 찾아주는 것입니다. 임베딩 벡터는 이 semantic 정보를 가지고 있습니다. 그래서 벡터 공간이라고 불리는 수학적 공간에 아래의 그림과 같이 표현 될 수 있는거죠!</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>그래서 Semantic Search는 Vector Search라고도 표현 할 수 있는데요, 아래의 그림(Figure?)을 보면 Vector Search의 workflow를 확인 할 수 있습니다. Raw data는 chuck(문서)로 구분되고 각 chuck는 머신러닝 모델에 의해 숫자로 이루어진 n차원의 임베딩 벡터로 표현됩니다. OpenSearch vector database에 저장되고 각 문서는 index를 갖게 됩니다. 마지막으로 검색이나 분석에 필요할 때마다 불러와 사용됩니다. AI chatbot(Figure?)으로 예를 들어보겠습니다. 사용자가 chatbot에 어떤 question을 던졌을 때 이 question text는 LLM의 모델에 입력되고 임베딩 벡터를 얻게 됩니다. 여기서 Semantic Search를 수행하여 가장 유사한 임베딩 벡터(OpenSearch에 이미 저장된)를 찾아 정렬합니다. 해당 결과를 다시 LLM에 입력하여 Question에 알맞게 다시 자연어로 출력합니다. Semantic Search 기능은 이러한 chatbot 말고도 비슷한 데이터를 빠르게 찾는 기능이 필요한 서비스라면 적용이 가능합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-3662" style="width: 800px;" src="https://blog.dramancompany.com/wp-content/uploads/2024/03/그림1.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><mark style="background-color:rgba(0, 0, 0, 0);color:#656565" class="has-inline-color">Figure 12</mark>. Vector Search workflow</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><img class="wp-image-3663" style="width: 800px;" src="https://blog.dramancompany.com/wp-content/uploads/2024/03/그림2.png" alt=""></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"align":"center"} -->
<p class="has-text-align-center"><mark style="background-color:rgba(0, 0, 0, 0);color:#656565" class="has-inline-color">Figure 13</mark>. Chatbot workflow</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>추가적인 Search Engineering의 새로운 features</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>또한, OpenSearch는 Semantic Search와 같은 방법과 기존의 전통적인 방법(역인덱스와 같은)을 혼합해서 사용할 수 있는 Hybrid Search, AWS에서 제공하는 pre-trained 모델을 fine tuning 할 수 있는 기능, Semantic Search보다 정확도는 떨어지지만 속도와 메모리에서 이점이 있는 Sparse vector retrieval 기능, 이미지와 텍스트를 혼합해서 사용 할 수 있는 Multimodal search 기능을 새롭게 제공합니다. 특히 AWS 2023 야심작인 Bedrock은 OpenSearch와 함께 손쉽게 사용 가능합니다. Bedrock은 여러개의 Gen AI모델(Anthropic, Meta 등에서 출시한 모델들)을 지원하고 fine tuning하여 새로운 나만의 모델을 만들 수도 있습니다. S3에 나만의 데이터를 저장하고 RAG 또한 활용 할 수 있습니다. 기존에 AI 모델을 사용할 때는 외부에서 모델을 가져와 AWS 시스템에 적용하는 일이 굉장히 복잡하고 쉽지 않았다면 AWS Bedrock을 사용하면 AWS 내에서 아주 편리하고 빠르게 사용할 수 있게 되었습니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>그 외 features</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>OpenSearch는 Jaeger(분산 추적 시스템으로, 마이크로서비스 아키텍처에서 소프트웨어의 성능 문제를 진단하고 모니터링하는 데 사용)를 통해서 로그를 추적하고 메트릭을 추출하는 자동화 기능을 추가하는 등 완전한 시각화 기능을 구축했습니다. 그리고 OpenSearch Assistant도 소개했는데요, 오픈소스로 제공하고 있고 아직은 베타 버전이지만 자연어를 통해서 다룰 수 있고, toolkit을 customizing 할 수 있고, AI 모델을 연결 할 수 있습니다. 그 외 Security Analytics 기능도 제공합니다. Security log 응답 시간을 줄이고 잠재적 위험을 빠르게 인지하며 이해관계자들에게 알림을 보냄으로써 빨리 대응 할 수 있도록 합니다. 마지막으로 Zero-ETL integration을 제공합니다. 오픈서치 서비스 간에 전환할 필요 없이 Amazon S3에 저장된 운영 로그를 쿼리할 수 있는 새로운 방법인데요. 대용량의 로그 데이터를 저장하고 관리하는 경우 s3에 데이터를 저장하고 오픈서치에서 인덱싱하고 분석할 수 있습니다. 인터렉티브하게 분석할 수 있고, zero etl을 통해 중복을 최소화하는 쿼리가 가능하고, 가속화 기능을 통해서 쿼리 퍼포먼스를 증가시킬 수 있습니다. 가속화 기능에는 인덱스 건너뛰기, 인덱스 포함 등이 있습니다. 복잡한 설정이나 추가 개발 없이 시각화가 가능합니다.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"large"} -->
<p class="has-large-font-size"></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>마무리하며</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>저희는 이번 행사를 통해 얻은 지식과 경험을 바탕으로 앞으로의 업무에 새로운 아이디어와 솔루션을 적극적으로 도입하고, 개선해 나갈 계획입니다. 또한, 이번 행사에서 만난 다양한 분야의 전문가들과의 네트워킹을 통해 얻은 인사이트와 연결고리를 통해 지속적인 교류와 협력의 기회를 모색할 것입니다. AWS re:Invent는 단순한 기술 컨퍼런스를 넘어서, 최신 클라우드 기술의 동향을 파악하고, 글로벌 네트워크를 확장하며, 미래의 혁신을 모색하는 중요한 장이었습니다. 이번 참관기가 AWS re:Invent에 관심 있는 분들에게 유용한 정보와 인사이트를 제공했기를 바라며, 앞으로도 계속해서 새로운 기술과 트렌드에 대해 공유하고 소통하는 기회를 가지길 희망합니다. 지금까지 긴 글을 읽어주셔서 감사합니다!</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3642</wp:post_id>
		<wp:post_date><![CDATA[2024-03-04 11:15:16]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2024-03-04 02:15:16]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2024-03-06 17:16:43]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2024-03-06 08:16:43]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[aws-reinvent-2023-%ec%b0%b8%ea%b4%80%ea%b8%b0]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="aws"><![CDATA[AWS]]></category>
		<category domain="post_tag" nicename="reinvent"><![CDATA[reinvent]]></category>
		<category domain="category" nicename="develop"><![CDATA[Tech]]></category>
		<category domain="post_tag" nicename="%ec%bb%a8%ed%8d%bc%eb%9f%b0%ec%8a%a4"><![CDATA[컨퍼런스]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle_flag]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_subtitle]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1729518453;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:770;}i:1;a:1:{s:2:"id";i:2967;}i:2;a:1:{s:2:"id";i:2047;}}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_last_editor_used_jetpack]]></wp:meta_key>
		<wp:meta_value><![CDATA[block-editor]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[53]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_single_post]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:23:{s:8:"subtitle";s:0:"";s:6:"format";s:8:"standard";s:5:"video";s:0:"";s:7:"gallery";s:0:"";s:11:"source_name";s:0:"";s:10:"source_url";s:0:"";s:8:"via_name";s:0:"";s:7:"via_url";s:0:"";s:17:"override_template";s:1:"0";s:8:"override";a:1:{i:0;a:32:{s:8:"template";s:1:"1";s:18:"single_blog_custom";s:0:"";s:8:"parallax";s:1:"1";s:10:"fullscreen";s:1:"1";s:6:"layout";s:13:"right-sidebar";s:7:"sidebar";s:15:"default-sidebar";s:14:"second_sidebar";s:15:"default-sidebar";s:14:"sticky_sidebar";s:1:"1";s:14:"share_position";s:3:"top";s:17:"share_float_style";s:16:"share-monocrhome";s:18:"show_share_counter";s:1:"1";s:17:"show_view_counter";s:1:"1";s:13:"show_featured";s:1:"1";s:14:"show_post_meta";s:1:"1";s:16:"show_post_author";s:1:"1";s:22:"show_post_author_image";s:1:"1";s:14:"show_post_date";s:1:"1";s:16:"post_date_format";s:7:"default";s:23:"post_date_format_custom";s:5:"Y/m/d";s:18:"show_post_category";s:1:"1";s:22:"show_post_reading_time";s:1:"0";s:21:"post_reading_time_wpm";s:3:"300";s:16:"show_zoom_button";s:1:"0";s:20:"zoom_button_out_step";s:1:"2";s:19:"zoom_button_in_step";s:1:"3";s:13:"show_post_tag";s:1:"1";s:19:"show_prev_next_post";s:1:"1";s:15:"show_popup_post";s:1:"1";s:17:"number_popup_post";s:1:"1";s:15:"show_author_box";s:1:"0";s:17:"show_post_related";s:1:"0";s:24:"show_inline_post_related";s:1:"0";}}s:19:"override_image_size";s:1:"0";s:14:"image_override";a:1:{i:0;a:2:{s:26:"single_post_thumbnail_size";s:8:"crop-500";s:24:"single_post_gallery_size";s:8:"crop-500";}}s:13:"trending_post";s:1:"0";s:22:"trending_post_position";s:4:"meta";s:19:"trending_post_label";s:8:"Trending";s:14:"sponsored_post";s:1:"0";s:20:"sponsored_post_label";s:12:"Sponsored by";s:19:"sponsored_post_name";s:0:"";s:18:"sponsored_post_url";s:0:"";s:26:"sponsored_post_logo_enable";s:1:"0";s:19:"sponsored_post_logo";s:0:"";s:19:"sponsored_post_desc";s:0:"";s:10:"disable_ad";s:1:"0";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[jnews_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{s:2:"id";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[8]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[30]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_estimated-reading-time-minutes]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_wordproof_timestamp]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[3676]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>13655</wp:comment_id>
			<wp:comment_author><![CDATA[Ponaldced]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[ponaldtig@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.31.30.147]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2024-03-19 01:01:29]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2024-03-18 16:01:29]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Ассортимент магазина предоставляет на выбор покупателя спортивные шведские стенки, детские спортивные игровые комплексы для раннего развития и физкультуры, металлические тренажеры для подростков и взрослых. Необходимо понимать, что дозированная нагрузка и обеспечение активности - обязательные акценты в развитии ребенка. Но подобрать спортивные товары для детей, не потеряться и, в конечном итоге, получить удовольствие от покупки довольно не просто. Компания SportStenka работает в узкоспециализированном направлении по продажам спортивного инвентаря, занимает лидерские позиции в данном сегменте, имеет опыт и достаточный багаж знаний, чтоб Вы, друзья, смогли подарить не просто гимнастический уголок, а значительно большее - радость, положительные эмоции и снаряд для здоровья Вашего малыша!Металлические сплавы, которые используются в изготовлении спортивных стенок, обладают долговечным ресурсом надежности, а также являются абсолютно безопасными для здоровья ребенка. Также можно заказать к спортивной стенке МАТ гимнастический. 
http://www.blacksea.odessa.ua/?page_id=101
http://www.euruchess.org/cgi-bin/index.cgi?action=topics&amp;viewcat=rjf
http://kashlinskaya.ru/sotrudnichedtvo.php
 
Спорткомплекс для детей Трансформер-Мини.При подборе комплекса, важно учитывать предпочтения ребенка и возможное количество играющих. Ориентируясь на данные критерии вы сможете правильно подобрать детские игровые площадки, купить к ним необходимое оборудование, создав идеальное место для игр под открытым небом. В нашем интернет-магазине представлены комплексы различных ценовых категорий:]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1710777689.283256;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
				</channel>
</rss>
	